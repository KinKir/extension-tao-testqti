{"version":3,"sources":["../../../taoTests/views/js/runner/plugin.js","css!taoQtiTestCss/plugins/key-navigation","../../../taoQtiTest/views/js/runner/plugins/content/accessibility/keyNavigation.js","../../../taoQtiTest/views/js/runner/plugins/content/dialog/dialog.js","../../../taoQtiTest/views/js/runner/plugins/content/dialog/exitMessages.js","../../../taoQtiTest/views/js/runner/plugins/content/dialog/itemAlertMessage.js","../../../taoQtiTest/views/js/runner/plugins/templates/button!tpl","../../../taoQtiTest/views/js/runner/plugins/content/dialog/itemInlineMessage.js","../../../taoQtiTest/views/js/runner/plugins/content/feedback/feedback.js","../../../taoQtiTest/views/js/runner/plugins/content/loading/loading.js","../../../taoQtiTest/views/js/runner/plugins/content/modalFeedback/modalFeedback.js","../../../taoQtiTest/views/js/runner/plugins/content/overlay/overlay.js","../../../taoQtiTest/views/js/runner/plugins/content/responsiveness/collapser.js","../../../taoQtiTest/views/js/runner/plugins/content/rubricBlock/rubricBlock!tpl","../../../taoQtiItem/views/js/mathjax/MathJax.js","../../../taoQtiTest/views/js/runner/plugins/content/rubricBlock/rubricBlock.js","../../../taoQtiTest/views/js/runner/plugins/controls/connectivity/connectivity.js","../../../taoQtiTest/views/js/runner/plugins/controls/duration/duration.js","../../../taoQtiTest/views/js/runner/plugins/controls/progressbar/progressbar!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/progressbar/progressbar.js","../../../taoQtiTest/views/js/runner/plugins/controls/testState/testState.js","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timer!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timerComponent.js","../../../taoQtiTest/views/js/runner/helpers/map.js","../../../taoQtiTest/views/js/runner/helpers/currentItem.js","../../../taoQtiTest/views/js/runner/helpers/stats.js","../../../taoQtiTest/views/js/runner/helpers/messages.js","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timers!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/timer/timer.js","../../../taoQtiTest/views/js/runner/plugins/controls/title/title!tpl","../../../taoQtiTest/views/js/runner/plugins/controls/title/title.js","../../../taoQtiTest/views/js/runner/plugins/controls/trace/itemTraceVariables.js","../../../taoQtiTest/views/js/runner/plugins/navigation/next/nextWarningHelper.js","../../../taoQtiTest/views/js/runner/plugins/navigation/next.js","../../../taoQtiTest/views/js/runner/plugins/navigation/nextSection.js","../../../taoQtiTest/views/js/runner/plugins/navigation/previous.js","../../../taoQtiTest/views/js/runner/plugins/navigation/review/navigator!tpl","../../../taoQtiTest/views/js/runner/plugins/navigation/review/navigatorTree!tpl","../../../taoQtiTest/views/js/runner/plugins/navigation/review/navigator.js","../../../taoQtiTest/views/js/runner/plugins/navigation/review/review.js","../../../taoQtiTest/views/js/runner/plugins/navigation/skip.js","../../../taoQtiTest/views/js/runner/plugins/security/disableRightClick.js","../../../taoQtiTest/views/js/runner/plugins/tools/answerElimination/eliminator.js","../../../taoQtiTest/views/js/runner/plugins/tools/answerMasking/tpl/mask!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/answerMasking/answerMasking.js","../../../taoQtiTest/views/js/runner/plugins/tools/answerMasking/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/areaMasking/mask!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/areaMasking/mask.js","../../../taoQtiTest/views/js/runner/plugins/tools/areaMasking/areaMasking.js","../../../taoQtiTest/views/js/runner/plugins/tools/calculator.js","../../../taoQtiTest/views/js/runner/plugins/tools/comment/comment!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/comment/comment.js","../../../taoQtiTest/views/js/runner/plugins/tools/documentViewer/panel!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/documentViewer/documentViewer.js","../../../taoQtiTest/views/js/runner/plugins/tools/highlighter/highlighter.js","../../../taoQtiTest/views/js/runner/plugins/tools/highlighter/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher.js","../../../taoQtiTest/views/js/runner/plugins/tools/lineReader/compoundMask.js","../../../taoQtiTest/views/js/runner/plugins/tools/lineReader/plugin.js","../../../taoQtiTest/views/js/runner/plugins/tools/magnifier/magnifierPanel!tpl","../../../taoQtiTest/views/js/runner/plugins/tools/magnifier/magnifierPanel.js","../../../taoQtiTest/views/js/runner/plugins/tools/magnifier/magnifier.js","../../../taoQtiTest/views/js/runner/plugins/tools/zoom.js","../../../../../../../onLayerEnd0.js"],"names":["define","_","pluginFactory","partialRight","hostName","$","keyNavigator","navigableDomElement","navigableGroupElement","shortcut","namespaceHelper","initToolbarNavigation","$navigationBar","$focusables","find","navigables","createFromDoms","length","id","replace","group","elements","defaultPosition","on","this","next","previous","cursor","navigable","getElement","click","mousedown","initHeaderNavigation","$headerElements","closest","loop","initNavigatorNavigation","testRunner","filtersNavigator","itemsNavigator","$filters","$trees","navigableFilters","navigableTrees","filterCursor","$panel","getAreaBroker","getPanelArea","$navigator","navigators","itemListingVisited","hasClass","keepState","defer","focus","first","last","origin","position","push","pos","data","forIn","i","$parent","parent","is","addClass","removeClass","initContentNavigation","itemNavigators","$content","getContentArea","filter","parents","each","$itemElement","union","initInteractionNavigation","propagateTab","$interaction","$inputs","interactionNavigables","interactionNavigators","$nav","off","initRubricNavigation","$itemElements","rubricNavigators","initTestRunnerNavigation","document","activeElement","blur","createFromNavigators","name","init","self","getTestRunner","add","groupNavigator","isFocused","disable","after","enable","destroy","remove","getName","__","dialogAlert","dialogConfirm","shortcutRegistry","globalShortcut","closeAccept","dialog","trigger","hide","closeReject","closeLast","accept","handle","opened","addHandle","namespace","stack","message","reject","doAccept","e","reason","isFunction","doReject","context","dialogShortcut","removeHandle","closeDialogs","forEach","alerts","confirms","testData","getTestData","testConfig","config","pluginShortcuts","shortcuts","propagate","prevent","set","allowShortcuts","command","key","namespaceAll","before","msg","actionPrefix","clear","Promise","install","isObject","resolve","getTestContext","itemUri","disableItem","hider","$element","getContent","dom","modal","render","itemRunner","$modalsContainer","$container","_item","container","append","hb","template","Handlebars","depth0","helpers","partials","program1","stack1","helper","buffer","className","call","hash","functionType","escapeExpression","program3","icon","unless","text","inverse","noop","fn","program","program4","program6","compilerInfo","merge","control","title","buttonTpl","buttonData","end","$button","dataType","isLast","$btn","preventDefault","$navigationContainer","getNavigationArea","$inlineContainer","removeProp","prop","feedback","currentFeedback","closeCurrent","close","err","type","error","danger","warning","info","loadingBar","start","stop","module","inlineMessage","alertMessage","autoscroll","destroyFeedback","removed","renderedFeedbacks","storedFeedback","found","nextStep","defineMode","inline","inlineMode","messagePlugin","isDestroyed","inlineModalFeedback","createMessages","renderingQueue","bInlineMode","isBoolean","renderingToken","done","tFeedbacks","slice","stopImmediatePropagation","stopPropagation","shield","unshield","itemRef","pluginsConfig","plugins","overlayConfig","overlay","full","show","defaults","collapseTools","collapseNavigation","collapseInOrder","hover","collaspeOrder","getAvailableWidth","$actionsBar","width","getToolbarWidth","$toolbox","$navigation","collapseNeeded","collapseAll","yes","toggleClass","collapseCls","shouldCollapseInOrder","isArray","collapseOrder","toCollapse","collapseOrderCopy","clone","shift","collapser","areaBroker","getArea","getToolboxArea","getElementById","childNodes","createElement","window","MathJax","Hub","AuthorConfig","isPacked","version","fileversion","cdnVersion","cdnFileVersions","d","b","c","f","g","constructor","h","hasOwnProperty","a","arguments","callee","Init","Object","Subclass","SUPER","Augment","protoFunction","can","has","isa","prototype","apply","toString","SimpleSUPER","wrap","match","j","BASENAME","BASE","CALLBACK","cb","execute","isCallback","hook","object","called","autoReset","concat","reset","ISCALLBACK","EVAL","code","eval","TESTEVAL","__TeSt_VaR__","execScript","__code","result","__result","Error","head","getElementsByTagName","body","script","appendChild","createTextNode","removeChild","USING","args","Array","DELAY","time","callback","timeout","setTimeout","WAITFOR","signal","WAITSIGNAL","pending","WAITEXECUTE","signals","oldExecute","m","AFTER","HOOKS","hooks","running","Add","priority","splice","Remove","Execute","callbacks","RemovePending","sort","EXECUTEHOOKS","handler","QUEUE","queue","Push","Process","Suspend","Resume","wait","SIGNAL","posted","listeners","posting","Post","forget","Clear","Interest","ignorePast","NoInterest","MessageHook","ExecuteHooks","RemoveHook","Callback","CallBack","Delay","After","Queue","Signal","Hooks","navigator","vendor","vendorSub","styleSheets","k","Ajax","loaded","loading","loadHooks","styleDelay","root","path","STATUS","OK","ERROR","fileURL","substr","fileName","fileRev","urlRev","Require","n","l","toUpperCase","split","pop","Load","addHook","loader","LoadHook","file","removeHook","Preloading","preloaded","JS","status","Message","File","onerror","src","CSS","rel","href","timer","create","nodeName","styleSheet","chrome","checkSafari2","checkLength","delay","total","Math","floor","loadTimeout","loadComplete","cssRules","sheet","rules","clearTimeout","loadError","Set","Styles","StyleString","cssText","o","join","HTML","Element","style","ucMatch","Insert","setAttribute","setScript","addElement","TextNode","addText","setScriptBug","firstChild","getScript","innerHTML","Cookie","prefix","expires","escape","Date","setDate","getDate","toGMTString","cookie","Get","RegExp","exec","unescape","parseFloat","Localization","locale","directory","strings","ast","menuTitle","bg","bcc","br","ca","cdo","cs","da","de","en","isLoaded","eo","es","fa","fi","fr","gl","he","ia","it","ja","kn","ko","lb","lt","mk","nl","oc","pl","pt","pt-br","ru","sco","scn","sl","sv","tr","uk","vi","zh-hans","pattern","SPLIT","lastIndex","index","processSnippet","processString","lookupPhrase","p","charAt","number","plural","processMarkdown","markdownPattern","target","concatString","loadDomain","RestartAfter","domains","loadFile","Try","restart","resetLocale","toLowerCase","lastIndexOf","substring","remap","setLocale","Menu","addTranslation","menu","CreateLocaleMenu","setCSS","fontFamily","fontDirection","direction","textAlign","ready","log","current","textNodeBug","styles","#MathJax_Message","left","bottom","background-color","border","margin","padding","z-index","color","font-size","white-space","#MathJax_MSIE_Frame","top","browsers","MSIE","msieFixedPositionBug","documentMode","quirks","compatMode","Chrome","div","parentNode","attachEvent","frame","addDiv","removeAttribute","zIndex","height","MoveFrame","display","insertBefore","documentElement","scrollLeft","scrollTop","clientWidth","clientHeight","localize","filterText","messageStyle","processing","typesetting","restarted","cleared","filteredText","prev","nodeValue","Log",".MathJax_Preview","jax","extensions","preJax","postJax","displayAlign","displayIndent","preRemoveClass","showProcessingMessages","delayStartupUntil","skipStartupTypeset","positionToHash","showMathMenu","showMathMenuMSIE","menuSettings","zoom","CTRL","ALT","CMD","Shift","discoverable","zscale","renderer","font","mpContext","mpMouse","texHints","FastPreview","assistiveMML","inTabOrder","semantics","errorSettings","font-style","ignoreMMLattributes","preProcessors","inputJax","outputJax","order","processSectionDelay","processUpdateTime","processUpdateDelay","Config","CombineConfig","Register","PreProcessor","StartupHook","Startup","UnRegister","getAllJax","elementScripts","elementJax","getJaxByType","mimeType","getJaxByInputType","getJaxFor","isMathJaxNode","isMathJax","jaxID","OutputJax","getJaxFromMath","isJax","tagName","state","ElementJax","STATE","PROCESSED","setRenderer","unshift","Typeset","isReady","elementCallback","count","PreProcess","takeAction","Update","Reprocess","Rerender","scripts","getTime","jaxIDs","scriptAction","needsUpdate","UPDATE","OUTPUT","prepareScripts","disabled","Extension","MathEvents","Hover","ClearHover","PENDING","checkScriptSiblings","checked","previousSibling","nextSibling","preview","processInput","saveScript","Attach","postInputHooks","processError","prepareOutput","lastPrepError","processOutput","inputID","processMessage","formatError","sourceURL","line","lineNumber","Jax","messageId","Event","oncontextmenu","onmousedown","Mousedown","onkeydown","Keydown","tabIndex","getTabOrder","lastError","isHTMLCollection","HTMLCollection2Array","contains","msieHTMLCollectionBug","HTMLCollection","SplitList","String","trim",".MathJax_Error","Configured","params","URL","loadArray","ConfigDelay","onload","ConfigBlocks","CHTMLpreview","AssistiveMML","Extensions","Hash","location","scrollIntoView","HashCheck","hashCheck","MenuZoom","MathMenu","MathZoom","onLoad","readyState","Browser","isMSIE","addEventListener","noDOMContentEvent","JAXFILE","require","Translate","copyTranslate","preProcess","preTranslate","postProcess","postTranslate","extensionDir","InputJax","sourceMenuTitle","q","SourceElement","originalText","fontDir","imageDir","Text","Detach","Clone","GetID","newID","ID","errors","ContextMenu","AltContextMenu","sourceMenuFormat","errorText","s","w","namespaceURI","getElementsByTagNameNS","$2","t","userAgent","isMac","platform","isPC","isEdge","loadTimes","isFirefox","isSafari","app","isChrome","isOpera","opera","isKonqueror","versionAtLeast","y","x","z","parseInt","Select","v","r","u","Safari","webkit","appVersion","isMobile","noContextMenu","Firefox","product","buildID","productSub","Opera","Edge","isIE9","performance","msPerformance","NoMathPlayer","ActiveXObject","hasMathPlayer","classid","namespaces","mpNamespace","write","mpImported","console","AuthorInit","containerTpl","blankifyLinks","attr","mathify","itemData","rubrics","html","then","empty","disconnect","getState","reconnect","setState","source","getProxy","pollingFactory","timerFactory","store","initContext","initItemAttemptId","itemIdentifier","attempt","getConfig","serviceCallId","durationStore","getItemDuration","attemptId","test","getItem","stopwatch","autoStart","initDuration","isNumber","attemptDuration","setItem","polling","action","elapsed","tick","itemAttemptId","duration","interval","itemDuration","addCallActionParams","getDuration","removeStore","catch","resume","pause","progressTpl","progressUpdater","testContext","testMap","progressConfig","percentage","max","numberItems","ratio","numberCompleted","label","getTestPart","parts","testPartId","getTestSection","testPart","sections","sectionId","progressScopeCounter","itemPosition","reduce","acc","section","size","items","testSection","positionInPart","positionInSection","counter","scope","currentPosition","showTotal","indicator","$progressLabel","$progressControl","progressIndicator","update","progressData","getTestMap","progressbar","getControlArea","use","req","res","isEmpty","messages","channel","isLeaving","moment","timeEncoder","timerTpl","hasAnimationFrame","timerTypes","item","isPlainObject","TypeError","remaining","warnings","$display","refresh","encode","requestAnimationFrame","warn","findLast","showed","isFinite","point","humanize","val","value","getEmptyStats","questions","answered","flagged","viewed","getJumps","map","jumps","getParts","getJump","getPart","partName","getSection","sectionName","part","itemName","jump","identifier","getItemAt","getTestStats","stats","getPartStats","getSectionStats","getScopeStats","getScopeMap","scopeMap","cloneDeep","computeItemStats","computeStats","getItemPart","getItemSection","updateItemStats","informational","collection","responseCardinalities","single","multiple","ordered","record","currentItemHelper","getDeclarations","runner","responses","getResponseDeclaration","declaration","attributes","toResponse","baseType","cardinality","mappedCardinality","response","isString","base","isQtiValueNull","isQuestionAnswered","defaultValue","isEqual","isAnswered","getResponses","mapHelper","getInstantStats","isItemCurrentlyAnswered","itemAnswered","statsHelper","getExitMessage","unansweredCount","flaggedCount","itemsCountMessage","enableUnansweredItemsWarning","timerComponentFactory","timerBoxTpl","exitMessage","isTimedSection","timeConstraints","some","constraint","qtiClassName","shouldClearStorage","doEnable","doDisable","itemStates","timerWarning","displayedTimers","timers","extraTime","consumedExtraTime","lastConsumedExtraTime","getRemainingExtraTime","setRemainingTime","timerConfig","regular","getTimerConfig","timeConstraint","closestPreviousWarning","isTimeout","itemSessionState","interacting","seconds","leaveTimedSection","nbItems","closed","removeTimer","storage","removeItem","omit","addTimer","updateTimers","checkStorage","timerUpdatePromises","consumed","savedTime","all","timeStore","timeoutScope","timeoutRef","elapsedExtraTime","regularVal","displayedVal","runTimeout","abs","options","movePromise","endTestWarning","noExitTimedSectionWarning","keepUpToTimeout","program2","titles","titleTpl","isDeepestSectionVisible","sectionTitle","replaceWith","storeFactory","timestamp","now","precision","onError","variables","tracesStore","ITEM_START_TIME_CLIENT","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","format","callItemAction","traceData","JSON","stringify","toBoolean","itemCanBeTriedAtWill","isLinear","remainingAttempts","isNextItemInLinearPart","nextPart","isLastOfPart","shouldWarnOnTestEnd","warnBeforeNext","shouldWarnForUnansweredItems","hasUnanswered","hasFlagged","unansweredOnly","shouldWarnOnPartChange","nextPartWarning","nextItemWarning","warnBeforeEnd","shouldWarnBeforeEnd","shouldWarnBeforeNext","nextWarningHelper","updateElement","doNext","testOptions","nextItemPosition","unansweredWarning","warningScope","warningHelper","partial","triggerNextAction","avoidInput","toggle","nextSection","nextSectionWarning","bind","doPrevious","previousItemWarning","canDoPrevious","canMoveBackward","helperMissing","program5","program7","program9","program11","program13","hidden","showLegend","active","program8","program10","cls","component","navigatorTpl","navigatorTreeTpl","navigatorFactory","flagItem","$item","_cssCls","setItemFlag","navigatorApi","_defaults","setTemplate","controls","autoScroll","$component","$filterBar","_selectors","filterBar","$tree","tree","$infoAnswered","infoAnswered","$infoViewed","infoViewed","$infoAll","tabInfoAll","$infoUnanswered","infoUnanswered","tabInfoUnanswered","$infoFlagged","infoFlagged","tabInfoFlagged","$linearState","linearState","updateConfig","collapseHandle","collapsed","openSelected","infoPanelLabels","togglePanel","infoPanel","partLabels","openOnly","sectionLabels","itemLabels","event","$target","canFlag","icons","unseen","select","linearStart","mode","currentFilter","canCollapse","preventsUnseen","collapsible","_iconCls","itemIcons","activeItem","counters","actives","collapsiblePanels","notFlagged","notAnswered","notInformational","_filterMap","unanswered","filtered","updateStats","flag","getProgressionTotal","progression","jquery","writeCount","criteria","$items","filterCb","$section","$itemsFound","not","$filtered","scopeClass","scopedMap","getScopedMap","totalQuestions","itm","$place","min","open","selected","hierarchy","parentsUntil","previousPosition","$previous","panel","collapseSelector","getFlagItemButtonData","itemFlagged","getToggleButtonData","updateButton","button","turnOff","turnOn","markReview","setFlag","unsetFlag","showReview","hideReview","isPluginAllowed","navigatorConfig","enabled","reviewScreen","callTestAction","flagItemButton","flagCurrentItem","forcedState","isUndefined","explicitlyHidden","toggleButton","previousItemPosition","review","getToolbox","createEntry","defaultOpen","skip","doSkip","allowSkipping","eventName","defaultConfig","removeEliminationsOnClose","restoreEliminationsOnOpen","isPluginEnabled","eliminator","togglePluginButton","togglePlugin","$choiceInteractions","isEliminable","enableEliminator","disableEliminator","$choices","input","querySelector","dataset","wasEliminated","classList","statifier","componentFactory","maskTpl","ns","$contentArea","createMask","maskApi","mask","answerMasking","allMasks","reveal","getContainer","removeAttr","$qtiChoices","$choice","getMasksState","setMasksState","masked","answerMaskingFactory","restoreStateOnToggle","restoreStateOnMove","itemContainsChoiceInteraction","disableMasking","enableMasking","itemId","pluginConfig","movableComponent","areaMaskingTpl","maskingComponentFactory","maskComponent","previewDelay","stackingScope","foo","addMask","masks","without","isEnabled","areaMasking","invoke","calculatorFactory","_default","calculator","buildCalculator","calcTpl","renderTo","$calculatorContainer","draggableContainer","alternativeTemplate","toggleCalculator","allowIn","stackerFactory","commentTpl","allowComment","toggleComment","$form","isHidden","$input","stacker","bringToFront","appendTo","$cancel","$submit","autoBringToFront","comment","content","viewerFactory","pdfViewer","panelTpl","showPanel","plugin","debounce","resizeViewer","hidePanel","hideIfVisible","isVisible","initPanelEvents","stopEvents","hideViewer","$overlay","viewer","setSize","registerProvider","displayViewer","$title","load","fitToWidth","allowSearch","originalEvent","detail","highlighterFactory","getAllRanges","allRanges","selection","rangeCount","getRangeAt","getSelection","isHighlighting","itemsHighlights","highlightHelper","containerSelector","isCollapsed","highlightRanges","removeAllRanges","toggleHighlighting","bool","saveHighlight","getHighlightIndex","restoreHighlight","highlightFromIndex","clearHighlights","highlighter","buttonMain","buttonRemove","themeHandler","changeTheme","themeId","$qtiItem","selectedTheme","themesConfig","get","availableThemes","defaultTheme","default","available","theme","menuButton","createMenu","themeEntry","setMenuId","turnOffAll","toggleMenu","eventifier","makePlaceable","makeDraggable","makeResizable","makeStackable","constrains","defaultDimensions","outerWidth","outerHeight","innerWidth","innerHeight","outerX","outerY","innerX","innerY","defaultOptions","dragMinWidth","dragMinHeight","resizeHandleSize","innerDragHeight","stackingOptions","dimensions","maskConfig","maskAPI","place","placeOverlay","styleResizableEdges","forOwn","edges","isResizable","edgeId","bringAllToFront","innerDrag","closer","invokeOnOverlays","invokeOnMasks","beforeResize","onResize","applyTransformsToOverlays","applyTransformsToInnerDrag","applyTransformsToCloser","createOverlay","transformOverlay","_sizeBackup","getSize","_posBackup","getPosition","moveTo","restoreOverlay","appendVisualGuides","visualGuides","$maskBg","$innerWindow","css","borderWidth","border-top-width","topHeight","border-right-width","rightWidth","border-bottom-width","bottomHeight","border-left-width","leftWidth","removeVisualGuides","xOffsetRelative","yOffsetRelative","invokeOnAll","applyTransforms","createInnerDragHandle","dragRestriction","fixedXY","allParts","nw","offset","minWidth","minHeight","minBottomHeight","$dragIcon","class","applyTransformsToMasks","createCloser","$closeIcon","invokeOn","correctTransforms","setTopHeight","newHeight","newY","fromTop","setRightWidth","newWidth","newX","fromLeft","setBottomHeight","setLeftWidth","createCompoundMask","createPart","right","maxHeight","maxWidth","partConfig","assign","createVisualGuides","compoundMask","setTransforms","dim","getDimensions","compoundMaskFactory","$qtiContent","lineHeight","ceil","maskOptions","paddingLeft","paddingTop","containerWidthHasChanged","lineReader","toggleMask","transformMask","openMask","closeMask","$maskContainer","level","magnifierPanelTpl","magnifierPanelFactory","scrollInClone","scrollData","$clonedTarget","$clone","setScrollingListener","scrollingListenerCallback","removeScrollingListener","removeEventListener","applyScrolling","scrolling","adjustZoomLevel","zoomLevelMin","zoomLevelMax","applyZoomLevel","$inner","transform","zoomLevel","showZoomLevel","$newZoomLevel","$zoomLevel","updateMaxSize","$window","magnifierPanel","maxRatio","applySize","targetWidth","targetHeight","updateZoom","dx","dy","zoomAt","createObserver","observer","MutationObserver","updateMagnifier","startObserver","observe","childList","characterData","subtree","stopObserver","translateMagnifier","coordinate","actualSize","magnifierSize","delta","getElementFromPoint","el","elementFromPoint","findSourceNode","node","$node","$root","indexes","$this","forEachRight","children","eq","initConfig","levelMin","levelMax","zoomLevelStep","levelStep","baseSize","zoomSize","$initTarget","getZoomLevel","getTarget","setTarget","$newTarget","$viewTarget","zoomTo","zoomBy","step","zoomIn","zoomOut","translate","debounceDelay","throttle","scrollId","scrollingTop","uniqueId","scrollingDelay","screenRatio","pageX","pageY","screen","defaultBaseSize","pluginName","zoomMin","zoomMax","zoomStep","getMagnifierPanel","hideMagnifier","magnifier","toggleMagnifier","showMagnifier","transformer","standard","threshold","lower","upper","setZoomLevel","setTransformOrigin","scale","resetZoom","forceRepaint","sel","offsetHeight","zoomAction","dir","sx","sy","inc","$zoomTarget","getBoundingClientRect","buttonZoomOut","buttonZoomIn","in","out"],"mappings":"AAiBAA,OAAA,0BAAA,SAAA,eAAA,SAAAC,EAAAC,eACA,YAMA,OAAAD,GAAAE,aAAAD,eAEAE,SAAA,iBCzBAJ,OAAA,8CAAA,cCqBAA,OAAA,iEACA,SACA,SACA,6BACA,uCACA,yCACA,gBACA,iBACA,yBACA,4CACA,SAAAK,EAAAJ,EAAAK,aAAAC,oBAAAC,sBAAAC,SAAAC,gBAAAR,eACA,YAQA,SAAAS;kCACA,GAAAC,gBAAAP,EAAA,sBACAQ,YAAAD,eAAAE,KAAA,wEACAC,WAAAR,oBAAAS,eAAAH,YACA,OAAAE,YAAAE,QACAX,cACAY,GAAA,iBACAC,SAAA,EACAC,MAAAR,eACAS,SAAAN,WAEAO,gBAAAP,WAAAE,OAAA,IACAM,GAAA,aAAA,WACAC,KAAAC,SACAF,GAAA,UAAA,WACAC,KAAAE,aACAH,GAAA,WAAA,SAAAI,QACAA,OAAAC,UAAAC,aAAAC,QAAAC,kBAYA,QAAAC,wBAEA,GAAAC,iBAAA5B,EAAA,mCACAU,WAAAR,oBAAAS,eAAAiB;uHACA,OAAAlB,YAAAE,QACAX,cACAY,GAAA,iBACAE,MAAAa,gBAAAC,QAAA,gBACAb,SAAAN,WACAoB,MAAA,EACAhB,SAAA,IACAI,GAAA,WAAA,SAAAI,QACAA,OAAAC,UAAAC,aAAAC,cAYA,QAAAM,yBAAAC,YAEA,GAGAC,kBACAC,eACAC,SAAAC,OAAAC,iBAAAC,eAKAC,aAVAC,OAAAR,WAAAS,gBAAAC,eACAC,WAAAH,OAAA/B,KAAA,kBACAmC,cAMAC,oBAAA,CAiGA,OA7FAF,YAAA/B,SAAA+B,WAAAG,SAAA,cACAX,SAAAQ,WAAAlC,KAAA;uIACA4B,iBAAAnC,oBAAAS,eAAAwB,UACAE,iBAAAzB,SACAqB,iBAAAhC,cACA8C,WAAA,EACAlC,GAAA,oBACAC,SAAA,EACAE,SAAAqB,iBACAtB,MAAA4B,aACAzB,GAAA,QAAA,WACAC,KAAAC,SACAF,GAAA,OAAA,WACAC,KAAAE,aACAH,GAAA,OAAA,WACAgB,gBACAtC,EAAAoD,MAAA,WACAH,mBACAX,eAAAe,QAAAC,QAEAhB,eAAAe,YAIA/B,GAAA,KAAA,WACAgB,gBACAtC,EAAAoD,MAAA,WACAd,eAAAiB,WAGAjC,GAAA,QAAA,SAAAI,OAAA8B;sCAEA9B,OAAAC,UAAAC,aAAAC,SAGAc,cAAAA,aAAAc,WAAA/B,OAAA+B,UAAAD,UACAP,oBAAA,GAGAN,aAAAjB,SAEAsB,WAAAU,KAAArB,mBAGAG,OAAAO,WAAAlC,KAAA,6EACA6B,eAAApC,oBAAAS,eAAAyB,QACAE,eAAA1B,SAEAsB,eAAAjC,cACAY,GAAA,kBACAC,SAAA,EACAE,SAAAsB,eACArB,gBAAA,SAAAP,YACA,GAAA6C,KAAA,CAWA,OAVAhB,eAAA,YAAAA,aAAAhB,UAAAC,aAAAgC,KAAA,SACA5D,EAAA6D,MAAA/C,WAAA,SAAAa,UAAAmC,GACA,GAAAC,SAAApC,UAAAC,aAAAoC,OAAA;gEAEA,IAAAD,QAAAb,SAAA,WAAAa,QAAAE,GAAA,YAEA,MADAN,KAAAG,GACA,IAIAH,OAEArC,GAAA,OAAA,WACAC,KAAAC,SACAF,GAAA,KAAA,WACAC,KAAAE,aACAH,GAAA,QAAA,WACAe,kBACAA,iBAAAgB,QAAA7B,SAEAF,GAAA,OAAA,WACAe,kBACAA,iBAAAgB,QAAA5B,aAEAH,GAAA,WAAA,SAAAI,QACAA,OAAAC,UAAAC,aAAAC,UACAP,GAAA,wBAAA,WACAe,kBACAA,iBAAAgB,UAEA/B,GAAA,QAAA,SAAAI,QACAuB,oBAAA,EACAvB,OAAAC,UAAAC,aAAAoC,SAAAE,SAAA,8BACA5C,GAAA,OAAA,SAAAI;8BACAA,OAAAC,UAAAC,aAAAoC,SAAAG,YAAA,gCAKAnB,WAWA,QAAAoB,uBAAAhC,YAEA,GAAAiC,mBACAC,SAAAlC,WAAAS,gBAAA0B,gBAoBA,OAjBAD,UAAAzD,KAAA,6BAAAqD,SAAA,6BACAI,SAAAzD,KAAA,8CAAA2D,OAAA,WAEA,OAAApE,EAAAmB,MAAAkD,QAAA,oBAAAzD,SACA0D,KAAA,WACA,GAAAC,cAAAvE,EAAAmB,KACAoD,cAAAzB,SAAA,mBACAmB,eAAArE,EAAA4E,MAAAP,eAAAQ,0BAAAF,eAEAN,eAAAX,KAAArD,cACAe,SAAAd,oBAAAS,eAAA4D;0DACAxD,MAAAwD,aACAG,cAAA,OAKAT,eASA,QAAAQ,2BAAAE,cAEA,GAAAC,SACAC,sBACAC,wBAuCA,OApCAH,cAAAlE,KAAA,6BAAA6D,KAAA,WACA,GAAAS,MAAA/E,EAAAmB,KACA4D,MAAAlD,QAAA,eAAAjB,QACAkE,sBAAAxB,KAAArD,cACAe,SAAAd,oBAAAS,eAAAoE,MACAhE,MAAAgE,KACAL,cAAA,OAMAC,aAAAK,IAAA,kBAGAJ,QAAAD,aAAAd,GAAA,UAAAc,aAAAA,aAAAlE,KAAA,UACAoE,sBAAA3E,oBAAAS,eAAAiE,SAEAC,sBAAAjE,QACAkE,sBAAAxB,KAAArD;uEACAe,SAAA6D,sBACA9D,MAAA4D,aACA7C,MAAA,IACAZ,GAAA,aAAA,WACAC,KAAAC,SACAF,GAAA,UAAA,WACAC,KAAAE,aACAH,GAAA,WAAA,SAAAI,QACAA,OAAAC,UAAAC,aAAAC,UACAP,GAAA,QAAA,SAAAI,QACAA,OAAAC,UAAAC,aAAAK,QAAA,eAAAiC,SAAA,8BACA5C,GAAA,OAAA,SAAAI,QACAA,OAAAC,UAAAC,aAAAK,QAAA,eAAAkC,YAAA,+BAIAe,sBAUA,QAAAG,wBACA,GAAAC,eACAC,mBAgBA,OAbAD,eAFAlF,EAAA,gBAEAS,KAAA;iEACAyE,cAAAZ,KAAA,WACA,GAAAC,cAAAvE,EAAAmB,MACAN,GAAA,mCAAAsE,iBAAAvE,MAEAuE,kBAAA7B,KAAArD,cACAY,GAAAA,GACAG,SAAAd,oBAAAS,eAAA4D,cACAxD,MAAAwD,aACAzD,SAAA,OAIAqE,iBAQA,QAAAC,0BAAApD,YAEA,GAAAY,WAiBA,OAdAyC,UAAAC,eACAD,SAAAC,cAAAC,OAGA3C,WAAAhD,EAAA4E,MACAS,qBAAAjD,YACAgC,sBAAAhC,YACA1B,sBAAA0B,YACAD,wBAAAC,YACAL,qBAAAK,aAGAY,WAAAzC,sBAAAqF,qBAAA5C;kEAEA3C,cACAY,GAAA,cACAC,SAAA,EACAgB,MAAA,EACAd,SAAA4B,aACA1B,GAAA,MAAA,WACAC,KAAAC,SACAF,GAAA,YAAA,WACAC,KAAAE,aAOA,MAAAxB,gBAEA4F,KAAA,gBAKAC,KAAA,WACA,GAAAC,MAAAxE,KACAa,WAAAb,KAAAyE,eAEAxF,UAAAyF,IAAA,gBAAA,WACAF,KAAAG,eAAAC,aACAJ,KAAAG,eAAA7C,UAKA9B,KAAA6E,UAGAhE,WACAiE,MAAA,aAAA,WACAN,KAAAG,eAAAV,yBAAApD,YACA2D,KAAAO,WAEAhF,GAAA,aAAA,WACAyE,KAAAK,aAOAG,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,WACAlF,KAAA2E,gBACA3E,KAAA2E,eAAAK;wDCnXAxG,OAAA,mDACA,SACA,SACA,OACA,yBACA,kBACA,oBACA,yBACA,gBACA,kBACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAA0G,YAAAC,cAAAC,iBAAAC,eAAArG,iBACA,YAiBA,OAAAR,gBACA4F,KAZA,SAiBAC,KAAA,WAiBA,QAAAiB,aAAAC,QAEAA,OAAAC,QAAA,eAAAC,OAOA,QAAAC,aAAAH,QACAA,OAAAE,OAQA,QAAAE,WAAAC,OAAA7G,UACA,GAAA8G,QAAAC,OAAAvG,QAAAuG,OAAAA,OAAAvG,OAAA,EACAsG,UACAA,OAAA9G,SAAAA,SACA6G,OACAN,YAAAO,OAAAN,QAEAG,YAAAG,OAAAN;8DAcA,QAAAQ,WAAAC,UAAAC,MAAAV,OAAAW,QAAAN,OAAAO,QAMA,QAAAC,UAAAC,EAAAC,QACA/H,EAAAgI,WAAAX,SACAA,OAAAC,OAAA9G,UAAAuH,QAGA,QAAAE,UAAAH,EAAAC,QACA/H,EAAAgI,WAAAJ,SACAA,OAAAN,OAAA9G,UAAAuH,QAZA,GAAAT,SACAY,QAAAT,UACAT,OAAAA,OAAAW,QAAAE,SAAAI,UAgBAnB,gBAAAV,UACA+B,eAAA7B,SAEAoB,MAAAhE,KAAA4D,QACAC,OAAA7D,KAAA4D,QAEAA,OAAAN,OAAA3D,QACAiE,OAAAN,OAAA1F,GAAA,eAAA,WACA8G,aAAAV,MAAAJ,OAAAN,QACAoB,aAAAb,OAAAD,OAAAN,QAIAO,OAAAvG,SACA8F,eAAAR,SACA6B,eAAA/B,aAUA,QAAAgC,cAAAV,MAAAV;oCACAA,QACAhH,EAAAwG,OAAAkB,MAAA,SAAAJ,QACA,GAAAA,QAAAN,SAAAM,OAAAN,OACA,OAAA,IAYA,QAAAqB,cAAAZ,UAAAJ,OAAAK,OACAA,MACA1H,EAAAsI,QAAAZ,MAAA,SAAAJ,SACAA,QAAA,MAAAG,WAAAA,YAAAH,OAAAY,UACAb,OACAN,YAAAO,OAAAN,QAEAG,YAAAG,OAAAN,YAKAqB,aAAAZ,UAAAJ,OAAAkB,QACAF,aAAAZ,UAAAJ,OAAAmB,WAhIA,GAAApG,YAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAA,WACAP,UACAC,YACAjB,UACAY,eAAAtB,iBAAAzG,EAAA,SACA2I,WAAA,EACAC,SAAA,GA4HAb,gBAAA/B,UAAA6C,IAAA;+CAGAN,WAAAO,gBACAlJ,EAAAsI,QAAAO,gBAAA,SAAAM,QAAAC,KACAjB,eAAAlC,IAAAxF,gBAAA4I,aAAAF,QA5JA,UA4JA,GAAA,SAAArB,EAAAtH,UAEA4B,WAAA6E,QAxJA,eAwJAmC,IAAA5I,cAMA4B,WACAkH,OAAA,UAAA,SAAAxB,EAAAyB,IAAAlC,QACAG,UAAAM,EAAAL,UAAAc,OAAA5B,YAAA4C,IAAAlC,OAAAA,UAEAiC,OAAA,YAAA,SAAAxB,EAAAyB,IAAAlC,OAAAO,QACAJ,UAAAM,EAAAL,UAAAe,SAAA5B,cAAA2C,IAAAlC,OAAAO,UAEA0B,OAAA,gBAAA,SAAAxB,EAAAT,QACAgB,aAAAP,EAAAL,UAAAJ,UAEA/F,GAAAkI,qBAAA,SAAAhJ,UACA4G,WAAA,EAAA5G,YAEAc,GAAAkI,qBAAA,SAAAhJ;8CACA4G,WAAA,EAAA5G,YAEAc,GAAA,UAAA,WACA+G,aAAA,MAEAF,eAAAsB,QACAtB,eAAA,YC5MApI,OAAA,yDACA,SACA,eACA,0BACA,SAAAC,EAAA0J,QAAAzJ,eACA,YAMA,OAAAA,gBAEA4F,KAAA,eAKAC,KAAA,aAOA6D,QAAA,WACA,GAAAvH,YAAAb,KAAAyE,eAIA5D,YAAAkH,OAAA,QAAA,SAAAxB,EAAAlE,MACA,GAAA5D,EAAA4J,SAAAhG,OAAAA,KAAA+D,QACA,MAAA,IAAA+B,SAAA,SAAAG,SACA,GAAA3B,SAAA9F,WAAA0H,gBAIA5B,UAAAA,QAAA6B,SACA3H,WAAA4H,YAAA9B,QAAA6B,SAIA3H,WAAA6E,QAAA,cAAArD,KAAA+D,QAAAkC;gECtCA9J,OAAA,6DACA,SACA,OACA,WACA,0BACA,SAAAK,EAAAsG,GAAAuD,MAAAhK,eACA,YAKA,OAAAA,gBAEA4F,KAAA,mBAKAC,KAAA,WACA,GAAAC,MAAAxE,IACAA,MAAA2I,SAAA9J,EAAAmB,KAAA4I,aAAAC,KAEA7I,KAAA2I,SAEA5I,GAAA,eAAA,WACAlB,EAAAmB,MAAA8I,MAAA,aAEA/I,GAAA,kBAAA,WACAyE,KAAAmE,SAAA,KACAnE,KAAAkB,QAAA,SAAAlB,SAOAuE,OAAA,WACA,GAAAlI,YAAAb,KAAAyE,gBACAuE,WAAAnI,WAAAmI,WACAC,iBAAAjJ,KAAA4I,aAAAM,UACAD,oBACAA,iBAAApK,EAAA,kBAAAmK,WAAAG,MAAAC;sFAEAH,iBAAAI,OAAArJ,KAAA2I,UAEA3I,KAAA2I,SAAAG,SAMA9D,QAAA,WACAhF,KAAA2I,UAAA3I,KAAA2I,SAAAlJ,QACAO,KAAA2I,SAAAG,MAAA,cC5EAtK,OAAA,kDAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAKA,QAAAuH,UAAAH,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EAKA,OAJAA,SAAA,KACAD,OAAAJ,QAAAM,WAAAH,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAO,UAAAH,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP;iCAIA,QAAAQ,UAAAZ,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EAQA,OAPAA,SAAA,2BACAD,OAAAJ,QAAAY,MAAAT,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAa,KAAAT,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACAA,OAAAH,QAAAa,OAAAN,KAAAR,OAAAA,QAAAA,OAAAe,MAAAN,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAC,SAAAxI,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,YAGA,QAAAc,UAAApB,OAAApH,MAGA,MAAA,YAGA,QAAAyI,UAAArB,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EAMA,OALAA,SAAA;uCACAD,OAAAJ,QAAAc,MAAAX,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAe,KAAAX,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,UAvCA7J,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAC,OAAAC,OAAA,GAAAI,aAAA,WAAAC,iBAAApK,KAAAoK,iBAAA5F,KAAAxE,IA2DA,OAlBA+J,SAAA,sBACAD,OAAAJ,QAAAuB,SAAApB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAwB,QAAApB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA;YAAAyH,QACAC,QAAAK,iBAAAP,QACA,iCACAA,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAO,WAAAE,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAhB,SAAAvH,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,aACAD,OAAAJ,QAAAwB,OAAArB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyB,MAAArB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,sDACAA,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAa,MAAAJ,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAP,SAAAhI,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF;uCACAE,QAAA,eACAF,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAe,MAAAN,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAE,SAAAzI,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,gCCvCAvL,OAAA,8DACA,SACA,OACA,WACA,yBACA,kDACA,SAAAK,EAAAsG,GAAAuD,MAAAhK,cAAAyM,WACA,YAKA,IAAAC,aACAnL,MACAgL,QAAA,eACAC,MAAA/F,GAAA,kCACAmF,KAAA,UACAE,KAAArF,GAAA,OAEAkG,KACAJ,QAAA,WACAC,MAAA/F,GAAA;iDACAmF,KAAA,eACAE,KAAArF,GAAA,kBAOA,OAAAzG,gBAEA4F,KAAA,oBAKAC,KAAA,WACA,GAAAC,MAAAxE,KACAa,WAAAb,KAAAyE,eA6BAzE,MAAAsL,QAvBA,WACA,GAAAC,UAAA1K,WAAA0H,iBAAAiD,OAAA,MAAA,OACAC,KAAA5M,EAAAsM,UAAAC,WAAAG,WAkBA,OAjBAE,MAAA9I,SAAA,wBAGA8I,KAAA1L,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBAEAlH,KAAAK,UACA,aAAAhG,EAAAmB,MAAAqC,KAAA,YACAmC,KAAAkB,QAAA,OAGA+F,KAAAxG,SACAT,KAAAmE,SAAA1D,SAEAT,KAAAkB,QAAA,SAAAlB,QAGAiH,QAIAzL,KAAA2I,SAAA9J,EAAAmB,KAAA4I,aAAAC,MAMAE,OAAA,WACA,GAAA4C,sBAAA3L,KAAAsB,gBAAAsK,oBACA/K,WAAAb,KAAAyE,gBACAuE,WAAAnI,WAAAmI,WACA6C,iBAAA7L,KAAA4I,aAAAM;kLACA2C,kBAAA7C,WAAAG,MAAAC,YACAyC,iBAAAhN,EAAA,gBAAAmK,WAAAG,MAAAC,YAGAyC,iBAAAxC,OAAArJ,KAAA2I,UAGA9J,EAAA,wBAAA8M,sBAAAlM,QACAkM,qBAAAtC,OAAArJ,KAAAsL,UAOAvG,OAAA,WACA/E,KAAAsL,QAAAQ,WAAA,YACAlJ,YAAA,aAGAiC,QAAA,WACA7E,KAAAsL,QAAAS,KAAA,YAAA,GACApJ,SAAA,aAMAqC,QAAA,WACAhF,KAAAsL,QAAAhL,aC9GA9B,OAAA,uDACA,SACA,OACA,yBACA,eACA,SAAAK,EAAAsG,GAAAzG,cAAAsN;4JACA,YAKA,OAAAtN,gBACA4F,KAAA,WAKAC,KAAA,WACA,GAGA0H,iBAEApL,WAAAb,KAAAyE,gBAKAyH,aAAA,WACAD,iBACAA,gBAAAE,QAKAtL,YACAd,GAAA,QAAA,SAAAqM,KACA,GAAAhG,SAAAgG,IACAC,KAAA,OAOA,IALA,gBAAAD,OACAhG,QAAAgG,IAAAhG,QACAiG,KAAAD,IAAAC,OAGAjG,QACA,OAAAiG,MACA,IAAA,YACAjG,QAAAjB,GAAA,sCACA,MAEA,KAAA,eACAiB,QAAAjB,GAAA,kBACA,MAEA,SACAiB,QAAAjB,GAAA,sBAIA8G,gBAAAD,WAAAM,MAAAlG;4CAEArG,GAAA,SAAA,SAAAqG,SACA6F,gBAAAD,WAAAO,OAAAnG,WAEArG,GAAA,UAAA,SAAAqG,SACA6F,gBAAAD,WAAAQ,QAAApG,WAEArG,GAAA,OAAA,SAAAqG,SACA6F,gBAAAD,WAAAS,KAAArG,WAEArG,GAAA,+BAAAmM,mBC1EA1N,OAAA,qDACA,qBACA,0BACA,SAAAkO,WAAAhO,eACA,YAMA,OAAAA,gBAEA4F,KAAA,UAKAC,KAAA,WACAvE,KAAAyE,gBAEA1E,GAAA,aAAA,WACA2M,WAAAC,UAEA5M,GAAA,aAAA,WACA2M,WAAAE,cCpBApO,OAAA,iEACA,SACA,SACA,SACA,yBACA,6DACA,4DACA,iBACA,SAAAK,EAAAJ,EAAAoO,OAAAnO,cAAAoO,cAAAC,aAAAC;+UACA,YA4BA,SAAAC,iBAAAjB,UAEA,GAAAkB,UAAA,CACAzO,GAAAwG,OAAAkI,kBAAA,SAAAC,gBAEA,GAAAC,OAAAD,iBAAApB,QAIA,OAHAqB,SACAH,SAAA,GAEAG,QAGAH,UACAlB,SAAAhH,UAEAmI,kBAAA1N,QACA6N,YAKA,QAAAC,YAAAC,QACAC,WAAAD,OACAE,cAAAD,WAAAX,cAAAC;oDA9CA,GAAAU,YAMAC,cAKAP,kBAKAQ,YAKAL,QA+BA,OAAA5O,gBAEA4F,KAAA,mBAKAC,KAAA,WACA+I,SAAA,aAEAC,aAAAV,OAAAxF,SAAAuG,sBAMA7E,OAAA,WACA,GAAAvE,MAAAxE,KACAa,WAAAb,KAAAyE,gBAEAoJ,eAAA,SAAAC,eAAAN,QAEA,GAAAO,aAAAN,UAEAE,cAAA,EACAR,qBAEA1O,EAAAuP,UAAAR,SACAD,WAAAC,QAGAM,eAAArO,QAEAhB,EAAAsI,QAAA+G,eAAA,SAAAG,gBAEA,GAAAjC,UAAA0B,cAAA7M,WAAAA,WAAAS,gBACA0K,UAAAzH,MACAsE,IAAAoF,eAAAjC,SAAAjD,QACAyE,OAAAC;oBAGAvE,WAAAuE,WAAAQ,eAAA/E,WAAA,OAEA8C,SAAAjD,SAEAoE,kBAAAhL,KAAA6J,YAIAyB,YAAAN,mBACAH,WAAAnO,EAAA,qBAAAgC,WAAAS,gBAAA0B,kBAAAjB,QAAAlB,WAAAS,gBAAA0B,iBAAAE,QAAA,sBAGAoK,WAIAC,WAAAQ,aAGAN,YACA5M,WACAgD,IAAA,mCACA9D,GAAA,kCAAA,WACAyE,KAAAQ,YAGAnE,WACAgD,IAAA,kCACA9D,GAAA,iCAAA,SAAAiM,UACAiB,gBAAAjB,YAIAnL,WAAAd,GAAA,iBAAA,SAAA+N,eAAAI,KAAAV;oEACAF,SAAAY,KACAL,eAAAC,eAAAN,WAQAxI,QAAA,WACA,GAAAmJ,YAAA5L,CACA,KAAAoL,YAGA,GAFAA,aAAA,EAEAR,kBAEA,CACAgB,WAAAhB,kBAAAiB,MAAA,EACA,KAAA7L,IAAA4L,YACAlB,gBAAAkB,WAAA5L,QAJA+K,iBC7JA9O,OAAA,qDACA,SACA,OACA,0BACA,SAAAK,EAAAsG,GAAAzG,eACA,YAKA,OAAAA,gBACA4F,KAAA,UAKAC,KAAA,WACA,GAAAC,MAAAxE,KACAa,WAAAb,KAAAyE,eAEAzE,MAAA2I,SAAA9J,EAAA,WACAmB,KAAA2I,SAAA5I,GAAA,gFAAA,SAAAwG;6GACAA,EAAA8H,2BACA9H,EAAA+H,mBAGA,IAAAC,QAAA,WACA/J,KAAAO,UAEAyJ,SAAA,SAAAC,SACAjK,KAAAK,UAIAhE,YACAd,GAAA,cAAAwO,QACAxO,GAAA,wBAAAyO,WAMAzF,OAAA,WACA/I,KAAAyE,gBAAAnD,gBAAA0B,iBACA8B,MAAA9E,KAAA2I,WAOA3D,QAAA,WACAhF,KAAA2I,SAAA1D,UAMAF,OAAA,WACA,GAAAlE,YAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAqH,cAAAtH,WAAAuH,YACAC,cAAAF,cAAAG,WAEA7O,MAAA2I,SAAAhG,SAAA;mCAEAiM,cAAAE,MACA9O,KAAA2I,SAAAhG,SAAA,iBAOAkC,QAAA,WACA7E,KAAA2I,SAAA/F,YAAA,yBAMAmM,KAAA,WACA/O,KAAA+E,UAMAY,KAAA,WACA3F,KAAA6E,eC7FArG,OAAA,8DACA,SACA,0BACA,SAAAC,EAAAC,eACA,YAMA,IAYAsQ,WACAC,eAAA,EACAC,oBAAA,EACAC,iBAAA,EACAC,OAAA,EAgBAC,iBAOA,OAAA3Q,gBAEA4F,KAAA,YAKAC,KAAA,WAaA,QAAA+K,qBACA,MAAAC,aAAAC,QAGA,QAAAC,mBACA,MAAAC,UAAAF,QAAAG,YAAAH,QAGA,QAAAI;0BACA,MAAAH,mBAAAH,oBAGA,QAAAO,aAAAC,KACAzI,OAAA4H,eACAS,SAAAK,YAAAC,YAAAF,KAEAzI,OAAA6H,oBACAS,YAAAI,YAAAC,YAAAF,KAIA,QAAAG,yBACA,MAAA5I,QAAA8H,iBAAA1Q,EAAAyR,QAAA7I,OAAA8I,gBAAA9I,OAAA8I,cAAA1Q,OAGA,QAAA0P,mBAIA,IAHA,GACAiB,YADAC,kBAAA5R,EAAA6R,MAAAjJ,OAAA8I,eAGAP,kBAAAS,kBAAA5Q,QACA2Q,WAAAC,kBAAAE,QACAhB,YAAAjQ,KAAA8Q,YAAAL,YAAAC,aAAA,GA3CA,GAAAnP,YAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAqH,cAAAtH,WAAAuH,YACAtH,OAAA5I,EAAAuQ,SAAAN,cAAA8B,cAAAxB,UACAyB,WAAA5P,WAAAS,gBACAiO,YAAAkB,WAAAC,QAAA,cACAhB,SAAAe,WAAAE,iBACAhB,YAAAc,WAAA7E,oBACAoE,YAAA3I,OAAA+H,MAlDA,sBANA;uaA8FAvO,YACAd,GAAA,sBAAA,WACA8P,aAAA,GACAI,wBACAd,kBAEAU,YAAAD,yBCjIApR,OAAA,iEAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH;qEAMA,MALArC,MAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,SAIA,uCCUA6B,SAAA0M,gBAAA1M,SAAA2M,YAAA3M,SAAA4M,gBAAAC,OAAAC,SAAAA,QAAAC,MAAAF,OAAAC,QAAAD,OAAAC,SAAAE,aAAAH,OAAAC,SAAAD,OAAAC,WAAAA,QAAAG,UAAA,EAAAH,QAAAI,QAAA,QAAAJ,QAAAK,YAAA,QAAAL,QAAAM,WAAA,QAAAN,QAAAO,mBAAA,SAAAC,GAAA,GAAAC,GAAAV,OAAAS,EAAAC,KAAAA,EAAAV,OAAAS,MAAA,IAAAjL,MAAAmL,EAAA,SAAAC,GAAA,GAAAC,GAAAD,EAAAE,WAAAD,KAAAA,EAAA,aAAA,KAAA,GAAAE,KAAAH,GAAA,gBAAAG,GAAAH,EAAAI,eAAAD,KAAAF,EAAAE,GAAAH,EAAAG;mEAAA,OAAAF,IAAAI,EAAA,WAAA,MAAA,YAAA,MAAAC,WAAAC,OAAAC,KAAAlI,KAAAjK,KAAAiS,YAAAR,GAAAW,OAAAV,GAAAG,YAAAG,IAAAK,SAAA,SAAAV,EAAAG,GAAA,GAAAF,GAAAI,GAAA,OAAAJ,GAAAU,MAAAtS,KAAA4R,EAAAO,KAAAnS,KAAAmS,KAAAP,EAAAS,SAAArS,KAAAqS,SAAAT,EAAAW,QAAAvS,KAAAuS,QAAAX,EAAAY,cAAAxS,KAAAwS,cAAAZ,EAAAa,IAAAzS,KAAAyS,IAAAb,EAAAc,IAAA1S,KAAA0S,IAAAd,EAAAe,IAAA3S,KAAA2S,IAAAf,EAAAgB,UAAA,GAAA5S,MAAAuG,GAAAqL,EAAAgB,UAAAf,YAAAD,EAAAA,EAAAW,QAAAZ,EAAAG,GAAAF,GAAAO,KAAA,SAAAR,GAAA,GAAAC,GAAA5R,IAAA,OAAA,KAAA2R,EAAAlS,QAAAkS,EAAA,KAAApL,EAAAqL,GAAAA,YAAAD,GAAAO,SAAAN,EAAA,GAAAD,GAAAO,OAAA3L,IAAAqL,EAAAO,KAAAU,MAAAjB,EAAAD,IAAAC,IAAAW,QAAA,SAAAZ,EAAAC,GAAA,GAAAE,EAAA,IAAA,MAAAH,EAAA,CAAA,IAAAG,IAAAH,GAAAA,EAAAI,eAAAD,IAAA9R,KAAAwS,cAAAV,EAAAH,EAAAG;0DAAAH,GAAAmB,WAAA9S,KAAA4S,UAAAE,UAAAnB,EAAAmB,cAAAA,UAAA9S,KAAAwS,cAAA,WAAAb,EAAAmB,UAAA,GAAA,MAAAlB,EAAA,IAAAE,IAAAF,GAAAA,EAAAG,eAAAD,KAAA9R,KAAA8R,GAAAF,EAAAE,GAAA,OAAA9R,OAAAwS,cAAA,SAAAZ,EAAAD,GAAA3R,KAAA4S,UAAAhB,GAAAD,EAAA,kBAAAA,KAAAA,EAAAW,MAAAtS,KAAAsS,MAAAM,YAAAA,WAAAT,KAAA,aAAAG,MAAA,SAAAX,GAAA,MAAAA,GAAAO,OAAAI,OAAAG,IAAA,SAAAd,GAAA,MAAA,kBAAA3R,MAAA2R,IAAAe,IAAA,SAAAf,GAAA,WAAA,KAAA3R,KAAA2R,IAAAgB,IAAA,SAAAhB,GAAA,MAAAA,aAAAS,SAAApS,eAAA2R,KAAAc,IAAA,SAAAd,GAAA,MAAA3R,MAAA4S,UAAAH,IAAAxI,KAAAjK,KAAA2R,IAAAe,IAAA,SAAAf,GAAA,MAAA3R,MAAA4S,UAAAF,IAAAzI,KAAAjK,KAAA2R;wCAAAgB,IAAA,SAAAf,GAAA,IAAA,GAAAD,GAAA3R,KAAA2R,GAAA,CAAA,GAAAA,IAAAC,EAAA,OAAA,CAAAD,GAAAA,EAAAW,MAAA,OAAA,GAAAS,YAAArB,GAAAG,YAAA,SAAAF,GAAA,MAAA3R,MAAA+S,YAAAvU,OAAAmT,IAAAnT,OAAA,SAAAmT,GAAA,GAAAG,KAAA,IAAA,MAAAH,EAAA,CAAA,IAAA,GAAAC,KAAAD,GAAAA,EAAAI,eAAAH,KAAAE,EAAAF,GAAA5R,KAAAgT,KAAApB,EAAAD,EAAAC,IAAAD,GAAAmB,WAAA9S,KAAA4S,UAAAE,UAAAnB,EAAAmB,cAAAA,WAAAhB,EAAAgB,SAAA9S,KAAAgT,KAAA,WAAArB,EAAAmB,WAAA,MAAAhB,IAAAkB,KAAA,SAAAzQ,EAAAuP,GAAA,GAAA,kBAAA,KAAAA,EAAAgB,WAAAG,MAAA,mBAAA,MAAAnB,EAAA,IAAAF,GAAA,WAAA5R,KAAAsS,MAAAV,EAAAU,MAAA/P,EAAA,KAAA,GAAAoP,GAAAG,EAAAe,MAAA7S,KAAAiS,WAAA,MAAAiB,GAAA,YAAAlT,MAAAsS,MAAAY,EAAA,aAAAlT,MAAAsS,MAAAX,EAAA,OAAAC,GAAAkB,SAAA,WAAA,MAAAhB,GAAAgB,SAAAD,MAAAf,EAAAG;sCAAAL,QAAA,WAAA,SAAAuB,UAAA,GAAAC,MAAArC,OAAA,OAAAqC,QAAAA,KAAArC,OAAA,WAAA,IAAAsC,UAAA,SAAAhR,MAAA,GAAAiR,IAAA,WAAA,MAAArB,WAAAC,OAAAqB,QAAAV,MAAAZ,UAAAC,OAAAD,WAAA,KAAA,GAAAvS,MAAA2T,UAAAT,UAAAS,SAAAT,UAAAb,eAAArS,MAAA4T,GAAA5T,QAAA,KAAA2C,KAAA3C,IAAA2C,KAAA3C,IAAA2T,SAAAT,UAAAlT,IAAA,OAAA4T,IAAAR,SAAAO,SAAAT,UAAAE,SAAAQ,GAAAD,UAAAT,WAAAY,YAAA,EAAAC,KAAA,aAAApR,QAAAqR,OAAA3C,OAAAwC,QAAA,WAAA,IAAAvT,KAAA2T,QAAA3T,KAAA4T,UAAA,MAAA5T,MAAA2T,QAAA3T,KAAA4T,UAAA5T,KAAAyT,KAAAZ,MAAA7S,KAAA0T,OAAA1T,KAAAqC,KAAAwR,UAAAzF,MAAAnE,KAAAgI,UAAA,MAAA6B,MAAA;uBAAA9T,MAAA2T,QAAAb,SAAA,WAAA,MAAA9S,MAAAyT,KAAAX,SAAAD,MAAA7S,KAAAyT,KAAAxB,YAAA,IAAA8B,YAAA,SAAApC,GAAA,MAAA,kBAAA,IAAAA,EAAA6B,YAAAQ,KAAA,SAAAC,MAAA,MAAAC,MAAAjK,KAAA8G,OAAAkD,OAAAE,SAAA,WAAA,GAAAH,KAAA,wBAAAjD,OAAAqD,aAAA,UAAArD,QAAAqD,aAAA,MAAA9H,OAAAyE,OAAAqD,aAAA,SAAAJ,MAAAjD,OAAAsD,WAAA,SAAAJ,MAAAb,KAAAkB,OAAAL,KAAAA,KAAA,oFAAAlD,OAAAsD,WAAAJ,KAAA,IAAAM,QAAAnB,KAAAoB,QAAA,UAAApB,MAAAoB,eAAApB,MAAAkB,OAAAC,iBAAAE,OAAA,KAAAF,OAAA,OAAAA,SAAA,SAAAN;iBAAAb,KAAAkB,OAAAL,KAAAA,KAAA,mFAAA,IAAAS,MAAAxQ,SAAAyQ,qBAAA,QAAA,EAAAD,QAAAA,KAAAxQ,SAAA0Q,KAAA,IAAAC,QAAA3Q,SAAA4M,cAAA,SAAA+D,QAAAC,YAAA5Q,SAAA6Q,eAAAd,OAAAS,KAAAI,YAAAD,QAAAH,KAAAM,YAAAH,OAAA,IAAAN,QAAAnB,KAAAoB,QAAA,UAAApB,MAAAoB,eAAApB,MAAAkB,OAAAC,iBAAAE,OAAA,KAAAF,OAAA,OAAAA,QAAAJ,UAAA,MAAAc,MAAA,SAAAC,KAAA3S,GAAA,GAAA0P,UAAAxS,OAAA,IAAAyV,KAAA,IAAAjD,UAAAxS,QAAA,kBAAAwS,WAAA,IAAAA,UAAA,YAAAG,SAAA,gBAAAH,WAAA,MAAA7D,MAAAnE,KAAAiL,KAAA3S,MAAA6L,MAAAnE,KAAAgI,UAAA;mMAAAiD,eAAAC,QAAA,IAAAD,KAAAzV,SAAAyV,KAAAA,KAAA,IAAA,kBAAAA,MAAA,MAAAA,MAAA3B,UAAAF,SAAAT,UAAAW,QAAA2B,KAAA7B,UAAAI,KAAAyB,MAAA,IAAAA,eAAAC,OAAA,CAAA,GAAA,gBAAAD,MAAA,IAAAA,KAAA,YAAA9C,SAAA,kBAAA8C,MAAA,GAAAA,KAAA,IAAA,MAAA7B,WAAAI,KAAAyB,KAAA,GAAAA,KAAA,IAAAxB,OAAAwB,KAAA,GAAA7S,KAAA6S,KAAA9G,MAAA,IAAA,IAAA,kBAAA8G,MAAA,GAAA,MAAA7B,WAAAI,KAAAyB,KAAA,GAAA7S,KAAA6S,KAAA9G,MAAA,IAAA,IAAA,kBAAA8G,MAAA,GAAA,MAAA7B;gDAAAI,KAAAyB,KAAA,GAAAxB,OAAAwB,KAAA,GAAA7S,KAAA6S,KAAA9G,MAAA,SAAA,CAAA,GAAA,gBAAA,MAAA,MAAA+F,WAAAA,WAAAd,UAAAI,KAAAO,KAAA3R,MAAA6S,OAAA,IAAAA,eAAA9C,QAAA,MAAAiB,UAAA6B,KAAA,QAAA,KAAA,KAAA,MAAA7B,cAAA,KAAAoB,OAAA,wCAAAW,MAAA,SAAAC,KAAAC,UAAA,MAAAA,UAAAL,MAAAK,UAAAA,SAAAC,QAAAC,WAAAF,SAAAD,MAAAC,UAAAG,QAAA,SAAAH,SAAAI,QAAAJ,SAAAL,MAAAK,UAAAA,SAAA3B,SAAAgC,WAAAL,SAAAI,QAAAA,OAAAE,YAAAC,YAAA,WAAA,GAAAC,SAAA9V,KAAA0V,aAAA1V,MAAA0V,OAAA1V,KAAAuT,QAAAvT,KAAA+V,iBAAA/V,MAAA+V;sBAAA,IAAAxB,QAAAvU,KAAAuT,QAAAV,MAAA7S,KAAAiS,UAAA,IAAA8B,WAAAQ,UAAAA,OAAAZ,OAAAgC,WAAApB,OAAAuB,aAAA,KAAA,GAAAvT,GAAA,EAAAyT,EAAAF,QAAArW,OAAA8C,EAAAyT,EAAAzT,MAAAuT,QAAAvT,GAAAqT,SAAA,GAAAE,QAAAvT,GAAA0H,QAAA0L,WAAA,SAAAL,SAAAQ,SAAAA,kBAAAX,SAAAW,SAAAA,UAAAR,SAAAI,OAAA,IAAAI,QAAArW,OAAA6V,SAAAI,OAAAvT,KAAA2T,QAAA,IAAAR,SAAAI,OAAAJ,SAAAI,OAAA7B,OAAAiC,UAAAR,SAAAS,WAAAT,SAAA/B,QAAA+B,SAAA/B,QAAAsC,YAAAP,SAAAI,OAAAI,UAAAG,MAAA,SAAAX,UAAAA,SAAAL,MAAAK,UAAAA,SAAAM,QAAA,CAAA,KAAA,GAAArT,GAAA,EAAAyT,EAAA/D,UAAAxS,OAAA8C,EAAAyT,EAAAzT,IAAA0P,UAAA1P,IAAAkT,QAAAxD,UAAA1P,GAAA+S,SAAA,IAAA,IAAAA,SAAAM,QAAA;0BAAA,GAAArB,QAAAe,UAAAvB,YAAAQ,UAAAe,SAAAf,QAAA,MAAAe,WAAAY,MAAAlF,QAAAoB,OAAAC,UAAAF,KAAA,SAAA2B,OAAA9T,KAAAmW,SAAAnW,KAAAiF,UAAAjF,KAAA8T,MAAAA,MAAA9T,KAAAoW,SAAA,GAAAC,IAAA,SAAA5C,KAAA6C,UAAA,MAAAA,WAAAA,SAAA,IAAAvC,WAAAN,QAAAA,KAAAwB,MAAAxB,OAAAA,KAAA6C,SAAAA,QAAA,KAAA,GAAA/T,GAAAvC,KAAAmW,MAAA1W,OAAA8C,EAAA,GAAA+T,SAAAtW,KAAAmW,MAAA5T,EAAA,GAAA+T,UAAA/T,GAAA,OAAAvC,MAAAmW,MAAAI,OAAAhU,EAAA,EAAAkR,MAAAA,MAAA+C,OAAA,SAAA/C,MAAA,IAAA,GAAAlR,GAAA,EAAAyT,EAAAhW,KAAAmW,MAAA1W,OAAA8C,EAAAyT,EAAAzT,IAAA,GAAAvC,KAAAmW,MAAA5T,KAAAkR,KAAA,YAAAzT,KAAAoW,QAAApW,KAAAiF,OAAA9C,KAAAI,GAAAvC,KAAAmW,MAAAI,OAAAhU,EAAA,KAAAkU,QAAA,WAAA,GAAAC,eAAA1W,MAAAoW,SAAA,CAAA,KAAA,GAAA7T,GAAA,EAAAyT,EAAAhW,KAAAmW,MAAA1W,OAAA8C,EAAAyT,EAAAzT,IAAA;0CAAAvC,KAAA8T,OAAA9T,KAAAmW,MAAA5T,GAAAuR,OAAA,IAAAS,QAAAvU,KAAAmW,MAAA5T,GAAAsQ,MAAA9B,OAAAkB,UAAA8B,YAAAQ,UAAAA,OAAAZ,QAAA+C,UAAAvU,KAAAoS,QAAA,MAAAvU,MAAAoW,SAAA,EAAApW,KAAAiF,OAAAxF,QAAAO,KAAA2W,gBAAA,IAAAD,UAAAjX,OAAA,KAAA,IAAAiX,UAAAjX,OAAAiX,UAAA,GAAAT,MAAApD,SAAA6D,YAAAC,cAAA,WAAA3W,KAAAiF,OAAAjF,KAAAiF,OAAA2R,MAAA,KAAA,GAAArU,GAAAvC,KAAAiF,OAAAxF,OAAA,EAAA8C,GAAA,EAAAA,IAAAvC,KAAAmW,MAAAI,OAAAhU,EAAA,EAAAvC,MAAAiF,aAAA4R,aAAA,SAAAV,MAAA9T,KAAAyR,OAAA,IAAAqC,MAAA,MAAA,KAAAA,iBAAAhB,SAAAgB,OAAAA,QAAA9T,eAAA8S,SAAA9S,KAAA,MAAAA,SAAAA,MAAA,KAAA,GAAAyU,SAAAZ,MAAApC,OAAAvR,EAAA,EAAAyT,EAAAG,MAAA1W,OAAA8C,EAAAyT,EAAAzT,IAAAuU,QAAAT,IAAAF,MAAA5T;8EAAA,OAAAuU,SAAAL,QAAA5D,MAAAiE,QAAAzU,OAAA0U,MAAA3D,KAAAhB,OAAAC,UAAAF,KAAA,WAAAnS,KAAA4V,QAAA5V,KAAAoW,QAAA,EAAApW,KAAAgX,SAAAhX,KAAAiX,KAAApE,MAAA7S,KAAAiS,YAAAgF,KAAA,WAAA,IAAA,GAAA3B,UAAA/S,EAAA,EAAAyT,EAAA/D,UAAAxS,OAAA8C,EAAAyT,EAAAzT,IAAA+S,SAAAL,MAAAhD,UAAA1P,IAAA+S,WAAArD,UAAA1P,IAAA+S,SAAA3B,SAAA2B,SAAAL,OAAA,OAAAjV,KAAAsV,YAAAtV,KAAAgX,MAAA7U,KAAAmT,SAAA,OAAAtV,MAAAoW,SAAApW,KAAA4V,SAAA5V,KAAAkX,UAAA5B,UAAA4B,QAAA,SAAAF,OAAA,MAAAhX,KAAAoW,UAAApW,KAAA4V,SAAA5V,KAAAgX,MAAAvX,QAAA,CAAA,GAAA6V,UAAAtV,KAAAgX,MAAA,EAAAA,OAAAhX,KAAAgX,MAAA5I,MAAA,GAAApO,KAAAgX,SAAAhX,KAAAmX,SAAA,IAAA5C,QAAAe;sBAAAtV,MAAAoX,SAAAJ,MAAAvX,SAAAO,KAAAgX,MAAAA,MAAAnD,OAAA7T,KAAAgX,QAAAjD,WAAAQ,UAAAA,OAAAZ,QAAA8B,QAAAlB,OAAAvU,QAAAmX,QAAA,WAAAnX,KAAAoW,WAAAgB,OAAA,WAAApX,KAAAoW,SAAApW,KAAAoW,WAAAnM,KAAA,WAAAjK,KAAAkX,QAAArE,MAAA7S,KAAAiS,YAAAoF,KAAA,SAAA/B,UAAA,MAAAA,aAAAgC,OAAAP,MAAA1E,UAAAF,KAAA,SAAA7N,MAAAyS,MAAAnE,UAAAT,KAAAlI,KAAAjK,MAAAA,KAAAsE,KAAAA,KAAAtE,KAAAuX,UAAAvX,KAAAwX,UAAAtB,OAAA,GAAAlW,KAAAyX,SAAA,EAAAzX,KAAAsV,SAAA,MAAAoC,KAAA,SAAAtR,QAAAkP,SAAAqC,QAAA,GAAArC,SAAAL,MAAAK,UAAAtV,KAAAyX,SAAAzX,KAAA4V,QAAA5V,KAAAiX,MAAA,OAAAjX,KAAAoG,QAAAkP,SAAAqC,aAAA,CAAA3X,KAAAsV,SAAAA,SAAAA,SAAAxB;iBAAA6D,QAAA3X,KAAAuX,OAAApV,KAAAiE,SAAApG,KAAAmX,UAAAnX,KAAAyX,SAAA,CAAA,IAAAlD,QAAAvU,KAAAwX,UAAAf,QAAArQ,QAAA2N,YAAAQ,UAAAA,OAAAZ,QAAA8B,QAAAlB,OAAAvU,MAAAA,KAAAoX,SAAApX,KAAAyX,SAAA,EAAAzX,KAAA4V,SAAA5V,KAAAiK,OAAA,MAAAqL,WAAAsC,MAAA,SAAAtC,UAAA,MAAAA,UAAAL,MAAAK,UAAAtV,KAAAyX,SAAAzX,KAAA4V,QAAAN,SAAAtV,KAAAiX,MAAA,QAAAjX,KAAAsV,YAAAtV,KAAAuX,UAAAjC,YAAAA,UAAArL,KAAA,WAAAjK,KAAAsV,SAAAtV,MAAAA,KAAAkX,WAAAW,SAAA,SAAAvC,SAAAwC,WAAAxB,UAAA,GAAAhB,SAAAL,MAAAK,UAAAtV,KAAAwX,UAAAnB,IAAAf,SAAAgB,WAAAwB,WAAA,IAAA,GAAAvV,GAAA,EAAAyT,EAAAhW,KAAAuX,OAAA9X,OAAA8C,EAAAyT,EAAAzT,IAAA,CAAA+S,SAAAxB,OAAA,IAAAS,QAAAe,SAAAtV,KAAAuX,OAAAhV;oCAAAwR,YAAAQ,SAAAhS,IAAAvC,KAAAuX,OAAA9X,OAAA,GAAAgW,QAAAlB,OAAAvU,MAAA,MAAAsV,WAAAyC,WAAA,SAAAzC,UAAAtV,KAAAwX,UAAAhB,OAAAlB,WAAA0C,YAAA,SAAAhQ,IAAAsN,SAAAgB,UAAAhB,SAAAL,MAAAK,UAAAtV,KAAAmW,QAAAnW,KAAAmW,SAAAnW,KAAA6X,UAAA,eAAA7X,QAAAA,KAAAmW,MAAAnO,OAAAhI,KAAAmW,MAAAnO,KAAAkO,OAAA,IAAAlW,KAAAmW,MAAAnO,KAAAqO,IAAAf,SAAAgB,SAAA,KAAA,GAAA/T,GAAA,EAAAyT,EAAAhW,KAAAuX,OAAA9X,OAAA8C,EAAAyT,EAAAzT,IAAAvC,KAAAuX,OAAAhV,IAAAyF,MAAAsN,SAAAxB,QAAAwB,SAAAtV,KAAAuX,OAAAhV,IAAA,OAAA+S,UAAAtN,IAAAA,IAAAsN,UAAA2C,aAAA,SAAAjQ,KAAA,GAAAqE,MAAArE,cAAAmN,OAAAnN,IAAA,GAAAA,GAAA,OAAAhI,MAAAmW,MAAA9J,MAAArM,KAAAmW,MAAA9J,MAAAoK,QAAAzO,KAAA;6DAAAkQ,WAAA,SAAAzE,MAAAzT,KAAAmW,MAAA1C,KAAAzL,KAAAwO,OAAA/C,SAAAqC,WAAAxW,KAAA,SAAAgF,MAAA,MAAAgT,QAAAxB,QAAAxR,QAAAgT,OAAAxB,QAAAxR,MAAA,GAAAgT,QAAAhT,OAAAgT,OAAAxB,QAAAxR,QAAA8O,MAAA+E,SAAA/E,KAAAgF,SAAAnD,MAAA7B,KAAA+E,SAAAE,MAAAjD,MAAAhC,KAAA+E,SAAAG,MAAArC,MAAA7C,KAAA+E,SAAAI,MAAAxB,MAAA3D,KAAA+E,SAAAK,OAAAlB,OAAAhY,KAAA8T,KAAA+E,SAAAM,MAAAvC,MAAA9C,KAAA+E,SAAAF,aAAApB,gBAAA,SAAAtQ,GAAA,GAAAyL,GAAAjB,OAAAxK,EAAAyL,KAAAA,EAAAjB,OAAAxK,MAAA,IAAAiL,GAAA,yBAAAkH,UAAAC,YAAA,KAAAD,UAAAE,UAAAhH,EAAA,EAAAE,EAAA,SAAAvP,GAAA,MAAA2B,UAAA2U,aAAA3U,SAAA2U,YAAApZ,OAAAmS,IAAAA,EAAA1N,SAAA2U,YAAApZ;4FAAA8C,IAAAA,EAAA2B,SAAAwQ,MAAAxQ,SAAAyQ,qBAAA,QAAA,MAAApS,EAAA2B,SAAA0Q,MAAArS,GAAAoP,KAAAD,EAAA,WAAA,IAAA,GAAAoH,GAAA,EAAA5F,EAAAvB,EAAAlS,OAAAqZ,EAAA5F,EAAA4F,IAAA9G,EAAA+G,KAAArE,KAAAM,YAAArD,EAAAmH,GAAAnH,OAAAF,IAAAA,GAAAlL,GAAA,GAAAyL,EAAA+G,MAAAC,UAAAC,WAAAC,aAAA3D,QAAA,KAAA4D,WAAA,EAAA9R,QAAA+R,KAAA,GAAAC,KAAA5H,GAAA6H,QAAAC,GAAA,EAAAC,OAAA,GAAAC,QAAA,SAAAvG,GAAA,GAAA3Q,GAAA2Q,EAAAD,MAAA,uBAAA,OAAA1Q,IAAAA,EAAA,IAAAkP,KAAAyB,GAAAzB,EAAAlP,EAAA,KAAAvC,KAAAqH,OAAA+R,MAAAlG,EAAAwG,OAAAnX,EAAA,GAAA9C,OAAA,IAAAyT,GAAAyG,SAAA,SAAAzG,GAAA,GAAA3Q,GAAAvC,KAAAqH,OAAA+R,IAAA,IAAAlG,EAAAwG,OAAA,EAAAnX,EAAA9C,UAAA8C,EAAA2Q,EAAA,IAAA3M,EAAA,IAAA2M,EAAAwG,OAAAnX,EAAA9C,YAAA,KAAA,GAAAqZ,KAAArH,GAAA,GAAAA,EAAAM,eAAA+G,IAAArH,EAAAqH,IAAA5F,EAAAwG,OAAA,EAAAjI,EAAAqH,GAAArZ,UAAAgS,EAAAqH,GAAA;8IAAA5F,EAAA,IAAA4F,EAAA,IAAA5F,EAAAwG,OAAAjI,EAAAqH,GAAArZ,OAAA,OAAA,MAAAyT,IAAA0G,QAAA,SAAA1G,GAAA,GAAA3Q,GAAAyP,EAAAT,gBAAAjN,OAAA0N,EAAAV,UAAA,OAAA/O,KAAAA,EAAA,QAAAA,GAAAA,GAAAsX,OAAA,SAAAtX,GAAA,MAAAvC,MAAAyZ,QAAAlX,GAAAvC,KAAA4Z,QAAArX,IAAAuX,QAAA,SAAAhB,EAAAiB,GAAAA,EAAA/H,EAAAmG,SAAA4B,EAAA,IAAAC,EAAA,IAAAlB,YAAA1G,QAAA,IAAA,GAAAc,KAAA4F,GAAAA,EAAA/G,eAAAmB,KAAA8G,EAAA9G,EAAA+G,cAAAnB,EAAAA,EAAA5F,QAAA8G,GAAAlB,EAAAoB,MAAA,MAAAC,MAAAF,aAAA,IAAAnB,EAAA9Y,KAAAyZ,QAAAX,GAAA9Y,KAAAgZ,OAAAF,GAAAiB,EAAA/Z,KAAAgZ,OAAAF,QAAA,CAAA,GAAA9C,KAAAA,GAAAgE,GAAAlB,EAAA9Y,KAAAoa,KAAApE,EAAA+D,GAAA,MAAAA,IAAAK,KAAA,SAAAtB,EAAA9C,GAAAA,EAAAhE,EAAAmG,SAAAnC,EAAA,IAAAgE,EAAA,IAAAlB,YAAA1G,QAAA,IAAA,GAAAc,KAAA4F,GAAAA,EAAA/G,eAAAmB,KAAA8G,EAAA9G,EAAA+G;+EAAAnB,EAAAA,EAAA5F,QAAA8G,GAAAlB,EAAAoB,MAAA,MAAAC,MAAAF,aAAA,IAAAnB,EAAA9Y,KAAAyZ,QAAAX,GAAA9Y,KAAAiZ,QAAAH,GAAA9Y,KAAAqa,QAAAvB,EAAA9C,OAAA,CAAA,GAAAhW,KAAA0U,KAAA5C,EAAA9R,KAAA0U,OAAA1U,KAAAsa,OAAAN,GAAA,KAAAvF,OAAA,4BAAAuF,EAAAha,MAAAsa,OAAAN,GAAA/P,KAAAjK,KAAA8Y,EAAA9C,GAAA,MAAAA,IAAAuE,SAAA,SAAAP,EAAAhE,EAAA8C,GAAA,GAAA9C,EAAAhE,EAAAmG,SAAAnC,GAAAgE,YAAA5H,QAAA,IAAA,GAAAc,KAAA8G,GAAAA,EAAAjI,eAAAmB,KAAA8G,EAAAA,EAAA9G,GAAA,OAAA8G,GAAAha,KAAAyZ,QAAAO,GAAAha,KAAAgZ,OAAAgB,GAAAhE,EAAAhW,KAAAgZ,OAAAgB,IAAAha,KAAAqa,QAAAL,EAAAhE,EAAA8C,GAAA9C,GAAAqE,QAAA,SAAAnH,EAAA4F,EAAAvW,GAAAvC,KAAAkZ,UAAAhG,KAAAlT,KAAAkZ,UAAAhG,GAAAlC,QAAAmH,SAAAM,SAAAzY,KAAAkZ,UAAAhG,GAAAmD,IAAAyC,EAAAvW,GAAAuW,EAAA0B,KAAAtH,GAAAuH,WAAA,SAAAlY,GAAAvC,KAAAkZ,UAAA3W,EAAAiY,QAAAxa,KAAAkZ,UAAA3W,EAAAiY,MAAAhE,OAAAjU;0DAAAvC,KAAAkZ,UAAA3W,EAAAiY,MAAArE,MAAA1W,cAAAO,MAAAkZ,UAAA3W,EAAAiY,QAAAE,WAAA,WAAA,IAAA,GAAAV,GAAA,EAAA9G,EAAAjB,UAAAxS,OAAAua,EAAA9G,EAAA8G,IAAA,CAAA,GAAAlB,GAAA9Y,KAAAyZ,QAAAxH,UAAA+H,GAAAha,MAAAiZ,QAAAH,KAAA9Y,KAAAiZ,QAAAH,IAAA6B,WAAA,MAAAL,QAAAM,GAAA,SAAA9B,EAAA9C,GAAA,GAAA9C,GAAAlT,KAAA2Z,SAAAb,GAAAvW,EAAA2B,SAAA4M,cAAA,UAAAkJ,EAAAhI,EAAAmG,UAAA,cAAAnY,KAAA8Y,GAAA9Y,MAAAiZ,QAAAH,IAAAxD,SAAAU,EAAAT,QAAAC,WAAAwE,EAAAha,KAAAuV,SAAAsF,OAAA7a,KAAAsZ,OAAAC,GAAA1E,OAAAtS,GAAAvC,KAAAiZ,QAAAH,GAAA1S,QAAA4L,EAAA8I,QAAAC,KAAA7H,GAAA3Q,EAAAyY,QAAAhB,EAAAzX,EAAA8J,KAAA,kBAAA9J,EAAA0Y,IAAAnC,EAAA9Y,KAAA4Z,QAAA1G,GAAAlT,KAAA0U,KAAAI,YAAAvS,IAAA2Y,IAAA,SAAAhI,EAAA8G,GAAA,GAAAzX,GAAAvC,KAAA2Z,SAAAzG,GAAA4F,EAAA5U,SAAA4M,cAAA;uDAAAgI,GAAAqC,IAAA,aAAArC,EAAAzM,KAAA,WAAAyM,EAAAsC,KAAAlI,EAAAlT,KAAA4Z,QAAArX,GAAAvC,KAAAiZ,QAAA/F,IAAAoC,SAAA0E,EAAA5T,QAAA4L,EAAA8I,QAAAC,KAAAxY,GAAAsY,OAAA7a,KAAAsZ,OAAAC,IAAAvZ,KAAA0U,KAAAI,YAAAgE,GAAA9Y,KAAAqb,MAAAC,OAAArR,KAAAjK,MAAAA,KAAAqb,MAAAb,KAAAtH,GAAA4F,KAAAuC,OAAAC,OAAA,SAAApI,EAAA3Q,GAAA,MAAA2Q,GAAAlB,EAAAmG,SAAAjF,GAAA,UAAA3Q,EAAAgZ,UAAAhZ,EAAAiZ,gBAAA,KAAAjZ,EAAAiZ,WAAA,QAAAtI,EAAAlT,KAAAsZ,OAAAC,IAAAxI,OAAA0K,QAAA,SAAAlZ,EAAAgZ,SAAArI,EAAAlT,KAAAsZ,OAAAC,IAAA/H,EAAAxR,KAAAqb,MAAA1O,MAAA3M,MAAAA,KAAAqb,MAAAK,aAAA9J,IAAAsB,GAAAlT,KAAAmZ,YAAAnZ,KAAAqb,MAAA1O,MAAA3M,MAAAA,KAAAqb,MAAAM,YAAApZ,EAAA2Q,GAAAlT,KAAAmZ,YAAAjG,GAAAvG,MAAA,SAAAuG,EAAA3Q,EAAAuW,EAAAkB,GAAAzX,EAAAyP,EAAAmG,SAAA5V,GAAAA,EAAAgR,QAAAvT,KAAAuT;uBAAAhR,EAAA8S,KAAArV,KAAAqV,KAAA9S,EAAA+W,OAAApG,EAAAoG,OAAA/W,EAAAgT,QAAAyE,GAAA9G,EAAAqC,QAAAhT,EAAAqZ,MAAArZ,EAAAsZ,MAAA/C,GAAA,EAAAA,EAAAtD,WAAAjT,EAAAuW,GAAAvW,KAAA8S,KAAA,SAAA9S,GAAA,MAAAvC,MAAA6b,OAAA7b,KAAA4b,MAAA5b,KAAA4b,MAAAE,KAAAC,MAAA,KAAA/b,KAAA4b,MAAA,GAAA5b,KAAA6b,OAAA7b,KAAAuV,SAAAhT,EAAAvC,KAAAsZ,OAAAE,OAAA,GAAA,GAAAgB,KAAA,SAAAtH,EAAA3Q,GAAAA,EAAA,EAAAyP,EAAA+G,KAAAiD,YAAA9I,GAAAlB,EAAA+G,KAAAkD,aAAA/I,IAAAK,QAAA,WAAAvT,KAAAyT,KAAAxJ,KAAAjK,KAAA0T,OAAA1T,KAAAA,KAAAqC,KAAA,GAAArC,KAAAqC,KAAA,KAAAqZ,aAAA,SAAAnZ,EAAA2Q,EAAA4F,GAAAvW,EAAA8S,KAAAyD,KAAA5U,SAAA2U,YAAApZ,OAAAyT,GAAAhP,SAAA2U,YAAA3F,GAAAgJ,UAAAhY,SAAA2U,YAAA3F,GAAAgJ,SAAAzc,OAAAqZ,EAAAvW,EAAA+W,OAAAC,IAAA/D,WAAAjT,EAAAA,EAAAqZ,SAAAD,YAAA,SAAApZ,EAAAyX,EAAAD,GAAA,IAAAxX,EAAA8S,KAAA0E,GAAA,CAAA,GAAA/D,GAAA,EAAA9C,EAAA8G,EAAAmC,OAAAnC,EAAAwB;+BAAA,MAAAtI,EAAAgJ,UAAAhJ,EAAAkJ,WAAA3c,OAAA,IAAAuW,EAAA,GAAA,MAAA8C,GAAAA,EAAA1S,QAAA6M,MAAA,qCAAA+C,EAAA,EAAA8C,EAAA1S,QAAA6M,MAAA,oBAAA+C,EAAA,GAAAA,EAAAR,WAAAxD,EAAAmG,UAAA4B,EAAAxX,EAAA+W,OAAAC,KAAA,GAAA/D,WAAAjT,EAAAA,EAAAqZ,UAAAK,aAAA,SAAA1Z,GAAAA,EAAAvC,KAAAyZ,QAAAlX,EAAA,IAAA2Q,GAAAlT,KAAAiZ,QAAA1W,EAAA,OAAA2Q,KAAAA,EAAAyH,WAAA3I,EAAA8I,QAAAlD,MAAA1E,EAAA9M,SAAAiW,aAAAnJ,EAAAqC,SAAArC,EAAA2B,SAAA,IAAAlD,EAAAlS,QAAA+V,WAAA9D,EAAA,GAAAC,EAAAxP,KAAA+Q,EAAA2B,SAAA7U,KAAAgZ,OAAAzW,GAAA2Q,EAAA2H,aAAA7a,MAAAiZ,QAAA1W,GAAAvC,KAAAqa,QAAA9X,EAAA2Q,EAAAoC,YAAApC,SAAAlT,MAAAiZ,QAAA1W,GAAAvC,KAAAgZ,OAAAzW,GAAAvC,KAAAsZ,OAAAC,GAAArG,GAAA2H,OAAA7a,KAAAsZ,OAAAC,KAAAvZ,KAAAkZ,UAAA3W,GAAAvC,KAAAkZ,UAAA3W,GAAAkU,QAAAvD,EAAA2H,QAAA;4DAAAmB,YAAA,SAAAzZ,GAAAvC,KAAAiZ,QAAA1W,GAAAgT,SAAA8G,aAAArc,KAAAiZ,QAAA1W,GAAAgT,SAAAvV,KAAAiZ,QAAA1W,GAAAsY,OAAA7a,KAAAsZ,OAAAE,MAAAxZ,KAAAsc,UAAA/Z,GAAAvC,KAAAic,aAAA1Z,IAAA+Z,UAAA,SAAA/Z,GAAAyP,EAAA8I,QAAAyB,KAAA,aAAA,0BAAAha,GAAA,KAAA,KAAAyP,EAAAf,IAAAyE,OAAAgC,MAAA,kBAAAnV,KAAAia,OAAA,SAAA1D,EAAAkB,GAAA,GAAAzX,GAAAvC,KAAAyc,YAAA3D,EAAA,IAAA,KAAAvW,GAAAyX,EAAAhI,EAAAmG,SAAA6B,UAAA,CAAA,GAAA9G,GAAAhP,SAAA4M,cAAA,QAAAoC,GAAA7G,KAAA,WAAArM,KAAA0U,KAAA5C,EAAA9R,KAAA0U,MAAA1U,KAAA0U,KAAAI,YAAA5B,GAAAA,EAAAsI,gBAAA,KAAAtI,EAAAsI,WAAA,QAAAtI,EAAAsI,WAAAkB,QAAAna,EAAA2Q,EAAA4B,YAAA5Q,SAAA6Q,eAAAxS,IAAAyX,EAAAha,KAAAqb,MAAAC,OAAArR,KAAAjK,KAAAga,EAAA9G;mCAAA,MAAA8G,IAAAyC,YAAA,SAAA1C,GAAA,GAAA,gBAAA,GAAA,MAAAA,EAAA,IAAA4C,GAAA3G,EAAA8C,EAAA,EAAA,KAAA6D,IAAA5C,GAAA,GAAAA,EAAAhI,eAAA4K,GAAA,GAAA,gBAAA5C,GAAA4C,GAAA7D,GAAA6D,EAAA,KAAA5C,EAAA4C,GAAA,UAAA,IAAA5C,EAAA4C,YAAAxH,OAAA,IAAA,GAAA6E,GAAA,EAAAA,EAAAD,EAAA4C,GAAAld,OAAAua,IAAAhE,KAAAA,EAAA2G,GAAA5C,EAAA4C,GAAA3C,GAAAlB,GAAA9Y,KAAAyc,YAAAzG,OAAA,IAAA,WAAA2G,EAAAjD,OAAA,EAAA,GAAAZ,GAAA6D,EAAA,KAAA3c,KAAAyc,YAAA1C,EAAA4C,IAAA,UAAA,IAAA,MAAA5C,EAAA4C,GAAA,CAAA3G,IAAA,KAAA,GAAA9C,KAAA6G,GAAA4C,GAAA5C,EAAA4C,GAAA5K,eAAAmB,IAAA,MAAA6G,EAAA4C,GAAAzJ,KAAA8C,EAAAA,EAAAvW,QAAAyT,EAAA,KAAA6G,EAAA4C,GAAAzJ,GAAA4F,IAAA6D,EAAA,KAAA3G,EAAA4G,KAAA,MAAA,MAAA,MAAA9D,MAAA,WAAA9H,QAAA6L,MAAAC,QAAA,SAAAtL,EAAAG,EAAApL,GAAA,GAAAuL,GAAAF,EAAA1N,SAAA4M,cAAAU,EAAA,IAAAG,EAAA,CAAA,GAAAA,EAAAI,eAAA,SAAA,CAAA,GAAAL,GAAAC,EAAAoL,KAAApL,GAAAoL,QAAA,KAAAjL,IAAAJ,GAAAA,EAAAK,eAAAD,KAAAH,EAAAoL,MAAAjL,EAAAnS,QAAA,YAAAK,KAAAgd,UAAAtL,EAAAI;qFAAAd,QAAAC,IAAAgM,OAAArL,EAAAD,EAAA,KAAAG,IAAAH,GAAA,SAAAG,GAAA,UAAAA,EAAA4H,OAAA,EAAA,IAAA9H,EAAAsL,aAAApL,EAAAH,EAAAG,IAAA,GAAAvL,EAAA,CAAAA,YAAA4O,SAAA5O,GAAAA,GAAA,KAAA,GAAAkL,GAAA,EAAAO,EAAAzL,EAAA9G,OAAAgS,EAAAO,EAAAP,IAAAlL,EAAAkL,YAAA0D,OAAAvD,EAAAkD,YAAA9U,KAAA8c,QAAAvW,EAAAkL,GAAA,GAAAlL,EAAAkL,GAAA,GAAAlL,EAAAkL,GAAA,KAAA,WAAAD,EAAAxR,KAAAmd,UAAAvL,EAAArL,EAAAkL,IAAAG,EAAAkD,YAAA5Q,SAAA6Q,eAAAxO,EAAAkL,KAAA,MAAAG,IAAAoL,QAAA,SAAAhL,EAAAP,GAAA,MAAAA,GAAAwI,eAAAmD,WAAA,SAAA3L,EAAAO,EAAAR,EAAAE,GAAA,MAAAD,GAAAqD,YAAA9U,KAAA8c,QAAA9K,EAAAR,EAAAE,KAAA2L,SAAA,SAAArL,GAAA,MAAA9N,UAAA6Q,eAAA/C,IAAAsL,QAAA,SAAAtL,EAAAP,GAAA,MAAAO,GAAA8C,YAAA9U,KAAAqd,SAAA5L,KAAA0L,UAAA,SAAAnL,EAAAP;wBAAA,GAAAzR,KAAAud,aAAAvL,EAAAxH,KAAAiH,MAAA,CAAA,KAAAO,EAAAwL,YAAAxL,EAAAgD,YAAAhD,EAAAwL,WAAAxd,MAAAsd,QAAAtL,EAAAP,KAAAgM,UAAA,SAAAzL,GAAA,OAAA,KAAAA,EAAAxH,KAAAwH,EAAA0L,UAAA1L,EAAAxH,MAAA7K,QAAA,OAAA,IAAAA,QAAA,OAAA,KAAAge,QAAAC,OAAA,MAAAC,QAAA,IAAAtB,IAAA,SAAAvK,EAAAzL,GAAA,GAAAiL,KAAA,IAAAjL,EAAA,IAAA,GAAAqL,KAAArL,GAAAA,EAAAwL,eAAAH,IAAAJ,EAAArP,KAAAyP,EAAA,IAAArL,EAAAqL,GAAAkB,WAAAnT,QAAA,KAAA,MAAA,IAAA8R,GAAAzR,KAAA4d,OAAA,IAAA5L,EAAA,IAAA8L,OAAAtM,EAAAoL,KAAA,MAAA,IAAA5c,KAAA6d,QAAA,CAAA,GAAAlM,GAAA,GAAAoM,KAAApM,GAAAqM,QAAArM,EAAAsM,UAAAje,KAAA6d,SAAApM,GAAA,aAAAE,EAAAuM,cAAA,IAAAha,SAAAia,OAAA1M,EAAA,WAAA,MAAAC,MAAA0M,IAAA,SAAApM,EAAAR,GAAAA,IAAAA,KAAA,IAAAG,GAAAC,EAAA,GAAAyM,QAAA,cAAAre,KAAA4d,OAAA,MAAA5L,EAAA;wEAAA,KAAAL,EAAAC,EAAA0M,KAAApa,SAAAia,QAAA,MAAAzM,IAAA,GAAAC,GAAA,KAAAA,EAAA,GAAA,IAAA,GAAAuB,GAAAqL,SAAA5M,EAAA,IAAAuI,MAAA,MAAA3T,EAAA,EAAAkL,EAAAyB,EAAAzT,OAAA8G,EAAAkL,EAAAlL,IAAA,CAAAoL,EAAAuB,EAAA3M,GAAA0M,MAAA,eAAA,IAAAnB,GAAAH,EAAA,GAAAhS,QAAA,MAAA,IAAA,UAAAmS,EAAAA,GAAA,EAAA,UAAAA,EAAAA,GAAA,EAAAA,EAAAmB,MAAA,6BAAAnB,EAAA0M,WAAA1M,IAAAN,EAAAG,EAAA,IAAAG,EAAA,MAAAN,MAAAR,QAAAyN,cAAAC,OAAA,KAAAC,UAAA,yBAAAC,SAAAC,KAAAC,UAAA,aAAAC,IAAAD,UAAA,aAAAE,KAAAF,UAAA,SAAAG,IAAAH,UAAA,aAAAI,IAAAJ,UAAA,UAAAK,KAAAL,UAAA,mBAAAM,IAAAN,UAAA,WAAAO,IAAAP,UAAA,SAAAQ,IAAAR,UAAA;qBAAAS,IAAAT,UAAA,UAAAU,UAAA,GAAAC,IAAAX,UAAA,aAAAY,IAAAZ,UAAA,WAAAa,IAAAb,UAAA,SAAAc,IAAAd,UAAA,SAAAe,IAAAf,UAAA,YAAAgB,IAAAhB,UAAA,UAAAiB,IAAAjB,UAAA,SAAAkB,IAAAlB,UAAA,eAAAmB,IAAAnB,UAAA,YAAAoB,IAAApB,UAAA,OAAAqB,IAAArB,UAAA,SAAAsB,IAAAtB,UAAA,OAAAuB,IAAAvB,UAAA,kBAAAwB,IAAAxB,UAAA,YAAAyB,IAAAzB,UAAA,cAAA0B,IAAA1B,UAAA,cAAA2B,IAAA3B,UAAA,WAAA4B,IAAA5B,UAAA,UAAA6B,IAAA7B,UAAA,aAAA8B,SAAA9B,UAAA,uBAAA+B,IAAA/B,UAAA,WAAAgC,KAAAhC,UAAA,SAAAiC,KAAAjC,UAAA,aAAAkC,IAAAlC,UAAA;yBAAAmC,IAAAnC,UAAA,WAAAoC,IAAApC,UAAA,UAAAqC,IAAArC,UAAA,cAAAsC,IAAAtC,UAAA,cAAAuC,WAAAvC,UAAA,WAAAwC,QAAA,kEAAAC,MAAA,IAAA,MAAArH,MAAA,OAAAza,OAAA,SAAAuS,EAAAP,GAAA,MAAAO,GAAAkI,MAAAzI,IAAA,SAAAC,EAAAnL,GAAA,GAAAkL,GAAAO,KAAAR,EAAA,CAAA,KAAAjL,EAAAib,UAAA,EAAA/P,EAAAlL,EAAA+X,KAAA5M,IAAAM,EAAA7P,KAAAuP,EAAAgI,OAAAlI,EAAAC,EAAAgQ,MAAAjQ,IAAAQ,EAAA7P,KAAA0Q,MAAAb,EAAAP,EAAArD,MAAA,IAAAoD,EAAAC,EAAAgQ,MAAAhQ,EAAA,GAAAhS,MAAA,OAAAuS,GAAA7P,KAAAuP,EAAAgI,OAAAlI,IAAAQ,GAAAvT,EAAA,SAAAgT,EAAAO,GAAA,MAAAA,aAAAmD,OAAAnV,KAAA0hB,eAAAjQ,EAAAO,GAAAhS,KAAA2hB,cAAA3hB,KAAA4hB,aAAAnQ,EAAAO,MAAA5D,MAAAnE,KAAAgI,UAAA,KAAA0P,cAAA,SAAA3H,EAAA2C,EAAA/K,GAAA,GAAAsB,GAAA3M,CAAA,KAAA2M,EAAA,EAAA3M,EAAAoW,EAAAld,OAAAyT,EAAA3M,EAAA2M,IAAAtB,GAAA+K,EAAAzJ,YAAAiC,SAAAwH,EAAAzJ,GAAAlT,KAAA0hB,eAAA9P,EAAA+K,EAAAzJ;8EAAA,IAAAvB,GAAA3R,KAAAuhB,MAAAvH,EAAAha,KAAAshB,QAAA,KAAApO,EAAA,EAAA3M,EAAAoL,EAAAlS,OAAAyT,EAAA3M,EAAA2M,GAAA,EAAA,CAAA,GAAA2O,GAAAlQ,EAAAuB,GAAA4O,OAAA,EAAA,IAAAD,GAAA,KAAAA,GAAA,IAAAlQ,EAAAuB,GAAAyJ,EAAAhL,EAAAuB,GAAA,GAAA,gBAAAvB,GAAAuB,KAAAvB,EAAAuB,GAAAlT,KAAA+hB,OAAApQ,EAAAuB,SAAA,IAAA,MAAA2O,EAAA,IAAAA,EAAAlQ,EAAAuB,GAAAwG,OAAA,KAAA,KAAAmI,GAAA,IAAAlQ,EAAAuB,GAAAyJ,EAAAhL,EAAAuB,GAAAwG,OAAA,EAAA/H,EAAAuB,GAAAzT,OAAA,GAAA,GAAA,gBAAAkS,GAAAuB,KAAAvB,EAAAuB,GAAAlT,KAAA+hB,OAAApQ,EAAAuB,SAAA,CAAA,GAAA4F,GAAAnH,EAAAuB,GAAAD,MAAA,8BAAA,IAAA6F,EAAA,GAAA,WAAAA,EAAA,GAAA,CAAA,GAAAtH,GAAAmL,EAAA7D,EAAA,GAAA,EAAA,QAAA,KAAAtH,EAAAG,EAAAuB,GAAA,UAAA,CAAA1B,EAAAxR,KAAAgiB,OAAAxQ,GAAA,CAAA,IAAAM,GAAAgH,EAAA,GAAAnZ,QAAA,oBAAA,UAAAua,MAAA,KAAA1I,IAAA,GAAAA,EAAAM,EAAArS,OAAAkS,EAAAuB,GAAAlT,KAAA2hB,cAAA7P,EAAAN,GAAA7R,QAAA,UAAA,KAAAgd,EAAA/K,GAAAD,EAAAuB,GAAA;2FAAAvB,GAAAuB,GAAA,IAAAvB,EAAAuB,GAAA,MAAAvB,EAAAuB,KAAAvB,EAAAuB,GAAA,OAAA,IAAAtB,EAAA,MAAAD,GAAAiL,KAAA,GAAA,IAAA5K,MAAAP,EAAA,EAAA,KAAAyB,EAAA,EAAAA,EAAA3M,EAAA2M,IAAAzB,GAAAE,EAAAuB,KAAAA,EAAA3M,IAAAoL,EAAAuB,YAAAiC,QAAAnD,EAAA7P,KAAAsP,GAAAO,EAAAA,EAAA6B,OAAAlC,EAAAuB,IAAAzB,EAAA,IAAAA,GAAAE,EAAAuB,GAAA,OAAA,KAAAzB,GAAAO,EAAA7P,KAAAsP,GAAAO,GAAA0P,eAAA,SAAA9P,EAAArL,GAAA,IAAA,GAAAmL,MAAAF,EAAA,EAAAC,EAAAlL,EAAA9G,OAAA+R,EAAAC,EAAAD,IAAA,GAAAjL,EAAAiL,YAAA2D,OAAA,CAAA,GAAAxD,GAAApL,EAAAiL,EAAA,IAAA,gBAAAG,GAAA,GAAA,CAAA,GAAAG,GAAAH,EAAA,EAAAG,aAAAqD,SAAArD,GAAAF,EAAAE,GAAA,IAAAE,GAAAhS,KAAA4hB,aAAA9P,EAAAH,EAAA,GAAAD,GAAAA,EAAAmC,OAAA7T,KAAAiiB,gBAAAjQ,EAAAL,EAAAvD,MAAA,GAAAwD,QAAAD,GAAA,YAAAwD,OAAAzD,EAAAA,EAAAmC,OAAA7T,KAAA0hB,eAAA7O,MAAA7S,KAAA2R,IAAAA,EAAAlS,QAAA,EAAAiS,EAAAvP,MAAAwP,EAAA,GAAAA,EAAA,GAAA3R,KAAA0hB,eAAA9P,EAAAD,EAAA,MAAAD,EAAAvP,KAAAoE,EAAAiL;sJAAAE,GAAAvP,KAAAoE,EAAAiL,GAAA,OAAAE,IAAAwQ,gBAAA,iFAAAD,gBAAA,SAAAxQ,EAAAK,EAAAN,GAAA,IAAA,GAAAjL,GAAA2M,KAAAxB,EAAAD,EAAAyI,MAAAla,KAAAkiB,iBAAAtQ,EAAAF,EAAA,GAAAC,EAAA,EAAAK,EAAAN,EAAAjS,OAAAkS,EAAAK,EAAAL,GAAA,EAAAD,EAAAC,EAAA,IAAApL,EAAAvG,KAAA2hB,cAAAjQ,EAAAC,EAAA,GAAAG,EAAAN,GAAAjL,YAAA4O,SAAA5O,GAAAA,IAAAA,IAAA,IAAA,IAAA,KAAAmL,EAAAC,EAAA,GAAAlS,OAAA,MAAA8G,GAAA,IAAAmL,EAAAC,EAAA,GAAAlS,SAAA8G,GAAA,OAAAA,KAAAmL,EAAAC,EAAA,IAAApL,EAAAvG,KAAA2hB,cAAAjQ,EAAAC,EAAA,GAAAhS,QAAA,MAAA,IAAAA,QAAA,MAAA,IAAAmS,EAAAN,GAAAjL,YAAA4O,SAAA5O,GAAAA,IAAAA,GAAA,UAAAA,IAAAmL,EAAAC,EAAA,IAAApL,EAAAvG,KAAA2hB,cAAAjQ,EAAAC,EAAA,GAAAG,EAAAN;0DAAAjL,YAAA4O,SAAA5O,GAAAA,IAAAA,GAAA,KAAA6U,KAAApb,KAAA2hB,cAAAjQ,EAAAC,EAAA,GAAAG,GAAAqQ,OAAA,UAAA5b,KAAAqL,GAAAF,EAAAC,GAAApL,EAAA,MAAAA,IAAA2M,EAAAlT,KAAAoiB,aAAAlP,EAAAtB,EAAAE,EAAAN,GAAA0B,EAAA/Q,KAAAoE,GAAAqL,EAAA,IAAA,KAAAF,EAAAC,EAAA,KAAAC,GAAAF,EAAAC,EAAA,GAAA,OAAAuB,GAAAlT,KAAAoiB,aAAAlP,EAAAtB,EAAAE,EAAAN,IAAA4Q,aAAA,SAAApQ,EAAAN,EAAAD,EAAAD,GAAA,MAAA,IAAAE,IAAAA,EAAA1R,KAAA2hB,cAAAjQ,EAAAD,EAAAD,GAAAE,YAAAyD,SAAAzD,GAAAA,IAAAM,EAAAA,EAAA6B,OAAAnC,IAAAM,GAAA4P,aAAA,SAAAjQ,EAAAK,EAAAR,GAAAA,IAAAA,EAAA,KAAAG,YAAAwD,SAAA3D,EAAAG,EAAA,IAAA,IAAAA,EAAAA,EAAA,IAAA,GAAA,IAAAD,GAAA1R,KAAAqiB,WAAA7Q,EAAAE,IAAAV,QAAAC,IAAAqR,aAAA5Q,EAAA,IAAAD,GAAAzR,KAAA4e,QAAA5e,KAAA0e,OAAA,IAAAjN,GAAAA,EAAA8Q,SAAA/Q,IAAAC,GAAA8Q,QAAA,CAAA,GAAAhc,GAAAkL,EAAA8Q,QAAA/Q,EAAAjL,GAAAqY,SAAAjN,IAAApL,GAAAqY,UAAA5M,EAAAzL,EAAAqY,QAAAjN,IAAA,MAAAK;UAAAwQ,SAAA,SAAA/Q,EAAAD,EAAAjL,GAAA,GAAAA,EAAAyK,QAAAmH,SAAA5R,GAAAkL,EAAAD,EAAAgJ,MAAA/I,EAAAA,EAAAwB,MAAA,WAAAxB,GAAA,QAAAA,EAAAwB,MAAA,0BAAA,CAAAxB,GAAAzR,KAAA4e,QAAA5e,KAAA0e,QAAAC,WAAA3e,KAAA2e,UAAA,IAAA3e,KAAA0e,QAAA,0BAAA1e,KAAA0e,QAAA,IAAAjN,EAAA,GAAAC,GAAAV,QAAA+H,KAAAe,QAAArI,EAAA,WAAA,MAAAD,GAAAgO,UAAA,EAAAjZ,KAAA,OAAAmL,GAAAiC,OAAA,KAAAjC,GAAA2Q,WAAA,SAAA3Q,EAAAnL,GAAA,GAAAkL,GAAAO,EAAAhS,KAAA4e,QAAA5e,KAAA0e,OAAA,IAAA1M,EAAA,CAAA,IAAAA,EAAAwN,WAAA/N,EAAAzR,KAAAwiB,SAAAxiB,KAAA0e,OAAA1M,IAAA,MAAAhB,SAAAmH,SAAAI,MAAA9G,GAAA,aAAAzR,KAAA0R,IAAAuF,KAAA1Q,MAAA,IAAAyL,EAAAuQ,SAAA7Q,IAAAM,GAAAuQ,QAAA,CAAA,GAAA/Q,GAAAQ,EAAAuQ,QAAA7Q,EAAA,KAAAF,EAAAgO,WAAA/N,EAAAzR,KAAAwiB,SAAA9Q,EAAAF,IAAA,MAAAR,SAAAmH,SAAAI,MAAA9G,GAAAwF,KAAA1Q,IAAA,MAAAyK,SAAAmH,SAAA5R;8BAAAkc,IAAA,SAAAzQ,GAAAA,EAAAhB,QAAAmH,SAAAnG,GAAAA,EAAA4B,WAAA,CAAA,KAAA5B,IAAA,MAAAP,GAAA,IAAAA,EAAAiR,QAAA,KAAAjR,EAAAT,SAAAmH,SAAAG,OAAA,MAAAtY,KAAAgS,GAAAP,EAAAiR,WAAAC,YAAA,SAAA3Q,GAAA,GAAAA,EAAA,CAAA,IAAAA,EAAAA,EAAA4Q,eAAA5iB,KAAA4e,QAAA5M,IAAA,CAAA,GAAAN,GAAAM,EAAA6Q,YAAA,IAAA,KAAA,IAAAnR,EAAA,MAAAM,GAAAA,EAAA8Q,UAAA,EAAApR,GAAA,GAAAD,GAAAzR,KAAA4e,QAAA5M,GAAA+Q,KAAA/iB,MAAA0e,OAAAjN,GAAAO,IAAAgR,UAAA,SAAAhR,GAAAhS,KAAA2iB,YAAA3Q,GAAAhB,QAAAiS,MAAAjjB,KAAAqiB,WAAA,aAAAa,eAAA,SAAAzR,EAAAlL,EAAAmL,GAAA,GAAAF,GAAAxR,KAAA4e,QAAAnN,GAAAO,GAAA,CAAAR,KAAAA,EAAAxR,KAAA4e,QAAAnN,MAAAO,GAAA,GAAAR,EAAA+Q,UAAA/Q,EAAA+Q,YAAAhc,IAAAiL,EAAA+Q,QAAAhc,KAAAiL,EAAA+Q,QAAAhc,OAAAiL,EAAAA,EAAA+Q,QAAAhc,IAAAyK,QAAAC,IAAAgM,OAAAzL,EAAAE,GAAAM,GAAAhB,QAAAiS,KAAAE,MAAAnS,QAAAiS,KAAAG;uDAAAC,OAAA,SAAA5R,GAAA,GAAAO,GAAAhS,KAAA4e,QAAA5e,KAAA0e,OAAA,OAAA1M,KAAAA,EAAAsR,aAAA7R,EAAAsL,MAAAuG,WAAAtR,EAAAsR,YAAAtR,EAAAuR,gBAAA9R,EAAAsL,MAAAyG,UAAAxR,EAAAuR,cAAA,QAAAvR,EAAAuR,gBAAA9R,EAAAsL,MAAA0G,UAAA,WAAAhS,GAAA6R,WAAA,WAAA,GAAAtR,GAAAhS,KAAA4e,QAAA5e,KAAA0e,OAAA,OAAA1M,GAAAA,EAAAsR,WAAA,MAAAC,cAAA,WAAA,GAAAvR,GAAAhS,KAAA4e,QAAA5e,KAAA0e,OAAA,OAAA1M,GAAAA,EAAAuR,cAAA,MAAAvB,OAAA,SAAAvQ,GAAA,GAAAO,GAAAhS,KAAA4e,QAAA5e,KAAA0e,OAAA,OAAA1M,IAAAA,EAAAgQ,OAAAhQ,EAAAgQ,OAAAvQ,GAAA,GAAAA,EAAA,EAAA,GAAAsQ,OAAA,SAAAtQ,GAAA,GAAAO,GAAAhS,KAAA4e,QAAA5e,KAAA0e,OAAA,OAAA1M,IAAAA,EAAA+P,OAAA/P,EAAA+P,OAAAtQ,GAAAA,IAAAT,QAAA8J,SAAA4I,OAAA,EAAAC,SAAAC,QAAA;aAAAC,YAAA,yBAAAnL,UAAAC,YAAA,KAAAD,UAAAE,WAAA7H,OAAAgB,gBAAAhB,OAAAgB,eAAA,aAAA+R,QAAAC,oBAAA7hB,SAAA,QAAA8hB,KAAA,MAAAC,OAAA,MAAAC,mBAAA,UAAAC,OAAA,oBAAAC,OAAA,MAAAC,QAAA,UAAAC,UAAA,MAAAC,MAAA,QAAAC,YAAA,MAAAhV,MAAA,OAAAiV,cAAA,UAAAC,uBAAAxiB,SAAA,WAAAyiB,IAAA,EAAAX,KAAA,EAAAxU,MAAA,MAAA8U,UAAA,IAAAH,OAAA,MAAAC,OAAA,MAAAC,QAAA,QAAAO,UAAAC,KAAA,SAAA7S,GAAAhB,QAAA8J,QAAAgK,sBAAA5gB,SAAA6gB,cAAA,GAAA,EAAA/T,QAAA8J,QAAAgK,uBAAA9T,QAAAC,IAAA5J,OAAAyc,OAAA,oBAAA5hB,SAAA;0GAAA8O,QAAA8J,QAAAkK,OAAA,eAAA9gB,SAAA+gB,YAAAC,OAAA,SAAAlT,GAAAhB,QAAAC,IAAA5J,OAAAyc,OAAA,oBAAAG,OAAA,QAAAjT,QAAAC,IAAA5J,OAAAyc,OAAA,oBAAAE,KAAA,QAAA7R,KAAA,SAAAH,GAAA,GAAAA,IAAAhS,KAAA0jB,OAAA,IAAAxf,SAAA0Q,OAAA5U,KAAA0jB,MAAA,OAAA,CAAA,IAAA1jB,KAAAmlB,KAAA,MAAAnlB,KAAAmlB,IAAAC,aAAAplB,KAAAmlB,IAAAjhB,SAAA0M,eAAA,mBAAA5Q,KAAAmlB,MAAAnlB,KAAAwK,KAAAxK,KAAAmlB,IAAA3H,cAAAxd,KAAAmlB,IAAA,CAAA,GAAA1T,GAAAvN,SAAA0Q,IAAA5U,MAAA8kB,sBAAA/T,OAAAsU,cAAA5T,EAAAzR,KAAAslB,MAAAtlB,KAAAulB,OAAArhB,SAAA0Q,MAAAnD,EAAA+T,gBAAA,MAAA/T,EAAAsL,MAAA7a,SAAA;4BAAAuP,EAAAsL,MAAAoH,OAAA1S,EAAAsL,MAAAqH,OAAA3S,EAAAsL,MAAAsH,QAAA,MAAA5S,EAAAsL,MAAA0I,OAAA,MAAAhU,EAAAsL,MAAA2I,OAAA,MAAAjU,EAAAzR,KAAAulB,OAAA9T,GAAAA,EAAA/R,GAAA,qBAAAqR,OAAAsU,YAAA,WAAArlB,KAAA2lB,WAAA5U,OAAAsU,YAAA,WAAArlB,KAAA2lB,WAAA3lB,KAAA2lB,aAAA3lB,KAAAmlB,IAAAnlB,KAAAulB,OAAA9T,GAAAzR,KAAAmlB,IAAApI,MAAA6I,QAAA,OAAA5lB,KAAAwK,KAAAxK,KAAAmlB,IAAArQ,YAAA5Q,SAAA6Q,eAAA,KAAA,OAAA,GAAAwQ,OAAA,SAAAvT,GAAA,GAAAP,GAAAvN,SAAA4M,cAAA,MAAA,OAAAW,GAAA/R,GAAA,kBAAAsS,EAAAwL,WAAAxL,EAAA6T,aAAApU,EAAAO,EAAAwL,YAAAxL,EAAA8C,YAAArD,GAAAA,GAAAkU,UAAA,WAAA,GAAA3T,GAAAhB,QAAA8J,QAAAkK,OAAA9gB,SAAA0Q,KAAA1Q,SAAA4hB,gBAAArU,EAAAT,QAAA8J,QAAAwK,KAAA7T,GAAAsL,MAAAiH,KAAAhS,EAAA+T,WAAA;gCAAAtU,EAAAsL,MAAA4H,IAAA3S,EAAAgU,UAAA,KAAAvU,EAAAsL,MAAAvN,MAAAwC,EAAAiU,YAAA,KAAAxU,EAAAA,EAAA+L,WAAA/L,EAAAsL,MAAA2I,OAAA1T,EAAAkU,aAAA,MAAAC,SAAA,SAAAnU,GAAA,MAAAhB,SAAAyN,aAAAhgB,EAAAuT,EAAAA,IAAAoU,WAAA,SAAApU,EAAAN,EAAAD,GAAA,MAAA,WAAAT,QAAAC,IAAA5J,OAAAgf,eAAA,aAAA5U,GAAAzR,KAAAiZ,UAAAjZ,KAAAiZ,QAAAjZ,KAAAmmB,SAAA,WAAA,KAAAnU,EAAAhS,KAAAiZ,QAAAjZ,KAAAiZ,SAAA,KAAA,gBAAAxH,GAAAzR,KAAAsmB,aAAAtmB,KAAAsmB,WAAAtmB,KAAAmmB,SAAA,cAAA,KAAAnU,EAAAhS,KAAAsmB,WAAAtmB,KAAAsmB,YAAA,KAAA,gBAAA7U,IAAAzR,KAAAumB,cAAAvmB,KAAAumB,YAAAvmB,KAAAmmB,SAAA,eAAA,KAAAnU,EAAAhS,KAAAumB,YAAAvmB,KAAAumB,aAAA,MAAAvU,GAAAuK,IAAA,SAAA7K,EAAAnL,EAAAkL;oBAAA,MAAAlL,IAAAA,EAAAvG,KAAA2jB,IAAAlkB,OAAAO,KAAA2jB,IAAApd,MAAA,IAAAiL,GAAA,EAAA,IAAAE,YAAAyD,OAAA,CAAA3D,EAAAE,EAAA,GAAAF,YAAA2D,SAAA3D,EAAAA,EAAA,GAAA,KAAAE,EAAAV,QAAAyN,aAAAhgB,EAAAoU,MAAA7B,QAAAyN,aAAA/M,GAAA,MAAAM,GAAA,IAAAA,EAAA0Q,QAAA,KAAA1Q,EAAA,KAAAA,EAAA0Q,QAAA/O,OAAA,MAAA,OAAA3T,KAAA2jB,IAAApd,GAAAigB,YAAAxmB,KAAA2jB,IAAApd,GAAAigB,UAAA,GAAAxmB,KAAA2jB,IAAApd,GAAAigB,kBAAAxmB,MAAA2jB,IAAApd,GAAAkgB,QAAAzV,QAAAmH,SAAAG,OAAA,MAAAtY,KAAA0R,EAAAnL,EAAAkL,GAAAO,EAAA0Q,SAAAnc,GAAA,MAAAvG,MAAAqb,QAAAgB,aAAArc,KAAAqb,aAAArb,MAAAqb,OAAArb,KAAA2jB,IAAApd,GAAAiE,KAAAkH,EAAA1R,KAAA2jB,IAAApd,GAAAmgB,aAAAhV,EAAA1R,KAAAomB,WAAA1U,EAAAnL,EAAAiL,OAAA,KAAAxR,KAAA2jB,IAAApd,GAAA,OAAAvG,KAAA2jB,IAAApd,GAAAtG,KAAAD,KAAA4jB,QAAA,MAAA5jB,KAAA4jB,UAAA5jB,KAAA2jB,IAAA3jB,KAAA4jB,SAAA+C,KAAApgB,GAAAvG,KAAA4jB,QAAArd;gBAAAvG,KAAA4jB,UAAArd,GAAA,SAAAyK,QAAAC,IAAA5J,OAAAgf,eAAArmB,KAAAmS,QAAAnS,KAAA6jB,YAAA7jB,KAAAmlB,IAAAzH,UAAAhM,EAAA1R,KAAAwK,KAAAoc,UAAAlV,EAAA1R,KAAAmlB,IAAApI,MAAA6I,QAAA,GAAA5lB,KAAA6a,SAAA9J,OAAA8J,OAAA,SAAA7a,MAAA6a,UAAA9J,OAAA8J,OAAAnJ,EAAA1R,KAAA6a,QAAA,IAAA7a,KAAA2jB,IAAApd,GAAAigB,YAAAxmB,KAAA2jB,IAAApd,GAAAkgB,UAAAhV,EAAA,GAAA,KAAAzR,KAAA2jB,IAAApd,GAAAigB,iBAAAxmB,MAAA2jB,IAAApd,GAAAkgB,SAAAhV,EAAA+D,WAAAxE,QAAAmH,UAAA,QAAAnY,KAAAuG,IAAAkL,GAAA,GAAAA,GAAAzR,KAAA4X,MAAArR,EAAA,GAAAA,GAAAqR,MAAA,SAAAnG,EAAAO,GAAA,MAAAhS,KAAA2jB,IAAAlS,GAAAkV,OAAA3mB,KAAA2jB,IAAA3jB,KAAA2jB,IAAAlS,GAAAkV,MAAA1mB,KAAAD,KAAA2jB,IAAAlS,GAAAxR,MAAA,MAAAD,KAAA2jB,IAAAlS,GAAAxR,OAAAD,KAAA2jB,IAAA3jB,KAAA2jB,IAAAlS,GAAAxR,MAAA0mB,KAAA3mB,KAAA2jB,IAAAlS,GAAAkV,MAAA3mB,KAAA4jB,UAAAnS,IAAAzR,KAAA4jB,QAAA5jB,KAAA2jB,IAAAlS,GAAAxR,KAAAD,KAAAwK,MAAA,MAAAxK,KAAAmlB,IAAAC,YAAAplB,KAAAmS;kDAAA,MAAAnS,KAAA4jB,SAAA5jB,KAAAqb,QAAAgB,aAAArc,KAAAqb,aAAArb,MAAAqb,OAAA,MAAArJ,IAAAA,EAAA,KAAA,IAAAA,EAAAhS,KAAAwW,SAAAxW,KAAAqb,MAAA7F,WAAAxE,QAAAmH,UAAA,SAAAnY,OAAAgS,IAAA,SAAAhB,QAAAC,IAAA5J,OAAAgf,eAAArmB,KAAA6jB,YAAA7jB,KAAAmlB,IAAAzH,UAAA1d,KAAA2jB,IAAA3jB,KAAA4jB,SAAA8C,aAAA1mB,KAAAwK,KAAAoc,UAAA5mB,KAAA2jB,IAAA3jB,KAAA4jB,SAAA8C,cAAA1mB,KAAA6a,SAAA9J,OAAA8J,OAAA,SAAA7a,MAAA6a,SAAA7a,KAAA6a,SAAA9J,OAAA8J,OAAA,MAAA7a,KAAA4jB,QAAA,GAAA5jB,KAAA2jB,IAAA3jB,KAAA4jB,SAAApZ,aAAAxK,MAAA2jB,IAAAlS,GAAAxR,WAAAD,MAAA2jB,IAAAlS,GAAAkV,WAAA3mB,MAAA2jB,IAAAlS,GAAAiV,aAAA1mB,KAAA2jB,IAAAlS,GAAA+U,YAAAxmB,KAAA2jB,IAAAlS,GAAAgV,SAAA,IAAAjQ,OAAA;kBAAAxW,KAAAwK,KAAAoc,UAAA,GAAA5mB,KAAAmlB,IAAApI,MAAA6I,QAAA,QAAA7K,KAAA,SAAA/I,GAAA,MAAAhS,MAAAuc,KAAA,WAAA,aAAAvK,GAAA,KAAA,OAAA6U,IAAA,WAAA,IAAA,GAAApV,MAAAC,EAAA,EAAAM,EAAAhS,KAAA2jB,IAAAlkB,OAAAiS,EAAAM,EAAAN,IAAAD,EAAAC,GAAA1R,KAAA2jB,IAAAjS,GAAAlH,IAAA,OAAAiH,GAAAmL,KAAA,QAAA5L,QAAAC,KAAA5J,QAAA+R,KAAA,GAAA/R,UAAAwR,eAAAiL,QAAAgD,oBAAAvC,MAAA,SAAAwC,OAAAC,cAAAC,OAAA,KAAAC,QAAA,KAAAC,aAAA,SAAAC,cAAA,IAAAC,eAAA,kBAAAC,wBAAA,EAAAjB,aAAA,SAAAkB,kBAAA,OAAAC,oBAAA,EAAA3nB,YAAA4nB,gBAAA,EAAAC,cAAA,EAAAC,kBAAA,EAAAC,cAAAC,KAAA,OAAAC,MAAA,EAAAC,KAAA,EAAAC,KAAA;OAAAC,OAAA,EAAAC,cAAA,EAAAC,OAAA,OAAAC,SAAA,KAAAC,KAAA,OAAA1hB,QAAA,UAAA+X,OAAA,KAAA4J,WAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,YAAA,KAAAC,aAAA,KAAAC,YAAA,EAAAC,WAAA,GAAAC,eAAAziB,SAAA,KAAA,sBAAA,yBAAA,KAAA2W,OAAAwH,MAAA,UAAAuE,aAAA,WAAAC,wBAAAC,cAAAhY,QAAAmH,SAAAM,OAAA,GAAAwQ,YAAAC,WAAAC,UAAAC,oBAAA,GAAAC,kBAAA,IAAAC,mBAAA,GAAA5T,OAAA1E,QAAAmH,SAAAK,OAAA,OAAA+Q,OAAA,SAAAvX,GAAAhS,KAAAid,OAAAjd,KAAAqH,OAAA2K,GAAAhS,KAAAqH,OAAAkL,SAAAvS,KAAAuS,QAAAvS,KAAAqH,OAAAkL,UAAAiX,cAAA,SAAA9X,EAAAC,GAAA,GAAAC,GAAArL,EAAAkL,EAAAzR,KAAAqH;qBAAAqK,GAAAA,EAAAwI,MAAA,KAAA,KAAA,GAAA1I,GAAA,EAAAQ,EAAAN,EAAAjS,OAAA+R,EAAAQ,EAAAR,IAAAI,EAAAF,EAAAF,GAAAC,EAAAG,KAAAH,EAAAG,OAAArL,EAAAkL,EAAAA,EAAAA,EAAAG,EAAA,OAAArL,GAAAqL,GAAAH,EAAAzR,KAAAid,OAAAtL,EAAAF,GAAAA,GAAAgY,UAAAC,aAAA,WAAA,MAAA1Y,SAAAC,IAAA+X,cAAA3S,IAAAxD,MAAA7B,QAAAC,IAAA+X,cAAA/W,YAAA+F,YAAA,WAAA,MAAAhH,SAAAC,IAAAyE,OAAAsC,YAAAnF,MAAA7B,QAAAC,IAAAyE,OAAAzD,YAAA0X,YAAA,WAAA,MAAA3Y,SAAAC,IAAA2Y,QAAAlU,OAAAsC,YAAAnF,MAAA7B,QAAAC,IAAA2Y,QAAAlU,OAAAzD,YAAAsI,SAAA,WAAA,MAAAvJ,SAAA+H,KAAAwB,SAAA1H,MAAA7B,QAAA+H,KAAA9G,aAAA4X,YAAAH,aAAA,SAAA1X,GAAAhB,QAAAC,IAAA+X,cAAAxS,OAAAxE,IAAAgG,YAAA,SAAAhG,GAAAhB,QAAAC,IAAAyE,OAAAwC,WAAAlG;kCAAA2X,YAAA,SAAA3X,GAAAhB,QAAAC,IAAA2Y,QAAAlU,OAAAwC,WAAAlG,IAAAuI,SAAA,SAAAvI,GAAAhB,QAAA+H,KAAA0B,WAAAzI,KAAA8X,UAAA,SAAAvjB,GAAA,IAAA,GAAAmL,MAAAD,EAAAzR,KAAA+pB,eAAAxjB,GAAAiL,EAAA,EAAAQ,EAAAP,EAAAhS,OAAA+R,EAAAQ,EAAAR,IAAAC,EAAAD,GAAAR,SAAAS,EAAAD,GAAAR,QAAAgZ,YAAAtY,EAAAvP,KAAAsP,EAAAD,GAAAR,QAAAgZ,WAAA,OAAAtY,IAAAuY,aAAA,SAAAtY,EAAApL,GAAA,IAAA,GAAAmL,MAAAD,EAAAzR,KAAA+pB,eAAAxjB,GAAAiL,EAAA,EAAAQ,EAAAP,EAAAhS,OAAA+R,EAAAQ,EAAAR,IAAAC,EAAAD,GAAAR,SAAAS,EAAAD,GAAAR,QAAAgZ,YAAAvY,EAAAD,GAAAR,QAAAgZ,WAAAE,WAAAvY,GAAAD,EAAAvP,KAAAsP,EAAAD,GAAAR,QAAAgZ,WAAA,OAAAtY,IAAAyY,kBAAA,SAAAxY,EAAApL,GAAA,IAAA,GAAAmL,MAAAD,EAAAzR,KAAA+pB,eAAAxjB,GAAAiL,EAAA,EAAAQ,EAAAP,EAAAhS,OAAA+R,EAAAQ,EAAAR,IAAAC,EAAAD,GAAAR,SAAAS,EAAAD,GAAAR,QAAAgZ,YAAAvY,EAAAD,GAAAnF,MAAAoF,EAAAD,GAAAnF,KAAA1M,QAAA,aAAA,MAAAgS,GAAAD,EAAAvP,KAAAsP,EAAAD,GAAAR,QAAAgZ;sLAAA,OAAAtY,IAAA0Y,UAAA,SAAApY,GAAA,GAAA,gBAAA,KAAAA,EAAA9N,SAAA0M,eAAAoB,IAAAA,GAAAA,EAAAhB,QAAA,MAAAgB,GAAAhB,QAAAgZ,UAAA,IAAAhqB,KAAAqqB,cAAArY,GAAA,CAAA,IAAAA,EAAAsY,YAAAtY,EAAAA,EAAAwL,YAAAxL,IAAAA,EAAAuY,OAAAvY,EAAAA,EAAAoT,UAAA,IAAApT,EAAA,MAAAhB,SAAAwZ,UAAAxY,EAAAuY,OAAAE,eAAAzY,GAAA,MAAA,OAAA0Y,MAAA,SAAA1Y,GAAA,GAAA,gBAAA,KAAAA,EAAA9N,SAAA0M,eAAAoB,IAAAhS,KAAAqqB,cAAArY,GAAA,MAAA,EAAA,IAAAA,GAAA,YAAAA,EAAA2Y,SAAA,IAAA/H,cAAA,CAAA,GAAA5Q,EAAAhB,QAAA,MAAAgB,GAAAhB,QAAA4Z,QAAA5Z,QAAA6Z,WAAAC,MAAAC,UAAA,GAAA;6EAAA,IAAA/Y,EAAA3F,MAAArM,KAAAipB,SAAAjX,EAAA3F,KAAA1M,QAAA,aAAA,KAAA,OAAA,EAAA,MAAA,IAAA0qB,cAAA,SAAArY,GAAA,QAAAA,IAAAA,EAAAsY,WAAA,oBAAAtY,EAAAhI,WAAA,MAAAghB,YAAA,SAAAxZ,EAAAE,GAAA,GAAAF,EAAA,CAAA,GAAAR,QAAAwZ,UAAAhZ,GAAA,CAAAxR,KAAAqH,OAAAugB,aAAAQ,SAAA5W,EAAA,MAAAE,IAAAA,EAAA,UAAA,IAAAM,GAAAhS,KAAAkpB,SAAA,OAAAlX,GAAAN,IAAAM,EAAAN,GAAAjS,QAAA+R,IAAAQ,EAAAN,GAAA,GAAAhS,IAAAsS,EAAAN,GAAAuZ,QAAAja,QAAAwZ,UAAAhZ,IAAAxR,KAAA0V,OAAAgC,MAAA,oBAAAlG,KAAA,KAAAxR,KAAAqH,OAAAugB,aAAAQ,SAAA,EAAA,IAAA3W,GAAA,wBAAAD,EAAA,YAAA,OAAAR,SAAA+H,KAAAe,QAAArI,GAAA,cAAAzR,KAAAwR,EAAAE,MAAA6G,MAAA,WAAA,MAAAvY,MAAAgX,MAAAC,KAAApE,MAAA7S,KAAAgX,MAAA/E;oDAAAiZ,QAAA,SAAAxZ,EAAAF,GAAA,IAAAR,QAAAma,QAAA,MAAA,KAAA,IAAA1Z,GAAAzR,KAAAorB,gBAAA1Z,EAAAF,EAAA,IAAAC,EAAA4Z,MAAA,GAAArZ,GAAAhB,QAAAmH,SAAAI,OAAA,aAAAvY,KAAAyR,EAAA5R,WAAA,UAAAG,KAAAyR,EAAA5R,UAAA,OAAAmS,GAAAiF,KAAAxF,EAAA6D,WAAAgW,WAAA,SAAA/kB,EAAAqL,GAAA,GAAAF,GAAA1R,KAAAorB,gBAAA7kB,EAAAqL,GAAAH,EAAAT,QAAAmH,SAAAI,OAAA,IAAA7G,EAAA2Z,MAAA,CAAA,GAAA1Z,GAAA,IAAAD,EAAA2Z,OAAA3Z,EAAA7R,UAAA6R,EAAA7R,QAAA4R,GAAAwF,MAAA,OAAAjX,KAAA0V,QAAA,mBAAAhE,EAAA7R,WAAA,KAAA,GAAA2R,GAAA,EAAAQ,EAAAL,EAAAlS,OAAA+R,EAAAQ,EAAAR,IAAAG,EAAAH,IAAAC,EAAAwF,MAAA,UAAAjX,KAAAgpB,cAAArX,EAAAH,IAAAC,GAAAwF,MAAA,OAAAjX,KAAA0V,QAAA,iBAAAhE,EAAA7R,YAAA,MAAA4R,GAAAwF,KAAAvF,EAAA4D,WAAA4B,QAAA,SAAAlF,EAAAP,GAAA,MAAAzR,MAAAurB,WAAA,UAAAvZ,EAAAP;uCAAA+Z,OAAA,SAAAxZ,EAAAP,GAAA,MAAAzR,MAAAurB,WAAA,SAAAvZ,EAAAP,IAAAga,UAAA,SAAAzZ,EAAAP,GAAA,MAAAzR,MAAAurB,WAAA,YAAAvZ,EAAAP,IAAAia,SAAA,SAAA1Z,EAAAP,GAAA,MAAAzR,MAAAurB,WAAA,WAAAvZ,EAAAP,IAAA8Z,WAAA,SAAA3Z,EAAAJ,EAAAM,GAAA,GAAAJ,GAAA1R,KAAAorB,gBAAA5Z,EAAAM,GAAAH,EAAAD,EAAA7R,SAAAmS,EAAAhB,QAAAmH,SAAAI,OAAA,QAAAvY,KAAA0V,SAAAnP,GAAAolB,WAAAhf,OAAA,GAAAoR,OAAA6N,UAAArpB,EAAA,EAAA2Q,EAAA,EAAA6T,OAAA8E,UAAA,IAAAna,EAAA2Z,MAAA,CAAA,GAAA5Z,IAAA,QAAAT,QAAAmH,SAAAnY,KAAAopB,oBAAA3X,GAAA,KAAAA,MAAAO,EAAAiF,MAAA,OAAAjX,KAAA0V,QAAA,SAAA9D,EAAAD,KAAA,OAAA3R,KAAA0V,QAAA,aAAA/D,EAAAC,KAAA,iBAAA5R,KAAA4R,EAAAD,EAAApL,IAAA,OAAAvG,KAAA0V,QAAA,mBAAA/D,EAAAC,KAAA,eAAA5R,KAAAuG,IAAA,OAAAvG,KAAA0V,QAAA,iBAAA/D,EAAAC,IAAAH,GAAA,gBAAAzR,KAAAuG,EAAA,cAAAkL,GAAA,OAAAzR,KAAA0V,QAAA,oBAAA/D,EAAAC,KAAA,gBAAA5R,KAAAuG,IAAA,OAAAvG,KAAA0V,QAAA,kBAAA/D,EAAAC,IAAAH,GAAA,gBAAAzR,KAAAuG,EAAA,eAAAkL,GAAA,OAAAzR,KAAA0V,QAAA,WAAA/D,EAAAC,KAAA,OAAA5R,KAAA0V,QAAA,OAAA9D,EAAAD;sfAAA,MAAAK,GAAAiF,KAAAvF,EAAA4D,WAAAwW,cAAA5U,QAAA,SAAAlF,KAAAwZ,OAAA,SAAA/Z,GAAA,GAAAO,GAAAP,EAAAT,QAAAgZ,UAAAhY,IAAAA,EAAA+Z,eAAA/Z,EAAAwE,QAAA,GAAA/E,EAAAT,QAAA4Z,MAAA5Y,EAAA8Y,MAAAkB,QAAAva,EAAAT,QAAA4Z,MAAA5Y,EAAA8Y,MAAAC;mEAAAU,UAAA,SAAAha,GAAA,GAAAO,GAAAP,EAAAT,QAAAgZ,UAAAhY,KAAAA,EAAAwE,QAAA,GAAA/E,EAAAT,QAAA4Z,MAAA5Y,EAAA8Y,MAAAkB,SAAAN,SAAA,SAAAja,GAAA,GAAAO,GAAAP,EAAAT,QAAAgZ,UAAAhY,KAAAA,EAAAwE,QAAA,GAAA/E,EAAAT,QAAA4Z,MAAA5Y,EAAA8Y,MAAAmB,UAAAC,eAAA,SAAApa,EAAAvL,EAAAqL,GAAA,IAAAK,UAAAC,OAAAia,SAAA,IAAA,GAAA1a,GAAAzR,KAAA+pB,eAAAxjB,GAAAoL,EAAAX,QAAA6Z,WAAAC,MAAAtZ,EAAA,EAAAQ,EAAAP,EAAAhS,OAAA+R,EAAAQ,EAAAR,IAAA,CAAA,GAAAE,GAAAD,EAAAD,EAAAE,GAAArF,MAAArM,KAAAipB,SAAAvX,EAAArF,KAAA1M,QAAA,aAAA,OAAA+R,EAAAV,UAAAU,EAAAV,QAAAgZ,YAAAtY,EAAAV,QAAAgZ,WAAA5a,OAAA4B,QAAAob,UAAAC,WAAAC,MAAAC,WAAA7a,EAAAV,QAAAgZ,YAAAtY,EAAAV,QAAA4Z,QAAAjZ,EAAA6a,SAAAxsB,KAAA8rB,aAAAha,GAAAJ,IAAAA,EAAAV,UAAAU,EAAAV;uBAAA4Z,MAAAjZ,EAAA6a,UAAA9a,EAAAV,QAAA1E,aAAAoF,GAAAV,QAAA1E,MAAAoF,EAAAV,QAAA4Z,QAAAjZ,EAAAoZ,WAAAnZ,EAAA+Z,QAAAxpB,KAAAuP,MAAA+a,oBAAA,SAAAza,GAAA,IAAAA,EAAAhB,QAAA0b,QAAA,CAAA,GAAAjb,GAAAzR,KAAAqH,OAAAsK,EAAAK,EAAA2a,eAAA,IAAAhb,GAAA,UAAAA,EAAA4J,SAAA,CAAA,GAAA/J,GAAAjL,EAAAmL,EAAAM,EAAA4a,WAAAlb,IAAA,UAAAA,EAAA6J,WAAA7J,EAAA,MAAAD,EAAAwV,SAAA,gBAAAxV,GAAA,SAAAA,EAAAwV,OAAA,GAAA5I,QAAA5M,EAAAwV,OAAA,MAAAzV,EAAAG,EAAAiV,UAAA3T,MAAAxB,EAAAwV,SAAAxV,EAAAyV,SAAAxV,IAAA,gBAAAD,GAAA,UAAAA,EAAAyV,QAAA,GAAA7I,QAAA,IAAA5M,EAAAyV,UAAA3gB,EAAAmL,EAAAkV,UAAA3T,MAAAxB,EAAAyV,WAAA1V,GAAAC,EAAAyV,UAAA3gB,IAAAoL,EAAAiV,UAAAjV,EAAAiV,UAAAjnB,QAAA8R,EAAAwV,OAAAzV,EAAA/R,OAAA,EAAA+R,EAAA,GAAA,IAAAG,EAAA,OAAApL,GAAAkL,EAAAwV,SAAAzV,IAAAE,EAAAkV,UAAAlV,EAAAkV,UAAAjnB,QAAA8R,EAAAyV,QAAA3gB,EAAA9G,OAAA,EAAA8G,EAAA,GAAA;kFAAAoL,IAAAA,EAAAiV,UAAA3T,MAAA,QAAAtB,EAAAA,EAAAgb,iBAAAlb,EAAA4V,gBAAA1V,GAAAA,EAAA3H,YAAAyH,EAAA4V,iBAAArV,EAAAhB,QAAA6b,QAAAlb,GAAAK,EAAAhB,QAAA0b,QAAA,IAAAI,aAAA,SAAA9a,GAAA,GAAAP,GAAAK,EAAAvL,EAAAhE,EAAAyO,QAAA6Z,WAAAC,MAAAtZ,EAAAQ,EAAA2Z,QAAAlsB,MAAA,KAAA,KAAAuS,EAAAzP,EAAAiP,GAAA,GAAAM,EAAAE,EAAA2Z,QAAA3Z,EAAAzP,GAAA,GAAAgE,EAAAuL,EAAA6a,gBAAApmB,GAAA,kBAAAA,EAAAyD,WAAAzD,EAAA6e,WAAApQ,YAAAzO,GAAAuL,EAAAd,SAAAc,EAAAd,QAAA4Z,QAAAroB,EAAAwoB,UAAA,CAAA,GAAAjZ,EAAAd,QAAAgZ,YAAAlY,EAAAd,QAAA4Z,QAAAroB,EAAAypB,OAAAla,EAAAd,QAAA4Z,QAAAroB,EAAA0pB,QAAAjsB,KAAA+sB,WAAAjb,EAAAd,QAAAgZ,WAAAhY,EAAAF,EAAAvP,OAAA,CAAAvC,KAAAysB,oBAAA3a,EAAA,IAAAF,GAAAE,EAAAzF,KAAA1M,QAAA,aAAA,IAAAuT,EAAAlT,KAAAipB,SAAArX;yDAAA,IAAA,mBAAAH,EAAAyB,EAAAgE,QAAApF,EAAAE,IAAA,CAAA,GAAAP,EAAAkC,OAAA,QAAA3T,MAAAsiB,aAAA7Q,GAAAA,EAAAA,EAAAub,OAAAlb,EAAAoB,EAAAxT,IAAAM,KAAA+sB,WAAAtb,EAAAO,EAAAF,EAAAvP,GAAAvC,KAAAitB,eAAAxW,QAAAhF,EAAAyB,EAAAxT,GAAAoS,GAAAE,EAAAzP,GAAA,IAAAmP,IAAA,GAAAqM,OAAA6N,SAAAla,GAAAM,EAAArF,MAAA3M,KAAAqpB,mBAAArX,EAAAzP,EAAAyP,EAAA2Z,QAAAlsB,SAAAuS,EAAArF,MAAA+E,EAAA1R,KAAAsiB,aAAAtR,QAAAmH,SAAAE,MAAA,SAAArG,GAAAzP,QAAAyP,GAAAzP,IAAA,MAAAoP,GAAA,MAAA3R,MAAAktB,aAAAvb,EAAAK,EAAA,SAAA,MAAAA,GAAA2Z,QAAAlsB,QAAAO,KAAAqH,OAAAigB,wBAAAtW,QAAA8J,QAAAyB,KAAA,cAAA,wBAAA,KAAA,GAAAvK,EAAArF,OAAA,GAAAoR,OAAA6N,UAAA5Z,EAAAzP,EAAAyP,EAAAkB,EAAA,EAAA,MAAA+Z,eAAAjc,QAAAmH,SAAAM,OAAA,GAAAsU,WAAA,SAAA/a,EAAAR,EAAAC,EAAAC;6BAAA,IAAA1R,KAAAkpB,UAAAlX,EAAAkY,UAAA,KAAAzY,GAAAT,QAAA4Z,MAAAlZ,EAAAsa,OAAAvX,MAAA,gCAAAzC,EAAAkY,SAAAlY,GAAAkX,UAAAlpB,KAAAkpB,UAAAlX,EAAAkY,UAAA,GAAAxqB,GAAA8R,EAAAuV,IAAA/U,EAAAkX,aAAA,IAAA1X,EAAAqa,OAAApsB,OAAA+R,EAAAuV,IAAA/U,EAAAkX,WAAA1X,EAAAma,SAAA,IAAAna,EAAAqa,OAAApsB,SAAA+R,EAAAuV,IAAAvV,EAAAqa,OAAA,IAAAra,EAAAma,QAAAvd,MAAA,EAAAoD,EAAAjP,IAAAiP,EAAAuV,IAAA/U,EAAAkX,eAAA1X,EAAAqa,OAAA1pB,KAAA6P,EAAAkX,YAAA1X,EAAAqa,OAAApsB,OAAA,GAAA+R,EAAAuV,IAAA/U,EAAAkX,WAAA/mB,KAAAsP,GAAAA,EAAAT,QAAA4Z,MAAAlZ,EAAAua,QAAAkB,cAAA,SAAAzb,EAAAC,GAAA,KAAAD,EAAAwB,EAAAxB,EAAAma,OAAApsB,QAAA,CAAA,GAAA8G,GAAAmL,EAAAma,OAAAna,EAAAwB,GAAA1B,EAAAR,QAAAwZ,UAAAjkB,EAAA,IAAAiL,EAAAG,GAAA,IAAA,GAAAK,GAAAR,EAAAG,GAAAD,EAAA,IAAA,kBAAAM,GAAA,CAAA,GAAAA,EAAA2B,OAAA,QAAA3T,MAAAsiB,aAAAtQ,IAAA,MAAAP,GAAA,MAAAA,GAAAiR,UAAA1R,QAAA8J,QAAAyB,KAAA,YAAA,iCAAAhW,EAAAoL,GAAA,KAAA;oGAAAX,QAAAC,IAAAmc,cAAA3b,EAAAC,EAAAwB,KAAAlC,QAAAmH,SAAAG,OAAA,gBAAAtY,KAAA0R,EAAAC,GAAAF,EAAAiR,SAAAhR,EAAAwB,IAAA,MAAA,OAAAma,cAAA,SAAAvb,GAAA,GAAAL,GAAAD,EAAAI,EAAAZ,QAAA6Z,WAAAC,MAAA9Y,EAAAF,EAAA6Z,QAAAlsB,MAAA,KAAA,KAAAqS,EAAAvP,EAAAyP,GAAA,IAAAR,EAAAM,EAAA6Z,QAAA7Z,EAAAvP,KAAAiP,EAAAR,UAAAQ,EAAAR,QAAA1E,MAAA,CAAA,GAAAoF,GAAAF,EAAAR,QAAAgZ,UAAA,IAAAtY,EAAA,CAAAD,EAAAT,QAAAwZ,UAAA9Y,EAAAwX,WAAAhS,QAAA1F,EAAAM,IAAA,IAAAL,IAAAD,EAAAR,QAAA4Z,MAAAhZ,EAAAmZ,UAAAvZ,EAAAR,QAAA6b,UAAArb,EAAAR,QAAA6b,QAAAnP,UAAA,IAAA1d,KAAA0V,OAAAgC,MAAA,WAAAhG,EAAA4b,WAAAxb,EAAAvP,GAAA,IAAAgE,IAAA,GAAAwX,OAAA6N,SAAArlB,GAAAuL,EAAAnF,MAAA3M,KAAAqpB,mBAAAvX,EAAAvP,EAAAuP,EAAA6Z,QAAAlsB,SAAAqS,EAAAnF,MAAApG;oEAAAvG,KAAAsiB,aAAAtR,QAAAmH,SAAAE,MAAArY,KAAAspB,0BAAAxX,GAAAvP,QAAAuP,GAAAvP,IAAA,MAAAoP,GAAA,MAAA3R,MAAAktB,aAAAvb,EAAAG,EAAA,UAAA,MAAAA,GAAA6Z,QAAAlsB,QAAAO,KAAAqH,OAAAigB,yBAAAtW,QAAA8J,QAAAyB,KAAA,cAAA,yBAAA,KAAA,GAAAvL,QAAA8J,QAAAlD,MAAA,IAAA9F,EAAAvP,EAAAuP,EAAAoB,EAAA,EAAA,MAAAqa,eAAA,SAAA/b,EAAAC,GAAA,GAAAO,GAAA8J,KAAAC,MAAAvK,EAAAjP,EAAAiP,EAAAma,QAAA,OAAA,KAAAja,EAAA,WAAAD,GAAA,cAAA,2BAAA,cAAA,wBAAAzR,MAAAqH,OAAAigB,wBAAAtW,QAAA8J,QAAAyB,IAAA7K,EAAAmC,OAAA7B,GAAA,IAAAkb,aAAA,SAAAzb,EAAAC,EAAAM,GAAA,IAAAP,EAAAiR,QAAA,CAAA,IAAA1iB,KAAAqH,OAAAwhB,cAAAziB,QAAA,KAAAqL;6CAAAzR,MAAAwtB,YAAA9b,EAAAia,QAAAja,EAAAnP,GAAAkP,GAAAC,EAAAnP,IAAA,MAAAvC,MAAAutB,eAAA7b,EAAAM,GAAAhB,QAAAmH,SAAAG,OAAA,UAAAtG,EAAAhS,KAAA0R,GAAAD,EAAAiR,UAAA8K,YAAA,SAAA/b,EAAAE,GAAA,GAAAG,GAAA,SAAAkI,EAAAlB,EAAA5F,EAAA3Q,GAAA,MAAAyO,SAAAyN,aAAAhgB,EAAAub,EAAAlB,EAAA5F,EAAA3Q,IAAAgE,EAAAuL,EAAA,eAAA,YAAAH,EAAAvL,SAAA,MAAAuL,EAAA8b,WAAA9b,EAAAgI,YAAApT,GAAA,KAAAuL,EAAA,YAAA,WAAAH,EAAA8b,WAAA9b,EAAAgI,YAAAhI,EAAA+b,MAAA/b,EAAAgc,cAAApnB,GAAA,KAAAuL,EAAA,YAAA,WAAAH,EAAA+b,MAAA/b,EAAAgc,aAAApnB,GAAA,OAAAuL,EAAA,YAAA,4DAAA,wBAAA,2BAAAL,EAAAT,QAAA1E,MAAA0E,QAAAwZ,UAAA/V,MAAAmZ,IAAArnB,EAAAkL,GAAAA,EAAAT,QAAAgZ,aAAAvY,EAAAT,QAAA1E,MAAAghB,QAAA7b,EAAAT,QAAAgZ,WAAAsD;4EAAA,IAAA1b,GAAA5R,KAAAqH,OAAAwhB,cAAA7W,EAAAF,EAAAF,EAAAic,UAAAjc,EAAAxL,SAAAsL,EAAAV,QAAA6L,KAAAC,QAAA,QAAA9S,UAAA,gBAAAugB,MAAA,QAAAD,WAAA,EAAA5qB,GAAA+R,EAAAT,QAAA1E,MAAAghB,QAAA,YAAA,OAAA,KAAAtb,IAAAhB,SAAA+H,KAAAe,QAAA,qCAAA,WAAA,GAAA5G,GAAAlC,QAAAob,UAAAC,WAAAyB,MAAAvrB,EAAAyO,QAAAC,GAAAS,GAAAqc,cAAA7a,EAAA+P,KAAAvR,EAAAsc,YAAA9a,EAAA+a,UAAAvc,EAAAwc,UAAAhb,EAAAib,QAAAzc,EAAA0c,SAAA7rB,EAAA8rB,YAAA9rB,EAAA6nB,UAAA3Y,KAAA,IAAAD,GAAAtN,SAAA0M,eAAAc,EAAAhS,GAAA8R,IAAAA,EAAA4T,WAAApQ,YAAAxD,GAAAC,EAAA2T,WAAAS,aAAAnU,EAAAD,GAAAA,EAAAT,QAAA6b,UAAApb,EAAAT,QAAA6b,QAAAnP,UAAA,IAAA1d,KAAAsuB,UAAA3c;iBAAA3R,KAAA0V,OAAAgC,MAAA,wBAAAjG,EAAAE,KAAA2Q,aAAA,SAAAtQ,GAAA,KAAAhS,MAAAid,OAAAxI,MAAA,YAAAiO,QAAA1R,QAAAmH,SAAAnG,MAAAoZ,gBAAA,SAAA1Z,EAAAC,GAAA,GAAA,MAAAA,IAAAD,YAAAyD,QAAA,kBAAAzD,IAAA,IAAAV,QAAAmH,SAAAzG,GAAAC,EAAAD,EAAAA,EAAA,KAAA,MAAAF,IAAA,MAAAE,IAAAA,EAAA1R,KAAAqH,OAAAxH,cAAAG,KAAAuuB,iBAAA7c,KAAAA,EAAA1R,KAAAwuB,qBAAA9c,IAAAA,YAAAyD,SAAAzD,GAAAA,IAAAA,KAAAmC,OAAAnC,EAAA,KAAA,GAAAD,GAAA,EAAAO,EAAAN,EAAAjS,OAAAgS,EAAAO,EAAAP,IAAA,gBAAAC,GAAAD,KAAAC,EAAAD,GAAAvN,SAAA0M,eAAAc,EAAAD,IAAA,OAAAvN,UAAA0Q,OAAA1Q,SAAA0Q,KAAA1Q,SAAAyQ,qBAAA,QAAA,IAAA,GAAAjD,EAAAjS,QAAAiS,EAAAvP,KAAA+B,SAAA0Q,MAAAjD,IAAAA,OAAA0Z,MAAA3Z,EAAAjS,OAAAI,SAAA,IAAA6R,EAAAjS,OAAAiS,EAAA,GAAAA;6BAAA4D,SAAA3D,IAAAoY,eAAA,SAAAxjB,GAAA,GAAAkL,KAAA,IAAAlL,YAAA4O,QAAAnV,KAAAuuB,iBAAAhoB,GAAA,CAAA,IAAA,GAAAiL,GAAA,EAAAQ,EAAAzL,EAAA9G,OAAA+R,EAAAQ,EAAAR,IAAA,CAAA,IAAA,GAAAG,GAAA,EAAAD,EAAA,EAAAA,EAAAF,IAAAG,EAAAD,IAAAC,EAAApL,EAAAmL,GAAA+c,SAAAloB,EAAAiL,GAAAG,IAAAF,EAAAtP,KAAA0Q,MAAApB,EAAAzR,KAAA+pB,eAAAxjB,EAAAiL,KAAA,MAAAC,GAAA,MAAA,gBAAA,KAAAlL,EAAArC,SAAA0M,eAAArK,IAAArC,SAAA0Q,OAAA1Q,SAAA0Q,KAAA1Q,SAAAyQ,qBAAA,QAAA,IAAA,MAAApO,IAAAA,EAAArC,SAAA0Q,MAAA,MAAArO,EAAAokB,SAAA,WAAApkB,EAAAokB,QAAA/H,eAAArc,IAAAkL,EAAAlL,EAAAoO,qBAAA,UAAA3U,KAAA0uB,wBAAAjd,EAAAzR,KAAAwuB,qBAAA/c,IAAAA,IAAA8c,iBAAA,SAAAvc,GAAA,MAAA,kBAAAjB,SAAA,gBAAA,IAAAiB,YAAA2c;kFAAAH,qBAAA,SAAA9c,GAAA,IAAA1R,KAAA0uB,sBAAA,SAAAtgB,MAAAnE,KAAAyH,EAAA,KAAA,GAAAD,MAAAD,EAAA,EAAAQ,EAAAN,EAAAjS,OAAA+R,EAAAQ,EAAAR,IAAAC,EAAAD,GAAAE,EAAAF,EAAA,OAAAC,IAAAwL,OAAA,SAAAvL,EAAAM,GAAA,IAAA,GAAAP,KAAAO,GAAAA,EAAAD,eAAAN,KAAA,gBAAAO,GAAAP,IAAAO,EAAAP,YAAA0D,QAAA,gBAAAzD,GAAAD,IAAA,kBAAAC,GAAAD,GAAAC,EAAAD,GAAAO,EAAAP,GAAAzR,KAAAid,OAAAvL,EAAAD,GAAAO,EAAAP,IAAA,OAAAC,IAAA2c,YAAA,SAAArc,GAAA,MAAAhS,MAAAqH,OAAAugB,aAAAe,WAAA,GAAA,GAAAiG,UAAA,QAAAC,QAAAjc,UAAA,SAAAZ,GAAA,MAAAA,GAAA8c,OAAA5U,MAAA,QAAA,SAAAlI,GAAA,MAAAA,GAAArS,QAAA,OAAA,IAAAA,QAAA,OAAA,IAAAua,MAAA,SAAAlJ,QAAAC,IAAAgM,OAAAjM,QAAAC,IAAA5J,OAAAyc,OAAA9S,QAAA8J,QAAAgJ;qEAAA9S,QAAAC,IAAAgM,OAAAjM,QAAAC,IAAA5J,OAAAyc,QAAAiL,iBAAA/d,QAAAC,IAAA5J,OAAAwhB,cAAA9L,QAAA/L,QAAAob,aAAApb,QAAAC,IAAA+d,WAAAhe,QAAAmH,aAAAnH,QAAAC,IAAA2Y,SAAA/U,OAAA,GAAAmC,MAAAhG,QAAAmH,SAAAI,QAAA7C,OAAA1E,QAAAmH,SAAAK,OAAA,WAAAyW,UAAA1F,OAAA,WAAA,GAAAvpB,KAAAgX,MAAAC,MAAA,OAAAjX,KAAA0V,OAAA,iBAAA1V,KAAAivB,OAAAvQ,SAAA1N,QAAAyN,aAAAkE,YAAA3iB,KAAAivB,OAAAvQ,QAAA1N,QAAAC,IAAA5J,OAAAugB,aAAAlJ,OAAA1e,KAAAivB,OAAAvQ,QAAA1e,KAAAivB,OAAA5nB,OAAA,IAAA,GAAAqK,GAAA1R,KAAAivB,OAAA5nB,OAAA6S,MAAA,KAAAzI,EAAA,EAAAO,EAAAN,EAAAjS,OAAAgS,EAAAO,EAAAP,IAAAC,EAAAD,GAAAwB,MAAA,WAAAvB,EAAAD,IAAA;qHAAAzR,KAAAgX,MAAAC,MAAA,UAAAjG,QAAA+H,KAAA/Y,KAAAkvB,IAAA,SAAAxd,EAAAD,KAAAzR,MAAAgX,MAAAC,MAAA,SAAAjG,QAAAC,IAAAD,QAAAE,eAAAlR,KAAA6U,OAAA5B,MAAA,OAAAjT,KAAAgX,MAAAC,KAAAjX,KAAA6U,OAAA,SAAA7U,KAAAgX,MAAAC,MAAA,cAAAjX,OAAA,eAAAA,OAAA,SAAAwR,GAAA,MAAAA,GAAA2d,UAAAne,QAAAC,IAAA5J,OAAAA,OAAA,SAAA,MAAA,IAAArH,OAAA,OAAAA,KAAA0V,OAAA,gBAAA0Z,YAAA,WAAA,GAAApd,GAAAhS,KAAAivB,OAAA1H,mBAAAvW,QAAAC,IAAA5J,OAAAkgB,iBAAA,OAAA,WAAAvV,EAAAhS,KAAAqvB,OAAA,eAAArd,EAAAhB,QAAAC,IAAA+d,WAAAhd,GAAAsd,aAAA;wBAAA,IAAA,GAAA5d,GAAAxN,SAAAyQ,qBAAA,UAAAhD,EAAA,KAAAF,EAAAT,QAAAmH,SAAAI,QAAA/G,EAAA,EAAAQ,EAAAN,EAAAjS,OAAA+R,EAAAQ,EAAAR,IAAA,CAAA,GAAAjL,GAAAsoB,OAAAnd,EAAAF,GAAAnF,MAAA1M,QAAA,KAAA,GAAA4G,GAAA0M,MAAA,oCAAA1M,EAAA0M,MAAA,oBAAAvB,EAAAF,GAAAnF,MAAA,iBAAAsF,EAAAF,EAAAwF,KAAAvF,EAAAF,GAAAkM,UAAA,UAAA,MAAA/L,IAAAgM,OAAA,WAAA,MAAA3d,MAAAgX,MAAAC,MAAA,OAAAjX,KAAA0V,OAAA,iBAAA,MAAA1E,QAAA6L,KAAAc,OAAA,OAAA3M,QAAAC,IAAA5J,OAAAugB,eAAA,SAAArhB,GAAA,GAAAiL,GAAAjL,EAAAqhB,YAAApW,GAAAkN,QAAA1N,QAAAyN,aAAAkE,YAAAnR,EAAAkN,OAAA,IAAA9M,GAAArL,EAAAqhB,aAAAQ,SAAA3W,EAAAlL,EAAAwgB,GAAA,IAAAnV,EAAA,CAAA,GAAAF,GAAA,UAAAE,CAAAH,GAAAmF,MAAA,KAAA,GAAAjF,GAAA,EAAAK,EAAAP,EAAAhS,OAAAkS,EAAAK,GAAA,YAAAP,EAAAE,GAAA+H,OAAA,EAAA,GAAA/H;+DAAA,GAAAA,GAAAK,EAAA,EAAAP,EAAA0I,UAAA,MAAAxI,EAAAK,GAAA,CAAA,GAAAP,EAAAE,KAAAD,EAAA,CAAAD,EAAA8E,OAAA5E,EAAA,EAAA,OAAAA,IAAAF,EAAAwZ,QAAAvZ,GAAA,MAAAF,EAAA+d,eAAA,MAAA/d,EAAAiX,cAAAjX,EAAAiX,YAAAjX,EAAA+d,oBAAA/d,GAAA+d,cAAA/d,EAAAiX,cAAAzX,QAAAob,UAAA,iBAAApb,QAAAC,IAAA5J,OAAA2f,WAAA7kB,KAAA,mBAAAoE,EAAAqhB,aAAAc,eAAA1X,QAAAob,UAAAoD,cAAAxe,QAAAC,IAAA5J,OAAA2f,WAAA7kB,KAAA,oBAAA6O,QAAAC,IAAA5J,SAAA,OAAArH,KAAA0V,OAAA,gBAAA8G,OAAA,WAAA,MAAAxc,MAAAgX,MAAAC,MAAA,OAAAjX,KAAA0V,OAAA,iBAAA,YAAA1V,KAAAgR,QAAAC,IAAA5J,OAAAwR,YAAA,WAAA,SAAA7H,QAAA+H,KAAA/H,QAAAC,IAAA5J,OAAAyc,SAAA,OAAA9jB,KAAA0V,OAAA;4MAAAkY,IAAA,WAAA,IAAA,GAAAjc,GAAAX,QAAAC,IAAA5J,OAAAqK,EAAAV,QAAAC,IAAAiY,UAAAtX,EAAA,EAAAH,EAAAE,EAAAoV,IAAAtnB,OAAA+R,EAAA,EAAAI,EAAAH,EAAAG,IAAA,CAAA,GAAArL,GAAAoL,EAAAoV,IAAAnV,GAAA8H,OAAA,EAAA,aAAA/H,EAAAoV,IAAAnV,GAAA8H,OAAA,EAAA,IAAA,MAAAhI,EAAAyX,MAAA5iB,KAAAmL,EAAAyX,MAAA5iB,GAAAiL,EAAAA,KAAA,MAAAR,SAAAmH,SAAAI,QAAAtB,MAAA,OAAAjX,KAAA0V,OAAA,cAAA,YAAA1V,KAAA2R,EAAAoV,IAAA,MAAA,cAAA,OAAA/mB,KAAA0V,OAAA,aAAA+Z,WAAA,WAAA,MAAAze,SAAAmH,SAAAI,QAAAtB,MAAA,OAAAjX,KAAA0V,OAAA,qBAAA,YAAA1V,KAAAgR,QAAAC,IAAA5J,OAAA2f,WAAA,eAAA,OAAAhnB,KAAA0V,OAAA;mLAAAoF,QAAA,WAAA9J,QAAA8J,QAAA3I,MAAA,IAAA8Q,KAAA,WAAA,GAAAzR,GAAAC,EAAAT,QAAAC,IAAA5J,OAAAugB,aAAA5V,EAAAhB,QAAAC,IAAAiY,SAAA,KAAA,GAAAxX,KAAAM,GAAA,GAAAA,EAAAD,eAAAL,IAAAM,EAAAN,GAAAjS,OAAA,CAAA+R,EAAAQ,EAAAN,EAAA,OAAAF,GAAAA,EAAA/R,SAAAgS,EAAA2W,UAAA3W,EAAA2W,WAAA5W,EAAA,GAAA9R,IAAA8R,EAAAyZ,QAAAja,QAAAwZ,UAAA/Y,EAAA2W,WAAA3W,EAAA2W,SAAA5W,EAAA,GAAA9R,KAAAgwB,KAAA,WAAA,GAAA1e,QAAAC,IAAA5J,OAAAogB,gBAAAvjB,SAAAyrB,SAAAzlB,MAAAhG,SAAA0Q,MAAA1Q,SAAA0Q,KAAAgb,eAAA,CAAA,GAAApe,GAAAtN,SAAAyrB,SAAAzlB,KAAAwP,OAAA,GAAA/H,EAAAzN,SAAA0M,eAAAY;mEAAA,KAAAG,EAAA,IAAA,GAAAD,GAAAxN,SAAAyQ,qBAAA,KAAApO,EAAA,EAAAkL,EAAAC,EAAAjS,OAAA8G,EAAAkL,EAAAlL,IAAA,GAAAmL,EAAAnL,GAAAjC,OAAAkN,EAAA,CAAAG,EAAAD,EAAAnL,EAAA,OAAA,GAAAoL,EAAA,CAAA,MAAAA,EAAAie,gBAAAje,EAAAA,EAAAyT,UAAAzT,GAAA3R,KAAA6vB,UAAAle,GAAAA,GAAAA,EAAAie,gBAAApa,WAAA,WAAA7D,EAAAie,gBAAA,IAAA,MAAAC,UAAA,SAAApe,GAAA,GAAAO,GAAAhB,QAAAC,IAAAmZ,UAAA3Y,EAAA,OAAAO,IAAAhB,QAAAwZ,UAAAxY,EAAAkX,WAAA4G,YAAAre,EAAAT,QAAAwZ,UAAAxY,EAAAkX,WAAA4G,UAAAre,IAAAA,GAAAse,SAAA,WAAA/e,QAAAC,IAAA5J,OAAAqgB,eAAA1W,QAAAob,UAAA4D,SAAAxa,WAAAxE,QAAAmH,UAAA,aAAAnH,QAAAyN,aAAA,aAAA,KAAAjJ,WAAA,WAAAxE,QAAAmH,SAAAI,OAAA,UAAAvH,QAAA+H,KAAA,wCAAA,aAAA/H,QAAAyN,aAAA;uIAAA,KAAAzN,QAAAob,UAAA6D,UAAAza,WAAAxE,QAAAmH,UAAA,UAAAnH,QAAA+H,KAAA,wCAAA,OAAAmX,OAAA,WAAA,GAAAle,GAAAhS,KAAAqvB,OAAAre,QAAAmH,SAAA,WAAAnH,QAAAC,IAAA2Y,QAAAlU,OAAAgC,KAAA,WAAA,IAAAxT,SAAA0Q,MAAA1Q,SAAAisB,WAAA,GAAAnf,QAAAC,IAAAmf,QAAAC,QAAA,GAAA,aAAAnsB,SAAAisB,WAAA,OAAAne,OAAA,IAAA,YAAA9N,SAAAisB,WAAA,OAAAne,EAAA,OAAAjB,QAAAuf,kBAAAvf,OAAAuf,iBAAA,OAAAte,GAAA,GAAAhS,KAAAivB,OAAAsB,mBAAAxf,OAAAuf,iBAAA,mBAAAte,GAAA,IAAAjB,OAAAsU,YAAAtU,OAAAsU,YAAA,SAAArT,GAAAjB,OAAAse,OAAArd;mJAAAA,GAAAkZ,QAAA,SAAAlZ,EAAAP,GAAA,MAAAT,SAAAC,IAAA5J,OAAAmgB,mBAAA,aAAAxnB,KAAAgX,MAAAC,MAAA,OAAAjX,KAAA0V,OAAA,kBAAA,UAAA1E,QAAAC,IAAAe,EAAAP,IAAA,OAAAzR,KAAA0V,OAAA,iBAAAwZ,IAAA,SAAAzd,EAAAO,GAAA,MAAAA,GAAAiB,MAAA,0BAAAjB,EAAA,aAAAP,EAAA,IAAAO,GAAAA,GAAAmd,UAAA,SAAA1d,EAAAE,EAAAD,EAAAM,GAAA,GAAAP,IAAAA,YAAA0D,SAAA1D,GAAAA,IAAAA,EAAAhS,QAAA,CAAA,IAAA,GAAA8G,GAAAuL,EAAAd,QAAAmH,SAAAI,QAAArF,KAAAtB,EAAA,EAAAJ,EAAAC,EAAAhS,OAAAmS,EAAAJ,EAAAI,IAAArL,EAAAvG,KAAAkvB,IAAAvd,EAAAF,EAAAG,IAAAF,IAAAnL,GAAA,IAAAmL,GAAAM,EAAAF,EAAAmF,MAAA,UAAAjG,QAAA+H,KAAAxS,EAAA2M,IAAApB,EAAAmF,KAAAjG,QAAA+H,KAAAe,QAAAvT,EAAA2M;wEAAA,OAAApB,GAAAmF,SAAA,MAAA,QAAA,SAAAzF,GAAA,GAAAC,GAAAV,OAAAS,GAAAjL,EAAA,IAAAiL,EAAA,IAAAE,EAAAD,EAAAR,IAAAe,EAAAP,EAAAsH,KAAApH,EAAAF,EAAA0G,SAAAvG,EAAAZ,QAAAoB,OAAAC,UAAAme,QAAA,SAAAC,QAAA,KAAAppB,UAAA8K,KAAA,SAAA5P,EAAAuP,GAAA,MAAA,KAAAG,UAAAxS,OAAAO,KAAAA,KAAA6R,YAAAQ,SAAA9P,EAAAuP,MAAAS,QAAA,SAAAuG,EAAA5F,GAAA,GAAA3Q,GAAAvC,KAAA6R,YAAAC,IAAA,IAAA,MAAAgH,EAAA,CAAA,IAAA,GAAAkB,KAAAlB,GAAAA,EAAA/G,eAAAiI,KAAA,kBAAAlB,GAAAkB,GAAAzX,EAAAiQ,cAAAwH,EAAAlB,EAAAkB,IAAAlI,EAAAkI,GAAAlB,EAAAkB,GAAAlB,GAAAhG,WAAAvQ,EAAAqQ,UAAAE,UAAAgG,EAAAhG,cAAAA,UAAAvQ,EAAAiQ,cAAA,WAAAsG,EAAAhG,UAAA,MAAApB,GAAAuL,OAAA1a,EAAAqQ,UAAAd,GAAAvP,EAAAgQ,QAAA,KAAAW,GAAAlT,MAAA0wB,UAAA,SAAA5e,EAAAvP,GAAA,KAAAkS,OAAAzU,KAAA2e,UAAA,IAAA3e,KAAAwwB,QAAA;yFAAA/G,SAAA,SAAA3X,KAAAyX,OAAA,WAAAvpB,KAAAqH,OAAAqK,EAAA8X,cAAAxpB,KAAAN,GAAAM,KAAAqH,QAAArH,KAAAqH,OAAAkL,SAAAvS,KAAAuS,QAAAvS,KAAAqH,OAAAkL,UAAAqX,QAAA,aAAA3N,aAAA,SAAA1Z,GAAA,GAAA,cAAAA,EAAA,MAAAyP,GAAAiK,aAAAjc,KAAA2e,UAAA,IAAApc,EAAA,IAAAuP,GAAAH,EAAA4G,OAAA,OAAAzG,GAAAmF,KAAAvF,EAAA+X,SAAAE,YAAA,kBAAA,OAAAjY,EAAAkY,QAAAlU,OAAA1V,KAAAN,GAAA,gBAAA,SAAAM,OAAA,OAAA0R,EAAAkY,QAAAlU,OAAA1V,KAAAN,GAAA,iBAAA,SAAAwT,GAAA,MAAAlC,SAAAC,IAAA2Y,QAAAuF,UAAAjc,EAAAud,QAAAzwB,KAAA2e,YAAA3e,OAAA,SAAAkT,EAAA4F,GAAA,MAAA9H,SAAAC,IAAA2Y,QAAAuF,UAAAjc,EAAA8T,WAAA,cAAAlO;oEAAA9Y,KAAAqH,WAAArH,KAAAN,KAAA,OAAAgS,EAAAkY,QAAAlU,OAAA1V,KAAAN,GAAA,iBAAA,UAAAM,OAAA,OAAA0R,EAAAkY,QAAAlU,OAAA1V,KAAAN,GAAA,eAAAM,KAAA2wB,eAAA7e,EAAAmF,MAAA,SAAA/D,GAAAA,EAAA0d,WAAA1d,EAAA2d,aAAA3d,EAAAgE,QAAAhE,EAAAwd,UAAAxd,EAAA4d,YAAA5d,EAAA6d,eAAA/wB,KAAA6R,YAAAe,YAAAd,EAAAmF,MAAA,eAAAjF,EAAAhS,KAAA2e,UAAA,IAAApc,OAAA7C,GAAA,MAAA0R,QAAA,QAAAuN,UAAApY,EAAA,OAAAyqB,aAAAzqB,EAAA,eAAAkL,GAAAwf,SAAArf,EAAAS,UAAA2X,WAAA,MAAAkH,iBAAA,WAAA,iBAAAP,eAAA,EAAAzZ,QAAA,SAAA8C,EAAAmX,GAAA,GAAAxU,GAAAzJ,EAAAvB,EAAA4G,QAAAO,EAAA9Y,KAAAgqB,UAAAlR,aAAA3D,SAAA2D,GAAAA;4BAAA,KAAA,GAAAiB,GAAA,EAAAjI,EAAAgH,EAAArZ,OAAAsa,EAAAjI,EAAAiI,IAAA4C,EAAAlL,EAAAoZ,WAAAlM,UAAA,IAAA7F,EAAAiB,GAAA,IAAA/Z,KAAAwwB,QAAAxwB,KAAAywB,QAAAzwB,KAAAywB,kBAAAtb,SAAAnV,KAAAywB,SAAAzwB,KAAAywB,UAAAzwB,KAAAywB,WAAAzwB,KAAAywB,QAAAtuB,KAAAwa,GAAAzJ,EAAA+D,KAAAjF,EAAA8H,QAAA6C,GAAAA,GAAA3c,KAAA2e,UAAA,IAAA3e,KAAAwwB,OAAA,IAAA3O,GAAA3O,EAAA+D,KAAAjF,EAAA8H,QAAA6C,GAAA,OAAAkF,GAAAlO,SAAA3T,KAAA6R,YAAAe,UAAAsE,QAAA,WAAA,IAAA2K,EAAAlO,OAAA,MAAAkO,EAAA,MAAApN,OAAAkI,EAAA,8BAAA7D,EAAApH,EAAAwX,UAAA,OAAApQ,EAAA,IAAAA,GAAA5F,EAAA+D,KAAAjF,EAAA8H,QAAAhB,EAAA,GAAA6F,UAAA,IAAA3e,KAAAwwB,UAAAtd,EAAA+D,UAAA8U,YAAA,SAAAja,GAAA,GAAAvP,GAAAuP,EAAAsf,eAAA,OAAAtf,GAAAuf,eAAA5f,EAAAoL,KAAAY,UAAAlb,IAAAknB,SAAA,SAAA3X,GAAAJ,EAAAuX,WAAAvX,EAAAuX;4BAAAvX,EAAAuX,SAAAnX,GAAA9R,QAAAN,GAAA,WAAA0R,QAAA,QAAAuN,UAAA/M,EAAA+M,UAAA,SAAAqS,aAAApf,EAAAof,eAAAvf,EAAA+Y,UAAA5Y,EAAAS,UAAAse,eAAA,EAAAC,WAAA,SAAA1d,GAAA,GAAA3Q,GAAAuP,EAAA9R,KAAA2e,UAAA,IAAA3e,KAAAwwB,OAAA,OAAAxwB,MAAA6R,YAAAe,UAAAge,WAAA,SAAA9X,GAAA,IAAAvW,EAAAoR,OAAA,MAAApR,EAAA,MAAAkS,OAAA3C,EAAA,6BAAAvP,EAAAyP,EAAA8H,QAAAhI,IAAA2X,SAAA,SAAAlnB,GAAA,GAAAuP,GAAAJ,EAAAwX,SAAApX,GAAAvP,KAAAuP,EAAAvP,OAAAuP,EAAAvP,GAAA9C,SAAAO,KAAAN,KAAAgS,EAAArK,OAAAugB,aAAAQ,WAAAtW,EAAAqX,MAAAnpB,KAAAN,KAAA,IAAAoS,EAAAqX,MAAArX,EAAAvP,GAAA,GAAA7C,KAAA,IAAAoS,EAAAvP,GAAA0oB,QAAAjrB,MAAA8R,EAAAvP,GAAAJ,KAAAnC,MAAAA,KAAAywB,QAAAzwB,KAAAywB,kBAAAtb,SAAAnV,KAAAywB,SAAAzwB,KAAAywB,UAAAzwB,KAAAywB;0FAAAzwB,KAAAywB,QAAAtuB,KAAAsP,EAAAoZ,WAAAlM,UAAA,IAAApc,EAAA2X,MAAA,MAAA,GAAA,IAAAla,KAAAwwB,UAAAha,OAAA,SAAA1E,OAAApS,GAAA,YAAA0R,QAAA,QAAAuN,UAAA/M,EAAA+M,UAAA,UAAAqS,aAAApf,EAAAof,aAAAM,QAAA/qB,GAAAkL,EAAAN,SAAA,GAAA,OAAA,SAAAogB,SAAAhrB,GAAAkL,EAAAN,SAAA,GAAA,OAAA,YAAAM,EAAAoZ,WAAAjZ,EAAAS,UAAAF,KAAA,SAAA5P,EAAAuP,GAAA,MAAA9R,MAAA6R,YAAAQ,SAAA9P,EAAAuP,IAAAmX,SAAA,KAAAC,UAAA,KAAAoE,QAAA,KAAA+D,aAAA,GAAAnH,SAAA,GAAAgH,iBAAA,aAAA,eAAAM,KAAA,SAAAjvB,EAAA2Q,GAAA,GAAApB,GAAA9R,KAAAoxB,eAAA,OAAA3f,GAAAoL,KAAAM,UAAArL,EAAAvP,GAAAuP,EAAAd,QAAA4Z,MAAA5qB,KAAA8qB,MAAAkB;kCAAAta,EAAA8Z,OAAA1Z,EAAAoB,IAAAuY,UAAA,SAAAlpB,GAAA,GAAAuP,GAAA9R,KAAAoxB,eAAA,OAAAtf,GAAAd,QAAA4Z,MAAA5qB,KAAA8qB,MAAAkB,OAAAta,EAAA+Z,UAAA3Z,EAAAvP,IAAAipB,OAAA,SAAA1Z,GAAA,MAAA9R,MAAA0rB,SAAA5Z,IAAA4Z,SAAA,SAAAnpB,GAAA,GAAAuP,GAAA9R,KAAAoxB,eAAA,OAAAtf,GAAAd,QAAA4Z,MAAA5qB,KAAA8qB,MAAAmB,OAAAva,EAAAwF,QAAApF,EAAAvP,IAAAiU,OAAA,SAAA1E,GAAA9R,KAAAoP,OAAApP,KAAAoP,MAAAlH,MAAAlI,MAAAyR,EAAA+Y,UAAAxqB,KAAAkpB,WAAA1S,OAAAxW,MAAA8R,IAAAJ,EAAAgE,OAAAgC,MAAA,cAAA1X,KAAAstB,UAAAttB,KAAAyxB,WAAA1F,YAAA,WAAA,MAAAta,GAAAwf,SAAAjxB,KAAAipB,UAAA8C,YAAA/rB,OAAAoxB,cAAA,WAAA,MAAAltB,UAAA0M,eAAA5Q,KAAAstB,UAAAN,OAAA,SAAAzqB,EAAA2Q,GAAA,GAAApB,GAAAvP,EAAAyO,QAAAgZ,UAAA,OAAAznB,GAAAyO,QAAA4Z,QAAA5qB,KAAA8qB,MAAAkB,OAAAla,EAAA4f,MAAA1xB,OAAA8R,EAAAvP,EAAAyO,QAAAgZ,WAAAhqB;uFAAAuC,EAAA7C,GAAAM,KAAAstB,QAAA/qB,EAAA7C,IAAA6C,EAAA7C,GAAAM,KAAAstB,QAAA7b,EAAAoZ,WAAA8G,QAAA3xB,KAAA4xB,MAAA,IAAA9f,EAAAuf,aAAA5f,EAAAoL,KAAAY,UAAAlb,GAAAuP,EAAAmX,SAAA/V,EAAApB,EAAAsH,OAAAtH,EAAAsH,KAAAkU,QAAAxb,EAAAwb,SAAAxb,GAAA2f,OAAA,WAAA,GAAA3f,GAAA9R,KAAAoxB,eAAA,IAAAtf,EAAA,CAAA,UAAAA,GAAAd,QAAA,MAAAzO,GAAAuP,EAAAd,QAAA,KAAAhR,KAAA4xB,QAAA9f,EAAApS,GAAA,MAAAgyB,MAAA,SAAA5f,GAAA,GAAAvP,EAAA,KAAAA,IAAAvC,MAAAA,KAAA+R,eAAAxP,QAAA,KAAAuP,EAAAvP,IAAA,UAAAA,SAAAvC,MAAAuC,EAAA,KAAAA,IAAAuP,GAAAA,EAAAC,eAAAxP,SAAA,KAAAvC,KAAAuC,IAAAvC,KAAAuC,KAAAuP,EAAAvP,IAAA,YAAAA,KAAAvC,KAAAuC,GAAAuP,EAAAvP,OAAA7C,GAAA,aAAA0R,QAAA,QAAAuN,UAAA/M,EAAA+M,UAAA,WAAAqS,aAAApf,EAAAof;4BAAAa,GAAA,EAAA/G,OAAA0B,QAAA,EAAAzB,UAAA,EAAAiB,OAAA,EAAAC,OAAA,GAAA0F,MAAA,WAAA,MAAA,sBAAA3xB,KAAA6xB,IAAAxf,SAAA,WAAA,GAAAP,GAAAF,EAAAS,SAAAQ,MAAA7S,KAAAiS,UAAA,OAAAH,GAAAmK,aAAAjc,KAAA4S,UAAAqJ,aAAAnK,KAAAL,EAAAoZ,WAAAjY,UAAAkY,MAAArZ,EAAAoZ,WAAAC,MAAArZ,EAAA+Y,UAAA/V,OAAA/U,GAAA,QAAA0R,QAAA,QAAA/J,UAAAyqB,OAAA,EAAAC,YAAA,WAAA,MAAAtgB,GAAA2a,UAAAC,WAAAyB,MAAAiE,YAAAlf,MAAApB,EAAA2a,UAAAC,WAAAyB,MAAA7b,YAAAgc,UAAA,WAAA,MAAAxc,GAAA2a,UAAAC,WAAAyB,MAAAkE,eAAAnf,MAAApB,EAAA2a,UAAAC,WAAAyB,MAAA7b,YAAAwY,eAAA,SAAA3Y,GAAA,OAAAA,EAAA8a,YAAA5b,aAAA1E;EAAAshB,IAAA,SAAA1a,EAAA3Q,GAAA,GAAAuP,GAAAd,QAAAC,IAAAgY,SAAA1mB,EAAA8J,KAAA1M,QAAA,aAAA,IAAA,OAAAK,MAAA8xB,UAAA7I,UAAAnX,IAAApS,GAAA,UAAAA,GAAAwpB,UAAA,QAAAoE,QAAA,iBAAAttB,KAAA8xB,OAAAZ,iBAAA,eAAA,iBAAAe,iBAAA,QAAAZ,aAAArgB,QAAA6L,KAAAY,UAAAlb,GAAA2vB,UAAAhf,KAAAzB,EAAAwf,SAAAxc,OAAA/U,GAAA,QAAA0R,QAAA,QAAA/J,UAAA6pB,iBAAA,WAAA,mBAAA,WAAA,SAAAvU,GAAA,GAAA7K,GAAAf,OAAA4L,EAAA7K,KAAAA,EAAAf,OAAA4L,MAAA,IAAAnL,GAAAM,EAAAb,IAAAkhB,EAAA3gB,EAAAoY,QAAAwI,EAAA5gB,EAAAnK,OAAAuK,EAAA1N,SAAAwQ,MAAAxQ,SAAAyQ,qBAAA,QAAA,EAAA/C,KAAAA,EAAA1N,SAAA2M,WAAA,GAAA,IAAAY,IAAAvN,SAAA4hB,iBAAA5hB,UAAAyQ,qBAAA;0EAAA,KAAAlD,EAAAhS,QAAAmS,EAAAygB,eAAA5gB,EAAAvN,SAAAouB,uBAAA1gB,EAAAygB,aAAA,UAAA,KAAA,GAAA1gB,GAAA,GAAA0M,QAAA,QAAA1B,EAAA,kBAAAwU,EAAA1f,EAAAhS,OAAA,EAAA0xB,GAAA,EAAAA,IAAA,IAAA1f,EAAA0f,GAAAlW,KAAA,IAAAhI,MAAAtB,GAAA,CAAA,GAAAwgB,EAAAtd,OAAApD,EAAA0f,GAAAzT,UAAAW,OAAAkU,GAAA,IAAA,GAAAC,GAAAnU,OAAAkU,GAAA7Y,OAAA,GAAAQ,MAAA,MAAA2H,EAAA,EAAA7H,EAAAwY,EAAA/yB,OAAAoiB,EAAA7H,EAAA6H,IAAA,CAAA,GAAA9H,GAAAyY,EAAA3Q,GAAA5O,MAAA,YAAA8G,KAAAoY,EAAAlD,OAAA1Q,SAAAxE,EAAA,KAAAwE,SAAAxE,EAAA,KAAAqY,EAAAhZ,KAAA3H,EAAA0f,GAAAlW,IAAAtb,QAAA,uBAAA,IAAAA,QAAA,mDAAA,KAAAmS,EAAAV,QAAA8I,MAAA,MAAA9L,MAAA,EAAA,GAAAwO,KAAA,KAAA,OAAA9K,EAAAiH,KAAA1R,OAAA+R,KAAAgZ,EAAAhZ,IAAA,OAAA,GAAAN,GAAAJ,UAAA+Z,UAAAzgB;6BAAA0gB,MAAA,QAAAha,UAAAia,SAAAjZ,OAAA,EAAA,GAAAkZ,KAAA,QAAAla,UAAAia,SAAAjZ,OAAA,EAAA,GAAA2W,OAAA,iBAAAtf,SAAA,iBAAAA,QAAA8hB,OAAA,kBAAA9hB,SAAA,UAAAA,SAAA,MAAAA,OAAA0K,OAAAqX,UAAAC,YAAAja,EAAA7F,MAAA,aAAA6F,EAAA7F,MAAA,cAAA+f,YAAAla,EAAA7F,MAAA,sBAAA6F,EAAA7F,MAAA,kBAAAlC,OAAA0K,QAAA,MAAA1K,OAAA0K,OAAAwX,KAAAC,SAAA,UAAAniB,SAAA,MAAAA,OAAA0K,OAAAqX,UAAAK,QAAA,SAAApiB,SAAA,MAAAA,OAAAqiB,MAAAhiB,QAAAiiB,YAAA,aAAAtiB,SAAA,OAAA2H,UAAAC,OAAA2a,eAAA,SAAAC,GAAA,GAAAC,GAAAxzB,KAAA,QAAAka,MAAA,IAAAqZ,GAAA,GAAA1E,QAAA0E,GAAArZ,MAAA;2BAAA,KAAA,GAAAuZ,GAAA,EAAAvgB,EAAAqgB,EAAA9zB,OAAAg0B,EAAAvgB,EAAAugB,IAAA,GAAAD,EAAAC,IAAAF,EAAAE,GAAA,MAAAC,UAAAF,EAAAC,IAAA,MAAAC,SAAAH,EAAAE,GAAA,QAAA,GAAAE,OAAA,SAAAzgB,GAAA,GAAA3Q,GAAA2Q,EAAA1B,EAAA4e,QAAA,OAAA7tB,GAAAA,EAAAiP,EAAA4e,SAAA,OAAA7pB,EAAAuS,EAAAnZ,QAAA,yBAAA,IAAAA,QAAA,0DAAA,IAAAA,QAAA,4CAAA,GAAA6R,GAAA4e,QAAA5e,EAAAyL,OAAAzL,EAAAyL,OAAA,GAAA4R,QAAA,YAAAzd,QAAA,QAAAY,EAAA,KAAA,GAAA4hB,KAAA5hB,GAAA,GAAAA,EAAAD,eAAA6hB,IAAA5hB,EAAA4hB,IAAA,OAAAA,EAAAla,OAAA,EAAA,GAAA,CAAA,GAAA,SAAAka,EAAAA,EAAAxlB,MAAA,KAAA,OAAAwlB,EAAA,QAAApiB,GAAA4e,QAAA5e,EAAAyL,OAAA,GAAA4R,QAAA+E,GAAA5hB,EAAA,IAAA6hB,GAAA,GAAAxV,QAAA,sDAAAuV,EAAA,KAAA,QAAAA,EAAA,IAAA,KAAA,2FAAAE,EAAAD,EAAAvV,KAAA/X,KAAA,GAAA,GAAA,GAAA,UAAA;oOAAAiL,GAAA4e,QAAA9rB,KAAA,IAAAwvB,EAAA,GAAAF,EAAAE,EAAA,IAAAA,EAAA,GAAAtiB,EAAA4e,QAAAhf,QAAA0iB,EAAA,IAAAA,EAAA,IAAAA,EAAA,EAAA,OAAA,IAAAtiB,EAAA4e,QAAAuD,QAAAI,OAAA,SAAA7gB,GAAA,GAAA3Q,GAAAmxB,SAAA7E,OAAA3b,EAAA9B,SAAA8I,MAAA,KAAA,GAAA3X,GAAA,KAAA2Q,EAAA8gB,OAAA9gB,EAAA9B,SAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,EAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,EAAA,IAAA2Q,EAAA9B,QAAA,MAAA7O,EAAA,KAAA2Q,EAAA9B,QAAA,OAAA8B,EAAA8gB,OAAAtb,UAAAub,WAAAhhB,MAAA,mBAAA;0DAAAC,EAAAghB,SAAA,MAAAxb,UAAAub,WAAAhhB,MAAA,WAAAC,EAAAihB,cAAAjhB,EAAAghB,UAAAE,QAAA,SAAAlhB,GAAA,IAAA,QAAAA,EAAA9B,SAAA,MAAA0H,EAAA7F,MAAA,aAAA,UAAAyF,UAAA2b,QAAA,CAAA,GAAAre,GAAA8C,EAAA7F,MAAA,4BAAA,IAAA+C,EAAA9C,EAAA9B,QAAA4E,EAAA,OAAA,CAAA,GAAAzT,IAAAmW,UAAA4b,SAAA5b,UAAA6b,YAAA,KAAA7a,OAAA,EAAA,EAAAnX,IAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,WAAA2Q,EAAA9B,QAAA,MAAA7O,GAAA,aAAA2Q,EAAA9B,QAAA;iTAAA8B,EAAAghB,SAAA,MAAAxb,UAAAub,WAAAhhB,MAAA,aAAA,MAAA6F,EAAA7F,MAAA,cAAA,MAAA6F,EAAA7F,MAAA,WAAAiS,OAAA,SAAA3iB,GAAAA,EAAA4xB,cAAA5xB,EAAA2xB,WAAAxb,UAAA+Z,UAAAxf,MAAA,iBAAAuhB,MAAA,SAAAjyB,GAAAA,EAAA6O,QAAAgiB,MAAAhiB,WAAAqjB,KAAA,SAAAlyB,GAAAA,EAAA2xB,WAAAxb,UAAA+Z,UAAAxf,MAAA,WAAA4R,KAAA,SAAA3R,GAAA,GAAAA,EAAAghB,WAAAxb,UAAA+Z,UAAAxf,MAAA;oDAAAC,EAAAwhB,SAAAxwB,SAAA6gB,eAAAhU,OAAA4jB,cAAA5jB,OAAA6jB,eAAA5jB,QAAA6L,KAAAU,cAAArK,EAAAwhB,OAAAxwB,SAAA6gB,aAAA,EAAA/T,QAAAC,IAAAyd,sBAAAxqB,SAAA6gB,aAAA,EAAA7gB,SAAA6gB,aAAA,KAAAoN,EAAAlD,OAAA4F,aAAA,CAAA,IAAA,GAAAC,eAAA,wBAAA5hB,EAAA6hB,eAAA,EAAA,MAAA/e,IAAA,IAAA,GAAA9C,EAAA6hB,cAAA,CAAA,GAAAxyB,GAAA2B,SAAA4M,cAAA,SAAAvO,GAAA7C,GAAA,aAAA6C,EAAAyyB,QAAA,6CAAApjB,EAAAkD,YAAAvS,GAAA2B,SAAA+wB,WAAAvwB,IAAA,IAAA,sCAAAwO,EAAAgiB,aAAA,GAAAhxB,SAAAisB,YAAA,YAAAjsB,SAAAisB,YAAA,gBAAAjsB,SAAAisB,aAAAjsB,SAAAixB,MAAA;oKAAAjiB,EAAAkiB,YAAA,OAAAlxB,UAAA+wB,WAAAvwB,IAAA,aAAA,gCAAA,MAAAsR,SAAA,MAAAtE,GAAA2jB,QAAA/oB,MAAAoF,EAAAtL,SAAAoL,EAAA4e,QAAAuD,OAAA3iB,QAAA8J,QAAA8J,UAAA9S,EAAAZ,cAAA,kBAAAY,GAAAZ,aAAAokB,YAAAxjB,EAAAZ,aAAAokB,aAAA9jB,EAAAwF,MAAAlF,EAAAqG,SAAAI,QAAA/G,EAAAwF,MAAAC,MAAA,OAAAkb,EAAAzc,OAAA,UAAA,SAAAyc,IAAA,SAAAA,IAAA,SAAAA,IAAA,UAAAA,GAAA,WAAA,MAAArgB,GAAAqG,SAAAI,MAAA4Z,EAAAvE,MAAAuE,EAAA1C,cAAAxY,WAAA,OAAAkb,GAAAA,EAAAjC,SAAA,WAAAlf,QAAAma,SAAA;qBAAA,UAAAgH,IAAA,OAAAA,IAAA,WAAAA,IAAA,OAAAA,EAAAzc,OAAA,SAAA,aAEAlX,OAAA,UAAA,cCGAA,OAAA,6DACA,SACA,OACA,eACA,WACA,yBACA,iEACA,SAAAK,EAAAsG,GAAAgD,QAAAO,MAAAhK,cAAA62B,cACA,YAMA,IAAAC,eAAA,SAAAtsB,YACArK,EAAA,IAAAqK,YAAAusB,KAAA,SAAA,WAMAC,QAAA,SAAAxsB,YAEA,MAAA,IAAAf,SAAA,SAAAG,SACAzJ,EAAA,OAAAqK,YAAAzJ,OAAA,EAEAgxB,SAAA,WAAA,SAAAzf,SACAA,SACAA,QAAAC,IAAAsH,OAAA,UAAAvH,QAAAC,KAAA/H,WAAA;kEACA8H,QAAAC,IAAAsH,MAAAjQ,UAEAA,WAEAA,SAEAA,YAQA,OAAA5J,gBACA4F,KAAA,cAKAC,KAAA,WACA,GAAAC,MAAAxE,KACAa,WAAAb,KAAAyE,eAEAzE,MAAA2I,SAAA9J,EAAA02B,gBAEAv1B,KAAA2F,OAGA9E,WACAd,GAAA,QAAA,WACAyE,KAAAmB,SAEA5F,GAAA,WAAA,SAAA0O,QAAAknB,UACAA,SAAAC,UACApxB,KAAAmE,SAAAktB,KAAAF,SAAAC,SAEAJ,cAAAhxB,KAAAmE,UACA+sB,QAAAlxB,KAAAmE,UAAAmtB,KAAA,WAEAj1B,WAAA6E,QAAA,oBAIA3F,GAAA,aAAA,WACAyE,KAAAuK,SAEAhP,GAAA,aAAA,WACAyE,KAAAmB,OACAnB,KAAAmE,SAAAotB,WAOAhtB,OAAA,WAEA/I,KAAAsB,gBAAA0B,iBACA+E,OAAA/H,KAAA2I;6DAMA3D,QAAA,WACAhF,KAAA2I,SAAA1D,UAMAF,OAAA,WACA/E,KAAA2I,SAAAmD,WAAA,YACAlJ,YAAA,aAMAiC,QAAA,WACA7E,KAAA2I,SAAAoD,KAAA,YAAA,GACApJ,SAAA,aAMAoM,KAAA,WACArG,MAAAqG,KAAA/O,KAAA2I,WAMAhD,KAAA,WACA+C,MAAA/C,KAAA3F,KAAA2I,eChIAnK,OAAA,gEACA,SACA,SACA,OACA,0BACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,eACA,YAMA,OAAAA,gBAEA4F,KAAA,eAKAC,KAAA,aAOA6D,QAAA,WAIA,QAAA4tB,cACAn1B,WAAAo1B,SAAA,iBACAp1B,WAAA6E,QAAA;sEAIA,QAAAwwB,aACAr1B,WAAAo1B,SAAA,iBACAp1B,WAAA6E,QAAA,aAVA,GAAA7E,YAAAb,KAAAyE,eAeA5F,GAAAkS,QAAAhR,GAAA,uBAAA,WACAi2B,eAIAn3B,EAAAkS,QAAAhR,GAAA,sBAAA,WACAm2B,cAGAr1B,WACAd,GAAA,aAAA,WACAc,WAAAs1B,SAAA,gBAAA,KAEAp2B,GAAA,YAAA,WACAc,WAAAs1B,SAAA,gBAAA,KAEApuB,OAAA,QAAA,SAAAxB,EAAA+F,OAEA,GAAA7N,EAAA4J,SAAAiE,QAAA,YAAAA,MAAA8pB,SAAA9pB,MAAA2H,KAIA,MAHA+hB,eAGA,IAIAn1B,WAAAw1B,WACAt2B,GAAA,UAAA,WAEAm2B,eAOAlxB,QAAA,WACAnG,EAAAkS,QAAAlN,IAAA;sCACAhF,EAAAkS,QAAAlN,IAAA,4BC9EArF,OAAA,wDACA,SACA,eACA,aACA,aACA,eACA,0BACA,SAAAC,EAAA63B,eAAAC,aAAAC,MAAAruB,QAAAzJ,eACA,YAYA,OAAAA,gBAEA4F,KAAA,WAKAC,KAAA,WAEA,GAAAC,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAgyB,YAAA51B,WAAA0H,iBACAmuB,kBAAAD,YAAAE,eAAA,IAAAF,YAAAG,OAGA,OAAAJ,OAAA,YAAA31B,WAAAg2B,YAAAC,eAAAhB,KAAA,SAAAiB,eAOA,QAAAC,iBAAAC,WACA,MAAA,eAAAC,KAAAD,WAIAF,cAAAI,QAAAF,WAHA9uB,QAAA9B,OAAA,GAAAoO,OAAA;qJAWA,MAJAjQ,MAAA4yB,UAAAb,cACAc,WAAA,IAGAN,cAAAI,QAAAT,mBACAZ,KAAA,SAAAwB,cAMA,KALAA,aAAA74B,EAAA84B,SAAAD,cAAAA,aAAA,IAKAb,YAAAe,gBACA,MAAAT,eAAAU,QAAAf,kBAAAD,YAAAe,iBAAA,KAGA1B,KAAA,WAEAtxB,KAAAkzB,QAAApB,gBAEAqB,OAAA,WAGA,GAAAC,SAAApzB,KAAA4yB,UAAAS,OACAlxB,QAAA9F,WAAA0H,iBAGAuvB,cAAAnxB,QAAAgwB,eAAA,IAAAhwB,QAAAiwB,OAEAG,eAAAI,QAAAW,eAAAhC,KAAA,SAAAiC;8DACAA,SAAAt5B,EAAA84B,SAAAQ,UAAAA,SAAA,EACAH,QAAAn5B,EAAA84B,SAAAK,UAAAA,QAAA,EAAAA,QAAA,IAAA,EAGAb,cAAAU,QAAAK,cAAAC,SAAAH,YAGAI,SAzEA,IA0EAX,WAAA,IAIAx2B,WAEAiE,MAAA,wBAAA,WACAN,KAAAO,WAGAgD,OAAA,8BAAA,WACAvD,KAAAyxB,SAAA,YACAzxB,KAAAK,YAIAkD,OAAA,yBAAA,WACA,GAAApB,SAAA9F,WAAA0H,gBAEA,OAAAyuB,iBADArwB,QAAAgwB,eAAA,IAAAhwB,QAAAiwB,SACAd,KAAA,SAAAiC,UACA,GAAA9I,SACAgJ,aAAA,EAEAx5B,GAAA84B,SAAAQ,WAAAA,SAAA,IACA9I,OAAAgJ,aAAAF;kEAKAl3B,WAAAw1B,WAAA6B,oBAAAjJ,YASAlvB,GAAA,sBAAA,SAAAwG,EAAA0wB,UAAAkB,aACA15B,EAAAgI,WAAA0xB,cACAA,YAAAnB,gBAAAC,cAIAlvB,OAAA,SAAA,WACA,MAAA,IAAAI,SAAA,SAAAG,SACAyuB,cAAAqB,cACAtC,KAAAxtB,SACA+vB,MAAA/vB,kBAUAtD,QAAA,WACAhF,KAAA03B,QAAA9qB,OACA5M,KAAAo3B,UAAAxqB,QAMA7H,OAAA,WACA/E,KAAA03B,QAAA/qB,QACA3M,KAAAo3B,UAAAkB,UAMAzzB,QAAA,WACA7E,KAAA03B,QAAA9qB,OACA5M,KAAAo3B,UAAAmB,aC1LA/5B,OAAA,kEAAA,cAAA,SAAA8K;oGACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAMA,MALArC,MAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,SAIA,0MCeA7D,OAAA,8DACA,SACA,SACA,OACA,yBACA,iEACA,kBACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAA85B;qPACA,YAaA,IAAAC,iBAAA,SAAAC,YAAAC,QAAAC,gBAsGA,OAzFAC,WAAA,WACA,GAAAhd,OAAAC,KAAAgd,IAAA,EAAAJ,YAAAK,aACAC,MAAAld,KAAAC,MAAA2c,YAAAO,gBAAApd,MAAA,IACA,QACAmd,MAAAA,MACAE,MAAAF,MAAA,MASA92B,SAAA,WAGA,GAAAi3B,aAAA,WACA,GAAAR,SAAAA,QAAAS,MACA,MAAAT,SAAAS,MAAAV,YAAAW,aAKAC,eAAA,WACA,GAAAC,UAAAJ,aACA,IAAAI,UAAAA,SAAAC,SACA,MAAAD,UAAAC,SAAAd,YAAAe;iFAKAC,sBACAxC,MACArb,MAAA,WACA,MAAAC,MAAAgd,IAAA,EAAAJ,YAAAK,cAEA72B,SAAA,WACA,MAAAw2B,aAAAiB,aAAA,IAGAJ,UACA1d,MAAA,WAEA,MADAsd,eAEA16B,EAAAm7B,OAAAjB,QAAAS,MAAAV,YAAAW,YAAAG,SAAA,SAAAK,IAAAC,SACA,MAAAD,KAAAp7B,EAAAs7B,KAAAD,QAAAE,QACA,GAEA,GAEA93B,SAAA,WACA,GAAA+3B,aAAAX,gBACA,OAAAW,aACAA,YAAAD,MAAAtB,YAAA/B,gBAAAuD,eAAA,EAEA,IAGAD,aACApe,MAAA,WACA,GAAAoe,aAAAX,gBACA,OAAAW,aACAx7B,EAAAs7B,KAAAE,YAAAD,OAEA,GAEA93B,SAAA,WACA,GAAA+3B,aAAAX;gCACA,OAAAW,aACAA,YAAAD,MAAAtB,YAAA/B,gBAAAwD,kBAAA,EAEA,KAKAC,QAAAV,qBAAAd,eAAAyB,QAAAX,qBAAAxC,KACArb,MAAAue,QAAAve,QACAye,gBAAAF,QAAAl4B,UAEA,QACA82B,MAAAnd,MAAA,EAAAC,KAAAC,MAAAue,gBAAAze,MAAA,KAAA,EACAqd,MAAAN,eAAA2B,UACAp1B,GAAA,gBAAAm1B,gBAAAze,OACA1W,GAAA,UAAAm1B,oBAIA1B,eAAA4B,aAOA,OAAA97B,gBAEA4F,KAAA,cAKAC,KAAA,WACA,GAAAk2B,gBACAC,iBACA75B,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,cACAE,OAAAH,SAAAG,OAAAszB,sBAEA/B;mKACA4B,UAAAnzB,OAAAgF,MAAA,aACAguB,MAAAhzB,OAAAgzB,OAAA,OACAE,YAAAlzB,OAAAkzB,WAMAK,OAAA,WACA,GAAAC,cAAApC,gBAAA53B,WAAA0H,iBAAA1H,WAAAi6B,aAAAlC,eACAiC,eAAAJ,gBAAAC,mBACAD,eAAAjwB,KAAAqwB,aAAA3B,OACAwB,iBAAAK,YAAA,QAAAF,aAAA7B,QAKAh5B,MAAA2I,SAAA9J,EAAA25B,eAGAiC,eAAA57B,EAAA,kCAAAmB,KAAA2I,UACA+xB,iBAAA77B,EAAA,gCAAAmB,KAAA2I;kEAGA+xB,iBAAAK,cAGAH,SAEA/5B,WACAd,GAAA,QAAA66B,QACA76B,GAAA,WAAA66B,SAMA7xB,OAAA,WACA/I,KAAAsB,gBAAA05B,iBACA3xB,OAAArJ,KAAA2I,eC3LAnK,OAAA,0DACA,SACA,0BACA,SAAAC,EAAAC,eACA,YAMA,OAAAA,gBAEA4F,KAAA,YAKA8D,QAAA,WACA,GAAAvH,YAAAb,KAAAyE,eAGA5D,YAAAw1B,WACA4E,IAAA,SAAAC,IAAAC,IAAAl7B,MACA,GAAAoC,MAAA84B,KAAAA,IAAA94B,IAGA,IAAAA,MAAAA,KAAAgK,MAAA,cAAAhK,KAAAgK,KAaA,MAXAxL,YAAAs1B,SAAA,qBAAA,QAEAt1B,WAAAo1B,SAAA,UAIAx3B,EAAA28B,QAAA/4B,KAAAg5B,WAAA58B,EAAAa,KAAA+C,KAAAg5B;mFAAAC,QAAA,eACAz6B,WAAA6E,QAAA,QAAArD,MAFAxB,WAAA6E,QAAA,WAQAzF,WAOAsE,KAAA,WACA,GAAA1D,YAAAb,KAAAyE,gBACA82B,WAAA,CAGA16B,YAAAw1B,WACAiF,QAAA,YAAA,SAAAj5B,MACAk5B,YAAAl5B,MAAA,UAAAA,KAAAgK,MAAA,UAAAhK,KAAAgK,MAAAxL,WAAAo1B,SAAA,uBACAsF,WAAA,EAEA16B,WAAAs1B,SAAA,qBAAA,GAEAt1B,WAAA6E,QAAA,QAAArD,cC/EA7D,OAAA,sDAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAKA,QAAAuH,UAAAH,OAAApH;+BAGA,MAAA,YAPArC,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAC,OAAAC,OAAA,GAAAK,iBAAApK,KAAAoK,iBAAA5F,KAAAxE,IA4BA,OApBA+J,SAAA,2CACAD,OAAAJ,QAAA2C,MAAAxC,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAA4C,KAAAxC,OAVA,kBAUAC,QAAAA,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,iBACAA,OAAAH,QAAAa,OAAAN,KAAAR,OAAAA,QAAAA,OAAA2M,SAAAlM,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAhB,SAAAvH,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF;uCACAE,QAAA,oBACAD,OAAAJ,QAAAhK,IAAAmK,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAA/J,GAAAmK,OAjBA,kBAiBAC,QAAAA,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,aACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,OArBA,kBAqBAC,QAAAA,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,qDACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,OAzBA,kBAyBAC,QAAAA,OAAAG,KAAAR;qDAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,yECTArL,OAAA,2DACA,SACA,SACA,OACA,SACA,oBACA,sDACA,SAAAK,EAAAJ,EAAA0G,GAAAq2B,OAAAC,YAAAC,UACA,YAEA,IAAAC,mBAAA,yBAAA5qB,QAWA6qB,YACA1E,KAAA,iBACAqC,SAAA,WACAO,QAAA,oBACA+B,KAAA,oBAwKA,OAzJA,UAAAx0B,QACA,GAAAhF,KAEA,KAAA5D,EAAAq9B,cAAAz0B,QACA,KAAA,IAAA00B,WAAA;wGAEA,IAAAt9B,EAAA28B,QAAA/zB,OAAA3H,IACA,KAAA,IAAAq8B,WAAA,+BAEA,KAAAt9B,EAAAgwB,SAAAmN,WAAAv0B,OAAAgF,MACA,KAAA,IAAA0vB,WAAA,0BAaA,OAVA15B,MAAA5D,EAAAuQ,SAAA3H,QACA6xB,MAAA,GACA8C,UAAA,EACAC,YACA7lB,SAAA,KAYA7R,KAAA,WAGA,MAFAvE,MAAA2I,SAAA9J,EAAA68B,SAAAr5B,OACArC,KAAAk8B,SAAAr9B,EAAA,kBAAAmB,KAAA2I,UACA3I,MAQA+I,OAAA,SAAAG,YAEA,MADAA,YAAAG,OAAArJ,KAAA2I,UACA3I,MAOAgF,QAAA,WAEA,MADAhF,MAAA2I,SAAA1D,SACAjF,MAOAm8B,QAAA,WACA,GAAA33B,MAAAxE,KACA46B,OAAA,WACAp2B,KAAA03B,SAAA1xB,KAAAixB,YAAAW,OAAA/5B,KAAA25B,UArFA;2DA6FA,OANAL,mBACA5qB,OAAAsrB,sBAAAzB,QAEAA,SAGA56B,MAOAs8B,KAAA,WACA,GAAAN,WACA51B,WACAoG,QAAA/N,EAAA89B,SAAAl6B,KAAA45B,UAAAO,QAAA,GAEA,KAAA/9B,EAAA28B,QAAA5uB,UACA/N,EAAAg+B,SAAAjwB,QAAAkwB,QACAr6B,KAAA25B,WAAAxvB,QAAAkwB,MACA,CAGA,OAFAV,UAAAR,OAAAzD,SAAA11B,KAAA25B,UA7GA,IA6GA,WAAAW,WACA38B,KAAAk8B,SAAAt5B,YAAA,mCAAAD,SAAA,OAAA6J,QAAAH,MACAhK,KAAAgK,MACA,IAAA,oBACAjG,QAAAoE,KAAArF,GAAA,yDAAA62B,UACA,MAEA,KAAA,oBACA51B,QAAAoE,KAAArF,GAAA,4DAAA62B;sFACA,MAEA,KAAA,WACA51B,QAAAoE,KAAArF,GAAA,8DAAA62B,UACA,MAEA,KAAA,iBACA51B,QAAAoE,KAAArF,GAAA,wDAAA62B,WAIA,GAAAQ,QAAA/9B,EAAAa,KAAA+C,KAAA45B,UAAAS,MAAAlwB,QAAAkwB,OACAF,SAAAA,OAAAE,OAAAr6B,KAAA45B,SAAAO,OAAAE,MAlIA,OAmIAr6B,KAAA45B,SAAAO,OAAAE,MAnIA,KAmIAF,QAAA,GAGAp2B,QAAAiG,KAAAG,QAAAH,KAGA,MAAAjG,UAQA1G,GAAA,WACA,MAAA2C,MAAA3C,IAQAk9B,IAAA,SAAAC,OACA,WAAA,KAAAA,OACAx6B,KAAA25B,UAAAa,MACA78B,MAEAqC,KAAA25B,WAQA5lB,QAAA,SAAAymB,OACA,WAAA,KAAAA,OACAx6B,KAAA+T,UAAAymB;4CACA78B,QAEAqC,KAAA+T,aC/LA5X,OAAA,iCACA,UACA,SAAAC,GACA,YAMA,SAAAq+B,iBACA,OACAC,UAAA,EACAC,SAAA,EACAC,QAAA,EACAC,OAAA,EACArhB,MAAA,GAOA,OAMAshB,SAAA,SAAAC,KACA,MAAAA,MAAAA,IAAAC,OAQAC,SAAA,SAAAF,KACA,MAAAA,MAAAA,IAAAhE,OASAmE,QAAA,SAAAH,IAAAl7B,UACA,GAAAm7B,OAAAr9B,KAAAm9B,SAAAC,IACA,OAAAC,QAAAA,MAAAn7B,WASAs7B,QAAA,SAAAJ,IAAAK,UACA,GAAArE,OAAAp5B,KAAAs9B,SAAAF,IACA,OAAAhE,QAAAA,MAAAqE,WASAC,WAAA,SAAAN,IAAAO,aACA,GAAAvE,OAAAp5B,KAAAs9B,SAAAF,KACAtD,QAAA,IAQA,OAPAr7B,GAAAsI,QAAAqyB,MAAA,SAAAwE,MACA,GAAApE,UAAAoE,KAAApE,QACA,IAAAA,UAAAA,SAAAmE,aAEA,MADA7D,SAAAN,SAAAmE;0EACA,IAGA7D,SASA3C,QAAA,SAAAiG,IAAAS,UACA,GAAAC,MAAAr/B,EAAAa,KAAAU,KAAAm9B,SAAAC,MAAAW,WAAAF,UACA,OAAA79B,MAAAg+B,UAAAZ,IAAAU,MAAAA,KAAA57B,WAQA+7B,aAAA,SAAAb,KACA,MAAAA,MAAAA,IAAAc,OASAC,aAAA,SAAAf,IAAAK,UACA,GAAAG,MAAA59B,KAAAw9B,QAAAJ,IAAAK,SACA,OAAAG,OAAAA,KAAAM,OASAE,gBAAA,SAAAhB,IAAAO,aACA,GAAA7D,SAAA95B,KAAA09B,WAAAN,IAAAO,YACA,OAAA7D,UAAAA,QAAAoE,OAUAG,cAAA,SAAAjB,IAAAl7B,SAAAm4B,OACA,GAAAyD,MAAA99B,KAAAu9B,QAAAH,IAAAl7B,SAEA,QAAAm4B,OACA,IAAA,UACA,IAAA,cACA,MAAAr6B,MAAAo+B,gBAAAhB,IAAAU,MAAAA,KAAAhE,QAEA,KAAA;YACA,IAAA,WACA,MAAA95B,MAAAm+B,aAAAf,IAAAU,MAAAA,KAAAF,KAEA,SACA,IAAA,OACA,MAAA59B,MAAAi+B,aAAAb,OAWAkB,YAAA,SAAAlB,IAAAl7B,SAAAm4B,OAEA,GAAAkE,UAAA9/B,EAAA+/B,UAAApB,SAGAU,KAAA99B,KAAAu9B,QAAAH,IAAAl7B,UACA07B,KAAA59B,KAAAw9B,QAAAe,SAAAT,MAAAA,KAAAF,MACA9D,QAAA95B,KAAA09B,WAAAa,SAAAT,MAAAA,KAAAhE,QA2BA,OAxBAO,QAAA,SAAAA,QACAkE,SAAAnF,SACAwE,OACAW,SAAAnF,MAAA0E,KAAAF,MAAAA,QAKAA,MAAA,YAAAvD,OAAA,gBAAAA,QACAuD,KAAApE,YACAM,UACA8D,KAAApE,SAAAsE,KAAAhE,SAAAA,UAKAA,UACAA,QAAAoE,MAAAl+B,KAAAy+B,iBAAA3E,QAAAE,QAEA4D,OACAA,KAAAM,MAAAl+B,KAAA0+B,aAAAd,KAAApE,WAEA+E,SAAAL,MAAAl+B,KAAA0+B,aAAAH,SAAAnF;iDAEAmF,UASAI,YAAA,SAAAvB,IAAAl7B,UACA,GAAA47B,MAAA99B,KAAAu9B,QAAAH,IAAAl7B,SACA,OAAAlC,MAAAw9B,QAAAJ,IAAAU,MAAAA,KAAAF,OASAgB,eAAA,SAAAxB,IAAAl7B,UACA,GAAA47B,MAAA99B,KAAAu9B,QAAAH,IAAAl7B,UACA07B,KAAA59B,KAAAw9B,QAAAJ,IAAAU,MAAAA,KAAAF,MACApE,SAAAoE,MAAAA,KAAApE,QACA,OAAAA,WAAAA,SAAAsE,MAAAA,KAAAhE,UASAkE,UAAA,SAAAZ,IAAAl7B,UACA,GAAA47B,MAAA99B,KAAAu9B,QAAAH,IAAAl7B,UACA07B,KAAA59B,KAAAw9B,QAAAJ,IAAAU,MAAAA,KAAAF,MACApE,SAAAoE,MAAAA,KAAApE,SACAM,QAAAN,UAAAA,SAAAsE,MAAAA,KAAAhE,SACAE,MAAAF,SAAAA,QAAAE,KACA,OAAAA,QAAAA,MAAA8D,MAAAA,KAAAC,aASA56B,KAAA,SAAAi6B,IAAA9nB,UAUA,MATA7W,GAAAgI,WAAA6O,WACA7W,EAAAsI,QAAAq2B,KAAAA,IAAAhE,MAAA,SAAAwE;uEACAn/B,EAAAsI,QAAA62B,MAAAA,KAAApE,SAAA,SAAAM,SACAr7B,EAAAsI,QAAA+yB,SAAAA,QAAAE,MAAA,SAAA6B,MACAvmB,SAAAumB,KAAA/B,QAAA8D,KAAAR,WAKAA,KASAyB,gBAAA,SAAAzB,IAAAl7B,UACA,GAAA47B,MAAA99B,KAAAu9B,QAAAH,IAAAl7B,UACA07B,KAAA59B,KAAAw9B,QAAAJ,IAAAU,MAAAA,KAAAF,MACApE,SAAAoE,MAAAA,KAAApE,SACAM,QAAAN,UAAAA,SAAAsE,MAAAA,KAAAhE,QAYA,OAVAA,WACAA,QAAAoE,MAAAl+B,KAAAy+B,iBAAA3E,QAAAE,QAEA4D,OACAA,KAAAM,MAAAl+B,KAAA0+B,aAAAd,KAAApE,WAEA4D,MACAA,IAAAc,MAAAl+B,KAAA0+B,aAAAtB,IAAAhE,QAGAgE,KAQAqB,iBAAA,SAAAzE,OACA,MAAAv7B,GAAAm7B,OAAAI,MAAA,SAAAH,IAAAgC,MAcA,MAbAA,MAAAiD,eACAjF,IAAAkD;2CAEAlB,KAAAmB,UACAnD,IAAAmD,WAEAnB,KAAAoB,SACApD,IAAAoD,UAEApB,KAAAqB,QACArD,IAAAqD,SAEArD,IAAAhe,QACAge,KACAiD,kBAQA4B,aAAA,SAAAK,YACA,MAAAtgC,GAAAm7B,OAAAmF,WAAA,SAAAlF,IAAAgC,MAMA,MALAhC,KAAAkD,WAAAlB,KAAAqC,MAAAnB,UACAlD,IAAAmD,UAAAnB,KAAAqC,MAAAlB,SACAnD,IAAAoD,SAAApB,KAAAqC,MAAAjB,QACApD,IAAAqD,QAAArB,KAAAqC,MAAAhB,OACArD,IAAAhe,OAAAggB,KAAAqC,MAAAriB,MACAge,KACAiD,qBCvTAt+B,OAAA,yCACA,UACA,SAAAC,GACA,YAMA,IAAAugC,wBACAC,OAAA,OACAC,SAAA,OACAC,QAAA,OACAC,OAAA,UAMAC,mBAMAC,gBAAA,SAAAC,QACA,GAAAv2B,YAAAu2B,OAAAv2B;gCACA,OAAAA,YAAAG,OAAAH,WAAAG,MAAAq2B,WASAC,uBAAA,SAAAF,OAAAxB,YACA,GAAA1wB,OAAA,IAQA,OAPA5O,GAAAsI,QAAAs4B,kBAAAC,gBAAAC,QAAA,SAAAG,aAEA,IADAA,YAAAC,gBACA5B,aAAAA,WAEA,MADA1wB,OAAAqyB,aACA,IAGAryB,OAUAuyB,WAAA,SAAA/C,MAAAgD,SAAAC,aACA,GAAAC,mBAAAf,sBAAAc,aACAE,WAyBA,OAvBAvhC,GAAAwhC,SAAApD,SACAA,OAAAA,QAGAA,MAAAp+B,EAAA2+B,IAAAP,UAAA,SAAAjJ,GACA,MAAA,YAAAiM,UAAA,IAAAjM,GAAA,SAAAA,EAAAA,IAGAmM,oBACA,SAAAA,kBACA,IAAAlD,MAAAp9B,OAEAugC,SAAAE,KAAA,MAEAF,SAAAE;qGACAF,SAAAE,KAAAL,UAAAhD,MAAA,KAGAmD,SAAAD,sBACAC,SAAAD,mBAAAF,UAAAhD,QAIAmD,UAUAG,eAAA,SAAAtD,MAAAgD,SAAAC,aACA,GAAAC,mBAAAf,sBAAAc,YAIA,OAHArhC,GAAA4J,SAAAw0B,QAAAA,MAAAkD,wBAAA,KAAAlD,MAAAkD,mBAAAF,YACAhD,MAAAA,MAAAkD,mBAAAF,WAEA,OAAAhD,OAAA,WAAAgD,UAAAphC,EAAA28B,QAAAyB,QAAA,WAAAiD,aAAArhC,EAAA28B,QAAAyB,QAWAuD,mBAAA,SAAAJ,SAAAH,SAAAC,YAAAO,cAQA,MANAA,cAAAA,cAAA;uCACAhB,kBAAAc,eAAAH,SAAAH,SAAAC,cACAT,kBAAAc,eAAAE,aAAAR,SAAAC,cAEArhC,EAAA6hC,QAAAN,SAAAX,kBAAAO,WAAAS,aAAAR,SAAAC,eAWAS,WAAA,SAAAhB,QACA,GAAAv2B,YAAAu2B,OAAAv2B,WACAw2B,UAAAx2B,YAAAA,WAAAw3B,eACAnV,MAAA,EACA0K,MAAA,CAgBA,OAdA/sB,aACAvK,EAAAsI,QAAAs4B,kBAAAC,gBAAAC,QAAA,SAAAG,aACA,GAAAC,YAAAD,YAAAC,eACAK,SAAAR,UAAAG,WAAA5B,YACA8B,SAAAF,WAAAE,SACAC,YAAAH,WAAAG,WAEAzU,SACAgU,kBAAAe,mBAAAJ,SAAAH,SAAAC,YAAAJ,YAAAW,eACAtK;wGAKA,IAAA1K,OAAA0K,QAAA1K,OAIA,OAAAgU,qBCrJA7gC,OAAA,mCACA,SACA,gCACA,yCACA,SAAAC,EAAAgiC,UAAApB,mBACA,YAQA,SAAAqB,iBAAArG,MAAAkF,QACA,GAAAnC,KAAAmC,OAAAzE,aACAn0B,QAAA44B,OAAAh3B,iBACA21B,MAAAz/B,EAAA6R,MAAAmwB,UAAApC,cAAAjB,IAAAz2B,QAAAgzB,aAAAU,QAEAsG,wBAAAtB,kBAAAkB,WAAAhB,OAWA,OATAoB,4BACAA,yBAAAh6B,QAAAi6B,cACA1C,MAAAlB,WAGA2D,0BAAAh6B,QAAAi6B,cACA1C,MAAAlB;kEAGAkB,MAGA,OACAwC,gBAAAA,mBCnCAliC,OAAA,sCACA,OACA,gCACA,mCACA,SAAA2G,GAAAs7B,UAAAI,aACA,YASA,SAAAC,gBAAA16B,QAAAi0B,MAAAkF,QACA,GAAArB,OAAA2C,YAAAH,gBAAArG,MAAAkF,QACAwB,gBAAA7C,OAAAA,MAAAnB,UAAAmB,MAAAlB,SACAgE,aAAA9C,OAAAA,MAAAjB,QACAgE,kBAAA,GAEA/5B,SAAAq4B,OAAAp4B,cACAC,WAAAF,UAAAA,SAAAG,MAiBA,SAhBAD,YAAAA,WAAA85B,gCAGAF,cAAAD,gBACAE,kBAAA97B,GAAA,4EACA47B,gBAAAjuB,WACAkuB,aAAAluB,YAGAkuB,aACAC,kBAAA97B,GAAA,yCAAA67B,aAAAluB,YAEAiuB,kBACAE,kBAAA97B,GAAA,sCAAA47B,gBAAAjuB;mcAGAmuB,kBAAA,IAAA76B,SAAA0oB,OAGA,OACAgS,eAAAA,kBC7DAtiC,OAAA,uDAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH;qEAMA,MALArC,MAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,SAIA,wCCeA7D,OAAA,kDACA,SACA,SACA,OACA,eACA,eACA,aACA,aACA,WACA,yBACA,0DACA,qCACA,uDACA,SAAAK,EAAAJ,EAAA0G,GAAAgD,QAAAmuB,eAAAC,aAAAC,MAAA9tB,MAAAhK,cAAAyiC,sBAAA9F,SAAA+F,aACA;YAMA,IAWAC,aAAAl8B,GAAA,8IAGAy2B,YACA1E,KAAA,iBACAqC,SAAA,WACAO,QAAA,oBACA+B,KAAA,qBAQAyF,eAAA,SAAA36B,SACA,GAAA46B,iBAAA56B,QAAA46B,mBACA,OAAA9iC,GAAA+iC,KAAAD,gBAAA,SAAAE,YACA,MAAA,sBAAAA,WAAAC,eAQA,OAAAhjC,gBAEA4F,KAAA,QAKA8D,QAAA,WACA,GAAA5D,MAAAxE,IAGAA,MAAAyE,gBACA1E,GAAA,cAAA,WACAyE,KAAAm9B,oBAAA,KAOAp9B,KAAA,WAkNA,QAAAq9B,YACAp9B,KAAAyxB,SAAA,YACAzxB,KAAAO;wCAOA,QAAA88B,aACAr9B,KAAAyxB,SAAA,YACAzxB,KAAAK,UA3NA,GAAAL,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACA26B,WAAA56B,SAAA46B,eACAC,aAAA76B,SAAAG,QAAAH,SAAAG,OAAA06B,iBAEAC,mBACAC,UAEAC,UAAA,EACAC,kBAAA,EACAC,sBAAA,EAMAC,sBAAA,WACA,MAvEA,KAuEAvmB,KAAAgd,IAAA,EAAAoJ,UAAAC,oBASAG,iBAAA,SAAAC,YAAAvG,WAOA,MALAuG,aAAAvG,UAAAA,UAAAqG,wBAGAE,YAAAC,QAAAxG,UAEAuG,aAQAE,eAAA,SAAAp2B,MACA,GAAAq2B,gBACArnB,MACAsnB,uBACAh8B,QAAA9F,WAAA0H;mFAkCA,OA/BA5B,SAAAi8B,WAAAj8B,QAAAk8B,mBAAAf,WAAAgB,cACAJ,eAAAjkC,EAAA89B,SAAA51B,QAAA46B,iBACAG,aAAAr1B,UAGAgP,MAAAinB,kBACApJ,MAAAwJ,eAAAxJ,MACA7sB,KAAAq2B,eAAAhB,aACAhiC,GAAAgjC,eAAAtM,OACAhgB,SAAA,EACA6lB,aAhHA,IAiHAyG,eAAAK,SAEAtkC,EAAAsjC,aAAAW,eAAAhB,eAAA36B,QAAA,SAAA81B,MAAAh1B,KACApJ,EAAAgwB,UAAA,OAAA,UAAA,UAAAoO,SACAxhB,MAAA4gB,SAAAp0B,MACAwE,KAAAwwB,MACAL,OAAAnhB,MAAA2gB,UAvHA,KAuHAn0B,IACA60B,MAxHA,IAwHAhJ,SAAA7rB,IAAA,QAKA86B,uBAAAlkC,EAAAa,KAAA+b,MAAA4gB,UACAO,QAAA;aAEA/9B,EAAA28B,QAAAuH,yBAAAA,uBAAAjG,OAAArhB,MAAA4gB,SAAA0G,uBAAAjG,MAhIA,OAiIArhB,MAAA4gB,SAAA0G,uBAAAjG,MAjIA,KAiIAF,QAAA,IAIAnhB,OAIA2nB,kBAAA,SAAA32B,KAAAguB,MAAAn4B,UACA,GAAAyE,SAAA9F,WAAA0H,iBACA60B,IAAAv8B,WAAAi6B,aAEAhB,QAAAsD,IAAAhE,MAAAzyB,QAAA0yB,YAAAG,SAAA7yB,QAAA8yB,WACAwJ,QAAAxkC,EAAAs7B,KAAAD,QAAAE,OACA6B,KAAAp9B,EAAAa,KAAAw6B,QAAAE,OACA93B,SAAAyE,QAAAgzB,cAGA,SAAAhzB,QAAAi8B,WAAAj8B,QAAAk8B,mBAAAf,WAAAoB,SAAA5B,eAAA36B,WAAAk1B,UAEA,SAAAxvB,OAAA,sBAAAguB,OAAAwB,KAAA1B,kBAAA,IAAA8I,UACA,aAAA52B,MAAA,IAAAwvB,KAAA1B,mBACA,SAAA9tB,MAAAnK,SAAA,IAAAA,SAAA43B,QAAA53B,UAAAA,UAAA43B,QAAA53B,SAAA+gC;6UAUAE,YAAA,SAAA92B,MACA21B,gBAAA31B,QACA7H,KAAA4+B,QAAAC,WAAArB,gBAAA31B,MAAA3M,MAEAsiC,gBAAA31B,MAAArH,UACAg9B,gBAAAvjC,EAAA6kC,KAAAtB,gBAAA31B,MACA41B,OAAAxjC,EAAA6kC,KAAArB,OAAA51B,MAMA7H,KAAAkB,QAAA,cAAA2G,QASAk3B,SAAA,SAAAl3B,KAAAhF,QACAA,SAEA46B,OAAA51B,MAAAhF,OAAAm7B,QAGAR,gBAAA31B,MAAA80B,sBAAA95B;oDACA26B,gBAAA31B,MACA9H,OACAwE,OAAAvE,KAAAmE,UAOAnE,KAAAkB,QAAA,WAAA2G,KAAA21B,gBAAA31B,SAQAm3B,aAAA,SAAAC,cACA,GAAAC,wBACA/8B,QAAA9F,WAAA0H,gBA+CA,OA9CA5B,SAAAu7B,YACAA,UAAAv7B,QAAAu7B,UAAArmB,MACAsmB,kBAAArmB,KAAAgd,IAAAqJ,kBAAAx7B,QAAAu7B,UAAAyB,WAGAllC,EAAAsI,QAAA60B,WAAA,SAAAvvB,MACAq3B,oBAAAvhC,KACA,GAAAgG,SAAA,SAAAG,SACA,GAAAi6B,aAAAE,eAAAp2B,KAEA,OAAA21B,iBAAA31B,OACAk2B,YAEAP,gBAAA31B,MAAA3M,OAAA6iC,YAAA7iC,IACAyjC,YAAA92B,MACAk3B,SAAAl3B,KAAAk2B,eAEAD,iBAAAC,YAAAN,OAAA51B;wEACA21B,gBAAA31B,MAAAuwB,IAAA2F,YAAAvG,YANAmH,YAAA92B,MAQA/D,WACAi6B,YAEAkB,iBAEAj/B,MAAA4+B,QAAAjM,QAAAoL,YAAA7iC,IAAAo2B,KAAA,SAAA8N,WAKA,MAJAnlC,GAAA84B,SAAAqM,YAAAA,WAAA,GACAtB,iBAAAC,YAAAqB,WAEAL,SAAAl3B,KAAAk2B,aACAj6B,YACA+vB,MAAA,WAGA,MADAkL,UAAAl3B,KAAAk2B,aACAj6B,aAGAi7B,SAAAl3B,KAAAk2B,aACAj6B,WAGAA,eAKAH,QAAA07B,IAAAH,qBAqBA,OAAAlN,OAAA,SAAA31B,WAAAg2B,YAAAC,eACAhB,KAAA,SAAAgO,WACA,MAAAt/B,MAAAm9B,mBACAmC,UAAA57B,QAAA4tB,KAAA;iEACA,MAAAgO,aAGA37B,QAAAG,QAAAw7B,aACAhO,KAAA,SAAAgO,WAGAt/B,KAAA4+B,QAAAU,UAGAt/B,KAAAmE,SAAA9J,EAAAuiC,eAGA58B,KAAA4yB,UAAAb,cACAc,WAAA,IAIA7yB,KAAAkzB,QAAApB,gBAMAqB,OAAA,WAGA,GAGAoM,cAAAC,WAHApM,QAAApzB,KAAA4yB,UAAAS,OACAoM,iBAAA,EACA1uB,SAAA,CAGA9W,GAAAsI,QAAAi7B,gBAAA,SAAA3mB,MAAAhP,MACA,GAAA63B,YACAC,aACA33B,QACA43B,WAAA,WACAvjC,WAAA0U,QAAAwuB,aAAAC,YAGA3oB,OAAAjF,YACA8tB,WAAAjC,OAAA51B,MAAAurB,QACAuM,aAAA9oB,MAAAuhB,MAAAhF,QACAqK,OAAA51B,MAAAyP,KAAAgd,IAAAoL,WAAA,GACA7oB,MACAuhB,IAAA9gB,KAAAgd,IAAAqL,aAAA,IACAhI;8CAEA+H,YAAA,IAEAD,iBAAAnoB,KAAAgd,IAAAmL,iBAAAnoB,KAAAuoB,IAAAH,cAGAC,cAAA,GACA9oB,MAAAjF,SAAA,GACAb,SAAA,EACAyuB,WAAA3oB,MAAA3b,KACAqkC,aAAA13B,KAEA7H,KAAA4+B,QAAA3L,QAAApc,MAAA3b,KAAA,GACAo2B,KAAAsO,YACA/L,MAAA+L,cAGA5/B,KAAA4+B,QAAA3L,QAAApc,MAAA3b,KAAAuiC,OAAA51B,OACAG,QAAA6O,MAAAihB,OACA79B,EAAA28B,QAAA5uB,UACA3L,WAAA6E,QAAA8G,QAAAH,KAAAG,QAAAhC,UAKAy5B,mBACA9B,mBAAA8B,iBAjWA,IAkWA7B,uBAAA6B,kBAEA1uB,SACA/Q,KAAAK,WAGAmzB,SA9WA,IA+WAX,WAAA,IAIAx2B,WACAkH,OAAA,wBAAA,WACA,MAAAy7B,eAAA,KAEAzjC,GAAA,aAAA6hC,UACA7hC,GAAA,yBAAA8hC,WACA/8B,MAAA,aAAA88B,UACA75B,OAAA,OAAA,SAAAxB,EAAA8F,KAAAguB,MAAAn4B;+IACA,GAAAyE,SAAA9F,WAAA0H,iBACArB,SAAArG,WAAAsG,cACAE,OAAAH,UAAAA,SAAAG,OACAk7B,YAAAl7B,QAAAA,OAAAgU,UACAipB,QAAA39B,SAAAA,QAAA29B,YAEAC,YAAA,GAAAp8B,SAAA,SAAAG,QAAAjC,QAEAM,QAAA6E,QAAA84B,QAAAE,eACAl8B,WAEA06B,kBAAA32B,KAAAguB,MAAAn4B,WAAAoiC,QAAAG,2BAAAlC,YAAAmC,gBAGAp8B,UAFAzH,WAAA6E,QAAA,oBAAA21B,SAAAyF,eAAAO,YAAA,UAAAxgC,YAAAyH,QAAAjC,SAqBA,OAfAk+B,aACAzO,KAAA;oCAEA+L,YACAsB,YAAAvH,WAAAC,QAEAxD,MAAA,WAIA55B,EAAAoD,MAAA,WACAhB,WAAA6E,QAAA,4BAIA6+B,cAEAx8B,OAAA,yBAAA,WACAlH,WAAAw1B,WAAA6B,qBACAiK,kBAAAC,sBA1ZA,MA4ZAA,sBAAA,IAEAr6B,OAAA,SAAA,WACA,MAAA,IAAAI,SAAA,SAAAG,SACA9D,KAAA4+B,QAAAhL,cACAtC,KAAAxtB,SACA+vB,MAAA/vB,gBASAS,OAAA,WACA/I,KAAAsB,gBAAA05B,iBACA3xB,OAAArJ,KAAA2I,WAMA3D,QAAA,WACAhF,KAAA03B,QAAA9qB,OACA5M,KAAAo3B,UAAAxqB,OACA5M,KAAA2I,SAAA1D,UAMAF,OAAA,WACA/E,KAAA03B,QAAA/qB,QACA3M,KAAAo3B,UAAAkB;yBAMAzzB,QAAA,WACA7E,KAAA03B,QAAA9qB,OACA5M,KAAAo3B,UAAAmB,SAMAxpB,KAAA,WACArG,MAAAqG,KAAA/O,KAAA2I,WAMAhD,KAAA,WACA+C,MAAA/C,KAAA3F,KAAA2I,eCpgBAnK,OAAA,sDAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAKA,QAAAuH,UAAAH,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EAgBA,OAfAA,SAAA,oCACAD,OAAAJ,QAAAuB,SAAApB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAwB,QAAApB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA;mEACAC,OAAAJ,QAAAc,MAAAX,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAe,KAAAX,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,KACAA,OAAAH,QAAAa,OAAAN,KAAAR,OAAA,MAAApH,OAAA,IAAAA,KAAAA,KAAAA,KAAAN,OAAAmI,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAA+5B,SAAAtiC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,SACAC,OAAAJ,QAAAc,MAAAX,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAe,KAAAX,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA;mDAGA,QAAA86B,UAAAl7B,OAAApH,MAGA,MAAA,MA3BArC,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAE,OAAA,GAAAI,aAAA,WAAAC,iBAAApK,KAAAoK,iBAAA5F,KAAAxE,IAgCA,OAJA+J,SAAA,2CACAF,OAAAH,QAAAvG,KAAA8G,KAAAR,OAAAA,QAAAA,OAAAm7B,QAAA16B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAhB,SAAAvH,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,qBCbAvL,OAAA,kDACA,SACA,OACA,yBACA,sDACA,SAAAK,EAAAsG,GAAAzG,cAAAmmC;8LACA,YAEA,OAAAnmC,gBACA4F,KAAA,QACAC,KAAA,WACA,GAAAC,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,cAEA2J,cAAA,WAEA,GAAAnK,SAAA9F,WAAA0H,iBACAq8B,SACA35B,QAAA,iBACAT,KAAAtD,SAAAgE,OASA,OAPAvE,SAAAm+B,yBACAF,OAAAziC,MACA8I,QAAA,oBACAT,KAAA7D,QAAAo+B,eAIAlmC,EAAAgmC,UAAAD,OAAAA,UAGA5kC,MAAA2I,SAAAmI,gBAGAjQ,WACAiE,MAAA,aAAA,WACA,GAAA6D,UAAAmI;4BACAtM,MAAAmE,SAAAq8B,YAAAr8B,UACAnE,KAAAmE,SAAAA,YAIAI,OAAA,WACA/I,KAAAsB,gBAAA05B,iBACA3xB,OAAArJ,KAAA2I,eC9CAnK,OAAA,+DACA,SACA,SACA,aACA,0BACA,SAAAC,EAAA+8B,OAAAyJ,aAAAvmC,eACA,YAYA,SAAAwmC,aACA,MAAAnnB,MAAAonB,MAAAC,UAPA,GAAAA,WAAA,GAaA,OAAA1mC,gBAEA4F,KAAA,qBAKA8D,QAAA,WACA,GAAA5D,MAAAxE,IACAwE,MAAAC,gBAAA1E,GAAA,cAAA,WACAyE,KAAAm9B,oBAAA,KAOAp9B,KAAA,WAMA,QAAA8gC,SAAAj5B,KACAvL,WAAA6E,QAAA,QAAA0G,KALA,GAAA5H,MAAAxE,KACAa,WAAAb,KAAAyE,gBACA6gC;0DAMA,OAAAL,cAAA,SAAApkC,WAAAg2B,YAAAC,eACAhB,KAAA,SAAAyP,aACA,MAAA/gC,MAAAm9B,mBACA4D,YAAAr9B,QAAA4tB,KAAA,WACA,MAAAyP,eAGAA,cACAzP,KAAA,SAAAyP,aACA1kC,WACAiE,MAAA,wBAAA,WACA,GAAA6B,SAAA9F,WAAA0H,gBAEA+8B,YACAE,uBAAAN,aAGAK,YAAApO,QAAAxwB,QAAA6B,SACAstB,KAAA,SAAAzzB,MAKA,MAJAA,OACA5D,EAAAuM,MAAAs6B,UAAAjjC,MAGAkjC,YAAA9N,QAAA9wB,QAAA6B,QAAA88B,aAEAjN,MAAAgN,WAGAt9B,OAAA,yBAAA,WACA,GAAApB,SAAA9F,WAAA0H,gBAKA,OAHA+8B,WAAAG,qBAAAP;mDACAI,UAAAI,cAAAlK,SAAAmK,UAAAnK,SAAAmK,aAAAC,OAAA,KAEAL,YAAA9N,QAAA9wB,QAAA6B,QAAA88B,WAAAjN,MAAAgN,WAGAt9B,OAAA,aAAA,WACA,GAAApB,SAAA9F,WAAA0H,gBACA,OAAA1H,YAAAw1B,WAAAwP,eAAAl/B,QAAA6B,QAAA,kBACAs9B,UAAAC,KAAAC,UAAAV,eAIAv9B,OAAA,SAAA,WACA,MAAA,IAAAI,SAAA,SAAAG,SACAi9B,YAAAnN,cACAtC,KAAAxtB,SACA+vB,MAAA/vB,oBClGA9J,OAAA,iEAAA,WACA,YAQA,IAAAynC,WAAA,SAAApJ,MAAAwD,cACA,WAAA,KAAA,MACAA,cAEA,IAAAxD,OAAA,SAAAA;8DAsIA,OApHA,UAAAyH,SA6BA,QAAA4B,wBACA,OACA,IAAA16B,SACA,IAAA26B,WACA,IAAAC,oBACAC,yBAOA,QAAAA,0BACA,MAAAC,eAAA,KAAAA,SAAAH,UACAI,iBACA,IAAAD,SAAAH,SAeA,QAAAK,uBACA,MAAAh7B,UAEAg5B,gBACAiC,iBAEAC,+BAQA,QAAAA,gCACA,GAAAC,eAAAzI,OAAAA,MAAAnB,UAAAmB,MAAAlB,UAAA,EACA4J,WAAA1I,OAAA,IAAAA,MAAAjB,OAEA,QAAA4J,iBACAF,eAAAC,YAUA,QAAAE,0BACA,MAAAC,kBACAR,gBACAG;uEAOA,QAAAH,gBACA,MAAAD,WAAAA,SAAA5mC,IACA25B,aAAAiN,SAAA5mC,GAnGA,GAAA8kC,gBAAAyB,UAAA3B,QAAAE,gBAAA,GACAh5B,OAAAy6B,UAAA3B,QAAA94B,QAAA,GACA26B,SAAAF,UAAA3B,QAAA6B,UAAA,GACAa,gBAAAf,UAAA3B,QAAA0C,iBAAA,GACAD,gBAAAd,UAAA3B,QAAAyC,iBAAA,GACA7I,MAAAoG,QAAApG,MACAoI,SAAAhC,QAAAgC,aACAF,sBAAA,KAAA9B,QAAA,mBAAA,EAAAA,QAAA8B,kBACA/M,WAAAiL,QAAAjL,YAAA,GACAwN,eAAAZ,UAAA3B,QAAAuC,gBAAA,GAEAJ,eAQA,WACA,MAAAO,mBACAd;mDATAe,cAqCA,WACA,MAAAT,wBACAM,2BAsDA,QACAI,oBAAA,WACA,MAAAD,gBAEAE,qBAAA,WACA,MAAAV,qBC/IAjoC,OAAA,6CACA,SACA,SACA,OACA,WACA,yBACA,8DACA,qCACA,gCACA,kCACA,gBACA,iBACA,kDACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAhK,cAAA0oC,kBAAA/L,SAAAoF,UAAAI,YAAA5hC,SAAAC,gBAAAiM;keACA,YAKA,IAAAC,aACAnL,MACAgL,QAAA,eACAC,MAAA/F,GAAA,kCACAmF,KAAA,UACAE,KAAArF,GAAA,SAEAkG,KACAJ,QAAA,WACAC,MAAA/F,GAAA;iDACAmF,KAAA,eACAE,KAAArF,GAAA,cASA2L,cAAA,SAAAnK,SACA,GAAA4E,UAAA5E,QAAA6E,OAAA,MAAA,MACA,OAAA3M,GAAAsM,UAAAC,WAAAG,aAQA87B,cAAA,SAAA1+B,SAAAhC,SACA,GAAA4E,UAAA5E,QAAA6E,OAAA,MAAA,MACA7C,UAAAtG,KAAA,aAAA+I,WAAAG,UAAAN,UAEAtC,SAAAtG,KAAA,UAAA+I,WAAAG,UAAAN,SACAwqB,KAAA,QAAArqB,WAAAG,UAAAL,OACA5L,KAAA,SAAAkL,KAAAY,WAAAG,UAAAf,MAEA,SAAAe,SACA5C,SAAArJ,KAAA,SAAA8L,WAAAC,IAAAf,MACA1H,YAAA,QAAAwI,WAAAC,IAAAf,MACA3H,SAAA,QAAAyI,WAAAnL,KAAAqK,MAEA3B,SAAArJ,KAAA,SAAA8L,WAAAnL,KAAAqK,MACA1H,YAAA,QAAAwI,WAAAnL,KAAAqK,MACA3H,SAAA,QAAAyI,WAAAC,IAAAf;4QAQA,OAAA5L,gBACA4F,KAAA,OAKAC,KAAA,WAYA,QAAA+iC,QAAAN,iBA+BA,QAAAjiC,UACAlE,WAAA6E,QAAA,yBA/BA,GAAAiB,SAAA9F,WAAA0H,iBACAg/B,YAAA5gC,QAAA29B,YAEAlH,IAAAv8B,WAAAi6B,aACA0M,iBAAA7gC,QAAAgzB,aAAA,EAIAoN,gBAAAQ,YAAAR,iBAAAQ,YAAAE,kBACAZ,gBACAU,YAAA/C,gBAEA+C,YAAAE,kBAEAC,aAAA,gBAAA,OAAA,OAEAC,cAAAP;6WACA5C,eAAA+C,YAAA/C,eACAh5B,OAAA7E,QAAA6E,OACA26B,SAAAx/B,QAAAw/B,SACAa,gBAAAA,gBACAD,gBAAAA,gBACAT,SAAA7F,UAAA9B,YAAAvB,IAAAoK,kBACApB,kBAAAz/B,QAAAy/B,kBACA/M,WAAA1yB,QAAA0yB,WACAoO,kBAAAF,YAAAE;gDACAvJ,MAAA2C,YAAAH,gBAAAgH,aAAA7mC,YACAgmC,eAAAA,kBAOA,IAAAriC,KAAAyxB,SAAA,aACAp1B,WAAA6E,QAAA,2BAEAiiC,cAAAT,sBACArmC,WAAA6E,QACA,kBACA21B,SAAAyF,eACA37B,GAAA,wIACAuiC,aAAA7mC,YACApC,EAAAmpC,QAAAC,kBAAAlhC,SACA5B,QAGA4iC,cAAAR,uBACAtmC,WAAA6E,QACA,eACAP,GAAA,uFACA1G,EAAAmpC,QAAAC,kBAAAlhC,SACA5B,QAIA8iC,kBAAAlhC;4hBAKA,QAAAkhC,mBAAAlhC,SACAA,QAAA6E,QACAhH,KAAAkB,QAAA,OAEA7E,WAAAZ,OA7EA,GAAAuE,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,cACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF;6KA6EAlF,MAAA2I,SAAAmI,cAAAjQ,WAAA0H,kBAGAvI,KAAA2I,SAAA5I,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,cAGA0B,WAAAO,gBAAAL,gBAAA5B,SACAzG,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAA5B,QAAA1F,KAAAkF,WAAA,GAAA,SAAAqB,IACA,IAAA/B,KAAAyxB,SAAA,YACAp1B,WAAA6E,QAAA,YAAA,KAGAoiC,YAAA,EACArgC,SAAA,IAKAzH,KAAA6E,UAGAhE,WACAd,GAAA,WAAA,WACAsnC,cAAA7iC,KAAAmE,SAAA9H,WAAA0H;2DAEAxI,GAAA,YAAA,WACAyE,KAAAO,WAEAhF,GAAA,aAAA,WACAyE,KAAAK,YAEA9E,GAAA,WAAA,SAAAinC,iBACAM,OAAAN,oBAOAj+B,OAAA,WAGA/I,KAAAsB,gBAAAsK,oBACAvC,OAAArJ,KAAA2I,WAMA3D,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,WACAlF,KAAA2I,SAAA1D,UAMAF,OAAA,WACA/E,KAAA2I,SAAAmD,WAAA,YACAlJ,YAAA,aAMAiC,QAAA,WACA7E,KAAA2I,SAAAoD,KAAA,YAAA,GACApJ,SAAA,aAMAoM,KAAA,WACArG,MAAAqG,KAAA/O,KAAA2I,WAMAhD,KAAA,WACA+C,MAAA/C,KAAA3F,KAAA2I,eCnPAnK,OAAA,oDACA,SACA,SACA,OACA,WACA,yBACA,qCACA,kDACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAhK,cAAA28B,SAAAlwB;uQACA,YAEA,OAAAzM,gBACA4F,KAAA,cACAC,KAAA,WAKA,QAAAwjC,UACA,GAAAzD,SAAAzjC,WAAA0H,iBAAA+7B,OACAl9B,YAAA4gC,cAAA1D,QAAA0D,aAAA1D,QAAA2D,oBACAzjC,KAAAuK,OAEAvK,KAAAmB,OAIA,QAAAqiC,eACAnnC,WAAAZ,KAAA,WAdA,GAAAuE,MAAAxE,KACAa,WAAAb,KAAAyE,gBACA2C,WAAAvG,WAAAsG,cAAAE,MAeArH,MAAA2I,SAAA9J,EAAAsM,WACAF,QAAA;uBACAC,MAAA/F,GAAA,4BACAmF,KAAA,eACAE,KAAArF,GAAA,mBAGAnF,KAAA2I,SAAA5I,GAAA,QAAA,SAAAwG,GACA,GAAAI,SAAA9F,WAAA0H,iBACAxD,OAAAtG,EAAAypC,KAAA1jC,KAAAO,OAAAP,KACA+B,GAAAmF,kBACA,IAAAlH,KAAAyxB,SAAA,aACAzxB,KAAAK,UAEA8B,QAAA29B,QAAA2D,mBACApnC,WAAA6E,QACA,sBACA21B,SAAAyF,eACA37B,GAAA,8IACA,UAAAtE,YACAmnC,YACAjjC,QAGAijC,iBAKAhoC,KAAA6E,UACAkjC,SAEAlnC,WACAd,GAAA,WAAAgoC,QACAhoC,GAAA,YAAA;2DACAyE,KAAAO,WAEAhF,GAAA,aAAA,WACAyE,KAAAK,aAOAkE,OAAA,WAGA/I,KAAAsB,gBAAAsK,oBACAvC,OAAArJ,KAAA2I,WAMA3D,QAAA,WACAhF,KAAA2I,SAAA1D,UAMAF,OAAA,WACA/E,KAAA2I,SAAAmD,WAAA,YACAlJ,YAAA,aAMAiC,QAAA,WACA7E,KAAA2I,SAAAoD,KAAA,YAAA,GACApJ,SAAA,aAMAoM,KAAA,WACArG,MAAAqG,KAAA/O,KAAA2I,WAMAhD,KAAA,WACA+C,MAAA/C,KAAA3F,KAAA2I,eCrHAnK,OAAA,iDACA,SACA,SACA,OACA,WACA,yBACA,gBACA,iBACA,kDACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAhK,cAAAO,SAAAC,gBAAAiM;gRACA,YAKA,OAAAzM,gBAEA4F,KAAA,WAKAC,KAAA,WAoCA,QAAA4jC,YAAAC,qBAGA,QAAArjC,UACAlE,WAAA6E,QAAA,yBAHA,GAAAiB,SAAA9F,WAAA0H,kBAMA,IAAA/D,KAAAyxB,SAAA,aACAp1B,WAAA6E,QAAA,2BAEA0iC,sBAAA,IAAAzhC,QAAAy/B,kBACAvlC,WAAA6E,QACA,mBACAP,GAAA,+FACAtE,WAAAX,SACA6E,QAIAlE,WAAAX;+OAtDA,GAAAsE,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,cACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF,eAKAmjC,cAAA,WACA,GAAA1hC,SAAA9F,WAAA0H,gBACA,QAAA,IAAA5B,QAAAw/B,WAAA,IAAAx/B,QAAA2hC,iBAMAP,OAAA,WACAM,gBACA7jC,KAAAuK,OAEAvK,KAAAmB,OAKA3F,MAAA2I,SAAA9J,EAAAsM,WACAF,QAAA,gBACAC,MAAA/F,GAAA;+CACAmF,KAAA,WACAE,KAAArF,GAAA,eA4BAnF,KAAA2I,SAAA5I,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,kBAGA0B,WAAAO,gBAAAL,gBAAA5B,SACAzG,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAA5B,QAAA1F,KAAAkF,WAAA,GAAA,SAAAqB,GACA8hC,kBAAA,IAAA7jC,KAAAyxB,SAAA,YACAp1B,WAAA6E,QAAA,iBAAA,MAGAoiC,YAAA,EACArgC,SAAA,IAKAsgC,SACAvjC,KAAAK,UAGAhE,WACAd,GAAA,WAAAgoC,QACAhoC,GAAA,YAAA,WACAyE,KAAAO,WAEAhF,GAAA,aAAA,WACAyE,KAAAK,YAEA9E,GAAA,eAAA,SAAAqoC,qBACAD,WAAAC;mCAQAr/B,OAAA,WACA/I,KAAAsB,gBAAAsK,oBACAvC,OAAArJ,KAAA2I,WAMA3D,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,WACAlF,KAAA2I,SAAA1D,UAMAF,OAAA,WACA/E,KAAA2I,SAAAmD,WAAA,YACAlJ,YAAA,aAMAiC,QAAA,WACA7E,KAAA2I,SAAAoD,KAAA,YAAA,GACApJ,SAAA,aAMAoM,KAAA,WACArG,MAAAqG,KAAA/O,KAAA2I,WAMAhD,KAAA,WACA+C,MAAA/C,KAAA3F,KAAA2I,eCtLAnK,OAAA,6DAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAKA,QAAAuH,UAAAH,OAAApH,MAGA,MAAA,UAGA,QAAAgI,UAAAZ,OAAApH;+BAEA,GAAAyH,QAAAw6B,QAAAv6B,OAAA,EAoBA,OAnBAA,SAAA,sKACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,cAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,cAAA66B,WACA,yPACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;yZAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,eAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,eAAA66B,WACA,wNACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;0XAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,SAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,SAAA66B,WACA,0MACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;gWAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,kBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,kBAAA66B,WACA,0NACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;kYAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,WAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,WAAA66B,WACA,4MACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;sWAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,mBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,mBAAA66B,WACA,4NACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;sYAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,aAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,aAAA66B,WACA,yMACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;uWAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,gCAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,gCAAA66B,WACA,yNACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;6ZAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,UAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,UAAA66B,WACA;wRAIA,QAAAkE,UAAA/+B,OAAApH,MAGA,MAAA,iDAGA,QAAAomC,UAAAh/B,OAAApH,MAGA,MAAA,mBAGA,QAAAqmC,UAAAj/B,OAAApH,MAEA,GAAAyH,QAAAw6B,QAAAv6B,OAAA,EAGA,OAFAA,SAAAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,aAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,aAAA66B,WACA;yJAIA,QAAAqE,WAAAl/B,OAAApH,MAGA,MAAA,gBAGA,QAAAumC,WAAAn/B,OAAApH,MAEA,GAAAyH,QAAAw6B,QAAAv6B,OAAA,EAGA,OAFAA,SAAAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,UAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,UAAA66B,WACA,kDAjEAtkC,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAC,OAAAw6B,QAAAv6B,OAAA,GAAAw+B,cAAA7+B,QAAA6+B,cAAAn+B,iBAAApK,KAAAoK,iBAAA5F,KAAAxE;yHAyGA,OAtCA+J,SAAA,sCACAF,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAo/B,QAAA3+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAhB,SAAAvH,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,2HACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,4BAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,4BAAA66B,WACA,kFACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;8QAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,0BAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,0BAAA66B,WACA,kCACAz6B,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAq/B,YAAA5+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAAP,SAAAhI,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,sMACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;qQAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,gBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,gBAAA66B,WACA,+BACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,MAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,MAAA66B,WACA,2BACAz6B,OAAAH,QAAAa,OAAAN,KAAAR,OAAAA,QAAAA,OAAAq/B;6DAAA5+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAA49B,SAAAnmC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,gKACAF,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAq/B,YAAA5+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAA69B,SAAApmC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,6BACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,oCAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,oCAAA66B,WACA;kLACAz6B,OAAAH,QAAAa,OAAAN,KAAAR,OAAAA,QAAAA,OAAAq/B,YAAA5+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAA89B,SAAArmC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,6JACAF,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAq/B,YAAA5+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,GAAA+9B,UAAAtmC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF;uCACAE,QAAA,6BACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,2CAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,2CAAA66B,WACA,6BACAz6B,OAAAH,QAAAa,OAAAN,KAAAR,OAAAA,QAAAA,OAAAq/B,YAAA5+B,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,GAAAg+B,UAAAvmC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,4PACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;2TAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,sDAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,sDAAA66B,WACA,yEACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B;QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,sDAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,sDAAA66B,WACA,mDC5GA9lC,OAAA,iEAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAKA,QAAAuH,UAAAH,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EAoBA,OAnBAA,SAAA,qDACAF,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAs/B,QAAA7+B,QAAAO,QAAAjG,KAAAoG,QAAA,EAAAC,SAAAxI,MAAAsI,GAAAnG,KAAAoG,QAAA,EAAA+5B,SAAAtiC;iCAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,eACAD,OAAAJ,QAAAhK,IAAAmK,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAA/J,GAAAmK,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,2DACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,uDACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR;kDAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,qIACAA,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAA08B,UAAAj8B,QAAAO,QAAAjG,KAAAoG,QAAA,EAAAo+B,SAAA3mC,MAAAsI,GAAAnG,KAAAoG,QAAA,EAAAE,SAAAzI,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,wBAGA,QAAA46B,UAAAl7B,OAAApH,MAGA,MAAA,SAGA,QAAAwI,UAAApB,OAAApH,MAGA,MAAA,YAGA,QAAAyI,UAAArB,OAAApH;+BAEA,GAAAwH,QAAAC,OAAAw6B,QAAAv6B,OAAA,EAcA,OAbAA,SAAA,4HACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,sDAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,sDAAA66B,WACA,iFACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,sDAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,sDAAA66B,WACA;oUACAx6B,OAAAJ,QAAAxH,UAAA2H,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAvH,SAAA2H,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,YACAO,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,kBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,kBAAA66B,WACA,8DACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;sOAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,kBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,kBAAA66B,WACA,kJAIA,QAAA0E,UAAAv/B,OAAApH,MAEA,GAAAwH,QAAAE,OAAA,EAKA,OAJAA,SAAA;0GACAF,OAAAH,QAAAvG,KAAA8G,KAAAR,OAAAA,QAAAA,OAAA+vB,UAAAtvB,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,EAAA89B,SAAArmC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,gCAGA,QAAA2+B,UAAAj/B,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EAwBA,OAvBAA,SAAA,gEACAF,OAAAH,QAAA,GAAAO,KAAAR,OAAAA,QAAAA,OAAAs/B,QAAA7+B,QAAAO,QAAAjG,KAAAoG,QAAA,EAAAC,SAAAxI,MAAAsI,GAAAnG,KAAAoG,QAAA,EAAA+5B,SAAAtiC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,eACAD,OAAAJ,QAAAhK,IAAAmK,OAAAC,OAAAG,KAAAR;+CAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAA/J,GAAAmK,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,mEACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,+DACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR;wDAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,sEACAO,kBAAAP,OAAAJ,QAAAA,OAAAy0B,MAAAr0B,OAAA,MAAAA,SAAA,IAAAA,OAAAA,OAAAA,OAAAmzB,eAAAnzB,UAAAM,aAAAN,OAAAgJ,MAAApJ,QAAAI,SACA,IACAO,kBAAAP,OAAAJ,QAAAA,OAAAy0B,MAAAr0B,OAAA,MAAAA,SAAA,IAAAA,OAAAA,OAAAA,OAAAgS,YAAAhS,UAAAM,aAAAN,OAAAgJ,MAAApJ,QAAAI,SACA,yIACAA,OAAAH,QAAAvG,KAAA8G,KAAAR,OAAAA,QAAAA,OAAAuwB;sDAAA9vB,QAAAO,QAAAjG,KAAAkG,KAAAC,GAAAnG,KAAAoG,QAAA,GAAAq+B,UAAA5mC,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,iEAGA,QAAAk/B,WAAAx/B,OAAApH,MAEA,GAAAwH,QAAAC,OAAAC,OAAA,EA8BA,OA7BAA,SAAA,0DACAD,OAAAJ,QAAAw/B,KAAAr/B,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAy/B,IAAAr/B,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,eACAC,OAAAJ,QAAAhK,IAAAmK,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAA/J;6BAAAmK,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,qBACAC,OAAAJ,QAAAxH,UAAA2H,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAvH,SAAA2H,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,oFACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA;4GACAC,OAAAJ,QAAAY,MAAAT,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAa,KAAAT,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,gFACAC,OAAAJ,QAAA+X,OAAA5X,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAgY,MAAA5X,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,2CACAC,OAAAJ,QAAAwvB,OAAArvB,OAAAC,OAAAG,KAAAR;kDAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyvB,MAAArvB,aAAAC,UAAAK,aAAAL,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,2FA/HA7J,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAE,OAAA,GAAAw+B,cAAA7+B,QAAA6+B,cAAAn+B,iBAAApK,KAAAoK,iBAAAD,aAAA,WAAA3F,KAAAxE,IAqIA,OAJA+J,SAAA,iDACAF,OAAAH,QAAAvG,KAAA8G,KAAAR,OAAAA,QAAAA,OAAA2vB,OAAAlvB,QAAAO,QAAAjG,KAAAkG;kBAAAC,GAAAnG,KAAAoG,QAAA,EAAAhB,SAAAvH,MAAAA,KAAAA,QACAwH,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,oBCrHAvL,OAAA,yDACA,SACA,SACA,OACA,eACA,gBACA,gCACA,4DACA,iEACA,SAAAK,EAAAJ,EAAA0G,GAAAgkC,UAAAn8B,WAAAyzB,UAAA2I,aAAAC,kBACA,YAmeA,SAAAC,kBAAAjiC,OAAA+1B,IAAAz2B,SAQA,QAAA4iC,UAAAC,OACA,GAAAtnC,UAAAsnC,MAAAnnC,KAAA,YACA46B,SAAAuM,MAAA7nC,SAAA8nC,QAAAxM,QAGAvkB,WAAAgxB,YAAAxnC,SAAA+6B;yCAQAvkB,UAAAhT,QAAA,OAAAxD,SAAA+6B,SAQA,QAAAa,MAAA0L,OACA,GAAAtnC,UAAAsnC,MAAAnnC,KAAA,WAOAqW,WAAAhT,QAAA,OAAAxD,UAnCA,GAAAwW,UAuMA,OAjKAA,WAAAywB,UAAAQ,aAAAC,WACAC,YAAAT,cAIArpC,GAAA,UAAA,WACAC,KAAA8pC,SAAA,OAIA/pC,GAAA,OAAA,WACAC,KAAA+pC,eAIAhqC,GAAA,SAAA,WACA,GAAAyE,MAAAxE,KAGAgqC,WAAAhqC,KAAAK,aACA4pC,WAAAD,WAAA1qC,KAAA4qC,WAAAC,WACAnpC,SAAAipC,WAAA3qC,KAAA,MACA8qC,MAAAJ,WAAA1qC,KAAA4qC,WAAAG,KAGArqC,MAAA8pC,UAGAQ,cAAAN,WAAA1qC,KAAA4qC,WAAAK,cACAC,YAAAR,WAAA1qC,KAAA4qC,WAAAO,YACAC,SAAAV,WAAA1qC,KAAA4qC,WAAAS;gDACAC,gBAAA5qC,KAAAqH,OAAAyhC,WACAkB,WAAA1qC,KAAA4qC,WAAAW,gBACAb,WAAA1qC,KAAA4qC,WAAAY,mBACAC,aAAA/qC,KAAAqH,OAAAyhC,WACAkB,WAAA1qC,KAAA4qC,WAAAc,aACAhB,WAAA1qC,KAAA4qC,WAAAe,gBAGAhB,WAAAA,WACAjpC,SAAAA,SAGAopC,MAAAA,MAGAc,aAAAlB,WAAA1qC,KAAA4qC,WAAAiB,cAIAnrC,KAAAorC,eAGApB,WAAAjqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAAmB,eAAA,WACA7mC,KAAA9B,GAAA,cACAsnC,WAAAj6B,YAAA05B,QAAA6B,WACAtB,WAAAroC,SAAA8nC,QAAA6B,YACA9mC,KAAA+mC,kBAMAvB,WAAAjqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAAsB,gBAAA;iFACAhnC,KAAA9B,GAAA,aACA8B,KAAAinC,YAAA5sC,EAAAmB,MAAAU,QAAAwpC,WAAAwB,WAAAxB,WAAAwB,aAKAtB,MAAArqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAAyB,WAAA,WACA,GAAAtqC,OAEAmD,MAAA9B,GAAA,cACArB,OAAAxC,EAAAmB,MAAAU,QAAAwpC,WAAA9Q,OAEA50B,KAAAinC,YAAApqC,OAAA6oC,WAAA9Q,SACA/3B,OAAAM,SAAA8nC,QAAAV,QACAvkC,KAAA+mC,eAEA/mC,KAAAonC,SAAAvqC,OAAA/B,KAAA4qC,WAAA1Q,UAAAz3B,QAAAV,YAQA+oC,MAAArqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAA2B,cAAA,WACArnC,KAAA9B,GAAA,aACA8B,KAAAinC,YAAA5sC,EAAAmB,MAAAU,QAAAwpC,WAAA1Q,UAAA0Q,WAAA1Q,YAKA4Q,MAAArqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAA4B,WAAA,SAAAC;4EACA,GAAAvC,OAAAwC,OAEAxnC,MAAA9B,GAAA,cACA8mC,MAAA3qC,EAAAmB,MAAAU,QAAAwpC,WAAAlQ,OAEAwP,MAAA7nC,SAAA8nC,QAAAtd,YACA6f,QAAAntC,EAAAktC,MAAA5pB,QACA3d,KAAA6C,OAAA4kC,SAAAD,QAAAtpC,GAAAwnC,WAAAgC,SAAAlC,WAAAroC,SAAA8nC,QAAA6B,WAEA9B,MAAA7nC,SAAA8nC,QAAA0C,SAAA3C,MAAA7nC,SAAA8nC,QAAAh9B,OACA88B,SAAAC,OAEAA,MAAA7nC,SAAA8nC,QAAAV,UAEAvkC,KAAA4nC,OAAA5C,OACA1L,KAAA0L,YAOAY,MAAArqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAAmC,YAAA,WACA,GAAA5gC,KAEAjH,MAAA9B,GAAA,cACA+I,KAAA5M,EAAAmB,MAGAyL,KAAA9J,SAAA8nC,QAAAtd,YACA1gB,KAAA9I,SAAA8mC,QAAAtd,UACA2R,KAAAryB,UAOAw+B,WAAAlqC,GAAA,QAAAmqC,WAAAf,UAAAe,WAAAjnC,OAAA;wEACA,GAAAwI,MAAA6gC,IAEA9nC,MAAA9B,GAAA,cACA+I,KAAA5M,EAAAmB,MACAssC,KAAA7gC,KAAApJ,KAAA,QAGArB,SAAA4B,YAAA6mC,QAAAV,QACAiB,WAAApnC,YAAA6mC,QAAA6B,WACA7/B,KAAA9I,SAAA8mC,QAAAV,QAGAvkC,KAAAvB,OAAAqpC,MAGA9nC,KAAAulC,gBAIA/pC,KAAA46B,OAAAwC,IAAAz2B,WAIA+R,UAAA6zB,cAAA,MAGA7zB,UAAAnU,KAAA8C,QArqBA,GAAAuiC,YACAvP,MAAA,OACAmS,aAAA,EACAC,gBAAA,EACA5D,QAAA,GAQAY,SACAV,OAAA,SACAuC,UAAA,YACAoB,YAAA,cACA7D,OAAA,SACA1c,SAAA,WACA8Q,QAAA,UACAD,SAAA,WACAE,OAAA,SACAiP,OAAA,SACA1/B,KAAA,OACAnC,KAAA,qBACA+vB;OACAnD,KAAA,aACAqC,SAAA,kBACAU,YAAA,uBASA0S,UACAlD,QAAAh9B,KACAg9B,QAAAxM,QACAwM,QAAAzM,SACAyM,QAAAvM,QAQAgN,YACAf,UAAA,iBACAgB,UAAA,yBACAlnC,OAAA,wBACAonC,KAAA,sBACAgB,eAAA,6BACAF,YAAA,wBACAZ,aAAA,iDACAE,WAAA,+CACAI,eAAA,mDACAG,YAAA,gDACAU,UAAA,sBACAF,gBAAA;6DACAb,WAAA,2CACAG,kBAAA,kDACAG,eAAA,+CACA7R,MAAA,sBACAuS,WAAA,6CACAnS,SAAA,yBACAqS,cAAA,gDACA7R,MAAA,sBACA8R,WAAA,6CACAc,UAAA,4CACAC,WAAA,6BACAX,MAAA,sBACAG,YAAA;gDACAS,SAAA,yBACAC,QAAA,UACAL,YAAA,eACAM,kBAAA,qBACAb,OAAA,UACAnP,SAAA,YACAC,QAAA,WACAgQ,WAAA,iBACAC,YAAA,kBACAC,iBAAA,cACArO,cAAA,QACA+J,OAAA,UACA1c,SAAA,aASAihB,YACAvJ,IAAA,GACAwJ,YAAAnD,WAAAlN,SAAAkN,WAAApL,eAAAliB,KAAA,KACAqgB,QAAAiN,WAAA+C,WACAjQ,SAAAkN,WAAAgD,YACAI,SAAApD,WAAArB,QAOAc,cAMA4D,YAAA,SAAArrC,SAAAsrC,MACA,GACA3R,MADAuB,IAAAp9B,KAAAo9B,GAGAA,OACAvB,KAAA4E,UAAAzC,UAAAZ,IAAAl7B,aAGA25B,KAAAoB,QAAAuQ;mEACA/M,UAAA5B,gBAAAzB,IAAAl7B,YAWAurC,oBAAA,SAAAC,YAAAvrB,QASA,MANA,cAAAA,OACAurB,YAAA3Q,UAEA2Q,YAAA7xB,OAWA6tB,YAAA,SAAAxnC,SAAAsrC,MACA,GAEAljC,MAFAk/B,MAAAtnC,UAAAA,SAAAyrC,OAAAzrC,SAAAlC,KAAA8pC,SAAAM,MAAA9qC,KAAA,kBAAA4C,SAAA,KACAwrC,YAAA1tC,KAAA0tC,WAIA1tC,MAAAutC,YAAArrC,SAAAsrC,MAGAhE,MAAAz5B,YAAA05B,QAAAxM,QAAAuQ,MAGAljC,KAAA7L,EAAAa,KAAAqtC,SAAAluC,EAAAypC,KAAAsB,MAAA7nC,SAAA6nC,SAAAC,QAAA0C,OACA3C,MAAAlqC,KAAA4qC,WAAAgC,OAAAzW,KAAA,QAAAgU,QAAAn/B,KAAA,SAAAA,MAGAojC,YAAAzQ,QAAAj9B,KAAA8pC,SAAAM,MAAA9qC,KAAA4qC,WAAAjN,SAAAx9B;wEACAO,KAAA4tC,WAAA5tC,KAAA8pC,SAAAiB,aAAA2C,YAAAzQ,QAAAj9B,KAAAytC,oBAAAC,YAAA,cAGA1tC,KAAAiD,OAAAjD,KAAAusC,gBAOAtpC,OAAA,SAAA4qC,UACA,GAAArpC,MAAAxE,KAGA8tC,OAAA9tC,KAAA8pC,SAAAM,MAAA9qC,KAAA4qC,WAAAlQ,OAAAp3B,YAAA6mC,QAAAZ,QAGAkF,SAAAX,WAAAS,SACAE,WACAD,OAAA7qC,OAAA8qC,UAAAprC,SAAA8mC,QAAAZ,QAIA7oC,KAAA8pC,SAAAM,MAAA9qC,KAAA4qC,WAAA1Q,UAAAr2B,KAAA,WACA,GAAA6qC,UAAAnvC,EAAAmB,MACAiuC,YAAAD,SAAA1uC,KAAA4qC,WAAAlQ,OAAAkU,IAAAhE,WAAArB,QACAsF,UAAAF,YAAAC,IAAAhE,WAAA/d,SACA3nB,MAAAopC,WAAAI,SAAA1uC,KAAA4qC,WAAA4C,UAAAqB,UAAA1uC,OAAAwuC,YAAAxuC;2FAEAO,KAAAusC,cAAAsB,UAQAzC,aAAA,SAAA/jC,QACA,GAAA2iC,YAAAhqC,KAAAK,aACA+tC,WAAA3E,QAAApP,MAAAr6B,KAAAqH,OAAAgzB,OAAAuP,UAAAvP,MAaA,OAVAhzB,QAAA5I,EAAAuM,MAAAhL,KAAAqH,OAAAA,YAGA2iC,WAAAj6B,YAAA05B,QAAAiD,YAAArlC,OAAAmlC,aAGAxC,WAAApnC,YAAAwrC,YACAA,WAAA3E,QAAApP,MAAAr6B,KAAAqH,OAAAgzB,OAAAuP,UAAAvP,OACA2P,WAAArnC,SAAAyrC,YAEApuC,MAMA+pC,WAAA,WACA/8B,WAAAhN,KAAA8pC,SAAAM,MAAA9qC,KAAA4qC,WAAA2C,YAAA7sC,KAAA8pC,SAAAM,QAUAxP,OAAA,SAAAwC,IAAAz2B,SACA,GAAA0nC,WAAAruC,KAAAsuC,aAAAlR,IAAAz2B,SACA+mC,YAAAW,UAAAnQ;2EACAnB,UAAA,EACAC,SAAA,EACAC,QAAA,EACAC,OAAA,EACArhB,MAAA,GAEA0yB,eAAAvuC,KAAAytC,oBAAAC,YAAA,YAwCA,OAtCA1tC,MAAAo9B,IAAAA,IACAp9B,KAAA0tC,YAAAA,YAGA1tC,KAAA4tC,WAAA5tC,KAAA8pC,SAAAQ,cAAAoD,YAAA1Q,SAAAuR,gBACAvuC,KAAA4tC,WAAA5tC,KAAA8pC,SAAAc,gBAAA2D,eAAAb,YAAA1Q,SAAAuR,gBACAvuC,KAAA4tC,WAAA5tC,KAAA8pC,SAAAU,YAAAkD,YAAAxQ,OAAAl9B,KAAAytC,oBAAAC,YAAA,UACA1tC,KAAA4tC,WAAA5tC,KAAA8pC,SAAAiB,aAAA2C,YAAAzQ,QAAAsR,gBACAvuC,KAAA4tC,WAAA5tC,KAAA8pC,SAAAY,SAAA6D,eAAA,MAIA5nC,QAAAw/B,UAaAnmC,KAAA8pC,SAAAG,WAAAtkC;kDACA3F,KAAA8pC,SAAAoB,aAAAn8B,OACA/O,KAAA8pC,SAAAM,MAAArU,UAdA/1B,KAAA8pC,SAAAG,WAAAl7B,OACA/O,KAAA8pC,SAAAoB,aAAAvlC,OACA3F,KAAA8pC,SAAAM,MAAAvU,KAAAwT,iBAAAgF,YAEAruC,KAAA+pC,aAEA/pC,KAAAm2B,SAAA,kBAAAn2B,KAAAqH,OAAAolC,gBACAzsC,KAAAqH,OAAAolC,gBAEAzsC,KAAA8pC,SAAAM,MAAA9qC,KAAA4qC,WAAAiC,QAAAxpC,SAAA8mC,QAAAtd,WASAnsB,KAAAiD,OAAAjD,KAAA8pC,SAAA9oC,SAAAiC,OAAAinC,WAAA6C,SAAA1qC,KAAA,SAKArC,KAAA0F,QAAA,UAEA1F,MASAsuC,aAAA,SAAAlR,IAAAz2B,SACA,GAAA0nC,WAAA5N,UAAAnC,YAAAlB,IAAAz2B,QAAAgzB,aAAA35B,KAAAqH,OAAAgzB,OACAd,SAAAkH,UAAAjD,QAAA6Q,UAAA1nC,QAAA0yB,gBACAS,QAAA2G,UAAA/C,WAAA2Q,UAAA1nC,QAAA8yB,eACAoC,KAAA4E,UAAAtJ,QAAAkX,UAAA1nC,QAAAgwB;uQAQA,OALA4C,UAAAwP,QAAA,EACAjP,QAAAiP,QAAA,EACAlN,KAAAkN,QAAA,EAGAtI,UAAAt9B,KAAAkrC,UAAA,SAAAG,KACA,GAAAtF,QACA5+B,KAAA,EAEAkkC,KAAAzF,QACAG,IAAA/mC,KAAA,UAEAqsC,IAAA1P,gBACAoK,IAAA/mC,KAAA,QACAmI,KAAAA,MAAA,QAEAkkC,IAAAvR,UACAiM,IAAA/mC,KAAA,WACAmI,KAAAA,MAAA,WAEAkkC,IAAAxR,WACAkM,IAAA/mC,KAAA,YACAmI,KAAAA,MAAA,YAEAkkC,IAAAtR,QACAgM,IAAA/mC,KAAA,UACAmI,KAAAA,MAAA,WAEA4+B,IAAA/mC,KAAA,UACAmI,KAAAA,MAAA;qBAGAkkC,IAAAtF,IAAAA,IAAAtsB,KAAA,KACA4xB,IAAAlkC,KAAAA,QAWAsjC,WAAA,SAAAa,OAAApjB,MAAAxP,OAEA,GAAA+J,SAAA,CACA6oB,QAAAhsC,SAAAd,SAAA,qBACAikB,QAAA9J,KAAAgd,IAAAzN,MAAA,GAEAxP,MAAA,IACA+J,QAAA9J,KAAA4yB,IAAArjB,MAAAxP,OAAA,IAAAA,OAEA4yB,OAAAjkC,KAAAob,UASAwmB,OAAA,SAAAlqC,SAAAysC,MAEA,GAAAvE,OAAApqC,KAAA8pC,SAAAM,MACAwE,SAAA1sC,UAAAA,SAAAyrC,OAAAzrC,SAAAkoC,MAAA9qC,KAAA,kBAAA4C,SAAA,KACA2sC,UAAAD,SAAAE,aAAA1E,OACA2E,iBAAA,EACAC,UAAA5E,MAAA9qC,KAAA4qC,WAAA2C,WAyBA,OAxBAmC,WAAAvvC,SACAsvC,iBAAAC,UAAA3sC,KAAA,aAIAssC,MACA3uC,KAAA4rC,SAAAiD,WAIAzE,MAAA9qC,KAAA4qC,WAAA6C,SAAAnqC,YAAA6mC,QAAAV;2DACA8F,UAAAnqC,IAAAkqC,UAAAjsC,SAAA8mC,QAAAV,QAEA7mC,SAAA0sC,SAAAvsC,KAAA,YASArC,KAAA0F,QAAA,WAAAxD,SAAA6sC,kBAEAH,UAOArD,aAAA,WAEA,GAAAnB,OAAApqC,KAAA8pC,SAAAM,MACAwE,SAAAxE,MAAA9qC,KAAA4qC,WAAAlQ,MAAAkQ,WAAA6C,SACA8B,UAAAD,SAAAE,aAAA1E,MAKA,OAFApqC,MAAA4rC,SAAAiD,WAEAD,UAQAhD,SAAA,SAAA5lC,OAAAoT,OACAA,MAAApZ,KAAA8pC,SAAAM,OAAA9qC,KAAA4qC,WAAAwC,aAAA/pC,SAAA8mC,QAAA6B,WACAtlC,OAAApD,YAAA6mC,QAAA6B,YASAG,YAAA,SAAAwD,MAAAC,kBACA,GAAA5D,WAAA2D,MAAAttC,SAAA8nC,QAAA6B,UAWA,OATA4D,mBACAlvC,KAAA8pC,SAAAM,MAAA9qC,KAAA4vC,kBAAAvsC,SAAA8mC,QAAA6B;iGAGAA,UACA2D,MAAArsC,YAAA6mC,QAAA6B,WAEA2D,MAAAtsC,SAAA8mC,QAAA6B,WAEAA,WAQAvD,OAAA,SAAAh5B,MAWA,WAVA,KAAAA,OACAA,KAAA/O,KAAA0C,GAAA,WAGAqM,KACA/O,KAAA+O,OAEA/O,KAAA2F,OAGA3F,MA4NA,OAAAspC,oBCtrBA9qC,OAAA,sDACA,SACA,SACA,OACA,WACA,gBACA,iBACA,yBACA,gCACA,yDACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAzJ,SAAAC,gBAAAR,cAAA+hC,UAAA6I,kBACA,YAqCA,SAAA6F,uBAAAxoC;yCACA,GAAA4E,UAAA5E,QAAAyoC,YAAA,YAAA,SACA,OAAAhkC,YAAAG,UAQA,QAAA8jC,qBAAA32B,WACA,GAAAnN,UAAAmN,UAAAhW,GAAA,UAAA,aAAA,YACA,OAAA0I,YAAAG,UAQA,QAAA+jC,cAAAC,OAAAltC,MACA,GAAAiJ,SAAAikC,OAAAlvC,YACAkvC,QAAA7sC,GAAA,aACA4I,QAAAjJ,KAAA,aAAAA,KAAA4I,UACAK,QACAjJ,KAAA,UAAAA,KAAA4I,SACAwqB,KAAA,QAAApzB,KAAA6I,OAEAI,QAAAhM,KAAA,SAAAm2B,KAAA,QAAA,aAAApzB,KAAAiI,MACAgB,QAAAhM,KAAA,SAAAkL,KAAAnI,KAAAmI,MAEA/L,EAAAgwB,SAAApsB,KAAA4I,QAAA,UACAskC,OAAA7sC,GAAA,UACA6sC,OAAAC,UAEAD,OAAAE,WAYA,QAAAxD,SAAAprC,YACA,GAAA8F,SAAA9F,WAAA0H,iBACA60B,IAAAv8B,WAAAi6B,aACAe,KAAA4E,UAAAzC,UAAAZ,IAAAz2B,QAAAgzB;sHACA,SAAAhzB,QAAAw/B,WAAAx/B,QAAA29B,QAAAoL,YAAA7T,MAAAA,KAAAiD,eAnFA,GAAA1zB,aACAukC,SACA1kC,QAAA,gBACAC,MAAA/F,GAAA,0CACAmF,KAAA,SACAE,KAAArF,GAAA,oBAEAyqC,WACA3kC,QAAA,kBACAC,MAAA/F,GAAA,iDACAmF,KAAA,SACAE,KAAArF,GAAA,sBAEA0qC,YACA5kC,QAAA,cACAC,MAAA/F,GAAA,0BACAmF,KAAA,QACAE,KAAArF,GAAA,gBAEA2qC,YACA7kC,QAAA,cACAC,MAAA/F,GAAA,0BACAmF,KAAA;YACAE,KAAArF,GAAA,gBAkEA,OAAAzG,gBACA4F,KAAA,SAKAC,KAAA,WAeA,QAAAwrC,mBACA,GAAAppC,SAAA9F,WAAA0H,gBACA,OAAAynC,iBAAAC,SAAAtpC,SAAAA,QAAA29B,SAAA39B,QAAA29B,QAAA4L,aASA,QAAA3G,UAAArnC,SAAAsrC,MAGA,MAFAhpC,MAAAK,UAEAhE,WAAAw1B,WACA8Z,eAAA,YACAjuC,SAAAA,SACAsrC,KAAAA,OAEA1X,KAAA,WACA,GAAAnvB,SAAA9F,WAAA0H,gBAGA5B,SAAAgzB,eAAAz3B,WACAyE,QAAAyoC,YAAA5B,MAIA8B,aAAA9qC,KAAA4rC,eAAAjB,sBAAAxoC,UAGAnC,KAAAkU,UAAAgxB,YAAAxnC,SAAAsrC,MACAhpC,KAAAO,WAEAszB,MAAA,WAEA7zB,KAAAkU,UAAAgxB,YAAAxnC,UAAAsrC;2CACAhpC,KAAAO,WAOA,QAAAsrC,mBACA,GAAA1pC,SAAA9F,WAAA0H,kBACA,IAAA/D,KAAAyxB,SAAA,YACAsT,SAAA5iC,QAAAgzB,cAAAhzB,QAAAyoC,aASA,QAAA3D,aAAA6E,cACA7xC,EAAA8xC,YAAAD,aAAA9rC,KAAAkU,UAAAhW,GAAA,UAAA4tC,cAEA9rC,KAAAgsC,kBAAA,EACAhsC,KAAAkU,UAAA3J,SAEAvK,KAAAgsC,kBAAA,EACAhsC,KAAAkU,UAAA/S,QAEA2pC,aAAA9qC,KAAAisC,aAAApB,oBAAA7qC,KAAAkU,YA/EA,GAQAg4B,sBARAlsC,KAAAxE,KACAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,cACAuxB,YAAA73B,WAAA0H,iBACAowB,QAAA93B,WAAAi6B,aACA1zB,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF,eACA8qC,gBAAA5oC,WAAAupC;gTA2EA3wC,MAAA0Y,UAAA4wB,iBAAA0G,gBAAArX,QAAAD,aACA34B,GAAA,WAAA,SAAAmC,SAAA6sC,kBACA2B,qBAAA3B,mBAEAhvC,GAAA,OAAA,SAAAmC,WACA,IAAAsC,KAAAyxB,SAAA,aACAzxB,KAAAK,UACAhE,WAAAi9B,KAAA57B,SAAA,WAGAnC,GAAA,OAAA,SAAAmC,SAAAsrC,OACA,IAAAhpC,KAAAyxB,SAAA,YACAsT,SAAArnC,SAAAsrC,QAGAzkC;YAGAlI,WAAAd,GAAA,mBAAA,WACAyE,KAAAkU,UAAA0zB,OAAAsE,wBAGA1wC,KAAAwwC,kBAAA,EAGAxwC,KAAAywC,aAAAzwC,KAAAsB,gBAAAsvC,aAAAC,YAAAxB,oBAAArvC,KAAA0Y,YACA1Y,KAAAywC,aAAA1wC,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,sBAGA1F,KAAAowC,eAAApwC,KAAAsB,gBAAAsvC,aAAAC,YAAA1B,sBAAAzW,cACA14B,KAAAowC,eAAArwC,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,mBAGA0B,WAAAO,iBACAL,gBAAAkmC,MACAvuC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAkmC,KAAAxtC,KAAAkF,WAAA,GAAA;+IACArE,WAAA6E,QAAA,mBAEAoiC,YAAA,IAIAxgC,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAA,sBAEAoiC,YAAA,KAKAiI,mBACA/vC,KAAA2F,OAIA3F,KAAA6E,UAEA4mC,YAAArkC,WAAAupC,OAAAG,aAGAjwC,WACAd,GAAA,SAAA,WACAgwC,mBACAvrC,KAAAuK,OACAugC,aAAA9qC,KAAAisC,aAAApB,oBAAA7qC,KAAAkU,aAEAlU,KAAAmB,SAGA5F,GAAA,WAAA,WACA,GAAA4G,SAAA9F,WAAA0H,iBACA60B,IAAAv8B,WAAAi6B;mEAEAiV,oBACAT,aAAA9qC,KAAA4rC,eAAAjB,sBAAAxoC,UACAnC,KAAAkU,UACAkiB,OAAAwC,IAAAz2B,SACAykC,cACAa,SAAAtlC,QAAAw/B,UAAAx/B,QAAA29B,QAAAoL,aAEAlrC,KAAAuK,OACAugC,aAAA9qC,KAAAisC,aAAApB,oBAAA7qC,KAAAkU,aAEAlU,KAAAmB,SAGA5F,GAAA,cAAA,WACAgwC,mBACAvrC,KAAAO,WAGAhF,GAAA,eAAA,WACAgwC,mBACAvrC,KAAAK,YAGA9E,GAAA,gBAAA,WACAgwC,mBAAA9D,QAAAprC,aACAwvC,oBAGAtwC,GAAA,mBAAA,WACAgwC,mBAAAvrC,KAAAyxB,SAAA,YACAwV,iBAQA1iC,OAAA;kBACA/I,KAAAsB,gBACAC,eACA8H,OAAArJ,KAAA0Y,UAAArY,eAMA2E,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,WACAlF,KAAA0Y,UAAA1T,WAMAD,OAAA,WACA,GAAAlE,YAAAb,KAAAyE,gBACAi0B,YAAA73B,WAAA0H,gBAEAvI,MAAAowC,eAAArrC,SACA/E,KAAAywC,aAAA1rC,SACA/E,KAAA0Y,UAAA3T,SACA2zB,YAAA0W,YACApvC,KAAAowC,eAAAX,SAEAzvC,KAAAowC,eAAAZ,WAOA3qC,QAAA,WACA7E,KAAAowC,eAAAvrC,UACA7E,KAAAowC,eAAAZ,UAEAxvC,KAAAywC,aAAA5rC,UAEA7E,KAAA0Y,UAAA7T,WAMAkK,KAAA,WAEAk9B,QADAjsC,KAAAyE,iBAEAzE,KAAAowC,eAAArhC,OAEA/O,KAAAowC,eAAAzqC,OAEA3F,KAAAywC,aAAA1hC;yBAEA/O,KAAAwwC,iBAGAxwC,KAAA0Y,UAAA/S,OAFA3F,KAAA0Y,UAAA3J,QASApJ,KAAA,WACA3F,KAAAowC,eAAAzqC,OACA3F,KAAAywC,aAAA9qC,OACA3F,KAAA0Y,UAAA/S,YC1XAnH,OAAA,6CACA,SACA,SACA,OACA,WACA,yBACA,qCACA,kDACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAhK,cAAA28B,SAAAlwB,WACA,YAKA,IAAAC,aACA2lC,MACA9lC,QAAA,OACAC,MAAA/F,GAAA,iCACAmF,KAAA,WACAE,KAAArF,GAAA,SAEAkG,KACAJ,QAAA,WACAC,MAAA/F,GAAA,sCACAmF,KAAA,WACAE,KAAArF,GAAA;+BASA2L,cAAA,SAAAnK,SACA,GAAA4E,UAAA5E,QAAA6E,OAAA,MAAA,MACA,OAAA3M,GAAAsM,UAAAC,WAAAG,aAQA87B,cAAA,SAAA1+B,SAAAhC,SACA,GAAA4E,UAAA5E,QAAA6E,OAAA,MAAA,MACA7C,UAAAtG,KAAA,aAAA+I,WAAAG,UAAAN,SAEAtC,SAAAtG,KAAA,UAAA+I,WAAAG,UAAAN,SACAwqB,KAAA,QAAArqB,WAAAG,UAAAL,OACA5L,KAAA,SAAAkL,KAAAY,WAAAG,UAAAf,MAOA,OAAA9L,gBAEA4F,KAAA,OAKAC,KAAA,WAeA,QAAAysC,UACAnwC,WAAAkwC,OAfA,GAAAvsC,MAAAxE,KACAa,WAAAb,KAAAyE,gBAEAsjC,OAAA,WAEA,OAAA,IADAlnC,WAAA0H,iBACA+7B,QAAA2M,eACAzsC,KAAAuK,QACA,IAGAvK,KAAAmB;kBACA,GAOA3F,MAAA2I,SAAAmI,cAAAjQ,WAAA0H,kBAEAvI,KAAA2I,SAAA5I,GAAA,QAAA,SAAAwG,GACA,GAAAxB,QAAAtG,EAAAypC,KAAA1jC,KAAAO,OAAAP,MACAmC,QAAA9F,WAAA0H,gBAEAhC,GAAAmF,kBAEA,IAAAlH,KAAAyxB,SAAA,aACAzxB,KAAAK,UACA8B,QAAA29B,QAAAE,gBAAA79B,QAAA6E,OACA3K,WAAA6E,QACA,kBACA21B,SAAAyF,eACA37B,GAAA,wIACA,OAAAtE,YACAmwC,OACAjsC,QAGAisC,YAKAjJ,SACAvjC,KAAAK,UAEAhE,WACAd,GAAA,WAAA,WACAgoC,UACAV,cAAA7iC,KAAAmE,SAAA9H,WAAA0H;qEAGAxI,GAAA,YAAA,WACAyE,KAAAO,WAEAhF,GAAA,aAAA,WACAyE,KAAAK,aAOAkE,OAAA,WACA/I,KAAAsB,gBAAAsK,oBACAvC,OAAArJ,KAAA2I,WAMA3D,QAAA,WACAhF,KAAA2I,SAAA1D,UAMAF,OAAA,WACA/E,KAAA2I,SAAAmD,WAAA,YACAlJ,YAAA,aAMAiC,QAAA,WACA7E,KAAA2I,SAAAoD,KAAA,YAAA,GACApJ,SAAA,aAMAoM,KAAA,WACArG,MAAAqG,KAAA/O,KAAA2I,WAMAhD,KAAA,WACA+C,MAAA/C,KAAA3F,KAAA2I,eC1KAnK,OAAA,wDACA,0BACA,SAAAE,eACA,YAEA,OAAAA;uBAEA4F,KAAA,oBAKAC,KAAA,YACA,cAAA,YAAA,WAEAwC,QAAA,SAAAmqC,WACAngC,OAAA7M,SAAAosB,iBAAA4gB,UAAA,SAAAnF,OACA,IAAAA,MAAAwD,QACAxD,MAAArgC,0BCNAlN,OAAA,gEACA,SACA,SACA,OACA,WACA,gBACA,iBACA,0BACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAzJ,SAAAC,gBAAAR,eACA,YAMA,IAaAyyC,gBAEAC,2BAAA,EAEAC,2BAAA,EAQA,OAAA3yC,gBAEA4F,KA3BA,aAgCAC,KAAA,WAqBA,QAAA+sC,mBAIA,UAHAzwC,WAAA0H,sBACA+7B,aAEAiN;mEAMA,QAAAC,sBACAF,kBACA9sC,KAAAuK,OAEAvK,KAAAmB,OAIA,QAAA8rC,gBACAjtC,KAAAktC,sBAGAltC,KAAAktC,oBAAA3hC,YAAA,cACA4hC,eACAC,mBAEAC,qBAIA,QAAAF,gBACA,GAAAntC,KAAAktC,oBAGA,MAAAltC,MAAAktC,oBAAA/vC,SAAA,cAGA,QAAAiwC,oBACA,GAAAE,SACAttC,MAAAktC,sBAGAI,SAAAttC,KAAAktC,oBAAApyC,KAAA,eAEAkF,KAAA+qC,OAAAE,SACAjrC,KAAAkB,QAAA,SAEA2B,OAAAgqC,2BACAS,SAAA3uC,KAAA,WACA,GAAA4uC,OAAA/xC,KAAAgyC,cAAA;iDACAhyC,MAAAiyC,QAAAC,gBACAlyC,KAAAiyC,QAAAC,cAAA,KACAlyC,KAAAmyC,UAAAztC,IAAA,cACAqtC,MAAA70B,aAAA,WAAA,YACA60B,MAAArlB,SAAA,MAMA,QAAAmlB,qBACA,GAAAC,SACAttC,MAAAktC,sBAGAI,SAAAttC,KAAAktC,oBAAApyC,KAAA,eAEAkF,KAAAktC,oBAAA9uC,YAAA,cACA4B,KAAA+qC,OAAAC,UACAhrC,KAAAkB,QAAA,OAEAosC,SAAA3uC,KAAA,WACAnD,KAAAmyC,UAAA1jB,SAAA,gBACAzuB,KAAAiyC,QAAAC,eAAA,EACAlyC,KAAAmyC,UAAAltC,OAAA,cACAjF,KAAAgyC,cAAA,qBAAAxsB,gBAAA,gBA/FA,GAAAhhB,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyE,WAAArI,WAAAS,gBAAA0B,iBAAAP,SACA2E,WAAAvG,WAAAsG,cAAAE,WACAC,iBAAAF,WAAAG,eAAA,eACAF,OAAA5I,EAAAuQ,SAAAvQ,EAAA6R,OAAAlJ,WAAAuH,aAAA,gBAAAwiC;wSAGAnxC,MAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC,aACA5lC,QAAA,aACAC,MAAA/F,GAAA,qBACAmF,KAAA,YACAE,KAAArF,GAAA,uBAwFAnF,KAAAuvC,OAAAxvC,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAAuC,4BAIAb,WAAAO,gBACAlJ,EAAAsI,QAAAO,gBAAA,SAAAM,QAAAC,KACA5I,SAAAyF,IAAAxF,gBAAA4I,aAAAF,QA9IA,cA8IA,GAAA;8EAEA/G,WAAA6E,QA1IA,mBA0IAmC,OAEAigC,YAAA,MAMA9nC,KAAA6E,UAGAhE,WACAd,GAAA,WAAAyxC,oBACAzxC,GAAA,aAAA,WAGA,GADAyE,KAAAktC,oBAAAxoC,WAAA5J,KAAA,2BACAkF,KAAAktC,oBAAAjyC,OAEA,WADA+E,MAAAmB,MAGA2rC,oBACA9sC,KAAAuK,SAGAhP,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,UACAgtC,sBAIA9xC,GAAAkI,yBAAA,WACAqpC,mBACAG,iBAIA1xC,GAAA,6BAAA,WACA4xC,gBACAE;uCAQA7sC,QAAA,WACA/F,SAAAgG,OAAA,gBAMAF,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAMAF,QAAA,WACA7E,KAAAuvC,OAAA1qC,WAMAkK,KAAA,WACA/O,KAAAuvC,OAAAxgC,QAMApJ,KAAA,WACA3F,KAAAuvC,OAAA5pC,YC5QAnH,OAAA,8DAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MAMA,MALArC,MAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,SAIA,0FCYA7D,OAAA,+DACA,SACA,SACA,iBACA,eACA,8DACA,SAAAC,EAAAI,EAAAuzC,UAAAC,iBAAAC;uOACA,YAEA,IAAAC,IAAA,gBAKA,OAAA,UAAAC,cAmDA,QAAAC,YAAAvpC,YACA,MAAAmpC,kBAAAK,SACA7I,YAAAyI,SACAvyC,GAAA,SAAA,WACA,GAAAyE,MAAAxE,IACAA,MAAAK,aAEAN,GAAA,QAAAwyC,GAAA,SAAAhsC,GACAA,EAAA+H,kBACA/H,EAAAmF,iBAEAlH,KAAAujC,aAGAhoC,GAAA,UAAA,WACAC,KAAAK,aACAwD,IAAA0uC,MAEAhuC,OACAwE,OAAAG,YACAypC,OAtEA,GAAAC,eACAC,YAEAH,SAKA3K,OAAA,WACA,MAAA/nC,MAAA0C,GAAA,UACA1C,KAAA8yC,SAEA9yC,KAAA2yC;oDAQAG,OAAA,WACA,GAAA5pC,YAAAlJ,KAAA+yC,cAMA,OALA7pC,YAAAtG,YAAA,UACAsG,WAAA5J,KAAA,SAAA0zC,WAAA,YAEAhzC,KAAAm2B,SAAA,UAAA,GAEAn2B,MAOA2yC,KAAA,WACA,GAAAzpC,YAAAlJ,KAAA+yC,cAMA,OALA7pC,YAAAvG,SAAA,UACAuG,WAAA5J,KAAA,SAAAm2B,KAAA,WAAA,YAEAz1B,KAAAm2B,SAAA,UAAA,GAEAn2B,MAsGA,OAnEA4yC,gBAIA7tC,OAAA,WACA,GAAA2sC,qBAAAc,aAAAlzC,KAAA,0BACA2zC,YAAAT,aAAAlzC,KAAA,cAEAuzC,aAEAnB,oBAAA/uC,SAAA,YAEAswC,YAAA9vC,KAAA,WACA,GAAA+vC,SAAAr0C,EAAAmB,KACA6yC,UAAA1wC,KAAAswC,WAAAS;sCAGAlzC,KAAAm2B,SAAA,WAAA,IAMAtxB,QAAA,WACA2tC,aAAAlzC,KAAA,0BACAsD,YAAA,YAEAiwC,SAAA9rC,QAAA,SAAA4rC,MACAA,KAAAG,SACAH,KAAA3tC,YAGA6tC,YAEA7yC,KAAAm2B,SAAA,WAAA,IAOAgd,cAAA,WAIA,MAHAN,UAAAzV,IAAA,SAAAuV,MACA,MAAAA,MAAAjwC,GAAA,aASA0wC,cAAA,SAAAxoB,OACAA,MAAAA,UAEAA,MAAA7jB,QAAA,SAAAssC,OAAA5xB,OACA,GAAAkxB,MAAAE,SAAApxB,MAEAhjB,GAAA4J,SAAAsqC,OAAAl0C,EAAAgI,WAAAksC,KAAAG,UAAAO,QACAV,KAAAG,aAMAV,UAAAQ,eAEAA,iBC7JAp0C,OAAA,wDACA,SACA,SACA,OACA,yBACA,WACA,gBACA,iBACA,+DACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAAgK,MAAAzJ,SAAAC,gBAAAo0C;+SACA,YAMA,IAYAxR,eAKAqP,eACAoC,sBAAA,EACAC,oBAAA,EAMA,OAAA90C,gBAEA4F,KA3BA,iBAgCAC,KAAA,WAYA,QAAA+sC,mBAIA,QAHAzwC,WAAA0H,sBACA+7B,aAEAsO,eAAAa,gCAGA,QAAAA,iCAEA,MADAjvC,MAAAlD,gBAAA0B,iBAAAP,SACAnD,KAAA,0BAAAG;4FAGA,QAAA+xC,sBACAF,kBACA9sC,KAAAuK,OAEAvK,KAAAmB,OAIA,QAAA8rC,gBACAmB,cAAA3c,SAAA,WAGAyd,iBAFAC,gBAMA,QAAAA,iBACA,GAAAjb,aAAA73B,WAAA0H,iBACAqrC,OAAAlb,YAAA/B,cAEAic,eAAA7tC,SACA8uC,aAAAN,sBACAX,cAAAQ,cAAAtR,WAAA8R,SAEApvC,KAAA+qC,OAAAE,SACAjrC,KAAAkB,QAAA,SAGA,QAAAguC,kBACA,GAAAhb,aAAA73B,WAAA0H,iBACAqrC,OAAAlb,YAAA/B,cAEAic,eAAA3c,SAAA,aACA6L,WAAA8R,QAAAhB,cAAAO;uFAGAP,cAAA/tC,UACAL,KAAA+qC,OAAAC,UACAhrC,KAAAkB,QAAA,OA7DA,GAAAlB,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAwsC,aAAAp1C,EAAAuQ,UAAA5H,WAAAuH,aAtCA,sBAsCAwiC,eACA7pC,iBAAAF,WAAAG,eAvCA,sBAwCAirC,aAAAxyC,KAAAsB,gBAAA0B,iBAEA4vC,cAAAU,qBAAAd,aAwDAxyC,MAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC,aACA3lC,MAAA/F,GAAA,kBACAmF,KAAA,aACAW,QAAA,iBACAT,KAAArF,GAAA;4BAIAnF,KAAAuvC,OACAxvC,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAAuC,gCAGAb,WAAAO,gBACAL,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAAuC,gCACA6/B,YAAA,EAAArgC,SAAA,IAKAzH,KAAA6E,UAGAhE,WACAd,GAAA,WAAA,WACA,GAAA24B,aAAA73B,WAAA0H,iBACAqrC,OAAAlb,YAAA/B,cAEAkd,cAAAL,qBACA1R,WAAA8R,YAGApC,uBAEAzxC,GAAA,yBAAA,WACAyxC,qBACAhtC,KAAAO,WAEAhF,GAAA,mBAAA;oCACA2zC,mBAEA3zC,GAAA,0BAAA,WACAyE,KAAAK,UACA6uC,mBAEA3zC,GAAAkI,6BAAA,WACAqpC,mBACAG,iBAIA1xC,GAAA,yBAAA,WACA2zC,oBAOA1uC,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,YAMAH,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAMAF,QAAA,WACA7E,KAAAuvC,OAAA1qC,WAMAkK,KAAA,WACA/O,KAAAuvC,OAAAxgC,QAMApJ,KAAA,WACA3F,KAAAuvC,OAAA5pC,YCjOAnH,OAAA,wDAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MACArC,KAAA+K,cAAA,EAAA;iCACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAyH,QAAAw6B,QAAAv6B,OAAA,GAAAw+B,cAAA7+B,QAAA6+B,cAAAn+B,iBAAApK,KAAAoK,gBAQA,OALAL,SAAA,+HACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,2BAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,2BAAA66B,WACA,wFACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;kRAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,iBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,iBAAA66B,WACA,6ECWA9lC,OAAA,oDACA,SACA,sBACA,wDACA,SAAAC,EAAAq1C,iBAAAC;8LACA,YAWA,SAAAC,2BAKA,GAAAC,eAAAH,kBAOAjnB,QAAA,WACA,GAAAroB,MAAAxE,KACA4b,MAAA5b,KAAAqH,OAAA6sC,cAAA,GAQA,QAPAl0C,KAAA0C,GAAA,aAAA1C,KAAA0C,GAAA,aAAA1C,KAAA0C,GAAA,gBACA1C,KAAAm2B,SAAA,cAAA,GACAzwB,QAAA,WACAjH,EAAAmd,MAAA,WACApX,KAAA2xB,SAAA,cAAA,IACAva,QAEA5b,OAEAmxC,cAoBA,OAjBA8C,eACApK,YAAAkK,gBACAh0C,GAAA,SAAA,WACA,GAAAyE,MAAAxE,IACAA,MAAAK,aAGAN,GAAA,mBAAA,QAAA,SAAAwG;6DACAA,EAAAmF,iBACAlH,KAAAqoB,YAEA9sB,GAAA,mBAAA,SAAA,SAAAwG,GACAA,EAAAmF,iBACAlH,KAAAQ,cAIAivC,cArDA,GAAA9C,gBACA+C,aAAA,IACAC,cAAA,cAsDA,OAAAH,2BC9DAx1C,OAAA,2DACA,SACA,SACA,OACA,WACA,gBACA,iBACA,yBACA,oDACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAzJ,SAAAC,gBAAAR,cAAAu1C,eACA,YAMA,IAYA9C,gBACArY,IAAA,EACAsb,KAAA,EAMA,OAAA11C,gBAEA4F,KAtBA,eA2BAC,KAAA;gBASA,QAAA8vC,WACAJ,gBACAl0C,GAAA,SAAA,WACAyE,KAAA8vC,MAAAnyC,KAAAnC,MACAwE,KAAA+qC,OAAAE,SAKAjrC,KAAAkB,QAAA,aAEA3F,GAAA,UAAA,WACAyE,KAAA8vC,MAAA71C,EAAA81C,QAAA/vC,KAAA8vC,MAAAt0C,MACAwE,KAAA8vC,MAAA70C,OAAA4H,OAAAyxB,KACAt0B,KAAAO,SAEA,IAAAP,KAAA8vC,MAAA70C,SACA+E,KAAA+qC,OAAAC,UACAhrC,KAAAkB,QAAA,UAMAlB,KAAAkB,QAAA,eAEAnB,MACAivB,EAAA,GAAAhvB,KAAA8vC,MAAA70C,OACA8zB,EAAA,GAAA/uB,KAAA8vC,MAAA70C,SAEAsJ,OAAAG,YAuCA,QAAAsrC,aAIA,SAHA3zC,WAAA0H,iBACA+7B,aAEAmQ,YAMA,QAAAhD,gBACA+C,YACAhwC,KAAAuK,OAEAvK,KAAAmB,OA3FA,GAAAnB,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyE,WAAArI,WAAAS,gBAAA0B,iBAAAP,SACA2E,WAAAvG,WAAAsG,cAAAE,WACAA,OAAA5I,EAAAuQ,SAAAvQ,EAAA6R,OAAAlJ,WAAAuH,aAjCA,qBAiCAwiC,eACA7pC,iBAAAF,WAAAG,eAlCA;kTAsEAvH,MAAAs0C,SAGAt0C,KAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC,aACA5lC,QAAA,eACAT,KAAArF,GAAA,WACA+F,MAAA/F,GAAA,4BACAmF,KAAA,cAIAtK,KAAAuvC,OAAAxvC,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAAuC,8BAIAb,WAAAO,gBACAlJ,EAAAsI,QAAAO,gBAAA,SAAAM,QAAAC,KACA5I,SAAAyF,IAAAxF,gBAAA4I,aAAAF,QAzFA,gBAyFA,GAAA;gFAEA/G,WAAA6E,QArFA,qBAqFAmC,OAEAigC,YAAA,MAMA9nC,KAAA6E,UAwBAhE,WACAd,GAAA,WAAA0xC,cACA1xC,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,UAEApG,EAAAi2C,OAAAlwC,KAAA8vC,MAAA,aAGAv0C,GAAAkI,2BAAA,WACAusC,cACA,IAAAhwC,KAAA8vC,MAAA70C,QACA+E,KAAAkB,QAAA,QAEAlB,KAAA8vC,MAAA70C,OAAA4H,OAAAyxB,IACAub,UACA,IAAAhtC,OAAAyxB,KACAr6B,EAAAi2C,OAAAlwC,KAAA8vC,MAAA,eAUAtvC,QAAA,WACA/F,SAAAgG,OAAA,kBAMAF,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAMAF,QAAA,WACA7E,KAAAuvC,OAAA1qC,WAMAkK,KAAA;gBACA/O,KAAAuvC,OAAAxgC,QAMApJ,KAAA,WACA3F,KAAAuvC,OAAA5pC,YCtMAnH,OAAA,8CACA,SACA,SACA,OACA,WACA,gBACA,gBACA,iBACA,0BACA,SAAAK,EAAAJ,EAAA0G,GAAAuD,MAAAisC,kBAAA11C,SAAAC,gBAAAR,eACA,YAEA,IAAAk2C,WACAlvB,OAAA,IACAlW,MAAA,IACAmV,IAAA,GACAX,KAAA,GACAmwB,cAAA,cAMA,OAAAz1C,gBACA4F,KAAA,aAIAC,KAAA,WAcA,QAAAiwC,aAKA,UAJA3zC,WAAA0H,sBACA+7B,aAGAuQ,WAMA,QAAApD,gBACA+C,YACAhwC,KAAAuK,OAEAvK,KAAAmB,OAQA,QAAAmvC,iBAAAC,SACAvwC,KAAAqwC,WAAAF,kBAAAl2C,EAAAuQ;8CACAgmC,SAAAxwC,KAAAywC,qBACAt1C,SAAA,EACAu1C,mBAAAzkC,WAAAsiC,eACAoC,oBAAAJ,SAAA,MACAH,WAAA70C,GAAA,OAAA,WACAyE,KAAAkB,QAAA,QACAlB,KAAA+qC,OAAAE,WACA1vC,GAAA,OAAA,WACAyE,KAAAkB,QAAA,SACAlB,KAAA+qC,OAAAC,YACAzgC,OAMA,QAAAqmC,qBACA,IAAA5wC,KAAAyxB,SAAA,aACAzxB,KAAAqwC,WAEArwC,KAAAqwC,WAAAnyC,GAAA,UACA8B,KAAAqwC,WAAA9lC,OAEAvK,KAAAqwC,WAAAlvC,OAIA0B,OAAAkC,SACAknB,SAAA,OAAAppB,OAAAkC,SAAA5J,QAAA,SAAA,KAAA,SAAAo1C,SACAD,gBAAAC,UACA,WAEAD,oBAGAA,mBAzEA,GAAAtwC,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAgM,WAAAzQ,KAAAsB,gBACA4F,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAqH,cAAAtH,WAAAuH,YACAtH,OAAAqH,cAAAmmC,eACAvtC,iBAAAF,WAAAG,eAAAvH,KAAAkF;0RA0EAlF,MAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC,aACA5lC,QAAA,aACAC,MAAA/F,GAAA,mBACAmF,KAAA,QACAE,KAAArF,GAAA,gBAEAnF,KAAAi1C,qBAAAp2C,EAAA,mCAGAmB,KAAA60C,WAAA,KAGA70C,KAAAuvC,OAAAxvC,GAAA,QAAA,SAAAwG,GAEA1H,EAAA0H,EAAA4b,QAAAzhB,QAAA,sBAAAjB,SAIA8G,EAAAmF,iBACA7K,WAAA6E,QAAA,sBAGA0B,WAAAO,gBACAL,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA;kJACArE,WAAA6E,QAAA,qBAEAoiC,YAAA,EACAuN,QAAA,uBAMA5D,eACAzxC,KAAA6E,UAGAhE,WACAd,GAAA,WAAA0xC,cACA1xC,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,UACAL,KAAAqwC,aAEArwC,KAAAqwC,WAAA7vC,UACAR,KAAAqwC,WAAA,QAGA90C,GAAA,kBAAA,WACAy0C,aACAY,sBAOArsC,OAAA,WACA/I,KAAAsB,gBACAyxC,eAAA1pC,OAAArJ,KAAAi1C,uBAKAjwC,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF;oCAEAlF,KAAAi1C,qBAAAhwC,SACAjF,KAAA60C,YACA70C,KAAA60C,WAAA7vC,WAMAD,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAKAF,QAAA,WACA7E,KAAAuvC,OAAA1qC,UACA7E,KAAA60C,YACA70C,KAAA60C,WAAAlvC,QAMAoJ,KAAA,WACA/O,KAAAuvC,OAAAxgC,QAKApJ,KAAA,WACA3F,KAAAuvC,OAAA5pC,OACA3F,KAAA60C,YACA70C,KAAA60C,WAAAlvC,YC1OAnH,OAAA,uDAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MACArC,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAyH,QAAAw6B,QAAAv6B,OAAA,GAAAw+B,cAAA7+B,QAAA6+B,cAAAn+B,iBAAApK,KAAAoK;wGAUA,OAPAL,SAAA,iHACAK,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,gBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,gBAAA66B,WACA,gGACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,SAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,SAAA66B,WACA,mFACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;yOAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,OAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,OAAA66B,WACA,8BCSA9lC,OAAA,mDACA,SACA,OACA,yBACA,WACA,aACA,gBACA,iBACA,uDACA,SAAAK,EAAAsG,GAAAzG,cAAAgK,MAAA4sC,eAAAr2C,SAAAC,gBAAAq2C;ySACA,YAKA,OAAA72C,gBAEA4F,KAAA,UAKAC,KAAA,WAaA,QAAAiwC,aAEA,QADA3zC,WAAA0H,iBACA+7B,QAAAkR,aAMA,QAAA/D,gBACA+C,YACAhwC,KAAAuK,OAEAvK,KAAAmB,OAOA,QAAA8vC,kBACA,IAAAjxC,KAAAyxB,SAAA,aAEAvtB,MAAAq/B,OAAAvjC,KAAAkxC,OACAhtC,MAAAitC,SAAAnxC,KAAAkxC,OAMAlxC,KAAA+qC,OAAAC,WAJAhrC,KAAAoxC,OAAAhZ,IAAA,IAAA96B,QACA0C,KAAA+qC,OAAAE;qBACAoG,QAAAC,aAAAtxC,KAAAkxC,SAvCA,GAAAlxC,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF,eACA2wC,QAAAP,eAAA,cAyCAt1C,MAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC,aACA5lC,QAAA,UACAC,MAAA/F,GAAA,mBACAmF,KAAA,MACAE,KAAArF,GAAA,aAIAnF,KAAAuvC,OAAAxvC,GAAA,SAAA,WACAyE,KAAA8G,QAAA9G,KAAA+qC,OAAAlvC,aACAmE,KAAAkxC,MAAA72C,EAAA02C,cAAAQ,SAAAvxC,KAAA8G,SACA9G,KAAAoxC,OAAApxC,KAAA8G,QAAAhM,KAAA,qCACAkF,KAAAwxC,QAAAxxC,KAAA8G,QAAAhM,KAAA;sEACAkF,KAAAyxC,QAAAzxC,KAAA8G,QAAAhM,KAAA,qCAEAu2C,QAAAK,iBAAA1xC,KAAAkxC,OAGAlxC,KAAAwxC,QAAAj2C,GAAA,QAAA,WACA2I,MAAA/C,KAAAnB,KAAAkxC,OACAlxC,KAAA+qC,OAAAC,YAIAhrC,KAAAyxC,QAAAl2C,GAAA,QAAA,WACA,GAAAo2C,SAAA3xC,KAAAoxC,OAAAhZ,KAEAuZ,WACA3xC,KAAAK,UACAL,KAAA+qC,OAAAC,UAEA3uC,WAAAw1B,WACA8Z,eAAA,WACAgG,QAAAA,UAEArgB,KAAA,WACAptB,MAAA/C,KAAAnB,KAAAkxC,OACAlxC,KAAAO,WAEAszB,MAAA,WACA3vB,MAAA/C,KAAAnB,KAAAkxC,OACAlxC,KAAAO,gBAQA/E,KAAAuvC,OAAAxvC,GAAA,QAAA,SAAAwG,GAEA1H,EAAA0H,EAAA4b,QAAAzhB,QAAA,gCAAAjB,SAIA8G,EAAAmF,iBACA7K,WAAA6E,QAAA;sCAGA0B,WAAAO,gBACAL,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAA,kBAEAoiC,YAAA,IAMA2J,eACAzxC,KAAA6E,UAGAhE,WACAd,GAAA,WAAA0xC,cACA1xC,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,YAEA9E,GAAA,eAAA,WACAy0C,aACAiB,mBAQAzwC,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,YAMAH,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAMAF,QAAA,WACA7E,KAAA01C,OACAhtC,MAAA/C,KAAA3F,KAAA01C,OAEA11C,KAAAuvC,OAAA1qC,UACA7E,KAAAuvC,OAAAC;uBAMAzgC,KAAA,WACA/O,KAAAuvC,OAAAxgC,QAMApJ,KAAA,WACA3F,KAAA01C,OACAhtC,MAAA/C,KAAA3F,KAAA01C,OAEA11C,KAAAuvC,OAAA5pC,YC5NAnH,OAAA,4DAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MACArC,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAC,OAAAC,OAAA,GAAAK,iBAAApK,KAAAoK,gBAYA,OATAL,SAAA;6NACAD,OAAAJ,QAAAwB,OAAArB,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAyB,MAAArB,OALA,kBAKAC,QAAAA,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,0HACAC,OAAAJ,QAAA0sC,SAAAvsC,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAA2sC,QAAAvsC,OATA,kBASAC,QAAAA,OAAAG,KAAAR;qDAAAS,QAAA7H,KAAAA,OAAAyH,SACAD,QAAA,IAAAA,UAAAE,QAAAF,QACAE,QAAA,sFCOAvL,OAAA,iEACA,SACA,SACA,WACA,oBACA,wCACA,yBACA,4DACA,SAAAK,EAAAJ,EAAAiK,MAAA2tC,cAAAC,UAAA53C,cAAA63C,UACA,YAaA,SAAAC,WAAAC,QACA/tC,MAAAqG,KAAA0nC,OAAA3M,SAAAzoC,QACAo1C,OAAA/wC,QAAA,aACA7G,EAAAkS,QAAAhR,GAAA,UAAA02C,OAAAvxC,UAAAzG,EAAAi4C,SAAAj4C,EAAAmpC,QAAA+O,aAAAF,QAAA;uFAQA,QAAAG,WAAAH,QACA/tC,MAAA/C,KAAA8wC,OAAA3M,SAAAzoC,QACAo1C,OAAA/wC,QAAA,aACA7G,EAAAkS,QAAAlN,IAAA,UAAA4yC,OAAAvxC,WASA,QAAA2xC,eAAAJ,QACA,GAAAK,YAAApuC,MAAAitC,SAAAc,OAAA3M,SAAAzoC,QAAA,EAIA,OAHAy1C,YACAF,UAAAH,QAEAK,UAQA,QAAAC,iBAAAN,QAKA,QAAAnoC,iBAAA/H,GACAA,EAAA8H,2BACA9H,EAAA+H,kBANA,GAAApI,WAAA,IAAAuwC,OAAAvxC,UACA8xC,YAAA,QAAA,YAAA,UAAA,aAAA,WAAA,QAAA,SAAA,WAAA,SAAA,QAAAp6B,KAAA1W,UAAA,KAAAA,UACA+wC,WAAAx4C,EAAAmpC,QAAAgP,UAAAH;sNAOAA,QAAA3M,SAAAoN,SACArzC,IAAAqC,WACAnG,GAAA,QAAAmG,UAAA+wC,YACAl3C,GAAAi3C,WAAA1oC,iBAEAmoC,OAAA3M,SAAAzoC,OACAwC,IAAAqC,WACAnG,GAAA,QAAAmG,UAAA,cAAA+wC,YACAl3C,GAAAi3C,WAAA1oC,iBAOA,QAAAqoC,cAAAF,QACA,GAAA1zC,UAAA0zC,OAAA3M,SAAA/mC,QACA0zC,QAAAU,OAAAC,QAAAr0C,SAAAyM,QAAAzM,SAAA2iB,UASA,MALA2wB,eAAAgB,iBAAA,MAAAf,WAKA53C,eAEA4F,KAjFA,iBAsFAC,KAAA;gBAUA,QAAA+yC,eAAAj1C,OACA,IAAAmC,KAAAyxB,SAAA,aACAugB,UAAAhyC,MACAA,KAAAslC,SAAAyN,OAAA/sC,KAAAnI,KAAA62B,OACAyd,aAAAnyC,MACAA,KAAA2yC,OAAAK,KAAAn1C,KAAA6B,SAAA,QAdA,GAAAM,MAAAxE,KACAa,WAAAb,KAAAyE,gBACApD,OAAAxC,EAAA03C,WAgBAv2C,MAAA8pC,UACAzoC,OAAAA,OACA61C,SAAA71C,OAAA/B,KAAA,mBACAi4C,OAAAl2C,OAAA/B,KAAA,iBACAyD,SAAA1B,OAAA/B,KAAA,oBAGAU,KAAAm3C,OAAAd,eACArB,SAAAh1C,KAAA8pC,SAAA/mC,SACApD,SAAA,EACA83C,YAAA,EACAC,aAAA,IAIA72C,WACAd,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,aAAA,WACAyE,KAAAlD,gBAAA0B,iBACAqG,OAAA7E,KAAAslC,SAAAzoC,QACAwC,IAAA,IAAAW,KAAAU,WACAnF,GAAA,gBAAAyE,KAAAU,UAAA,SAAA6mC;6IAEAuL,cADAvL,MAAA4L,cAAAC,UAGAb,gBAAAvyC,QAEAzE,GAAA,OAAA,WACA82C,cAAAryC,QAEAzE,GAAA,OAAA,WACA82C,cAAAryC,QAEAzE,GAAA,0BAAA,WACAyE,KAAAK,YAEA9E,GAAA,sBAAA,SAAAsC,MACAi1C,cAAAj1C,SAOA0G,OAAA,aAMA/D,QAAA,WACAhF,KAAAsB,gBAAA0B,iBAAAa,IAAA,IAAA7D,KAAAkF,WAEAlF,KAAAm3C,QACAn3C,KAAAm3C,OAAAnyC,UAGAhF,KAAA8pC,SAAAzoC,QACArB,KAAA8pC,SAAAzoC,OAAA4D,SAGAjF,KAAAm3C,OAAA,KACAn3C,KAAA8pC,aAMA/kC,OAAA,aAMAF,QAAA;mBACAgyC,cAAA72C,OAMA+O,KAAA,aAMApJ,KAAA,WACAkxC,cAAA72C,WClNAxB,OAAA,2DACA,SACA,SACA,kBACA,SACAC,EACAI,EACAg5C,oBAEA,YAcA,SAAAC,gBACA,GAAAv1C,GAAAw1C,YAEA,KAAAx1C,EAAA,EAAAA,EAAAy1C,UAAAC,WAAA11C,IACAw1C,UAAA51C,KAAA61C,UAAAE,WAAA31C,GAEA,OAAAw1C,WAnBA,GAAAC,UAEA,KAAAjnC,OAAAonC,aAAA,KAAA,IAAA1jC,OAAA,0CAuBA,OArBAujC,WAAAjnC,OAAAonC,eAqBA,SAAAt3C,YAOA,GAAAu3C,iBAAA,EAMAC,mBAKAC,gBAAAT,oBACA7tC,UAAA,qBACAuuC,kBAAA;mCAcA,OAVA15C,GAAAqF,UAAAnE,GAAA,sBAAA,WACAq4C,iBAAAJ,UAAAQ,cACAF,gBAAAG,gBAAAX,gBACAE,UAAAU,sBAYAC,mBAAA,SAAAC,MACAR,eAAAQ,KACAR,eACAv3C,WAAA6E,QAAA,4BAEA7E,WAAA6E,QAAA,2BAOAA,QAAA,WACA0yC,eAUAp4C,KAAA24C,oBAAA,GATAX,UAAAQ,YAMAx4C,KAAA24C,oBAAA,IALA93C,WAAA6E,QAAA,4BACA4yC,gBAAAG,gBAAAX,gBACAj3C,WAAA6E,QAAA,0BACAsyC,UAAAU,oBAaAG,cAAA,SAAAjF;+BACA,GAAAnyB,OAAA62B,gBAAAQ,mBACAr3B,QAAAA,MAAAhiB,OAAA,IACA44C,gBAAAzE,QAAAnyB,QASAs3B,iBAAA,SAAAnF,QACA,GAAAnyB,OAAA42B,gBAAAzE,OACAnyB,QAAAA,MAAAhiB,OAAA,GACA64C,gBAAAU,mBAAAv3B,QAOAw3B,gBAAA,WACAX,gBAAAW,kBACAjB,UAAAU,uBCjIAl6C,OAAA,sDACA,SACA,SACA,OACA,yBACA,WACA,gBACA,iBACA,2DACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAAgK,MAAAzJ,SAAAC,gBAAA24C,oBACA;YAKA,OAAAn5C,gBAEA4F,KAAA,cAKAC,KAAA,WAoDA,QAAAiwC,aAIA,UAHA3zC,WAAA0H,sBACA+7B,aAEA4U,YAMA,QAAAzH,gBACA+C,YACAhwC,KAAAuK,OAEAvK,KAAAmB,OAjEA,GAAAnB,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF,eAEAg0C,YAAArB,mBAAAh3C,WAGAb,MAAAm5C,WAAAn5C,KAAAsB,gBAAAsvC,aAAAC,aACA3lC,MAAA/F,GAAA,kBACAmF,KAAA,cACAW,QAAA,oBACAT,KAAArF,GAAA,eAGAnF,KAAAo5C,aAAAp5C,KAAAsB,gBAAAsvC,aAAAC,aACA3lC,MAAA/F,GAAA;wCACA8F,QAAA,kBACAT,KAAArF,GAAA,sBAIAnF,KAAAm5C,WACAp5C,GAAA,YAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,oBAGA1F,KAAAo5C,aACAr5C,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,2BAGA0B,WAAAO,gBACAL,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAA,oBACAoiC,YAAA,EAAArgC,SAAA,IAKAzH,KAAA6E,UAyBAhE,WACAd,GAAA,WAAA0xC,cACA1xC,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,aAAA,WACA,GAAA24B,aAAA73B,WAAA0H;2CACA2wC,aAAAH,iBAAArgB,YAAA/B,kBAEA52B,GAAA,mBAAA,WACA,GAAA24B,aAAA73B,WAAA0H,gBACA2wC,aAAAL,cAAAngB,YAAA/B,kBAEA52B,GAAA,0BAAA,WACAyE,KAAAK,UACAq0C,YAAAP,oBAAA,KAEA54C,GAAA,iBAAA,WACAy0C,aACA0E,YAAAxzC,YAGA3F,GAAA,wBAAA,WACAm5C,YAAAD,oBAEAl5C,GAAA,2BAAA,WACAyE,KAAA20C,WAAA1J,WAEA1vC,GAAA,yBAAA,WACAyE,KAAA20C,WAAA3J,aAOAxqC,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,WACArG,EAAAqF,UAAAL,IAAA;iCAMAkB,OAAA,WACA/E,KAAAm5C,WAAAp0C,SACA/E,KAAAo5C,aAAAr0C,UAMAF,QAAA,WACA7E,KAAAm5C,WAAAt0C,UACA7E,KAAAo5C,aAAAv0C,WAMAkK,KAAA,WACA/O,KAAAm5C,WAAApqC,OACA/O,KAAAo5C,aAAArqC,QAMApJ,KAAA,WACA3F,KAAAm5C,WAAAxzC,OACA3F,KAAAo5C,aAAAzzC,YCnKAnH,OAAA,uEACA,SACA,SACA,OACA,yBACA,WACA,YACA,gBACA,kBACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAAgK,MAAA2wC,aAAAp6C,SAAAC,iBACA,YAKA,OAAAR,gBAEA4F,KAAA,oBAKAC,KAAA,WAiBA,QAAA+0C,aAAAC;8BACA,GAAAC,UAAA36C,EAAA,YACA+rB,OAAA6uB,cAAAF,QAEAC,UACA/6C,EAAAoD,MAAA,WACA23C,SAAA9zC,QAAA,eAAAklB,MAAA6uB,kBAtBA,GAAAj1C,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF,eACAw0C,aAAAL,aAAAM,IAAA,aACA/uB,OACAgvB,mBACAC,aAAA,GACAJ,cAAA,GAmBAC,gBACAA,aAAAI,UACAlvB,MAAAivB,aAAAH,aAAAI,QACAlvB,MAAA6uB,cAAAC,aAAAI,SAEAJ,aAAAK,WACAt7C,EAAAsI,QAAA2yC,aAAAK,UAAA,SAAAC,OACApvB,MAAAgvB,gBAAAz3C;4BACAzC,GAAAs6C,MAAAt6C,GACAw5B,MAAA8gB,MAAA11C,UAOAtE,KAAAi6C,WAAAj6C,KAAAsB,gBAAAsvC,aAAAsJ,YACAjvC,QAAA,iBACAC,MAAA/F,GAAA,mCACAmF,KAAA,WACAE,KAAArF,GAAA,cAGAnF,KAAAi6C,WAAAl6C,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,+BAKAklB,MAAAgvB,gBAAA7yC,QAAA,SAAAizC,OACA,GAAAG,YAAA31C,KAAAlD,gBAAAsvC,aAAAC,aACA5lC,QAAA+uC,MAAAt6C,GACAwL,MAAA8uC,MAAA9gB,MACA5uB,KAAA,UACAE,KAAAwvC,MAAA9gB,OAGAihB,YAAAC,UAAA,kBAEAD,WAAAp6C,GAAA,QAAA,SAAAwG,GACA,GAAAgzC,SAAAv5C,KAAAqH,OAAA4D,OACA1E,GAAAmF,iBAEAlH,KAAAy1C,WAAAI;6BACAr6C,KAAAyvC,SAEA6J,YAAAC,WAGA3uB,MAAAivB,eAAAG,MAAAt6C,IACAy6C,WAAAp6C,GAAA,SAAA,WACAC,KAAAyvC,aAKAroC,WAAAO,gBACAL,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAA,+BAEAoiC,YAAA,IAMA9nC,KAAA6E,UAGAhE,WACAd,GAAA,WAAA,WACAyE,KAAAuK,SAEAhP,GAAA,aAAA,WACAyE,KAAAO,SACAu0C,YAAA1uB,MAAA6uB,iBAEA15C,GAAA,cAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,YAEA9E,GAAA,4BAAA,YACA,IAAAyE,KAAAyxB,SAAA,YACAzxB,KAAAy1C,WAAAK;+DAQAt1C,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,YAMAH,OAAA,WACA/E,KAAAi6C,WAAAl1C,UAMAF,QAAA,WACA7E,KAAAi6C,WAAAp1C,WAOAkK,KAAA,WACA/O,KAAAi6C,WAAAlrC,QAMApJ,KAAA,WACA3F,KAAAi6C,WAAAt0C,YC7KAnH,OAAA,2DACA,SACA,SACA,iBACA,kBACA,eACA,yBACA,yBACA,yBACA,0BACA,SACAK,EACAJ,EACA2zC,UACAmI,WACAlI,iBACAmI,cACAC,cACAC,cACAC,eAEA,YAEA,IAqBAC,YArBAC;mCACAC,WAAA,IACAC,YAAA,IACAC,WAAA,IACAC,YAAA,IAEAn7C,iBACAo7C,OAAA,EACAC,OAAA,EACAC,OAAA,GACAC,OAAA,IAEAC,gBACAC,aAAA,GACAC,cAAA,GACAC,iBAAA,GACAC,gBAAA,IAEAC,iBACAxH,cAAA,cAqBA,OAAA,UAAA7P,QAAAsX,WAAA15C,UAyBA,QAAAuwC,YAAAoJ,YACA,GAAAlJ,MACAmJ,SACAC,MAAAF,WAAAE,MACAC,aAAAH,WAAAG,aAEAC,oBAAA,WACA,GAAAtzC,UAAA3I,KAAAK,YACA5B,GAAAy9C,OAAAl8C,KAAAqH,OAAA80C,MAAA,SAAAC,YAAAC,QACAD,aACAzzC,SAAAhG,SAAA,UAAA05C,WAUA,OAJA1J,MAAAN,iBAAAyJ,QAAAD,YACAnB,cAAA/H;oBACAgI,cAAAhI,KAAAgJ,iBAEAhJ,KACA5yC,GAAA,SAAA,WACA,GAAA4I,UAAA3I,KAAAK,YAEAL,MAAAi8C,sBAEAtzC,SACAhG,SAAA,oBAAAk5C,WAAAn8C,IACAK,GAAA,YAAA,WACAu8C,sBAMAv8C,GAAA,cAAA,WACAw8C,UAAA52C,OACA62C,OAAA72C,OACA82C,iBAAA,QACAC,cAAA,YAAA,YAAA,MAEA38C,GAAA,eAAA87C,WAAAc,cAAAl+C,EAAAiM,MACA3K,GAAA,SAAA87C,WAAAe,UAAAn+C,EAAAiM,MACA3K,GAAA,YAAA,WACA88C,4BACAC,6BACAC,0BAEAL,cAAA,YAAA,YAAA,IACAD,iBAAA,QACAF,UAAAxtC,OACAytC,OAAAztC;gBAEAxK,OAYA,QAAAy4C,eAAApuC,eACA,GAAAC,QAkEA,OAJAA,SAAAwjC,kBA5DA4K,iBAAA,WACA,GAAAt0C,UAAA3I,KAAAK,YAEAL,MAAAk9C,YAAAl9C,KAAAm9C,UACAn9C,KAAAo9C,WAAAp9C,KAAAq9C,cAEAr9C,KAAAo3C,QAAAwE,WAAAd,WAAAc,WAAAb,aACAuC,OAAAp7C,SAAAg5C,OAAAh5C,SAAAi5C,QACAxyC,SAAAhG,SAAA,UAEA3C,KAAAm2B,SAAA,eAAA,IAGAonB,eAAA,WACA,GAAA50C,UAAA3I,KAAAK,YAEAL,MAAA0C,GAAA,iBAEA1C,KAAAo3C,QAAAp3C,KAAAk9C,YAAA1tC,MAAAxP,KAAAk9C,YAAAx3B,QACA43B,OAAAt9C,KAAAo9C,WAAA5pB,EAAAxzB,KAAAo9C,WAAA7pB,GACA5qB,SAAA/F,YAAA,UAEA5C,KAAAk9C,YAAA,KACAl9C,KAAAo9C,WAAA,KAEAp9C,KAAAm2B,SAAA,eAAA;kCAIAqnB,mBAAA,WACA,GAAA70C,UAAA3I,KAAAK,YAIAsI,UAAAU,OAAAo0C,aAAAC,SACA/0C,SAAAU,OAAAo0C,aAAAE,cAEAF,aAAAC,QAAAE,KACApuC,MAAAosC,WAAAd,WANA+C,EAOAn4B,OAAAk2B,WAAAb,YAPA8C,EAQAC,mBAAAlC,WAAAmC,UARAF,EASAG,qBAAApC,WAAAqC,WATAJ,EAUAK,sBAAAtC,WAAAuC,aAVAN,EAWAO,oBAAAxC,WAAAyC,UAXAR,IAcAJ,aAAAE,aAAAC,KACApuC,MAAAosC,WAAAZ,WACAt1B,OAAAk2B,WAAAX,YACAj3B,KAAA43B,WAAAyC,UAjBAR,EAkBAl5B,IAAAi3B,WAAAmC,UAlBAF,KAsBAS,mBAAA,WACAb,aAAAC,QAAAz4C,SACAw4C,aAAAE,aAAA14C;qCAIA2J,eACA6rC,cAAA5rC,SACA8rC,cAAA9rC,QAAA8sC,iBAEA9sC,QACA9O,GAAA,SAAA,WACA,GAAAyE,MAAAxE,IACAA,MAAAK,aAGAsC,SAAA,uBAAAiM,cAAAlP,IACAK,GAAA,YAAA,WACAu8C,kBACA93C,KAAAy4C,qBAEAl9C,GAAA,UAAA,WACAyE,KAAA+4C,qBAMAx9C,GAAA,YAAA,WACAw8C,UAAA52C,OACA62C,OAAA72C,OACA+2C,cAAA,QACA18C,KAAAw9C,uBAEAz9C,GAAA,WAAA,SAAAw+C,gBAAAC,iBAEAt8C,SAAAg5C,QAAAqD,gBACAr8C,SAAAi5C,QAAAqD,gBACAt8C,SAAAk5C,QAAAmD,gBACAr8C,SAAAm5C,QAAAmD,kBAEAz+C,GAAA,UAAA;2BACAC,KAAAs+C,qBAGAG,YAAA,QACAlC,UAAAxtC,OACAytC,OAAAztC,OAGA2vC,oBAEAn6C,OAaA,QAAAo6C,yBAIApC,UAAAlK,mBAEAsI,cAAA4B,UAAAZ,iBACAlB,cAAA8B,WACAqC,gBAAA,WACA,GAAAC,SAAAC,SAAAC,GAAApM,KAAAtyC,aAAA2+C,QAeA,QAXAxrB,EAAAqrB,QAAA76B,KAAA42B,WAAAqE,SACA1rB,EAAAsrB,QAAAl6B,KAAAi2B,WAAAsE,UAAAtD,WAAAX,YAAA3W,QAAAmX,kBACAjsC,MAAAosC,WAAAd,WAAA,EAAAF,WAAAqE,SACAv5B,OAAAk2B,WAAAb,aACAa,WAAAX,YAAAL,WAAAsE,UAAAtE,WAAAuE,gBAAA7a,QAAAoX,qBAUA37C,GAAA,SAAA;0BACA,GAAA4I,UAAA3I,KAAAK,aACA++C,UAAAvgD,EAAA,SACAwgD,MAAA,kBAGA12C,UAAAhG,SAAA,0BACAgG,SAAAU,OAAA+1C,WACAz2C,SAAA5I,GAAA,YAAA,SAAAwG,GACAA,EAAA+H,kBACAguC,sBAGAv8C,GAAA,YAAA,WACAy8C,OAAA72C,OACA82C,iBAAA,QACAC,cAAA,YAAA,YAAA,MAEA38C,GAAA,WAAA,SAAAw+C,gBAAAC,iBACAt8C,SAAAk5C,QAAAmD,gBACAr8C,SAAAm5C,QAAAmD,gBAEA5C,WAAAyC,WAAAE,gBACA3C,WAAAmC,WAAAS,gBAEA5C,WAAAqC,YAAAM,gBACA3C,WAAAuC,cAAAK,gBAEAc,2BAEAv/C,GAAA,UAAA;2BACA08C,iBAAA,QACAF,UAAAzG,eACA0G,OAAAztC,OACA2tC,cAAA,YAAA,YAAA,IAEAG,8BAEAt4C,OAMA,QAAAg7C,gBACA/C,OAAAnK,mBAEAsI,cAAA6B,OAAAb,iBACAnB,cAAAgC,QACAz8C,GAAA,SAAA,WACA,GAAAyE,MAAAxE,KACA2I,SAAA3I,KAAAK,aACAm/C,WAAA3gD,EAAA,SACAwgD,MAAA,wBAGA12C,UAAAU,OAAAm2C,YACA72C,SAAAhG,SAAA,sBAEAgG,SAAA5I,GAAA,YAAA,WACAu8C,oBAGA3zC,SAAA5I,GAAA,QAAA,SAAAwG,GACAA,EAAA+H,kBACA9J,KAAAkB,QAAA,aAGAnB,OAQA,QAAA+3C,mBACAmC,YAAA,gBACAlC,UAAAzG;yBACA0G,OAAA1G,eAGA,QAAA2I,aAAA9zC,GAAAuK,MACAwnC,cAAA/xC,GAAAuK,MACAunC,iBAAA9xC,GAAAuK,MAGA,QAAAwnC,eAAA/xC,GAAAuK,MACAuqC,SAAA,OAAA90C,GAAAuK,MAGA,QAAAunC,kBAAA9xC,GAAAuK,MACAuqC,SAAA,UAAA90C,GAAAuK,MASA,QAAAuqC,UAAAt9B,OAAAxX,GAAAuK,MACAzW,EAAAy9C,OAAA4C,SAAA,SAAAlhB,MACAn/B,EAAA4J,SAAAu1B,KAAAzb,UAAA1jB,EAAAgI,WAAAm3B,KAAAzb,QAAAxX,MACAizB,KAAAzb,QAAAxX,IAAAkI,MAAA+qB,KAAAzb,QAAAjN,QAWA,QAAAwpC,mBACAY,yBACAzC,4BACAC,6BACAC,0BAGA,QAAAuC,0BACA5C,cAAA,SAGA,QAAAG,6BACAp+C,EAAAy9C,OAAA4C,SAAA,SAAAlhB;iCACAA,KAAA+U,KAAAqJ,aAAApe,KAAA/uB,WAIA,QAAAiuC,8BACAP,WACAA,UACAnF,QAAAwE,WAAAZ,WAAA1W,QAAAoX,iBACA4B,OACAp7C,SAAAk5C,OACAl5C,SAAAm5C,OAAAO,WAAAX,YAAA3W,QAAAmX,kBAKA,QAAAsB,2BACAP,QACAA,OACApF,QACAwD,WAAAqE,SAAA3a,QAAAmX,iBACAb,WAAAsE,UAAA5a,QAAAmX,kBAEA6B,OACAp7C,SAAAg5C,OAAAU,WAAAd,WAAAF,WAAAqE,SAAA,EACA/8C,SAAAi5C,OAAA7W,QAAAmX,kBASA,QAAAiE,qBACA9D,WAAAmC,UAAAnD,WAAAsE,YACAtD,WAAAmC,UAAAnD,WAAAsE,UACAh9C,SAAAm5C,OAAAn5C,SAAAi5C,OAAAP,WAAAsE;sDAEAtD,WAAAX,YAAAL,WAAAsE,YACAtD,WAAAX,YAAAL,WAAAsE,WAEAtD,WAAAuC,aAAAvD,WAAAuE,kBACAvD,WAAAuC,aAAAvD,WAAAuE,iBAEAvD,WAAAb,YAAAa,WAAAmC,UAAAnC,WAAAX,YAAAW,WAAAuC,aAEAvC,WAAAyC,UAAAzD,WAAAqE,WACArD,WAAAyC,UAAAzD,WAAAqE,SACA/8C,SAAAk5C,OAAAl5C,SAAAg5C,OAAAN,WAAAqE,UAEArD,WAAAZ,WAAAJ,WAAAqE,WACArD,WAAAZ,WAAAJ,WAAAqE,UAEArD,WAAAqC,WAAArD,WAAAqE,WACArD,WAAAqC,WAAArD,WAAAqE,UAEArD,WAAAd,WAAAc,WAAAyC,UAAAzC,WAAAZ,WAAAY,WAAAqC;uFASA,QAAA0B,cAAAC,UAAAC,KAAAC,SACAlE,WAAAmC,UAAA6B,UAEAE,SACAlE,WAAAb,YAAA6E,UAAAhE,WAAAX,YAAAW,WAAAuC,aACAj8C,SAAAi5C,OAAA0E,OAEAjE,WAAAX,YAAAW,WAAAb,YAAA6E,UAAAhE,WAAAuC,aACAj8C,SAAAm5C,OAAAn5C,SAAAi5C,OAAAyE,WAUA,QAAAG,eAAAC,SAAAC,KAAAC,UACAtE,WAAAqC,WAAA+B,SAEAE,SACAtE,WAAAZ,WAAAiF,KAAA/9C,SAAAk5C,OAEAQ,WAAAd,WAAAc,WAAAyC,UAAAzC,WAAAZ,WAAAgF,SAUA,QAAAG,iBAAAP,UAAAC,KAAAC,SACAlE,WAAAuC,aAAAyB;kCAEAE,SACAlE,WAAAX,YAAA4E,KAAA39C,SAAAm5C,OACAO,WAAAuC,aAAAyB,WAEAhE,WAAAb,YAAAa,WAAAmC,UAAAnC,WAAAX,YAAA2E,UAUA,QAAAQ,cAAAJ,SAAAC,KAAAC,UACAtE,WAAAyC,UAAA2B,SAEAE,UACAtE,WAAAd,WAAAkF,SAAApE,WAAAZ,WAAAY,WAAAqC,WACA/7C,SAAAg5C,OAAA+E,OAEArE,WAAAZ,WAAAY,WAAAd,WAAAkF,SAAApE,WAAAqC,WACA/7C,SAAAk5C,OAAAl5C,SAAAg5C,OAAA8E,UAWA,QAAAK,sBAGAC,YACA5gD,GAAA,IACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA,EAAAD,MAAA,GAGA+3B,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAk5C,OACAl5C,SAAAi5C,QACA/D,QACAwE,WAAAZ,WACAY,WAAAmC;kGAKA/B,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EACApxB,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MACAuqB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAMAkB,aAAA,SAAAntC,MAAAkW,OAAAw6B,SAAAJ,SACA9/C,KAAAqH,OAAAm5C,UAAA,QACA,KACA5E,WAAAmC,WAAAnC,WAAAX,YAAAL,WAAAsE,YAIAtC,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,EAAAD,GACAosB,aAAAj6B,OAAA6N,EAAAusB,SACAR,4BAKAgB,YACA5gD,GAAA,KACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA,EAAAD,MAAA,GAEA+3B,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAk5C,OAAAQ,WAAAZ,WACA94C,SAAAi5C,QACA/D,QACAwE,WAAAqC,WACArC,WAAAmC;wHAIA/B,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EACApxB,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MAAA80B,QAAAmX,iBACA1hB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAmB,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,EAAAD,GACAosB,aAAAj6B,OAAA6N,EAAAusB,SACAC,cAAAvwC,MAAAgkB,EAAA0sB,UACAZ,4BAKAgB,YACA5gD,GAAA,IACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA,EAAAD,MAAA,GAEA+3B,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAk5C,OAAAQ,WAAAZ,WACA94C,SAAAm5C,QACAjE,QACAwE,WAAAqC,WACArC,WAAAX;0HAIAe,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EAAA8Q,QAAAmX,iBACAr5C,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MAAA,EAAA80B,QAAAmX,iBACA1hB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAkB,aAAA,SAAAntC,MAAAkW,OAAAw6B,UACAlgD,KAAAqH,OAAAo5C,SAAA,SACA7E,WAAAqC,YAAArC,WAAAZ,WAAAJ,WAAAqE,UACA,MAGArC,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,GACAusB,cAAAvwC,MAAAgkB,EAAA0sB,UACAZ,4BAKAgB,YACA5gD,GAAA,KACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA;UAAAD,MAAA,GACAk7B,UAAAtE,WAAAuE,gBAEApD,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAk5C,OAAAQ,WAAAZ,WACA94C,SAAAm5C,OAAAO,WAAAX,aACA7D,QACAwE,WAAAqC,WACArC,WAAAuC,eAIAnC,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EACApxB,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MAAA80B,QAAAmX,iBACA1hB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAmB,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,EAAAD,GACAwsB,cAAAvwC,MAAAgkB,EAAA0sB,UACAC,gBAAAz6B,OAAA6N,EAAAusB,SACAR,4BAKAgB,YACA5gD,GAAA,IACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA,EAAAD,MAAA,GACAk7B,UAAAtE,WAAAuE;qCAEApD,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAk5C,OACAl5C,SAAAm5C,OAAAO,WAAAX,aACA7D,QACAwE,WAAAZ,WACAY,WAAAuC,eAIAnC,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EACApxB,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MACAuqB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAkB,aAAA,SAAAntC,MAAAkW,OAAAw6B,SAAAJ,SACA9/C,KAAAqH,OAAAm5C,UAAA,QACA5E,WAAAuC,cAAAvC,WAAAX,YAAAL,WAAAsE,WACA,MAGAtC,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,EAAAD,GACA4sB,gBAAAz6B,OAAA6N,EAAAusB,SACAR,4BAKAgB,YACA5gD,GAAA,KACAy8C;OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA,EAAAD,MAAA,GACAk7B,UAAAtE,WAAAuE,gBAEApD,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAg5C,OACAh5C,SAAAm5C,OAAAO,WAAAX,aACA7D,QACAwE,WAAAyC,UACAzC,WAAAuC,eAIAnC,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EAAA8Q,QAAAmX,iBACAr5C,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MAAA80B,QAAAmX,iBACA1hB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAmB,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,EAAAD,GACA4sB,gBAAAz6B,OAAA6N,EAAAusB,SACAM,aAAA5wC,MAAAgkB,EAAA0sB,UACAZ,4BAKAgB,YACA5gD,GAAA,IACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA,EAAAD,MAAA;EAEA+3B,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAg5C,OACAh5C,SAAAm5C,QACAjE,QACAwE,WAAAyC,UACAzC,WAAAX,cAIAe,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EAAA8Q,QAAAmX,iBACAr5C,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MAAA,EAAA80B,QAAAmX,iBACA1hB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAkB,aAAA,SAAAntC,MAAAkW,OAAAw6B,UACAlgD,KAAAqH,OAAAo5C,SAAA,SACA,KACA7E,WAAAyC,WAAAzC,WAAAZ,WAAAJ,WAAAqE,WAGArC,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,GACA4sB,aAAA5wC,MAAAgkB,EAAA0sB,UACAZ,4BAKAgB,YACA5gD,GAAA,KACAy8C,OAAAx3B,KAAA,EAAA47B,OAAA,EAAAt8B,QAAA;UAAAD,MAAA,GAEA+3B,MAAA,WACA/7C,KAAAs9C,OACAp7C,SAAAg5C,OACAh5C,SAAAi5C,QACA/D,QACAwE,WAAAyC,UACAzC,WAAAmC,YAIA/B,aAAA,SAAAntC,SACA,GAAAzM,KAAApC,KAAAq9C,cACAtjB,KAAA/5B,KAAAm9C,SACAtuC,SAAAyuC,OACAl7C,IAAAoxB,EAAA8Q,QAAAmX,iBACAr5C,IAAAmxB,EAAA+Q,QAAAmX,kBACArE,QACArd,KAAAvqB,MAAA80B,QAAAmX,iBACA1hB,KAAArU,OAAA,EAAA4e,QAAAmX,mBAIAmB,SAAA,SAAAptC,MAAAkW,OAAAw6B,SAAAJ,QAAAtsB,EAAAD,GACAosB,aAAAj6B,OAAA6N,EAAAusB,SACAM,aAAA5wC,MAAAgkB,EAAA0sB,UACAZ,4BAKA,QAAAgB,YAAAI,YACA5B,SAAA4B,WAAAhhD,KACAizC,KAAAF,WAAAh0C,EAAAkiD,UAAA/F,WAAA8F,aACA7xC,QAAAmuC,cAAA0D,aAKA,QAAAE;8BACAnD,aAAAC,QAAA7+C,EAAA,SACAwgD,MAAA,YAEA5B,aAAAE,aAAA9+C,EAAA,SACAwgD,MAAA,iBAjzBA,GAAAwB,cAEAtE,UACAC,OAFAsC,YAGArB,eAg6BA,OAxGA7B,YAAAn9C,EAAAuQ,SAAA4sC,eAAAf,mBACA34C,SAAAzD,EAAAuQ,SAAA9M,aAAApC,iBACAwkC,QAAA7lC,EAAAuQ,SAAAs1B,YAAAgX,gBAEAV,YACAqE,SAAA,EAAA3a,QAAAmX,iBAAAnX,QAAAiX,aACA2D,UAAA,EAAA5a,QAAAmX,iBAAAnX,QAAAkX,cACA2D,gBAAA,EAAA7a,QAAAmX,iBAAAnX,QAAAoX,iBAGAmF,cACAt8C,KAAA,WACA,GAAAC,MAAAxE,IAcA,OAZAA,MAAA8gD,cAAAlF,WAAA15C,UAEAm+C;qBACAO,qBACAjC,wBACAY,eAEA/C,OAAAz8C,GAAA,QAAA,WACAyE,KAAAmB,OACAnB,KAAAkB,QAAA,WAGA1F,MAGA+I,OAAA,SAAAG,YAKA,MAJAu1C,aAAA,UAAAv1C,aACAqzC,UAAAxzC,OAAAG,YACAszC,OAAAzzC,OAAAG,YACAw1C,kBACA1+C,MAGAgF,QAAA,WAKA,MAJAy5C,aAAA,WACAhB,aAAA,KACAlB,UAAA,KACAC,OAAA,KACAx8C,MAGA+O,KAAA,WAKA,MAJA0vC,aAAA,QACAlC,UAAAxtC,OACAytC,OAAAztC,OACA/O,KAAAm2B,SAAA,UAAA,GACAn2B,MAGA2F,KAAA,WAKA,MAJA84C,aAAA,QACAlC,UAAA52C,OACA62C,OAAA72C,OACA3F,KAAAm2B,SAAA,UAAA,GACAn2B,MAgBA8gD,cAAA,SAAAC,IAAA3+C,KACAw5C,WAAAn9C,EAAAuQ,SAAA+xC,QAAAnF;0CACA15C,SAAAzD,EAAAuQ,SAAA5M,QAAAF,UAGA05C,WAAAmC,UAAA37C,IAAAi5C,OAAAj5C,IAAA+4C,OACAS,WAAAqC,WAAA8C,IAAAjG,YAAA14C,IAAAg5C,OAAAh5C,IAAA84C,QAAA6F,IAAA/F,WACAY,WAAAuC,aAAA4C,IAAAhG,aAAA34C,IAAAi5C,OAAAj5C,IAAA+4C,QAAA4F,IAAA9F,YACAW,WAAAyC,UAAAj8C,IAAAg5C,OAAAh5C,IAAA84C,OAEAwE,oBACAhB,mBAGAsC,cAAA,WACA,MAAApF,aAGAyB,YAAA,WACA,MAAAn7C,WAGAo7B,SAAA,WACA,MAAAwhB,YAIA1M,UAAAyO,cACAtG,WAAAsG,cAEAA,gBCv+BAriD,OAAA,qDACA,SACA,SACA,OACA,yBACA,WACA,gBACA,iBACA,2DACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAAgK,MAAAzJ,SAAAC,gBAAA+hD;uSACA,YAqCA,SAAAD,eAAA93C,YACA,GAAAg4C,aAAAh4C,WAAA5J,KAAA,gBACAk6C,SAAA0H,YAAA5hD,KAAA,aAEA6hD,WAAArlC,KAAAslC,KAAA5iC,WAAA0iC,YAAAtD,IAAA,kBAAA,EAEA,QACA9C,WAAAtB,SAAAhqC,QAAA,EAAA6xC,YAAA5F,iBAAA,EAAA4F,YAAA9F,aACAR,YAAA,IACAC,WAAAxB,SAAAhqC,QACAyrC,YAAAkG,YAGA,QAAA9D,aAAAn0C;iCACA,GAAAg4C,aAAAh4C,WAAA5J,KAAA,gBACAk6C,SAAA0H,YAAA5hD,KAAA,aAEAq6B,aAAA6f,SAAAt3C,eAEAo/C,YAAA5tB,SAAA8lB,SAAAoE,IAAA,gBAAA,IACA2D,WAAA7tB,SAAA8lB,SAAAoE,IAAA,eAAA,IAIAxC,OAAA1nB,SAAAiG,aAAA3V,KAAA,IAAAs9B,YAFA,EAGAjG,OAAA3nB,SAAAiG,aAAAhV,IAAA,IAAA48B,WAHA,CAKA,QACArG,OAAAE,OAAA,EAAAiG,YAAA5F,iBAAA4F,YAAA9F,aACAJ,OAAA,EACAC,OAAAA,OACAC,OAAAA,QAIA,QAAAmG,0BAAAt4C,YAEA,MADA83C,eAAA93C,YACA4xC,aAAAc,WAAAd,WApEA,GAmBAc,YACA15C,SARAm/C,aACA9F,aAAA,EACAC,cAAA,EACAC,iBAAA;mBACAC,gBAAA,GA0DA,OAAAh9C,gBAEA4F,KA5EA,cAiFAC,KAAA,WAqBA,QAAAiwC,aAIA,UAHA3zC,WAAA0H,sBACA+7B,aAEAmd,WAGA,QAAAhR,gBACA+D,YACAhwC,KAAAuK,OAEAvK,KAAAmB,OAIA,QAAA+7C,cACAl9C,KAAAq8C,aAAA5qB,SAAA,WACAurB,yBAAAt4C,aACAy4C,cAAAz4C,YAEA04C,YAEAC,YAIA,QAAAD,YACAp9C,KAAAq8C,aAAA9xC,OACAvK,KAAAkB,QAAA,SACAlB,KAAA+qC,OAAAE,SAGA,QAAAoS,aACAr9C,KAAAq8C,aAAA5qB,SAAA,WACAzxB,KAAAq8C,aAAAl7C,OAEAnB,KAAAkB,QAAA,OACAlB,KAAA+qC,OAAAC,UAGA,QAAAmS,eAAAG,gBACAlG,WAAAoF,cAAAc;yCACA5/C,SAAAm7C,YAAAyE,gBACAt9C,KAAAq8C,aAAAC,cACAriD,EAAA6R,MAAAsrC,YACAn9C,EAAA6R,MAAApO,WAjEA,GAAAsC,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAvFA,mBAwFA2B,WAAArI,WAAAS,gBAAA0B,iBAAAP,QAEAzC,MAAA6gD,aAAAI,oBAAAI,aACA98C,OACAwE,OAAAG,YACAnJ,GAAA,QAAA,WACA8hD,cAEAl8C,OAwDA3F,KAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC,aACA3lC,MAAA/F,GAAA,eACAmF,KAAA,yBACAW,QAAA,cACAT,KAAArF,GAAA;yBAIAnF,KAAAuvC,OACAxvC,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAAuC,6BAGAb,WAAAO,gBACAL,gBAAAygC,QACA9oC,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAygC,OAAA/nC,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAAuC,6BACA6/B,YAAA,EAAArgC,SAAA,IAKAzH,KAAA6E,UAGAhE,WACAd,GAAA,WAAA0wC,cACA1wC,GAAA,aAAA,WACA4hD,cAAAz4C,cAEAnJ,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,UACAg9C,cAEA9hD,GAAAkI,0BAAA,WACAusC,aACAkN,gBAQA18C,QAAA;mBACAhF,KAAA6gD,aAAA77C,UACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,YAMAH,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAMAF,QAAA,WACA7E,KAAAuvC,OAAA1qC,WAMAkK,KAAA,WACA/O,KAAAuvC,OAAAxgC,QAMApJ,KAAA,WACA3F,KAAAuvC,OAAA5pC,YC5QAnH,OAAA,gEAAA,cAAA,SAAA8K,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAtH,MACArC,KAAA+K,cAAA,EAAA,YACArB,QAAA1J,KAAAgL,MAAAtB,QAAAF,WAAAE,SAAArH,KAAAA,QACA,IAAAwH,QAAAC,OAAAw6B,QAAAv6B,OAAA,GAAAK,iBAAApK,KAAAoK,iBAAAm+B,cAAA7+B,QAAA6+B,aAcA,OAXAx+B,SAAA;sEACAD,OAAAJ,QAAAq4C,OAAAl4C,OAAAC,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,QACAyH,OAAAL,QAAAA,OAAAs4C,MAAAl4C,OALA,kBAKAC,QAAAA,OAAAG,KAAAR,QAAAS,QAAA7H,KAAAA,OAAAyH,QACAC,QAAAK,iBAAAP,QACA,qMACAO,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,kBAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,kBAAA66B,WACA,sKACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE;8UAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,eAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,eAAA66B,WACA,+GACAl6B,kBAAAN,OAAAJ,QAAAvE,IAAAsE,QAAAA,OAAAtE,GAAAm/B,SAAAp6B,QAAA7H,KAAAA,MAAAyH,OAAAA,OAAAG,KAAAR,OAAA,eAAA66B,SAAAiE,cAAAt+B,KAAAR,OAAA,KAAA,eAAA66B,WACA;kLCEA9lC,OAAA,4DACA,SACA,SACA,sBACA,gEACA,SAAAK,EAAAJ,EAAAq1C,iBAAAkO,mBACA,YA0EA,SAAAC,uBAAA56C,QAqOA,QAAA66C,eAAAC,YACA,GAAAC,cACAtY,WAAAA,SAAAuY,QAAAF,YAAAA,WAAAziD,KACA0iD,cAAAtY,SAAAuY,OAAA/iD,KAAA,0BAAA6iD,WAAAziD,GAAA,KACA0iD,cAAA3iD,SACAhB,EAAA84B,SAAA4qB,WAAAn8B,aACAo8B,cAAA,GAAAp8B,UAAAm8B,WAAAn8B;2GAEAvnB,EAAA84B,SAAA4qB,WAAAp8B,cACAq8B,cAAA,GAAAr8B,WAAAo8B,WAAAp8B,cASA,QAAAu8B,wBACAvxC,OAAAuf,iBAAA,SAAAiyB,2BAAA,GAMA,QAAAC,2BACAzxC,OAAA0xC,oBAAA,SAAAF,2BAAA,GAMA,QAAAG,kBACAjkD,EAAAsI,QAAA47C,UAAAT,eAQA,QAAAU,iBAAAb,OACA,MAAAjmC,MAAAgd,IAAA+pB,aAAA/mC,KAAA4yB,IAAAlwB,WAAAujC,OAAAe,eAMA,QAAAC,kBACAjZ,UACAA,SAAAkZ,OAAApF,KACAqF,UAAA,SAAAC,UAAA,MAQA,QAAAC;yBACA,GAAAC,cACAtZ,YACAsZ,cAAAtZ,SAAAuZ,WAAA/yC,OAAA,GAAAulB,KAAAqtB,WACApZ,SAAAuZ,WAAAt7C,OAAAq7C,eAAAn+C,SACA6kC,SAAAuZ,WAAAD,eAOA,QAAAE,iBACA,GAAAC,SAAA1kD,EAAAkS,OACAyyC,gBAAAn8C,OAAAo5C,SAAA8C,QAAA/zC,QAAAi0C,SACAD,eAAAn8C,OAAAm5C,UAAA+C,QAAA79B,SAAA+9B,SAMA,QAAAC,aACA5Z,UAAAA,SAAAuY,SACAsB,YAAA7Z,SAAAkC,QAAAx8B,QACAo0C,aAAA9Z,SAAAkC,QAAAtmB,SAEAokB,SAAAuY,OACA7yC,MAAAm0C,aACAj+B,OAAAk+B,eAOA,QAAAC,cACA,GAAA3hD,SACA4nC,WAAAA,SAAAkC,UACA9pC,SAAAshD,eAAAnG,cAEAn7C,SAAAsxB,GAAAswB,GAAAha,SAAAkC,QAAAjmB;6CACA7jB,SAAAqxB,GAAAwwB,GAAAja,SAAAkC,QAAAhmB,YAEAw9B,eAAAQ,OAAA9hD,SAAAsxB,EAAAtxB,SAAAqxB,IAOA,QAAA0wB,kBACAC,SAAA,GAAAnzC,QAAAozC,iBAAAC,iBAMA,QAAAC,iBACAva,UAAAA,SAAAkC,SACAkY,SAAAI,QAAAxa,SAAAkC,QAAA2N,IAAA,IACA4K,WAAA,EACA5kB,YAAA,EACA6kB,eAAA,EACAC,SAAA,IAGAnC,uBAMA,QAAAoC,gBACAR,SAAAluB,aACAwsB,0BAUA,QAAAmC,oBAAAC,WAAAC,WAAAC,eACA,GAAAC,OAAA,EACA/rB,MAAAkqB,SAOA,OALA2B,cACAE,MAAAF,YAAA3B,UAAA,GAAA,EACAlqB,OAAA6rB,WAAA3B,UAAA4B,gBAAAD,WAAAC;uEAGAF,WAAA5rB,MAAA+rB,MASA,QAAAC,qBAAAxxB,EAAAD,GACA,GAAA0xB,GAYA,OAVAnb,WACAA,SAAAoN,SAAAv0C,SAAA,UAGAsiD,GAAA/gD,SAAAghD,iBAAA1xB,EAAAD,GAEAuW,UACAA,SAAAoN,SAAAt0C,YAAA,UAGAqiD,GAUA,QAAAE,gBAAAC,KAAAhsC,KAAA+I,QACA,GAAAkjC,OAAAxmD,EAAAumD,MACAE,MAAAzmD,EAAAua,MACA4yB,QAAAntC,EAAAsjB,QACAojC,SAAAF,MAAA5jC,QA4BA,OAzBA4jC,OAAAniD,UAAAC,KAAA,WACA,GAAAqiD,OAAA3mD,EAAAmB,KACA,IAAAwlD,MAAA9iD,GAAA4iD,OAGA,OAAA,CAFAC,SAAApjD,KAAAqjD,MAAA/jC,WAOA8jC,QAAAprC,MAGAorC,QAAA9lD,QACA4lD,MAAArZ,QACAvtC,EAAAgnD,aAAAF,QAAA,SAAA9jC,OAEA,GADA4jC,MAAAA,MAAAK,WAAAC,GAAAlkC,QACA4jC,MAAA5lD,OACA,OAAA,KAKA4lD,MAAAxmD,IAEAwmD;MA5bA,GAWA1B,aAAAC,aAAAE,GAAAC,GAXA6B,WAAAnnD,EAAAuQ,SAAA3H,WAAA8pC,eACA0R,aAAArkC,WAAAonC,WAAAC,UACA/C,aAAAtkC,WAAAonC,WAAAE,UACAC,cAAAvnC,WAAAonC,WAAAI,WACA9C,UAAAN,gBAAAgD,WAAA7D,OACA0B,SAAAjlC,WAAAonC,WAAAnC,UACAwC,SAAAvyB,SAAAkyB,WAAAK,SAAA,IACAC,SAAAD,SAAA/C,UACAiD,YAAA,KACArc,SAAA,KACAoa,SAAA,KAEAvB,aAKAa,eAAA1P,kBAKAsS,aAAA,WACA,MAAAlD,YAOAmD,UAAA,WACA,MAAAvc,WAAAA,SAAAkC,SAUAsa,UAAA,SAAAC,YAkBA,MAjBAzc,WACAA,SAAAkC,QAAAua,WACAzc,SAAA0c,YAAA;0BAEAlE,uBAMAtiD,KAAA0F,QAAA,eAAAokC,SAAAkC,SAEAhsC,KAAA46B,UAEAurB,YAAAI,WAGAvmD,MASAymD,OAAA,SAAA1E,OAgBA,MAfAA,QAAAtjD,EAAAg+B,SAAAslB,SACAmB,UAAAN,gBAAAb,QAGAgB,iBACAI,gBACAG,gBACAO,aAMA7jD,KAAA0F,QAAA,OAAAw9C,WAEAljD,MASA0mD,OAAA,SAAAC,MAIA,MAHAA,OAAAloD,EAAAg+B,SAAAkqB,OACA3mD,KAAAymD,OAAAvD,UAAA1kC,WAAAmoC,OAEA3mD,MAQA4mD,OAAA,WACA,MAAA5mD,MAAA0mD,OAAAX,gBAQAc,QAAA,WACA,MAAA7mD,MAAA0mD,QAAAX,gBASA/B,OAAA,SAAAxwB,EAAAD,GACA,GAAArxB,SACA4nC,YACA5nC,SAAAlC,KAAA8mD,UAAAtzB,EAAAD,GACAuW,SAAAkZ,OAAApF,KACAj5B,KAAAziB,SAAAyiB,IACAX,MAAA9hB,SAAA8hB;wBAWA8iC,UAAA,SAAAtzB,EAAAD,GACA,OACA5O,IAAAggC,mBAAApxB,EAAAqwB,aAAA5jD,KAAAqH,OAAAqe,QACA1B,KAAA2gC,mBAAAnxB,EAAAmwB,YAAA3jD,KAAAqH,OAAAmI,SASAorB,OAAA,WAmBA,MAlBAkP,WAAAA,SAAAkC,UACAlC,SAAAuY,OAAAvY,SAAAkC,QAAA17B,QAAA0iC,WAAA,MACAlJ,SAAAuY,OAAA/iD,KAAA,UAAA2F,SACA6kC,SAAAuY,OAAA/iD,KAAA,6BAAA0zC,WAAA,uBACAlJ,SAAAkZ,OAAAjtB,QAAA1sB,OAAAygC,SAAAuY,QAEAqB,YACAX,iBACAc,aACAP,gBACAZ,iBAKA1iD,KAAA0F,QAAA,WAGA1F,OAEAmxC,eAMAiT,gBAAA3lD,EAAAi4C,SAAAj4C,EAAAypC,KAAAsb,eAAA5oB,OAAA4oB,gBAAAuD,eAMAxE,0BAAA9jD,EAAAuoD,SAAA,SAAAjb;6JAEA,GAGAkb,UAAA9E,WAHAnW,QAAAntC,EAAAktC,MAAA5pB,QACA+kC,aAAAnb,MAAA5pB,OAAA6D,UACAD,WAAAgmB,MAAA5pB,OAAA4D,UAIA+jB,WAAAA,SAAAuY,QAAArW,QAAA3pC,KAAA,qBAEA4kD,SAAAjb,QAAA3pC,KAAA,oBACA8/C,WAAA1jD,EAAAa,KAAAqjD,WAAAjjD,GAAAunD,WACA9E,WAAAn8B,UAAAkhC,aACA/E,WAAAp8B,WAAAA,WAGAm8B,cAAAC,cAIA8E,SAAAxoD,EAAA0oD,SAAA,cACAnb,QAAAvW,KAAA,wBAAAwxB,UACAtE,UAAAxgD,MACAzC,GAAAunD,SACAjhC,UAAAkhC,aACAnhC,WAAAA;wBAIAy9B,eAAA5oB,WAGAwsB,eA2TA,OAtFAxB,YAAAp2C,MAAA02C,SACAN,WAAAlgC,OAAAwgC,SAAAmB,YACAzB,WAAA3G,SAAAgH,SAAApD,aACA+C,WAAA1G,UAAA+G,SAAApD,aAAAwE,YAEA7D,eACA3Z,YAAAmY,mBACAjiD,GAAA,SAAA,WACA,GAAAyE,MAAAxE,KACAgqC,WAAAhqC,KAAAK,YAEAL,MAAAm2B,SAAA,UAAA,GAGA2tB,IAAA9Z,WAAA8Q,aAAA9Q,WAAAx6B,SAAA,EACAu0C,IAAA/Z,WAAA+Q,cAAA/Q,WAAAtkB,UAAA,EAEAokB,UACAkC,QAAAma,YACAnD,OAAAnkD,EAAA,SAAAmrC,YACAqZ,WAAAxkD,EAAA,SAAAmrC,YACAkN,SAAAr4C,EAAA,WAAAmrC,aAEAmc,YAAA,KAGAnc,WAAAjqC,GAAA,mBAAA,QAAA,SAAAgsC;yDACA,GAAAzgC,SAAAzM,EAAAktC,MAAA5pB,QAAAzhB,QAAA,YACAi3B,OAAArsB,QAAAjJ,KAAA,UAEA0pC,OAAArgC,iBACAisB,QAAAnzB,KAAAmzB,SACAnzB,KAAAmzB,YAKAqS,WAAAjqC,GAAA,mBAAA,kBAAA,SAAAgsC,OACAA,MAAArgC,iBACAlH,KAAAmB,OACAnB,KAAAkB,QAAA,WAIAskC,WAAAjqC,GAAA,mBAAA,WAAA,SAAAgsC,OACAvnC,KAAA9B,GAAA,WAQA8B,KAAA2xB,SAAA,WAAA,GAPAgvB,eACAH,oBAAAjZ,MAAAub,MAAAvb,MAAAwb,OACAzd,SAAAkZ,OACAlZ,SAAAkC,SACA1rC,QAAAwB,UAOAmiD,iBACAX,gBACAP,mBAEAhjD,GAAA,wBAAA,WAEAC,KAAAm2B,SAAA,WAAA,KAEAp2B,GAAA,cAAA;+BACA8jD,eAEA9jD,GAAA,OAAA,WACAqkD,kBACAC,kBAEAtkD,GAAA,OAAA,WACA2kD,iBAEA3kD,GAAA,SAAA,WACAujD,kBAEAvjD,GAAA,UAAA,WACA2kD,eACAyB,YAAA,KACArc,SAAA,KACAoa,SAAA,OAEA3/C,KAAAqhD,YAEApC,eA1lBA,GAAA6D,aAAAt2C,OAAAy2C,OAAAh4C,MAAAuB,OAAAy2C,OAAA9hC,OAMAqhC,cAAA,GAOAK,eAAA,GA8BAjW,eACA4Q,MAnBA,EAoBA8D,SApBA,EAqBAC,SAfA,EAgBAE,UAAA,GACAC,SA7BA,IA8BAz2C,MAAAi4C,IACA/hC,OAAA+hC,IAAAJ,YACApI,SAAAwI,IACAvI,UAAAuI,IAAAJ,YACA5D,SAAA,GACAtP,cAAA,cAuiBA,OAAA8N,yBCzmBAzjD,OAAA,uDACA,SACA,SACA,OACA,yBACA,WACA,gBACA,iBACA,4DACA,SAAAK,EAAAJ,EAAA0G,GAAAzG,cAAAgK,MAAAzJ,SAAAC,gBAAA+iD;4SACA,YAMA,IAAAyF,YAAA,YAMAz/C,aAAA,QAAAy/C,WAAA,IAMApM,gBACAqM,QAAA,EACAC,QAAA,EACAC,SAAA,GAMA,OAAAnpD,gBAEA4F,KAAAojD,WAKAnjD,KAAA,WAeA,QAAAujD,qBACA,GAAA5+C,WAwCA,OAtCAs6C,kBACAt6C,WAAArI,WAAAS,gBAAAyxC,eAEAyQ,eAAAvB,uBACA4D,SAAAhS,aAAA8T;8BACA7B,SAAAjS,aAAA+T,QACA5B,UAAAnS,aAAAgU,WAEA9nD,GAAA,OAAA,WAIAyE,KAAAkB,QAAA,oBAEA3F,GAAA,OAAA,WAIAyE,KAAAkB,QAAA,oBAEA3F,GAAA,OAAA,SAAAgiD,OAKAv9C,KAAAkB,QAAA,iBAAAq8C,SAEAhiD,GAAA,QAAA,WACAgoD,kBAEAzB,UAAAp9C,YACAH,OAAAG,WAAAzG,UAKA+B,KAAAkB,QAAA,qBAEA89C,eAOA,QAAAhP,aAIA,UAHA3zC,WAAA0H,sBACA+7B,aAEA0jB,UAMA,QAAAvW,gBACA+C,YACAhwC,KAAAuK,OAEAvK,KAAAmB,OAOA,QAAAsiD,mBACAzjD,KAAAyxB,SAAA,aACAzxB,KAAAyxB,SAAA,UACA8xB,gBAEAG,iBASA,QAAAA;yBACAJ,oBAEAtE,eAAA9gD,GAAA,WACA8gD,eAAAz0C,OAEAvK,KAAA+qC,OAAAE,SACA5uC,WAAA6E,QAAA,eAAAgiD,YAEAljD,KAAA2xB,SAAA,UAAA,GAOA,QAAA4xB,iBACAvjD,KAAA2xB,SAAA,UAAA,GAEA3xB,KAAA+qC,OAAAC,UACA3uC,WAAA6E,QAAA,gBAAAgiD,YAEAlE,iBAAAA,eAAA9gD,GAAA,WACA8gD,eAAA79C,OAxHA,GAAAnB,MAAAxE,KAEAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAwsC,aAAAp1C,EAAAuQ,UAAA5H,WAAAuH,aAAA+4C,gBAAApM,gBACAh0C,iBAAAF,WAAAG,eAAAmgD,gBACAlE,eAAA,IAsHAxjD,MAAAuvC,OAAAvvC,KAAAsB,gBAAAsvC,aAAAC;4DACA5lC,QAAA,UACAC,MAAA/F,GAAA,qCACAqF,KAAArF,GAAA,oBACAmF,KAAA,SAIAtK,KAAAuvC,OAAAxvC,GAAA,QAAA,SAAAgsC,OACAA,MAAArgC,iBACA7K,WAAA6E,QAAAuC,aAAA,YAKAb,WAAAO,gBACAlJ,EAAAsI,QAAAO,gBAAA,SAAAM,QAAAC,KACA5I,SAAAyF,IAAAxF,gBAAA4I,aAAAF,QAAA8/C,YAAA,GAAA,WAEA7mD,WAAA6E,QAAAuC,aAAAJ,OAEAigC,YAAA,MAMA2J,eACAzxC,KAAA6E,UAGAhE,WAEAd,GAAA,WAAA,WACA0xC,eACAjtC,KAAAK,YAEA9E,GAAA,aAAA,WACAyjD,gBACAA,eACA5oB,SACA6rB,OAAA5S,aAAA8T;uEAGA5nD,GAAA,yBAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAyxB,SAAA,WACA8xB,gBAEAvjD,KAAAK,YAEA9E,GAAA,UAAA,WACAyjD,gBACAA,eAAAx+C,UAEAw+C,eAAA,OAIAzjD,GAAAkI,aAAA,SAAA,WACAusC,aACAyT,oBAGAloD,GAAAkI,aAAA,KAAA,WACAusC,aAAAhwC,KAAAyxB,SAAA,YAAAzxB,KAAAyxB,SAAA,WACA6xB,oBAAAlB,WAGA7mD,GAAAkI,aAAA,MAAA,WACAusC,aAAAhwC,KAAAyxB,SAAA,YAAAzxB,KAAAyxB,SAAA,WACA6xB,oBAAAjB,YAGA9mD,GAAAkI,aAAA,QAAA;sCACAzD,KAAAyxB,SAAA,WACA8xB,mBAQA/iD,QAAA,WACA/F,SAAAgG,OAAA,IAAAyiD,aAMA3iD,OAAA,WACA/E,KAAAuvC,OAAAxqC,UAMAF,QAAA,WACA7E,KAAAuvC,OAAA1qC,WAMAkK,KAAA,WACA/O,KAAAuvC,OAAAxgC,QAMApJ,KAAA,WACA3F,KAAAuvC,OAAA5pC,YC5RAnH,OAAA,wCACA,SACA,OACA,WACA,iBACA,gBACA,iBACA,0BACA,SAAAK,EAAAsG,GAAAuD,MAAAy/C,YAAAlpD,SAAAC,gBAAAR,eACA,YAMA,IAAA0pD,UAAA,IAYAC,WACAC,MAAA,GACAC,MAAA,KAQAC,aAAA,SAAAxc,QAAA+V,OACAoG,YAAAM,mBAAAzc,QAAA,OACAmc,YAAAO,MAAA1c,QAAA+V,MAAA;sCAOA4G,UAAA,SAAA3c,SACAmc,YAAAr0C,MAAAk4B,UAQA4c,aAAA,SAAA5c,SACA,GAAA6c,KAAA7c,QAAA,EACA6c,OACAA,IAAA9rC,MAAA6I,QAAA,OACAijC,IAAAC,aACAD,IAAA9rC,MAAA6I,QAAA,IAOA,OAAAlnB,gBAEA4F,KAAA,OAKAC,KAAA,WAOA,QAAAwkD,YAAAC,KAEA,GACA/D,IAAAgE,GAAAC,GAAAnhD,OAAAjD,MADAqkD,IA9DA,GA8DAH,GAGAxkD,MAAA4kD,cACAnE,GAAAzgD,KAAA4kD,YAAA,GAEArhD,OAAAk9C,GAAAoE,wBAEAJ,GAAAzkD,KAAA0E,WAAA6c,aACAmjC,GAAA1kD,KAAA0E,WAAA8c,YAEAxhB,KAAAqjB,KAAA/L,KAAAgd,IAAAuvB,UAAAC,MAAAxsC,KAAA4yB,IAAA2Z,UAAAE,MAAA/jD,KAAAqjB,KAAAshC,MAEA3kD,KAAAqjB,OAAAugC,SACAO,UAAAnkD,KAAA4kD,aAEAZ,aAAAhkD,KAAA4kD,YAAA5kD,KAAAqjB,MAIA+gC,aAAApkD,KAAA4kD,aAEAtkD,MAAAmgD,GAAAoE;iCAEAJ,GAAAntC,KAAAgd,IAAA,EAAAmwB,IAAAnkD,MAAA0K,MAAAzH,OAAAyH,OAAA,GACA05C,GAAAptC,KAAAgd,IAAA,EAAAowB,IAAApkD,MAAA4gB,OAAA3d,OAAA2d,QAAA,GAEAlhB,KAAA0E,WAAA6c,WAAAkjC,IAAAjjC,UAAAkjC,KAIA,QAAAtC,WACA,IAAApiD,KAAAyxB,SAAA,YACA8yB,WAAA,GAIA,QAAAlC,YACA,IAAAriD,KAAAyxB,SAAA,YACA8yB,YAAA,GA/CA,GAAAvkD,MAAAxE,KACAa,WAAAb,KAAAyE,gBACAyC,SAAArG,WAAAsG,kBACAC,WAAAF,SAAAG,WACAC,iBAAAF,WAAAG,eAAAvH,KAAAkF,cAgDAlF,MAAAspD,cAAAtpD,KAAAsB,gBAAAsvC,aAAAC,aACA5lC,QAAA,UACAC,MAAA/F,GAAA,YACAmF,KAAA,WAGAtK,KAAAupD,aAAAvpD,KAAAsB,gBAAAsvC,aAAAC;iEACA5lC,QAAA,SACAC,MAAA/F,GAAA,WACAmF,KAAA,QAIAtK,KAAAupD,aAAAxpD,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,iBAIA1F,KAAAspD,cAAAvpD,GAAA,QAAA,SAAAwG,GACAA,EAAAmF,iBACA7K,WAAA6E,QAAA,kBAGA0B,WAAAO,iBACAL,gBAAAkiD,IACAvqD,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAkiD,GAAAxpD,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAA,iBAEAoiC,YAAA,IAIAxgC,gBAAAmiD,KACAxqD,SAAAyF,IAAAxF,gBAAA4I,aAAAR,gBAAAmiD,IAAAzpD,KAAAkF,WAAA,GAAA,WACArE,WAAA6E,QAAA,kBAEAoiC,YAAA;IAMA9nC,KAAA+O,OACA/O,KAAA6E,UAGAhE,WACAd,GAAA,WAAA,WACAyE,KAAAqjB,KAAAugC,SAEA5jD,KAAAuK,OACAvK,KAAAK,YAEA9E,GAAA,aAAA,WACAyE,KAAA0E,WAAArK,EAAA,gBACA2F,KAAA4kD,YAAAvqD,EAAA,aAEA2F,KAAAO,WAEAhF,GAAA,cAAA,WACAyE,KAAAO,WAEAhF,GAAA,0BAAA,WACAyE,KAAAK,YAEA9E,GAAA,cAAA6mD,QACA7mD,GAAA,eAAA8mD,UAKA7hD,QAAA,WACA/F,SAAAgG,OAAA,IAAAjF,KAAAkF,YAKAH,OAAA,WACA/E,KAAAupD,aAAAxkD,SACA/E,KAAAspD,cAAAvkD,UAKAF,QAAA,WACA7E,KAAAupD,aAAA1kD,UACA7E,KAAAspD,cAAAzkD,WAKAkK,KAAA,WACA/O,KAAAupD,aAAAx6C,OACA/O,KAAAspD,cAAAv6C,QAKApJ,KAAA;gBACA3F,KAAAupD,aAAA5jD,OACA3F,KAAAspD,cAAA3jD,YCxPA,SAAA+L,GAAA,GAAAF,GAAAtN,SAAA8N,EAAA,cAAAzP,EAAA,aAAA4vB,EAAA3gB,EAAAV,cAAA,QAAAqhB,GAAA9lB,KAAA,WAAAmF,EAAAmD,qBAAA,QAAA,GAAA3C,GAAAmgB,GAAAA,EAAA5vB,GAAA4vB,EAAA5vB,GAAAma,QAAAhL,EAAAygB,EAAAngB,GAAAR,EAAAuD,eAAArD,KACA","file":"testPlugins.min.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoTests/runner/plugin',['lodash', 'core/plugin'], function(_, pluginFactory){\n    'use strict';\n\n    /**\n     * A pluginFactory configured for the test runner\n     * @returns {Function} the preconfigured plugin factory\n     */\n    return _.partialRight(pluginFactory, {\n        //alias getHost to getTestRunner\n        hostName : 'testRunner'\n    });\n});\n\n","\ndefine('css!taoQtiTestCss/plugins/key-navigation',[],function(){});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * Test Runner Content Plugin : Navigate through the item focusable elements using the keyboard\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/accessibility/keyNavigation',[\r\n    'jquery',\r\n    'lodash',\r\n    'ui/keyNavigation/navigator',\r\n    'ui/keyNavigation/navigableDomElement',\r\n    'ui/keyNavigation/navigableGroupElement',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoTests/runner/plugin',\r\n    'css!taoQtiTestCss/plugins/key-navigation'\r\n], function ($, _, keyNavigator, navigableDomElement, navigableGroupElement, shortcut, namespaceHelper, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Init the navigation in the toolbar\r\n     *\r\n     * @param {Object} testRunner\r\n     * @returns {Array}\r\n     */\r\n    function initToolbarNavigation(){\r\n        var $navigationBar = $('.bottom-action-bar');\r\n        var $focusables = $navigationBar.find('.action:not(.btn-group):visible, .action.btn-group .li-inner:visible');\r\n        var navigables = navigableDomElement.createFromDoms($focusables);\r\n        if (navigables.length) {\r\n            return [keyNavigator({\r\n                id : 'bottom-toolbar',\r\n                replace : true,\r\n                group : $navigationBar,\r\n                elements : navigables,\r\n                //start from the last button \"goto next\"\r\n                defaultPosition : navigables.length - 1\r\n            }).on('right down', function(){\r\n                this.next();\r\n            }).on('left up', function(){\r\n                this.previous();\r\n            }).on('activate', function(cursor){\r\n                cursor.navigable.getElement().click().mousedown();\r\n            })];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Init the navigation in the header block\r\n     *\r\n     * @param {Object} testRunner\r\n     * @returns {Array}\r\n     */\r\n    function initHeaderNavigation(){\r\n        //need global selector as currently no way to access delivery frame from test runner\r\n        var $headerElements = $('[data-control=\"exit\"]:visible a');\r\n        var navigables = navigableDomElement.createFromDoms($headerElements);\r\n        if (navigables.length) {\r\n            return [keyNavigator({\r\n                id : 'header-toolbar',\r\n                group : $headerElements.closest('.infoControl'),\r\n                elements : navigables,\r\n                loop : true,\r\n                replace : true\r\n            }).on('activate', function(cursor){\r\n                cursor.navigable.getElement().click();\r\n            })];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Init the navigation in the review panel\r\n     *\r\n     * @param {Object} testRunner\r\n     * @returns {Array} the keyNavigator of the main navigation group\r\n     */\r\n    function initNavigatorNavigation(testRunner){\r\n\r\n        var $panel = testRunner.getAreaBroker().getPanelArea();\r\n        var $navigator = $panel.find('.qti-navigator');\r\n        var navigators = [];\r\n        var filtersNavigator;\r\n        var itemsNavigator;\r\n        var $filters, $trees, navigableFilters, navigableTrees;\r\n\r\n        //the tag to identify if the item listing has been browsed, to only \"smart jump\" to active item only on the first visit\r\n        var itemListingVisited = false;\r\n        //the position of the filter in memory, to only \"smart jump\" to active item only on the first visit\r\n        var filterCursor;\r\n\r\n        if($navigator.length && !$navigator.hasClass('disabled')){\r\n            $filters = $navigator.find('.qti-navigator-filters .qti-navigator-filter');\r\n            navigableFilters = navigableDomElement.createFromDoms($filters);\r\n            if (navigableFilters.length) {\r\n                filtersNavigator = keyNavigator({\r\n                    keepState : true,\r\n                    id : 'navigator-filters',\r\n                    replace : true,\r\n                    elements : navigableFilters,\r\n                    group : $navigator\r\n                }).on('right', function(){\r\n                    this.next();\r\n                }).on('left', function(){\r\n                    this.previous();\r\n                }).on('down', function(){\r\n                    if(itemsNavigator){\r\n                        _.defer(function(){\r\n                            if(itemListingVisited){\r\n                                itemsNavigator.focus().first();\r\n                            }else{\r\n                                itemsNavigator.focus();\r\n                            }\r\n                        });\r\n                    }\r\n                }).on('up', function(){\r\n                    if(itemsNavigator){\r\n                        _.defer(function(){\r\n                            itemsNavigator.last();\r\n                        });\r\n                    }\r\n                }).on('focus', function(cursor, origin){\r\n                    //activate the tab in the navigators\r\n                    cursor.navigable.getElement().click();\r\n\r\n                    //reset the item listing browsed tag whenever the focus on the filter happens after a focus on another element\r\n                    if((filterCursor && filterCursor.position !== cursor.position) || origin){\r\n                        itemListingVisited = false;\r\n                    }\r\n                    //set the filter cursor in memory\r\n                    filterCursor = cursor;\r\n                });\r\n                navigators.push(filtersNavigator);\r\n            }\r\n\r\n            $trees = $navigator.find('.qti-navigator-tree .qti-navigator-item:not(.unseen) .qti-navigator-label');\r\n            navigableTrees = navigableDomElement.createFromDoms($trees);\r\n            if (navigableTrees.length) {\r\n                //instantiate a key navigator but do not add it to the returned list of navigators as this is not supposed to be reached with tab key\r\n                itemsNavigator = keyNavigator({\r\n                    id : 'navigator-items',\r\n                    replace : true,\r\n                    elements : navigableTrees,\r\n                    defaultPosition : function defaultPosition(navigables){\r\n                        var pos = 0;\r\n                        if(filterCursor && filterCursor.navigable.getElement().data('mode') !== 'flagged'){\r\n                            _.forIn(navigables, function(navigable, i){\r\n                                var $parent = navigable.getElement().parent('.qti-navigator-item');\r\n                                //find the first active and visible item\r\n                                if($parent.hasClass('active') && $parent.is(':visible')){\r\n                                    pos = i;\r\n                                    return false;\r\n                                }\r\n                            });\r\n                        }\r\n                        return pos;\r\n                    }\r\n                }).on('down', function(){\r\n                    this.next();\r\n                }).on('up', function(){\r\n                    this.previous();\r\n                }).on('right', function(){\r\n                    if(filtersNavigator){\r\n                        filtersNavigator.focus().next();\r\n                    }\r\n                }).on('left', function(){\r\n                    if(filtersNavigator){\r\n                        filtersNavigator.focus().previous();\r\n                    }\r\n                }).on('activate', function(cursor){\r\n                    cursor.navigable.getElement().click();\r\n                }).on('lowerbound upperbound', function(){\r\n                    if(filtersNavigator){\r\n                        filtersNavigator.focus();\r\n                    }\r\n                }).on('focus', function(cursor){\r\n                    itemListingVisited = true;\r\n                    cursor.navigable.getElement().parent().addClass('key-navigation-highlight');\r\n                }).on('blur', function(cursor){\r\n                    cursor.navigable.getElement().parent().removeClass('key-navigation-highlight');\r\n                });\r\n            }\r\n\r\n        }\r\n        return navigators;\r\n    }\r\n\r\n    /**\r\n     * Init the navigation in the item content\r\n     * Navigable item content are interaction choices and body element with the special class \"key-navigation-focusable\"\r\n     * It returns an array of keyNavigators as the content is dynamically determined\r\n     *\r\n     * @param {Object} testRunner\r\n     * @returns {Array} of keyNavigator ids\r\n     */\r\n    function initContentNavigation(testRunner){\r\n\r\n        var itemNavigators = [];\r\n        var $content = testRunner.getAreaBroker().getContentArea();\r\n\r\n        //the item focusable body elements are considered scrollable\r\n        $content.find('.key-navigation-focusable').addClass('key-navigation-scrollable');\r\n        $content.find('.key-navigation-focusable,.qti-interaction').filter(function(){\r\n            //filter out interaction as it will be managed separately\r\n            return (!$(this).parents('.qti-interaction').length);\r\n        }).each(function(){\r\n            var $itemElement = $(this);\r\n            if($itemElement.hasClass('qti-interaction')){\r\n                itemNavigators = _.union(itemNavigators, initInteractionNavigation($itemElement));\r\n            }else{\r\n                itemNavigators.push(keyNavigator({\r\n                    elements : navigableDomElement.createFromDoms($itemElement),\r\n                    group : $itemElement,\r\n                    propagateTab : false\r\n                }));\r\n            }\r\n        });\r\n\r\n        return itemNavigators;\r\n    }\r\n\r\n    /**\r\n     * Init interaction key navigation from the interaction navigator\r\n     *\r\n     * @param {JQuery} $interaction - the interaction container\r\n     * @returns {Array} array of navigators created from interaction container\r\n     */\r\n    function initInteractionNavigation($interaction){\r\n\r\n        var $inputs;\r\n        var interactionNavigables;\r\n        var interactionNavigators = [];\r\n\r\n        //add navigable elements from prompt\r\n        $interaction.find('.key-navigation-focusable').each(function(){\r\n            var $nav = $(this);\r\n            if(!$nav.closest('.qti-choice').length){\r\n                interactionNavigators.push(keyNavigator({\r\n                    elements : navigableDomElement.createFromDoms($nav),\r\n                    group : $nav,\r\n                    propagateTab : false\r\n                }));\r\n            }\r\n        });\r\n\r\n        //reset interaction custom key navigation to override the behaviour with the new one\r\n        $interaction.off('.keyNavigation');\r\n\r\n        //search for inputs that represent the interaction focusable choices\r\n        $inputs = $interaction.is(':input') ? $interaction : $interaction.find(':input');\r\n        interactionNavigables = navigableDomElement.createFromDoms($inputs);\r\n\r\n        if (interactionNavigables.length) {\r\n            interactionNavigators.push(keyNavigator({\r\n                elements : interactionNavigables,\r\n                group : $interaction,\r\n                loop : false\r\n            }).on('right down', function(){\r\n                this.next();\r\n            }).on('left up', function(){\r\n                this.previous();\r\n            }).on('activate', function(cursor){\r\n                cursor.navigable.getElement().click();\r\n            }).on('focus', function(cursor){\r\n                cursor.navigable.getElement().closest('.qti-choice').addClass('key-navigation-highlight');\r\n            }).on('blur', function(cursor){\r\n                cursor.navigable.getElement().closest('.qti-choice').removeClass('key-navigation-highlight');\r\n            }));\r\n        }\r\n\r\n        return interactionNavigators;\r\n    }\r\n\r\n    /**\r\n     * Init the navigation of test rubric blocks\r\n     * It returns an array of keyNavigator ids as the content is dynamically determined\r\n     *\r\n     * @param {Object} testRunner\r\n     * @returns {Array} of keyNavigator ids\r\n     */\r\n    function initRubricNavigation(){\r\n        var $itemElements;\r\n        var rubricNavigators = [];\r\n        var $rubricArea = $('#qti-rubrics');\r\n\r\n        $itemElements = $rubricArea.find('.qti-rubricBlock');\r\n        $itemElements.each(function(){\r\n            var $itemElement = $(this);\r\n            var id = 'rubric_element_navigation_group_'+rubricNavigators.length;\r\n\r\n            rubricNavigators.push(keyNavigator({\r\n                id : id,\r\n                elements : navigableDomElement.createFromDoms($itemElement),\r\n                group : $itemElement,\r\n                replace : true\r\n            }));\r\n        });\r\n\r\n        return rubricNavigators;\r\n    }\r\n\r\n    /**\r\n     * Init test runner navigation\r\n     * @param testRunner\r\n     * @returns {*}\r\n     */\r\n    function initTestRunnerNavigation(testRunner){\r\n\r\n        var navigators;\r\n\r\n        //blur current focused element, to reinitialize keyboard navigation\r\n        if (document.activeElement){\r\n            document.activeElement.blur();\r\n        }\r\n\r\n        navigators = _.union(\r\n            initRubricNavigation(testRunner),\r\n            initContentNavigation(testRunner),\r\n            initToolbarNavigation(testRunner),\r\n            initNavigatorNavigation(testRunner),\r\n            initHeaderNavigation(testRunner)\r\n        );\r\n\r\n        navigators = navigableGroupElement.createFromNavigators(navigators);\r\n\r\n        return keyNavigator({\r\n            id : 'test-runner',\r\n            replace : true,\r\n            loop : true,\r\n            elements : navigators,\r\n        }).on('tab', function(){\r\n            this.next();\r\n        }).on('shift+tab', function(){\r\n            this.previous();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'keyNavigation',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n\r\n            shortcut.add('tab shift+tab', function(){\r\n                if(!self.groupNavigator.isFocused()){\r\n                    self.groupNavigator.focus();\r\n                }\r\n            });\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .after('renderitem', function () {\r\n                    self.groupNavigator = initTestRunnerNavigation(testRunner);\r\n                    self.enable();\r\n                })\r\n                .on('unloaditem', function () {\r\n                    self.disable();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + this.getName());\r\n            if(this.groupNavigator) {\r\n                this.groupNavigator.destroy();\r\n            }\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Content Plugin : Overlay\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/dialog/dialog',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/dialog/alert',\r\n    'ui/dialog/confirm',\r\n    'util/shortcut/registry',\r\n    'util/shortcut',\r\n    'util/namespace'\r\n], function ($, _, __, pluginFactory, dialogAlert, dialogConfirm, shortcutRegistry, globalShortcut, namespaceHelper){\r\n    'use strict';\r\n\r\n    /**\r\n     * The public name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'dialog';\r\n\r\n    /**\r\n     * The prefix of actions triggered through the event loop\r\n     * @type {String}\r\n     */\r\n    var actionPrefix = 'tool-' + pluginName + '-';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n        name : pluginName,\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\r\n            var alerts = [];\r\n            var confirms = [];\r\n            var opened = [];\r\n            var dialogShortcut = shortcutRegistry($('body'), {\r\n                propagate: false,\r\n                prevent: true\r\n            });\r\n\r\n            /**\r\n             * Closes a dialog with accept\r\n             * @param {dialog} dialog - The instance of the dialog\r\n             */\r\n            function closeAccept(dialog) {\r\n                // TODO: improve the dialog implementation in order to provide a better API\r\n                dialog.trigger('okbtn.modal').hide();\r\n            }\r\n\r\n            /**\r\n             * Closes a dialog with rejection\r\n             * @param {dialog} dialog - The instance of the dialog\r\n             */\r\n            function closeReject(dialog) {\r\n                dialog.hide();\r\n            }\r\n\r\n            /**\r\n             * Closes the last opened dialog\r\n             * @param {Boolean} accept Whether the dialog should be accepted or not\r\n             * @param {String} [shortcut] The shortcut that caused the action\r\n             */\r\n            function closeLast(accept, shortcut) {\r\n                var handle = opened.length && opened[opened.length - 1];\r\n                if (handle) {\r\n                    handle.shortcut = shortcut;\r\n                    if (accept) {\r\n                        closeAccept(handle.dialog);\r\n                    } else {\r\n                        closeReject(handle.dialog);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Add dialog on top of the provided stack\r\n             * @param {String} namespace - The event namespace that scope the dialog\r\n             * @param {Array} stack - The dialogs stack on which push the new instance\r\n             * @param {Function} dialog - The constructor of the dialog\r\n             * @param {String} message - The message to display\r\n             * @param {Function} accept - The callback for accept\r\n             * @param {Function} reject - The callback for reject\r\n             */\r\n            function addHandle(namespace, stack, dialog, message, accept, reject) {\r\n                var handle = {\r\n                    context: namespace,\r\n                    dialog: dialog(message, doAccept, doReject)\r\n                };\r\n\r\n                function doAccept(e, reason) {\r\n                    if (_.isFunction(accept)) {\r\n                        accept(handle.shortcut || reason);\r\n                    }\r\n                }\r\n                function doReject(e, reason) {\r\n                    if (_.isFunction(reject)) {\r\n                        reject(handle.shortcut || reason);\r\n                    }\r\n                }\r\n\r\n                // prevents all registered shortcuts to be triggered\r\n                // and brings back the dialog shortcuts\r\n                globalShortcut.disable();\r\n                dialogShortcut.enable();\r\n\r\n                stack.push(handle);\r\n                opened.push(handle);\r\n\r\n                handle.dialog.focus();\r\n                handle.dialog.on('closed.modal', function() {\r\n                    removeHandle(stack, handle.dialog);\r\n                    removeHandle(opened, handle.dialog);\r\n\r\n                    // if all dialogs have been closed allows all registered shortcuts to be triggered\r\n                    // also disables the dialog shortcuts\r\n                    if (!opened.length) {\r\n                        globalShortcut.enable();\r\n                        dialogShortcut.disable();\r\n                    }\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Remove a dialog from the provided stack\r\n             * @param {Array} stack - The dialogs stack from which remove the dialog instance\r\n             * @param {dialog} dialog - The instance of the dialog\r\n             */\r\n            function removeHandle(stack, dialog) {\r\n                if (dialog) {\r\n                    _.remove(stack, function(handle) {\r\n                        if (handle && dialog === handle.dialog) {\r\n                            return true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Closes all dialogs within the provided stack\r\n             * @param {String} namespace - The event namespace that scope the dialogs to close\r\n             * @param {Boolean} accept - Whether (`true`) or not (`false`) to close the dialogs with accept\r\n             * @param {Array} stack - The dialogs stack in which close the dialogs\r\n             */\r\n            function closeDialogs(namespace, accept, stack) {\r\n                if (stack) {\r\n                    _.forEach(stack, function(handle) {\r\n                        if (handle && (namespace === '@' || namespace === handle.context)) {\r\n                            if (accept) {\r\n                                closeAccept(handle.dialog);\r\n                            } else {\r\n                                closeReject(handle.dialog);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    closeDialogs(namespace, accept, alerts);\r\n                    closeDialogs(namespace, accept, confirms);\r\n                }\r\n            }\r\n\r\n            // starts with shortcuts disabled, prevents the TAB key to be used to move outside the dialog box\r\n            dialogShortcut.disable().set('Tab Shift+Tab');\r\n\r\n            // handle the plugin's shortcuts\r\n            if (testConfig.allowShortcuts) {\r\n                _.forEach(pluginShortcuts, function(command, key) {\r\n                    dialogShortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function(e, shortcut) {\r\n                        // just fire the action using the event loop\r\n                        testRunner.trigger(actionPrefix + key, shortcut);\r\n                    });\r\n                });\r\n            }\r\n\r\n            //change plugin state\r\n            testRunner\r\n                .before('alert.*', function(e, msg, accept) {\r\n                    addHandle(e.namespace, alerts, dialogAlert, msg, accept, accept);\r\n                })\r\n                .before('confirm.*', function(e, msg, accept, reject) {\r\n                    addHandle(e.namespace, confirms, dialogConfirm, msg, accept, reject);\r\n                })\r\n                .before('closedialog.*', function(e, accept) {\r\n                    closeDialogs(e.namespace, accept);\r\n                })\r\n                .on(actionPrefix + 'accept', function(shortcut) {\r\n                    closeLast(true, shortcut);\r\n                })\r\n                .on(actionPrefix + 'reject', function(shortcut) {\r\n                    closeLast(false, shortcut);\r\n                })\r\n                .on('destroy', function() {\r\n                    closeDialogs('.@');\r\n\r\n                    dialogShortcut.clear();\r\n                    dialogShortcut = null;\r\n                });\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/dialog/exitMessages',[\r\n    'lodash',\r\n    'core/promise',\r\n    'taoTests/runner/plugin'\r\n], function (_, Promise, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates the testState plugin.\r\n     * Displays exit message, then leaves the runner once the user has acknowledged\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'exitMessages',\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            // this function is mandatory\r\n        },\r\n\r\n        /**\r\n         * Installs the plugin (called when the runner bind the plugin)\r\n         */\r\n        install: function install() {\r\n            var testRunner = this.getTestRunner();\r\n\r\n            // intercepts the `leave` event,\r\n            // then if a message needs to be displayed displays it and waits the user acknowledges it\r\n            testRunner.before('leave', function leave(e, data) {\r\n                if (_.isObject(data) && data.message) {\r\n                    return new Promise(function(resolve) {\r\n                        var context = testRunner.getTestContext();\r\n\r\n                        // the leave can occurs when the runner is in inconsistent state (i.e. error)\r\n                        // prevent side error with item disabling\r\n                        if (context && context.itemUri) {\r\n                            testRunner.disableItem(context.itemUri);\r\n                        }\r\n\r\n                        // wait for the message acknowledge before leaving the runner\r\n                        testRunner.trigger('alert.leave', data.message, resolve);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\r\n *\r\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\r\n */\r\n\r\n\r\n/**\r\n * Create dialog form with message, with overlapped content\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',[\r\n    'jquery',\r\n    'i18n',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin'\r\n], function($, __, hider, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name : 'itemAlertMessage',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            this.$element = $(this.getContent().dom);\r\n\r\n            this.$element\r\n                // for GUI actions\r\n                .on('closed.modal', function(){\r\n                    $(this).modal('destroy');\r\n                })\r\n                .on('destroyed.modal', function(){\r\n                    self.$element = null;\r\n                    self.trigger('resume', self);\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            var testRunner = this.getTestRunner();\r\n            var itemRunner = testRunner.itemRunner;\r\n            var $modalsContainer = this.getContent().$container;\r\n            if (!$modalsContainer) {\r\n                $modalsContainer = $('#modalFeedbacks', itemRunner._item.container);\r\n            }\r\n            $modalsContainer.append(this.$element);\r\n\r\n            this.$element.modal();\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            if (this.$element && this.$element.length){\r\n                this.$element.modal('close');\r\n            }\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/templates/button', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" \";\n  if (helper = helpers.className) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.className); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\";\n  return buffer;\n  }\nfunction program4(depth0,data) {\n  \n  \n  return \" no-label\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"text\\\">\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  buffer += \"<li data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small btn-info action\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.className), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n    <a class=\\\"li-inner\\\" href=\\\"#\\\">\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n    </a>\\r\\n</li>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\r\n *\r\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\r\n */\r\n\r\n/**\r\n * Create form with message in test runner and replace all control buttons on his personal\r\n */\r\n\r\ndefine('taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',[\r\n    'jquery',\r\n    'i18n',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'tpl!taoQtiTest/runner/plugins/templates/button'\r\n], function($, __, hider, pluginFactory, buttonTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The display of the next button\r\n     */\r\n    var buttonData = {\r\n        next : {\r\n            control : 'move-forward',\r\n            title   : __('Submit and go to the next item'),\r\n            icon    : 'forward',\r\n            text    : __('OK')\r\n        },\r\n        end : {\r\n            control : 'move-end',\r\n            title   : __('Submit and go to the end of the test'),\r\n            icon    : 'fast-forward',\r\n            text    : __('OK & End test')\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name : 'itemInlineMessage',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n\r\n            /**\r\n             * Create the button based on the current context\r\n             * @returns {*|jQuery|HTMLElement} the button\r\n             */\r\n            var createOkButton = function createElement(){\r\n                var dataType = !!testRunner.getTestContext().isLast ? 'end' : 'next';\r\n                var $btn = $(buttonTpl(buttonData[dataType]));\r\n                $btn.addClass('modalFeedback-button');\r\n\r\n                //plugin behavior\r\n                $btn.on('click', function(e){\r\n                    e.preventDefault();\r\n\r\n                    self.disable();\r\n                    if($(this).data('control') === 'move-end'){\r\n                        self.trigger('end');\r\n                    }\r\n\r\n                    $btn.remove();\r\n                    self.$element.remove();\r\n\r\n                    self.trigger('resume', self);\r\n                });\r\n\r\n                return $btn;\r\n            };\r\n\r\n            this.$button = createOkButton();\r\n            this.$element = $(this.getContent().dom);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            var $navigationContainer = this.getAreaBroker().getNavigationArea();\r\n            var testRunner = this.getTestRunner();\r\n            var itemRunner = testRunner.itemRunner;\r\n            var $inlineContainer = this.getContent().$container;\r\n            if (!$inlineContainer && itemRunner._item.container) {\r\n                $inlineContainer = $('.qti-itemBody', itemRunner._item.container);\r\n            }\r\n\r\n            $inlineContainer.append(this.$element);\r\n\r\n            // hide all navigation buttons, create new instead of\r\n            if (!$('.modalFeedback-button', $navigationContainer).length){\r\n                $navigationContainer.append(this.$button);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable (){\r\n            this.$button.removeProp('disabled')\r\n                .removeClass('disabled');\r\n        },\r\n\r\n        disable: function disable (){\r\n            this.$button.prop('disabled', true)\r\n                .addClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            this.$button.click();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Content Plugin : Feedback\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/feedback/feedback',[\r\n    'jquery',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/feedback'\r\n], function ($, __, pluginFactory, feedback){\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n        name : 'feedback',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n\r\n            //keep a ref of the feedbacks\r\n            var currentFeedback;\r\n\r\n            var testRunner = this.getTestRunner();\r\n\r\n            /**\r\n             * Close the current feedback\r\n             */\r\n            var closeCurrent = function closeCurrent(){\r\n                if(currentFeedback){\r\n                    currentFeedback.close();\r\n                }\r\n            };\r\n\r\n            //change plugin state\r\n            testRunner\r\n                .on('error', function(err){\r\n                    var message = err;\r\n                    var type = 'error';\r\n\r\n                    if ('object' === typeof err) {\r\n                        message = err.message;\r\n                        type = err.type;\r\n                    }\r\n\r\n                    if (!message) {\r\n                        switch (type) {\r\n                            case 'TestState':\r\n                                message = __('The test has been closed/suspended!');\r\n                                break;\r\n\r\n                            case 'FileNotFound':\r\n                                message = __('File not found!');\r\n                                break;\r\n\r\n                            default:\r\n                                message = __('An error occurred!');\r\n                        }\r\n                    }\r\n\r\n                    currentFeedback = feedback().error(message);\r\n                })\r\n                .on('danger', function(message){\r\n                    currentFeedback = feedback().danger(message);\r\n                })\r\n                .on('warning', function(message){\r\n                    currentFeedback = feedback().warning(message);\r\n                })\r\n                .on('info', function(message){\r\n                    currentFeedback = feedback().info(message);\r\n                })\r\n                .on('alert.* confirm.* unloaditem', closeCurrent);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/loading/loading',[\r\n    'layout/loading-bar',\r\n    'taoTests/runner/plugin'\r\n], function (loadingBar, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates the loading bar plugin.\r\n     * Displays a loading bar when a blocking task is running\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'loading',\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var testRunner = this.getTestRunner();\r\n            testRunner\r\n                .on('unloaditem', function () {\r\n                    loadingBar.start();\r\n                })\r\n                .on('renderitem', function () {\r\n                    loadingBar.stop();\r\n                });\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\r\n *\r\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\r\n */\r\n\r\n/**\r\n * @see http://www.imsglobal.org/question/qtiv2p1/imsqti_implv2p1.html#section10008 modalFeedback\r\n */\r\n\r\ndefine('taoQtiTest/runner/plugins/content/modalFeedback/modalFeedback',[\r\n    'jquery',\r\n    'lodash',\r\n    'module',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/plugins/content/dialog/itemInlineMessage',\r\n    'taoQtiTest/runner/plugins/content/dialog/itemAlertMessage',\r\n    'ui/autoscroll'\r\n], function ($, _, module, pluginFactory, inlineMessage, alertMessage, autoscroll) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Modal or inline type of the messages\r\n     */\r\n    var inlineMode;\r\n\r\n    /**\r\n     * Form of the feedback\r\n     * by default dialog (modal) form\r\n     */\r\n    var messagePlugin;\r\n\r\n    /**\r\n     * All feedback messages\r\n     */\r\n    var renderedFeedbacks;\r\n\r\n    /**\r\n     * modalFeedback was resolved and all components were destroyed\r\n     */\r\n    var isDestroyed;\r\n\r\n    /**\r\n     * Method which should be halted after modalFeedbacks confirmation action\r\n     */\r\n    var nextStep;\r\n\r\n    function destroyFeedback(feedback) {\r\n\r\n        var removed = false;\r\n        _.remove(renderedFeedbacks, function (storedFeedback) {\r\n\r\n            var found = storedFeedback === feedback;\r\n            if (found) {\r\n                removed = true;\r\n            }\r\n            return found;\r\n        });\r\n\r\n        if (removed) {\r\n            feedback.destroy();\r\n\r\n            if (!renderedFeedbacks.length) {\r\n                nextStep();\r\n            }\r\n        }\r\n    }\r\n\r\n    function defineMode(inline) {\r\n        inlineMode = inline;\r\n        messagePlugin = inlineMode ? inlineMessage : alertMessage;\r\n    }\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'QtiModalFeedback',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            nextStep = function(){};\r\n\r\n            defineMode(!!module.config().inlineModalFeedback);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render: function render() {\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n\r\n            var createMessages = function createMessages(renderingQueue, inline){\r\n\r\n                var bInlineMode = inlineMode;\r\n\r\n                isDestroyed = false;\r\n                renderedFeedbacks = [];\r\n\r\n                if (_.isBoolean(inline)) {\r\n                    defineMode(inline);\r\n                }\r\n\r\n                if (renderingQueue.length) {\r\n\r\n                    _.forEach(renderingQueue, function (renderingToken) {\r\n\r\n                        var feedback = messagePlugin(testRunner, testRunner.getAreaBroker());\r\n                        feedback.init({\r\n                            dom: renderingToken.feedback.render({\r\n                                inline: inlineMode\r\n                            }),\r\n                            // for alerts will be used #modalMessages container\r\n                            $container: inlineMode ? renderingToken.$container : null\r\n                        });\r\n                        feedback.render();\r\n\r\n                        renderedFeedbacks.push(feedback);\r\n                    });\r\n\r\n                    // auto scroll to the first feedback, only for the \"inline\" mode\r\n                    if (inlineMode && renderedFeedbacks) {\r\n                        autoscroll($('.qti-modalFeedback', testRunner.getAreaBroker().getContentArea()).first(), testRunner.getAreaBroker().getContentArea().parents('.content-wrapper'));\r\n                    }\r\n                } else {\r\n                    nextStep();\r\n                }\r\n\r\n                // restore global feedback mode\r\n                defineMode(bInlineMode);\r\n            };\r\n\r\n            if (inlineMode) {\r\n                testRunner\r\n                    .off('plugin-resume.itemInlineMessage')\r\n                    .on('plugin-resume.itemInlineMessage', function () {\r\n                        self.destroy();\r\n                    });\r\n            } else {\r\n                testRunner\r\n                    .off('plugin-resume.itemAlertMessage')\r\n                    .on('plugin-resume.itemAlertMessage', function (feedback) {\r\n                        destroyFeedback(feedback);\r\n                    });\r\n            }\r\n\r\n            testRunner.on('modalFeedbacks', function(renderingQueue, done, inline) {\r\n                nextStep = done;\r\n                createMessages(renderingQueue, inline);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         * allow to run that function only once\r\n         */\r\n        destroy: function destroy() {\r\n            var tFeedbacks, i;\r\n            if (!isDestroyed) {\r\n                isDestroyed = true;\r\n\r\n                if (!renderedFeedbacks) {\r\n                    nextStep();\r\n                } else {\r\n                    tFeedbacks = renderedFeedbacks.slice(0);\r\n                    for (i in tFeedbacks) {\r\n                        destroyFeedback(tFeedbacks[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Content Plugin : Overlay\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/overlay/overlay',[\r\n    'jquery',\r\n    'i18n',\r\n    'taoTests/runner/plugin'\r\n], function ($, __, pluginFactory){\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n        name : 'overlay',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n\r\n            this.$element = $('<div />');\r\n            this.$element.on('click mousedown mouseup touchstart touchend keyup keydow keypress scroll drop', function(e){\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            });\r\n\r\n            var shield = function shield(){\r\n                self.enable();\r\n            };\r\n            var unshield = function unshield(itemRef){\r\n                self.disable();\r\n            };\r\n\r\n            //change plugin state\r\n            testRunner\r\n                .on('disableitem',  shield)\r\n                .on('enableitem unloaditem', unshield);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render (){\r\n            var $contentArea = this.getTestRunner().getAreaBroker().getContentArea();\r\n            $contentArea.after(this.$element);\r\n        },\r\n\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the overlay\r\n         */\r\n        enable : function enable (){\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginsConfig = testConfig.plugins || {};\r\n            var overlayConfig = pluginsConfig.overlay || {};\r\n\r\n            this.$element.addClass('overlay');\r\n\r\n            if (overlayConfig.full) {\r\n                this.$element.addClass('overlay-full');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disable the overlay\r\n         */\r\n        disable : function disable (){\r\n            this.$element.removeClass('overlay overlay-full');\r\n        },\r\n\r\n        /**\r\n         * Show the overlay\r\n         */\r\n        show: function show(){\r\n            this.enable();\r\n        },\r\n\r\n        /**\r\n         * Hide the overlay\r\n         */\r\n        hide: function hide(){\r\n            this.disable();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/responsiveness/collapser',[\r\n    'lodash',\r\n    'taoTests/runner/plugin'\r\n], function (_, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Name of the CSS class used to collapse the buttons\r\n     * @type {String}\r\n     */\r\n    var noLabelCls = 'no-tool-label';\r\n\r\n    /**\r\n     * Name of the CSS class used to collapse the buttons and allow to expand on mouse over\r\n     * @type {String}\r\n     */\r\n    var noLabelHoverCls = 'no-tool-label-hover';\r\n\r\n    /**\r\n     * Default plugin options\r\n     * @type {Object}\r\n     */\r\n    var defaults = {\r\n        collapseTools: true,        // collapse the tools buttons\r\n        collapseNavigation: false,  // collapse the navigation buttons\r\n        collapseInOrder: false,     // collapse any button in the given order\r\n        hover: false,               // expand when the mouse is over a button,\r\n\r\n        /**\r\n         * Allow to set manually which buttons should collapse and in which order.\r\n         * This can be set by triggering the \"collapser-set-order\" event on the testRunner.\r\n         * Given as an array of jQuery selectors: first index will be the first to be collapsed, and so on.\r\n         * If no selector is given for a button, then this one will never collapse.\r\n         * ex:\r\n         * var collapseOrder = [\r\n         *      '[data-control=\"highlight-clear\"],[data-control=\"highlight-trigger\"]',  // those will collapse first...\r\n         *      '[data-control=\"hide-review\"]',                                         // this one second...\r\n         *      '[data-control=\"set-item-flag\"]',                                       // third...\r\n         *      ...                                                                     // ...\r\n         * ];\r\n         * @type {String[]}\r\n         */\r\n        collaspeOrder: []\r\n    };\r\n\r\n    /**\r\n     * Creates the responsiveness collapser plugin.\r\n     * Reduce the size of the action bar tools when the available space is below the needed one.\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'collapser',\r\n\r\n        /**\r\n         * Installs the plugin (called when the runner bind the plugin)\r\n         */\r\n        init: function init() {\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginsConfig = testConfig.plugins || {};\r\n            var config = _.defaults(pluginsConfig.collapser || {}, defaults);\r\n            var areaBroker = testRunner.getAreaBroker();\r\n            var $actionsBar = areaBroker.getArea('actionsBar');\r\n            var $toolbox = areaBroker.getToolboxArea();\r\n            var $navigation = areaBroker.getNavigationArea();\r\n            var collapseCls = config.hover ? noLabelHoverCls : noLabelCls;\r\n\r\n\r\n            function getAvailableWidth() {\r\n                return $actionsBar.width();\r\n            }\r\n\r\n            function getToolbarWidth() {\r\n                return $toolbox.width() + $navigation.width();\r\n            }\r\n\r\n            function collapseNeeded() {\r\n                return getToolbarWidth() > getAvailableWidth();\r\n            }\r\n\r\n            function collapseAll(yes) {\r\n                if (config.collapseTools) {\r\n                    $toolbox.toggleClass(collapseCls, yes);\r\n                }\r\n                if (config.collapseNavigation) {\r\n                    $navigation.toggleClass(collapseCls, yes);\r\n                }\r\n            }\r\n\r\n            function shouldCollapseInOrder() {\r\n                return config.collapseInOrder && _.isArray(config.collapseOrder) && config.collapseOrder.length;\r\n            }\r\n\r\n            function collapseInOrder() {\r\n                var collapseOrderCopy = _.clone(config.collapseOrder),\r\n                    toCollapse;\r\n\r\n                while (collapseNeeded() && collapseOrderCopy.length) {\r\n                    toCollapse = collapseOrderCopy.shift();\r\n                    $actionsBar.find(toCollapse).toggleClass(collapseCls, true);\r\n                }\r\n            }\r\n\r\n            testRunner\r\n                .on('renderitem loaditem', function() {\r\n                    collapseAll(false);\r\n                    if (shouldCollapseInOrder()) {\r\n                        collapseInOrder();\r\n                    } else {\r\n                        collapseAll(collapseNeeded());\r\n                    }\r\n                });\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div id=\\\"qti-rubrics\\\"></div>\\r\\n\";\n  });\n});\n\n","/*\n *  /MathJax.js\n *\n *  Copyright (c) 2009-2015 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nif(document.getElementById&&document.childNodes&&document.createElement){if(!(window.MathJax&&MathJax.Hub)){if(window.MathJax){window.MathJax={AuthorConfig:window.MathJax}}else{window.MathJax={}}MathJax.isPacked=true;MathJax.version=\"2.6.1\";MathJax.fileversion=\"2.6.1\";MathJax.cdnVersion=\"2.6.1\";MathJax.cdnFileVersions={};(function(d){var b=window[d];if(!b){b=window[d]={}}var e=[];var c=function(f){var g=f.constructor;if(!g){g=function(){}}for(var h in f){if(h!==\"constructor\"&&f.hasOwnProperty(h)){g[h]=f[h]}}return g};var a=function(){return function(){return arguments.callee.Init.call(this,arguments)}};b.Object=c({constructor:a(),Subclass:function(f,h){var g=a();g.SUPER=this;g.Init=this.Init;g.Subclass=this.Subclass;g.Augment=this.Augment;g.protoFunction=this.protoFunction;g.can=this.can;g.has=this.has;g.isa=this.isa;g.prototype=new this(e);g.prototype.constructor=g;g.Augment(f,h);return g},Init:function(f){var g=this;if(f.length===1&&f[0]===e){return g}if(!(g instanceof f.callee)){g=new f.callee(e)}return g.Init.apply(g,f)||g},Augment:function(f,g){var h;if(f!=null){for(h in f){if(f.hasOwnProperty(h)){this.protoFunction(h,f[h])}}if(f.toString!==this.prototype.toString&&f.toString!=={}.toString){this.protoFunction(\"toString\",f.toString)}}if(g!=null){for(h in g){if(g.hasOwnProperty(h)){this[h]=g[h]}}}return this},protoFunction:function(g,f){this.prototype[g]=f;if(typeof f===\"function\"){f.SUPER=this.SUPER.prototype}},prototype:{Init:function(){},SUPER:function(f){return f.callee.SUPER},can:function(f){return typeof(this[f])===\"function\"},has:function(f){return typeof(this[f])!==\"undefined\"},isa:function(f){return(f instanceof Object)&&(this instanceof f)}},can:function(f){return this.prototype.can.call(this,f)},has:function(f){return this.prototype.has.call(this,f)},isa:function(g){var f=this;while(f){if(f===g){return true}else{f=f.SUPER}}return false},SimpleSUPER:c({constructor:function(f){return this.SimpleSUPER.define(f)},define:function(f){var h={};if(f!=null){for(var g in f){if(f.hasOwnProperty(g)){h[g]=this.wrap(g,f[g])}}if(f.toString!==this.prototype.toString&&f.toString!=={}.toString){h.toString=this.wrap(\"toString\",f.toString)}}return h},wrap:function(i,h){if(typeof(h)!==\"function\"||!h.toString().match(/\\.\\s*SUPER\\s*\\(/)){return h}var g=function(){this.SUPER=g.SUPER[i];try{var f=h.apply(this,arguments)}catch(j){delete this.SUPER;throw j}delete this.SUPER;return f};g.toString=function(){return h.toString.apply(h,arguments)};return g}})})})(\"MathJax\");(function(BASENAME){var BASE=window[BASENAME];if(!BASE){BASE=window[BASENAME]={}}var CALLBACK=function(data){var cb=function(){return arguments.callee.execute.apply(arguments.callee,arguments)};for(var id in CALLBACK.prototype){if(CALLBACK.prototype.hasOwnProperty(id)){if(typeof(data[id])!==\"undefined\"){cb[id]=data[id]}else{cb[id]=CALLBACK.prototype[id]}}}cb.toString=CALLBACK.prototype.toString;return cb};CALLBACK.prototype={isCallback:true,hook:function(){},data:[],object:window,execute:function(){if(!this.called||this.autoReset){this.called=!this.autoReset;return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)))}},reset:function(){delete this.called},toString:function(){return this.hook.toString.apply(this.hook,arguments)}};var ISCALLBACK=function(f){return(typeof(f)===\"function\"&&f.isCallback)};var EVAL=function(code){return eval.call(window,code)};var TESTEVAL=function(){EVAL(\"var __TeSt_VaR__ = 1\");if(window.__TeSt_VaR__){try{delete window.__TeSt_VaR__}catch(error){window.__TeSt_VaR__=null}}else{if(window.execScript){EVAL=function(code){BASE.__code=code;code=\"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";window.execScript(code);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}else{EVAL=function(code){BASE.__code=code;code=\"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";var head=(document.getElementsByTagName(\"head\"))[0];if(!head){head=document.body}var script=document.createElement(\"script\");script.appendChild(document.createTextNode(code));head.appendChild(script);head.removeChild(script);var result=BASE.__result;delete BASE.__result;delete BASE.__code;if(result instanceof Error){throw result}return result}}}TESTEVAL=null};var USING=function(args,i){if(arguments.length>1){if(arguments.length===2&&!(typeof arguments[0]===\"function\")&&arguments[0] instanceof Object&&typeof arguments[1]===\"number\"){args=[].slice.call(args,i)}else{args=[].slice.call(arguments,0)}}if(args instanceof Array&&args.length===1){args=args[0]}if(typeof args===\"function\"){if(args.execute===CALLBACK.prototype.execute){return args}return CALLBACK({hook:args})}else{if(args instanceof Array){if(typeof(args[0])===\"string\"&&args[1] instanceof Object&&typeof args[1][args[0]]===\"function\"){return CALLBACK({hook:args[1][args[0]],object:args[1],data:args.slice(2)})}else{if(typeof args[0]===\"function\"){return CALLBACK({hook:args[0],data:args.slice(1)})}else{if(typeof args[1]===\"function\"){return CALLBACK({hook:args[1],object:args[0],data:args.slice(2)})}}}}else{if(typeof(args)===\"string\"){if(TESTEVAL){TESTEVAL()}return CALLBACK({hook:EVAL,data:[args]})}else{if(args instanceof Object){return CALLBACK(args)}else{if(typeof(args)===\"undefined\"){return CALLBACK({})}}}}}throw Error(\"Can't make callback from given data\")};var DELAY=function(time,callback){callback=USING(callback);callback.timeout=setTimeout(callback,time);return callback};var WAITFOR=function(callback,signal){callback=USING(callback);if(!callback.called){WAITSIGNAL(callback,signal);signal.pending++}};var WAITEXECUTE=function(){var signals=this.signal;delete this.signal;this.execute=this.oldExecute;delete this.oldExecute;var result=this.execute.apply(this,arguments);if(ISCALLBACK(result)&&!result.called){WAITSIGNAL(result,signals)}else{for(var i=0,m=signals.length;i<m;i++){signals[i].pending--;if(signals[i].pending<=0){signals[i].call()}}}};var WAITSIGNAL=function(callback,signals){if(!(signals instanceof Array)){signals=[signals]}if(!callback.signal){callback.oldExecute=callback.execute;callback.execute=WAITEXECUTE;callback.signal=signals}else{if(signals.length===1){callback.signal.push(signals[0])}else{callback.signal=callback.signal.concat(signals)}}};var AFTER=function(callback){callback=USING(callback);callback.pending=0;for(var i=1,m=arguments.length;i<m;i++){if(arguments[i]){WAITFOR(arguments[i],callback)}}if(callback.pending===0){var result=callback();if(ISCALLBACK(result)){callback=result}}return callback};var HOOKS=MathJax.Object.Subclass({Init:function(reset){this.hooks=[];this.remove=[];this.reset=reset;this.running=false},Add:function(hook,priority){if(priority==null){priority=10}if(!ISCALLBACK(hook)){hook=USING(hook)}hook.priority=priority;var i=this.hooks.length;while(i>0&&priority<this.hooks[i-1].priority){i--}this.hooks.splice(i,0,hook);return hook},Remove:function(hook){for(var i=0,m=this.hooks.length;i<m;i++){if(this.hooks[i]===hook){if(this.running){this.remove.push(i)}else{this.hooks.splice(i,1)}return}}},Execute:function(){var callbacks=[{}];this.running=true;for(var i=0,m=this.hooks.length;i<m;i++){if(this.reset){this.hooks[i].reset()}var result=this.hooks[i].apply(window,arguments);if(ISCALLBACK(result)&&!result.called){callbacks.push(result)}}this.running=false;if(this.remove.length){this.RemovePending()}if(callbacks.length===1){return null}if(callbacks.length===2){return callbacks[1]}return AFTER.apply({},callbacks)},RemovePending:function(){this.remove=this.remove.sort();for(var i=this.remove.length-1;i>=0;i--){this.hooks.splice(i,1)}this.remove=[]}});var EXECUTEHOOKS=function(hooks,data,reset){if(!hooks){return null}if(!(hooks instanceof Array)){hooks=[hooks]}if(!(data instanceof Array)){data=(data==null?[]:[data])}var handler=HOOKS(reset);for(var i=0,m=hooks.length;i<m;i++){handler.Add(hooks[i])}return handler.Execute.apply(handler,data)};var QUEUE=BASE.Object.Subclass({Init:function(){this.pending=this.running=0;this.queue=[];this.Push.apply(this,arguments)},Push:function(){var callback;for(var i=0,m=arguments.length;i<m;i++){callback=USING(arguments[i]);if(callback===arguments[i]&&!callback.called){callback=USING([\"wait\",this,callback])}this.queue.push(callback)}if(!this.running&&!this.pending){this.Process()}return callback},Process:function(queue){while(!this.running&&!this.pending&&this.queue.length){var callback=this.queue[0];queue=this.queue.slice(1);this.queue=[];this.Suspend();var result=callback();this.Resume();if(queue.length){this.queue=queue.concat(this.queue)}if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}}},Suspend:function(){this.running++},Resume:function(){if(this.running){this.running--}},call:function(){this.Process.apply(this,arguments)},wait:function(callback){return callback}});var SIGNAL=QUEUE.Subclass({Init:function(name){QUEUE.prototype.Init.call(this);this.name=name;this.posted=[];this.listeners=HOOKS(true);this.posting=false;this.callback=null},Post:function(message,callback,forget){callback=USING(callback);if(this.posting||this.pending){this.Push([\"Post\",this,message,callback,forget])}else{this.callback=callback;callback.reset();if(!forget){this.posted.push(message)}this.Suspend();this.posting=true;var result=this.listeners.Execute(message);if(ISCALLBACK(result)&&!result.called){WAITFOR(result,this)}this.Resume();this.posting=false;if(!this.pending){this.call()}}return callback},Clear:function(callback){callback=USING(callback);if(this.posting||this.pending){callback=this.Push([\"Clear\",this,callback])}else{this.posted=[];callback()}return callback},call:function(){this.callback(this);this.Process()},Interest:function(callback,ignorePast,priority){callback=USING(callback);this.listeners.Add(callback,priority);if(!ignorePast){for(var i=0,m=this.posted.length;i<m;i++){callback.reset();var result=callback(this.posted[i]);if(ISCALLBACK(result)&&i===this.posted.length-1){WAITFOR(result,this)}}}return callback},NoInterest:function(callback){this.listeners.Remove(callback)},MessageHook:function(msg,callback,priority){callback=USING(callback);if(!this.hooks){this.hooks={};this.Interest([\"ExecuteHooks\",this])}if(!this.hooks[msg]){this.hooks[msg]=HOOKS(true)}this.hooks[msg].Add(callback,priority);for(var i=0,m=this.posted.length;i<m;i++){if(this.posted[i]==msg){callback.reset();callback(this.posted[i])}}callback.msg=msg;return callback},ExecuteHooks:function(msg){var type=((msg instanceof Array)?msg[0]:msg);if(!this.hooks[type]){return null}return this.hooks[type].Execute(msg)},RemoveHook:function(hook){this.hooks[hook.msg].Remove(hook)}},{signals:{},find:function(name){if(!SIGNAL.signals[name]){SIGNAL.signals[name]=new SIGNAL(name)}return SIGNAL.signals[name]}});BASE.Callback=BASE.CallBack=USING;BASE.Callback.Delay=DELAY;BASE.Callback.After=AFTER;BASE.Callback.Queue=QUEUE;BASE.Callback.Signal=SIGNAL.find;BASE.Callback.Hooks=HOOKS;BASE.Callback.ExecuteHooks=EXECUTEHOOKS})(\"MathJax\");(function(e){var a=window[e];if(!a){a=window[e]={}}var d=(navigator.vendor===\"Apple Computer, Inc.\"&&typeof navigator.vendorSub===\"undefined\");var g=0;var h=function(i){if(document.styleSheets&&document.styleSheets.length>g){g=document.styleSheets.length}if(!i){i=document.head||((document.getElementsByTagName(\"head\"))[0]);if(!i){i=document.body}}return i};var f=[];var c=function(){for(var k=0,j=f.length;k<j;k++){a.Ajax.head.removeChild(f[k])}f=[]};var b={};b[e]=\"\";a.Ajax={loaded:{},loading:{},loadHooks:{},timeout:15*1000,styleDelay:1,config:{root:\"\",path:b},STATUS:{OK:1,ERROR:-1},fileURL:function(j){var i=j.match(/^\\[([-._a-z0-9]+)\\]/i);if(i&&i[1] in b){j=(b[i[1]]||this.config.root)+j.substr(i[1].length+2)}return j},fileName:function(j){var i=this.config.root;if(j.substr(0,i.length)===i){j=\"[\"+e+\"]\"+j.substr(i.length)}else{for(var k in b){if(b.hasOwnProperty(k)&&b[k]){if(j.substr(0,b[k].length)===b[k]){j=\"[\"+k+\"]\"+j.substr(b[k].length);break}}}}return j},fileRev:function(j){var i=a.cdnFileVersions[name]||a.cdnVersion;if(i){i=\"?rev=\"+i}return i},urlRev:function(i){return this.fileURL(i)+this.fileRev(i)},Require:function(k,n){n=a.Callback(n);var l;if(k instanceof Object){for(var j in k){if(k.hasOwnProperty(j)){l=j.toUpperCase();k=k[j]}}}else{l=k.split(/\\./).pop().toUpperCase()}k=this.fileURL(k);if(this.loaded[k]){n(this.loaded[k])}else{var m={};m[l]=k;this.Load(m,n)}return n},Load:function(k,m){m=a.Callback(m);var l;if(k instanceof Object){for(var j in k){if(k.hasOwnProperty(j)){l=j.toUpperCase();k=k[j]}}}else{l=k.split(/\\./).pop().toUpperCase()}k=this.fileURL(k);if(this.loading[k]){this.addHook(k,m)}else{this.head=h(this.head);if(this.loader[l]){this.loader[l].call(this,k,m)}else{throw Error(\"Can't load files of type \"+l)}}return m},LoadHook:function(l,m,k){m=a.Callback(m);if(l instanceof Object){for(var j in l){if(l.hasOwnProperty(j)){l=l[j]}}}l=this.fileURL(l);if(this.loaded[l]){m(this.loaded[l])}else{this.addHook(l,m,k)}return m},addHook:function(j,k,i){if(!this.loadHooks[j]){this.loadHooks[j]=MathJax.Callback.Hooks()}this.loadHooks[j].Add(k,i);k.file=j},removeHook:function(i){if(this.loadHooks[i.file]){this.loadHooks[i.file].Remove(i);if(!this.loadHooks[i.file].hooks.length){delete this.loadHooks[i.file]}}},Preloading:function(){for(var l=0,j=arguments.length;l<j;l++){var k=this.fileURL(arguments[l]);if(!this.loading[k]){this.loading[k]={preloaded:true}}}},loader:{JS:function(k,m){var j=this.fileName(k);var i=document.createElement(\"script\");var l=a.Callback([\"loadTimeout\",this,k]);this.loading[k]={callback:m,timeout:setTimeout(l,this.timeout),status:this.STATUS.OK,script:i};this.loading[k].message=a.Message.File(j);i.onerror=l;i.type=\"text/javascript\";i.src=k+this.fileRev(j);this.head.appendChild(i)},CSS:function(j,l){var i=this.fileName(j);var k=document.createElement(\"link\");k.rel=\"stylesheet\";k.type=\"text/css\";k.href=j+this.fileRev(i);this.loading[j]={callback:l,message:a.Message.File(i),status:this.STATUS.OK};this.head.appendChild(k);this.timer.create.call(this,[this.timer.file,j],k)}},timer:{create:function(j,i){j=a.Callback(j);if(i.nodeName===\"STYLE\"&&i.styleSheet&&typeof(i.styleSheet.cssText)!==\"undefined\"){j(this.STATUS.OK)}else{if(window.chrome&&i.nodeName===\"LINK\"){j(this.STATUS.OK)}else{if(d){this.timer.start(this,[this.timer.checkSafari2,g++,j],this.styleDelay)}else{this.timer.start(this,[this.timer.checkLength,i,j],this.styleDelay)}}}return j},start:function(j,i,k,l){i=a.Callback(i);i.execute=this.execute;i.time=this.time;i.STATUS=j.STATUS;i.timeout=l||j.timeout;i.delay=i.total=k||0;if(k){setTimeout(i,k)}else{i()}},time:function(i){this.total+=this.delay;this.delay=Math.floor(this.delay*1.05+5);if(this.total>=this.timeout){i(this.STATUS.ERROR);return 1}return 0},file:function(j,i){if(i<0){a.Ajax.loadTimeout(j)}else{a.Ajax.loadComplete(j)}},execute:function(){this.hook.call(this.object,this,this.data[0],this.data[1])},checkSafari2:function(i,j,k){if(i.time(k)){return}if(document.styleSheets.length>j&&document.styleSheets[j].cssRules&&document.styleSheets[j].cssRules.length){k(i.STATUS.OK)}else{setTimeout(i,i.delay)}},checkLength:function(i,l,n){if(i.time(n)){return}var m=0;var j=(l.sheet||l.styleSheet);try{if((j.cssRules||j.rules||[]).length>0){m=1}}catch(k){if(k.message.match(/protected variable|restricted URI/)){m=1}else{if(k.message.match(/Security error/)){m=1}}}if(m){setTimeout(a.Callback([n,i.STATUS.OK]),0)}else{setTimeout(i,i.delay)}}},loadComplete:function(i){i=this.fileURL(i);var j=this.loading[i];if(j&&!j.preloaded){a.Message.Clear(j.message);clearTimeout(j.timeout);if(j.script){if(f.length===0){setTimeout(c,0)}f.push(j.script)}this.loaded[i]=j.status;delete this.loading[i];this.addHook(i,j.callback)}else{if(j){delete this.loading[i]}this.loaded[i]=this.STATUS.OK;j={status:this.STATUS.OK}}if(!this.loadHooks[i]){return null}return this.loadHooks[i].Execute(j.status)},loadTimeout:function(i){if(this.loading[i].timeout){clearTimeout(this.loading[i].timeout)}this.loading[i].status=this.STATUS.ERROR;this.loadError(i);this.loadComplete(i)},loadError:function(i){a.Message.Set([\"LoadFailed\",\"File failed to load: %1\",i],null,2000);a.Hub.signal.Post([\"file load error\",i])},Styles:function(k,l){var i=this.StyleString(k);if(i===\"\"){l=a.Callback(l);l()}else{var j=document.createElement(\"style\");j.type=\"text/css\";this.head=h(this.head);this.head.appendChild(j);if(j.styleSheet&&typeof(j.styleSheet.cssText)!==\"undefined\"){j.styleSheet.cssText=i}else{j.appendChild(document.createTextNode(i))}l=this.timer.create.call(this,l,j)}return l},StyleString:function(n){if(typeof(n)===\"string\"){return n}var k=\"\",o,m;for(o in n){if(n.hasOwnProperty(o)){if(typeof n[o]===\"string\"){k+=o+\" {\"+n[o]+\"}\\n\"}else{if(n[o] instanceof Array){for(var l=0;l<n[o].length;l++){m={};m[o]=n[o][l];k+=this.StyleString(m)}}else{if(o.substr(0,6)===\"@media\"){k+=o+\" {\"+this.StyleString(n[o])+\"}\\n\"}else{if(n[o]!=null){m=[];for(var j in n[o]){if(n[o].hasOwnProperty(j)){if(n[o][j]!=null){m[m.length]=j+\": \"+n[o][j]}}}k+=o+\" {\"+m.join(\"; \")+\"}\\n\"}}}}}}return k}}})(\"MathJax\");MathJax.HTML={Element:function(d,f,e){var g=document.createElement(d),h;if(f){if(f.hasOwnProperty(\"style\")){var c=f.style;f.style={};for(h in c){if(c.hasOwnProperty(h)){f.style[h.replace(/-([a-z])/g,this.ucMatch)]=c[h]}}}MathJax.Hub.Insert(g,f);for(h in f){if(h===\"role\"||h.substr(0,5)===\"aria-\"){g.setAttribute(h,f[h])}}}if(e){if(!(e instanceof Array)){e=[e]}for(var b=0,a=e.length;b<a;b++){if(e[b] instanceof Array){g.appendChild(this.Element(e[b][0],e[b][1],e[b][2]))}else{if(d===\"script\"){this.setScript(g,e[b])}else{g.appendChild(document.createTextNode(e[b]))}}}}return g},ucMatch:function(a,b){return b.toUpperCase()},addElement:function(b,a,d,c){return b.appendChild(this.Element(a,d,c))},TextNode:function(a){return document.createTextNode(a)},addText:function(a,b){return a.appendChild(this.TextNode(b))},setScript:function(a,b){if(this.setScriptBug){a.text=b}else{while(a.firstChild){a.removeChild(a.firstChild)}this.addText(a,b)}},getScript:function(a){var b=(a.text===\"\"?a.innerHTML:a.text);return b.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\")},Cookie:{prefix:\"mjx\",expires:365,Set:function(a,e){var d=[];if(e){for(var g in e){if(e.hasOwnProperty(g)){d.push(g+\":\"+e[g].toString().replace(/&/g,\"&&\"))}}}var b=this.prefix+\".\"+a+\"=\"+escape(d.join(\"&;\"));if(this.expires){var f=new Date();f.setDate(f.getDate()+this.expires);b+=\"; expires=\"+f.toGMTString()}try{document.cookie=b+\"; path=/\"}catch(c){}},Get:function(a,d){if(!d){d={}}var g=new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+a+\"=([^;]*)(?:;|$)\");var f;try{f=g.exec(document.cookie)}catch(c){}if(f&&f[1]!==\"\"){var j=unescape(f[1]).split(\"&;\");for(var e=0,b=j.length;e<b;e++){f=j[e].match(/([^:]+):(.*)/);var h=f[2].replace(/&&/g,\"&\");if(h===\"true\"){h=true}else{if(h===\"false\"){h=false}else{if(h.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)){h=parseFloat(h)}}}d[f[1]]=h}}return d}}};MathJax.Localization={locale:\"en\",directory:\"[MathJax]/localization\",strings:{ast:{menuTitle:\"asturianu\"},bg:{menuTitle:\"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"},bcc:{menuTitle:\"\\u0628\\u0644\\u0648\\u0686\\u06CC\"},br:{menuTitle:\"brezhoneg\"},ca:{menuTitle:\"catal\\u00E0\"},cdo:{menuTitle:\"M\\u00ECng-d\\u0115\\u0324ng-ng\\u1E73\\u0304\"},cs:{menuTitle:\"\\u010De\\u0161tina\"},da:{menuTitle:\"dansk\"},de:{menuTitle:\"Deutsch\"},en:{menuTitle:\"English\",isLoaded:true},eo:{menuTitle:\"Esperanto\"},es:{menuTitle:\"espa\\u00F1ol\"},fa:{menuTitle:\"\\u0641\\u0627\\u0631\\u0633\\u06CC\"},fi:{menuTitle:\"suomi\"},fr:{menuTitle:\"fran\\u00E7ais\"},gl:{menuTitle:\"galego\"},he:{menuTitle:\"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"},ia:{menuTitle:\"interlingua\"},it:{menuTitle:\"italiano\"},ja:{menuTitle:\"\\u65E5\\u672C\\u8A9E\"},kn:{menuTitle:\"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"},ko:{menuTitle:\"\\uD55C\\uAD6D\\uC5B4\"},lb:{menuTitle:\"L\\u00EBtzebuergesch\"},lt:{menuTitle:\"lietuvi\\u0173\"},mk:{menuTitle:\"\\u043C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"},nl:{menuTitle:\"Nederlands\"},oc:{menuTitle:\"occitan\"},pl:{menuTitle:\"polski\"},pt:{menuTitle:\"portugus\\u00EA\"},\"pt-br\":{menuTitle:\"portugu\\u00EAs do Brasil\"},ru:{menuTitle:\"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"},sco:{menuTitle:\"Scots\"},scn:{menuTitle:\"sicilianu\"},sl:{menuTitle:\"sloven\\u0161\\u010Dina\"},sv:{menuTitle:\"svenska\"},tr:{menuTitle:\"T\\u00FCrk\\u00E7e\"},uk:{menuTitle:\"\\u0443\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"},vi:{menuTitle:\"Ti\\u1EBFng Vi\\u1EC7t\"},\"zh-hans\":{menuTitle:\"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\"}},pattern:/%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,SPLIT:(\"axb\".split(/(x)/).length===3?function(a,b){return a.split(b)}:function(c,e){var a=[],b,d=0;e.lastIndex=0;while((b=e.exec(c))){a.push(c.substr(d,b.index-d));a.push.apply(a,b.slice(1));d=b.index+b[0].length}a.push(c.substr(d));return a}),_:function(b,a){if(a instanceof Array){return this.processSnippet(b,a)}return this.processString(this.lookupPhrase(b,a),[].slice.call(arguments,2))},processString:function(l,o,g){var j,e;for(j=0,e=o.length;j<e;j++){if(g&&o[j] instanceof Array){o[j]=this.processSnippet(g,o[j])}}var f=this.SPLIT(l,this.pattern);for(j=1,e=f.length;j<e;j+=2){var p=f[j].charAt(0);if(p>=\"0\"&&p<=\"9\"){f[j]=o[f[j]-1];if(typeof f[j]===\"number\"){f[j]=this.number(f[j])}}else{if(p===\"{\"){p=f[j].substr(1);if(p>=\"0\"&&p<=\"9\"){f[j]=o[f[j].substr(1,f[j].length-2)-1];if(typeof f[j]===\"number\"){f[j]=this.number(f[j])}}else{var k=f[j].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);if(k){if(k[1]===\"plural\"){var d=o[k[2]-1];if(typeof d===\"undefined\"){f[j]=\"???\"}else{d=this.plural(d)-1;var h=k[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/);if(d>=0&&d<h.length){f[j]=this.processString(h[d].replace(/\\uEFEF/g,\"|\"),o,g)}else{f[j]=\"???\"}}}else{f[j]=\"%\"+f[j]}}}}}if(f[j]==null){f[j]=\"???\"}}if(!g){return f.join(\"\")}var a=[],b=\"\";for(j=0;j<e;j++){b+=f[j];j++;if(j<e){if(f[j] instanceof Array){a.push(b);a=a.concat(f[j]);b=\"\"}else{b+=f[j]}}}if(b!==\"\"){a.push(b)}return a},processSnippet:function(g,e){var c=[];for(var d=0,b=e.length;d<b;d++){if(e[d] instanceof Array){var f=e[d];if(typeof f[1]===\"string\"){var h=f[0];if(!(h instanceof Array)){h=[g,h]}var a=this.lookupPhrase(h,f[1]);c=c.concat(this.processMarkdown(a,f.slice(2),g))}else{if(f[1] instanceof Array){c=c.concat(this.processSnippet.apply(this,f))}else{if(f.length>=3){c.push([f[0],f[1],this.processSnippet(g,f[2])])}else{c.push(e[d])}}}}else{c.push(e[d])}}return c},markdownPattern:/(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,processMarkdown:function(b,h,d){var j=[],e;var c=b.split(this.markdownPattern);var g=c[0];for(var f=1,a=c.length;f<a;f+=8){if(c[f+1]){e=this.processString(c[f+2],h,d);if(!(e instanceof Array)){e=[e]}e=[[\"b\",\"i\",\"i\"][c[f+1].length-1],{},e];if(c[f+1].length===3){e=[\"b\",{},e]}}else{if(c[f+3]){e=this.processString(c[f+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),h,d);if(!(e instanceof Array)){e=[e]}e=[\"code\",{},e]}else{if(c[f+5]){e=this.processString(c[f+5],h,d);if(!(e instanceof Array)){e=[e]}e=[\"a\",{href:this.processString(c[f+6],h),target:\"_blank\"},e]}else{g+=c[f];e=null}}}if(e){j=this.concatString(j,g,h,d);j.push(e);g=\"\"}if(c[f+7]!==\"\"){g+=c[f+7]}}j=this.concatString(j,g,h,d);return j},concatString:function(a,c,b,d){if(c!=\"\"){c=this.processString(c,b,d);if(!(c instanceof Array)){c=[c]}a=a.concat(c)}return a},lookupPhrase:function(f,a,d){if(!d){d=\"_\"}if(f instanceof Array){d=(f[0]||\"_\");f=(f[1]||\"\")}var c=this.loadDomain(d);if(c){MathJax.Hub.RestartAfter(c)}var b=this.strings[this.locale];if(b){if(b.domains&&d in b.domains){var e=b.domains[d];if(e.strings&&f in e.strings){a=e.strings[f]}}}return a},loadFile:function(b,d,e){e=MathJax.Callback(e);b=(d.file||b);if(!b.match(/\\.js$/)){b+=\".js\"}if(!b.match(/^([a-z]+:|\\[MathJax\\])/)){var a=(this.strings[this.locale].directory||this.directory+\"/\"+this.locale||\"[MathJax]/localization/\"+this.locale);b=a+\"/\"+b}var c=MathJax.Ajax.Require(b,function(){d.isLoaded=true;return e()});return(c.called?null:c)},loadDomain:function(c,e){var b,a=this.strings[this.locale];if(a){if(!a.isLoaded){b=this.loadFile(this.locale,a);if(b){return MathJax.Callback.Queue(b,[\"loadDomain\",this,c]).Push(e||{})}}if(a.domains&&c in a.domains){var d=a.domains[c];if(!d.isLoaded){b=this.loadFile(c,d);if(b){return MathJax.Callback.Queue(b).Push(e)}}}}return MathJax.Callback(e)()},Try:function(a){a=MathJax.Callback(a);a.autoReset=true;try{a()}catch(b){if(!b.restart){throw b}MathJax.Callback.After([\"Try\",this,a],b.restart)}},resetLocale:function(a){if(!a){return}a=a.toLowerCase();while(!this.strings[a]){var c=a.lastIndexOf(\"-\");if(c===-1){return}a=a.substring(0,c)}var b=this.strings[a].remap;this.locale=b?b:a},setLocale:function(a){this.resetLocale(a);if(MathJax.Menu){this.loadDomain(\"MathMenu\")}},addTranslation:function(b,e,c){var d=this.strings[b],a=false;if(!d){d=this.strings[b]={};a=true}if(!d.domains){d.domains={}}if(e){if(!d.domains[e]){d.domains[e]={}}d=d.domains[e]}MathJax.Hub.Insert(d,c);if(a&&MathJax.Menu.menu){MathJax.Menu.CreateLocaleMenu()}},setCSS:function(b){var a=this.strings[this.locale];if(a){if(a.fontFamily){b.style.fontFamily=a.fontFamily}if(a.fontDirection){b.style.direction=a.fontDirection;if(a.fontDirection===\"rtl\"){b.style.textAlign=\"right\"}}}return b},fontFamily:function(){var a=this.strings[this.locale];return(a?a.fontFamily:null)},fontDirection:function(){var a=this.strings[this.locale];return(a?a.fontDirection:null)},plural:function(b){var a=this.strings[this.locale];if(a&&a.plural){return a.plural(b)}if(b==1){return 1}return 2},number:function(b){var a=this.strings[this.locale];if(a&&a.number){return a.number(b)}return b}};MathJax.Message={ready:false,log:[{}],current:null,textNodeBug:(navigator.vendor===\"Apple Computer, Inc.\"&&typeof navigator.vendorSub===\"undefined\")||(window.hasOwnProperty&&window.hasOwnProperty(\"konqueror\")),styles:{\"#MathJax_Message\":{position:\"fixed\",left:\"1px\",bottom:\"2px\",\"background-color\":\"#E6E6E6\",border:\"1px solid #959595\",margin:\"0px\",padding:\"2px 8px\",\"z-index\":\"102\",color:\"black\",\"font-size\":\"80%\",width:\"auto\",\"white-space\":\"nowrap\"},\"#MathJax_MSIE_Frame\":{position:\"absolute\",top:0,left:0,width:\"0px\",\"z-index\":101,border:\"0px\",margin:\"0px\",padding:\"0px\"}},browsers:{MSIE:function(a){MathJax.Message.msieFixedPositionBug=((document.documentMode||0)<7);if(MathJax.Message.msieFixedPositionBug){MathJax.Hub.config.styles[\"#MathJax_Message\"].position=\"absolute\"}MathJax.Message.quirks=(document.compatMode===\"BackCompat\")},Chrome:function(a){MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom=\"1.5em\";MathJax.Hub.config.styles[\"#MathJax_Message\"].left=\"1em\"}},Init:function(a){if(a){this.ready=true}if(!document.body||!this.ready){return false}if(this.div&&this.div.parentNode==null){this.div=document.getElementById(\"MathJax_Message\");if(this.div){this.text=this.div.firstChild}}if(!this.div){var b=document.body;if(this.msieFixedPositionBug&&window.attachEvent){b=this.frame=this.addDiv(document.body);b.removeAttribute(\"id\");b.style.position=\"absolute\";b.style.border=b.style.margin=b.style.padding=\"0px\";b.style.zIndex=\"101\";b.style.height=\"0px\";b=this.addDiv(b);b.id=\"MathJax_MSIE_Frame\";window.attachEvent(\"onscroll\",this.MoveFrame);window.attachEvent(\"onresize\",this.MoveFrame);this.MoveFrame()}this.div=this.addDiv(b);this.div.style.display=\"none\";this.text=this.div.appendChild(document.createTextNode(\"\"))}return true},addDiv:function(a){var b=document.createElement(\"div\");b.id=\"MathJax_Message\";if(a.firstChild){a.insertBefore(b,a.firstChild)}else{a.appendChild(b)}return b},MoveFrame:function(){var a=(MathJax.Message.quirks?document.body:document.documentElement);var b=MathJax.Message.frame;b.style.left=a.scrollLeft+\"px\";b.style.top=a.scrollTop+\"px\";b.style.width=a.clientWidth+\"px\";b=b.firstChild;b.style.height=a.clientHeight+\"px\"},localize:function(a){return MathJax.Localization._(a,a)},filterText:function(a,c,b){if(MathJax.Hub.config.messageStyle===\"simple\"){if(b===\"LoadFile\"){if(!this.loading){this.loading=this.localize(\"Loading\")+\" \"}a=this.loading;this.loading+=\".\"}else{if(b===\"ProcessMath\"){if(!this.processing){this.processing=this.localize(\"Processing\")+\" \"}a=this.processing;this.processing+=\".\"}else{if(b===\"TypesetMath\"){if(!this.typesetting){this.typesetting=this.localize(\"Typesetting\")+\" \"}a=this.typesetting;this.typesetting+=\".\"}}}}return a},Set:function(c,e,b){if(e==null){e=this.log.length;this.log[e]={}}var d=\"\";if(c instanceof Array){d=c[0];if(d instanceof Array){d=d[1]}try{c=MathJax.Localization._.apply(MathJax.Localization,c)}catch(a){if(!a.restart){throw a}if(!a.restart.called){if(this.log[e].restarted==null){this.log[e].restarted=0}this.log[e].restarted++;delete this.log[e].cleared;MathJax.Callback.After([\"Set\",this,c,e,b],a.restart);return e}}}if(this.timer){clearTimeout(this.timer);delete this.timer}this.log[e].text=c;this.log[e].filteredText=c=this.filterText(c,e,d);if(typeof(this.log[e].next)===\"undefined\"){this.log[e].next=this.current;if(this.current!=null){this.log[this.current].prev=e}this.current=e}if(this.current===e&&MathJax.Hub.config.messageStyle!==\"none\"){if(this.Init()){if(this.textNodeBug){this.div.innerHTML=c}else{this.text.nodeValue=c}this.div.style.display=\"\";if(this.status){window.status=\"\";delete this.status}}else{window.status=c;this.status=true}}if(this.log[e].restarted){if(this.log[e].cleared){b=0}if(--this.log[e].restarted===0){delete this.log[e].cleared}}if(b){setTimeout(MathJax.Callback([\"Clear\",this,e]),b)}else{if(b==0){this.Clear(e,0)}}return e},Clear:function(b,a){if(this.log[b].prev!=null){this.log[this.log[b].prev].next=this.log[b].next}if(this.log[b].next!=null){this.log[this.log[b].next].prev=this.log[b].prev}if(this.current===b){this.current=this.log[b].next;if(this.text){if(this.div.parentNode==null){this.Init()}if(this.current==null){if(this.timer){clearTimeout(this.timer);delete this.timer}if(a==null){a=600}if(a===0){this.Remove()}else{this.timer=setTimeout(MathJax.Callback([\"Remove\",this]),a)}}else{if(MathJax.Hub.config.messageStyle!==\"none\"){if(this.textNodeBug){this.div.innerHTML=this.log[this.current].filteredText}else{this.text.nodeValue=this.log[this.current].filteredText}}}if(this.status){window.status=\"\";delete this.status}}else{if(this.status){window.status=(this.current==null?\"\":this.log[this.current].text)}}}delete this.log[b].next;delete this.log[b].prev;delete this.log[b].filteredText;if(this.log[b].restarted){this.log[b].cleared=true}},Remove:function(){this.text.nodeValue=\"\";this.div.style.display=\"none\"},File:function(a){return this.Set([\"LoadFile\",\"Loading %1\",a],null,null)},Log:function(){var b=[];for(var c=1,a=this.log.length;c<a;c++){b[c]=this.log[c].text}return b.join(\"\\n\")}};MathJax.Hub={config:{root:\"\",config:[],styleSheets:[],styles:{\".MathJax_Preview\":{color:\"#888\"}},jax:[],extensions:[],preJax:null,postJax:null,displayAlign:\"center\",displayIndent:\"0\",preRemoveClass:\"MathJax_Preview\",showProcessingMessages:true,messageStyle:\"normal\",delayStartupUntil:\"none\",skipStartupTypeset:false,elements:[],positionToHash:true,showMathMenu:true,showMathMenuMSIE:true,menuSettings:{zoom:\"None\",CTRL:false,ALT:false,CMD:false,Shift:false,discoverable:false,zscale:\"200%\",renderer:null,font:\"Auto\",context:\"MathJax\",locale:null,mpContext:false,mpMouse:false,texHints:true,FastPreview:null,assistiveMML:null,inTabOrder:true,semantics:false},errorSettings:{message:[\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],style:{color:\"#CC0000\",\"font-style\":\"italic\"}},ignoreMMLattributes:{}},preProcessors:MathJax.Callback.Hooks(true),inputJax:{},outputJax:{order:{}},processSectionDelay:50,processUpdateTime:250,processUpdateDelay:10,signal:MathJax.Callback.Signal(\"Hub\"),Config:function(a){this.Insert(this.config,a);if(this.config.Augment){this.Augment(this.config.Augment)}},CombineConfig:function(c,f){var b=this.config,g,e;c=c.split(/\\./);for(var d=0,a=c.length;d<a;d++){g=c[d];if(!b[g]){b[g]={}}e=b;b=b[g]}e[g]=b=this.Insert(f,b);return b},Register:{PreProcessor:function(){return MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},MessageHook:function(){return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},StartupHook:function(){return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},LoadHook:function(){return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}},UnRegister:{PreProcessor:function(a){MathJax.Hub.preProcessors.Remove(a)},MessageHook:function(a){MathJax.Hub.signal.RemoveHook(a)},StartupHook:function(a){MathJax.Hub.Startup.signal.RemoveHook(a)},LoadHook:function(a){MathJax.Ajax.removeHook(a)}},getAllJax:function(e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax){c.push(b[d].MathJax.elementJax)}}return c},getJaxByType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].MathJax.elementJax.mimeType===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxByInputType:function(f,e){var c=[],b=this.elementScripts(e);for(var d=0,a=b.length;d<a;d++){if(b[d].MathJax&&b[d].MathJax.elementJax&&b[d].type&&b[d].type.replace(/ *;(.|\\s)*/,\"\")===f){c.push(b[d].MathJax.elementJax)}}return c},getJaxFor:function(a){if(typeof(a)===\"string\"){a=document.getElementById(a)}if(a&&a.MathJax){return a.MathJax.elementJax}if(this.isMathJaxNode(a)){if(!a.isMathJax){a=a.firstChild}while(a&&!a.jaxID){a=a.parentNode}if(a){return MathJax.OutputJax[a.jaxID].getJaxFromMath(a)}}return null},isJax:function(a){if(typeof(a)===\"string\"){a=document.getElementById(a)}if(this.isMathJaxNode(a)){return 1}if(a&&(a.tagName||\"\").toLowerCase()===\"script\"){if(a.MathJax){return(a.MathJax.state===MathJax.ElementJax.STATE.PROCESSED?1:-1)}if(a.type&&this.inputJax[a.type.replace(/ *;(.|\\s)*/,\"\")]){return -1}}return 0},isMathJaxNode:function(a){return !!a&&(a.isMathJax||(a.className||\"\")===\"MathJax_MathML\")},setRenderer:function(d,c){if(!d){return}if(!MathJax.OutputJax[d]){this.config.menuSettings.renderer=\"\";var b=\"[MathJax]/jax/output/\"+d+\"/config.js\";return MathJax.Ajax.Require(b,[\"setRenderer\",this,d,c])}else{this.config.menuSettings.renderer=d;if(c==null){c=\"jax/mml\"}var a=this.outputJax;if(a[c]&&a[c].length){if(d!==a[c][0].id){a[c].unshift(MathJax.OutputJax[d]);return this.signal.Post([\"Renderer Selected\",d])}}return null}},Queue:function(){return this.queue.Push.apply(this.queue,arguments)},Typeset:function(c,d){if(!MathJax.isReady){return null}var b=this.elementCallback(c,d);if(b.count){var a=MathJax.Callback.Queue([\"PreProcess\",this,b.elements],[\"Process\",this,b.elements])}return a.Push(b.callback)},PreProcess:function(e,g){var c=this.elementCallback(e,g);var b=MathJax.Callback.Queue();if(c.count){var f=(c.count===1?[c.elements]:c.elements);b.Push([\"Post\",this.signal,[\"Begin PreProcess\",c.elements]]);for(var d=0,a=f.length;d<a;d++){if(f[d]){b.Push([\"Execute\",this.preProcessors,f[d]])}}b.Push([\"Post\",this.signal,[\"End PreProcess\",c.elements]])}return b.Push(c.callback)},Process:function(a,b){return this.takeAction(\"Process\",a,b)},Update:function(a,b){return this.takeAction(\"Update\",a,b)},Reprocess:function(a,b){return this.takeAction(\"Reprocess\",a,b)},Rerender:function(a,b){return this.takeAction(\"Rerender\",a,b)},takeAction:function(g,d,h){var c=this.elementCallback(d,h);var f=c.elements;var a=MathJax.Callback.Queue([\"Clear\",this.signal]);var e={scripts:[],start:new Date().getTime(),i:0,j:0,jax:{},jaxIDs:[]};if(c.count){var b=[\"Delay\",MathJax.Callback,this.processSectionDelay];if(!b[2]){b={}}a.Push([\"Post\",this.signal,[\"Begin \"+g,f]],[\"Post\",this.signal,[\"Begin Math\",f,g]],[\"prepareScripts\",this,g,f,e],[\"Post\",this.signal,[\"Begin Math Input\",f,g]],[\"processInput\",this,e],[\"Post\",this.signal,[\"End Math Input\",f,g]],b,[\"prepareOutput\",this,e,\"preProcess\"],b,[\"Post\",this.signal,[\"Begin Math Output\",f,g]],[\"processOutput\",this,e],[\"Post\",this.signal,[\"End Math Output\",f,g]],b,[\"prepareOutput\",this,e,\"postProcess\"],b,[\"Post\",this.signal,[\"End Math\",f,g]],[\"Post\",this.signal,[\"End \"+g,f]])}return a.Push(c.callback)},scriptAction:{Process:function(a){},Update:function(b){var a=b.MathJax.elementJax;if(a&&a.needsUpdate()){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}else{b.MathJax.state=a.STATE.PROCESSED}},Reprocess:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.UPDATE}},Rerender:function(b){var a=b.MathJax.elementJax;if(a){a.Remove(true);b.MathJax.state=a.STATE.OUTPUT}}},prepareScripts:function(h,e,g){if(arguments.callee.disabled){return}var b=this.elementScripts(e);var f=MathJax.ElementJax.STATE;for(var d=0,a=b.length;d<a;d++){var c=b[d];if(c.type&&this.inputJax[c.type.replace(/ *;(.|\\n)*/,\"\")]){if(c.MathJax){if(c.MathJax.elementJax&&c.MathJax.elementJax.hover){MathJax.Extension.MathEvents.Hover.ClearHover(c.MathJax.elementJax)}if(c.MathJax.state!==f.PENDING){this.scriptAction[h](c)}}if(!c.MathJax){c.MathJax={state:f.PENDING}}if(c.MathJax.error){delete c.MathJax.error}if(c.MathJax.state!==f.PROCESSED){g.scripts.push(c)}}}},checkScriptSiblings:function(a){if(a.MathJax.checked){return}var b=this.config,f=a.previousSibling;if(f&&f.nodeName===\"#text\"){var d,e,c=a.nextSibling;if(c&&c.nodeName!==\"#text\"){c=null}if(b.preJax){if(typeof(b.preJax)===\"string\"){b.preJax=new RegExp(b.preJax+\"$\")}d=f.nodeValue.match(b.preJax)}if(b.postJax&&c){if(typeof(b.postJax)===\"string\"){b.postJax=new RegExp(\"^\"+b.postJax)}e=c.nodeValue.match(b.postJax)}if(d&&(!b.postJax||e)){f.nodeValue=f.nodeValue.replace(b.preJax,(d.length>1?d[1]:\"\"));f=null}if(e&&(!b.preJax||d)){c.nodeValue=c.nodeValue.replace(b.postJax,(e.length>1?e[1]:\"\"))}if(f&&!f.nodeValue.match(/\\S/)){f=f.previousSibling}}if(b.preRemoveClass&&f&&f.className===b.preRemoveClass){a.MathJax.preview=f}a.MathJax.checked=1},processInput:function(a){var b,i=MathJax.ElementJax.STATE;var h,e,d=a.scripts.length;try{while(a.i<d){h=a.scripts[a.i];if(!h){a.i++;continue}e=h.previousSibling;if(e&&e.className===\"MathJax_Error\"){e.parentNode.removeChild(e)}if(!h.MathJax||h.MathJax.state===i.PROCESSED){a.i++;continue}if(!h.MathJax.elementJax||h.MathJax.state===i.UPDATE){this.checkScriptSiblings(h);var g=h.type.replace(/ *;(.|\\s)*/,\"\");var j=this.inputJax[g];b=j.Process(h,a);if(typeof b===\"function\"){if(b.called){continue}this.RestartAfter(b)}b=b.Attach(h,j.id);this.saveScript(b,a,h,i);this.postInputHooks.Execute(b,j.id,h)}else{if(h.MathJax.state===i.OUTPUT){this.saveScript(h.MathJax.elementJax,a,h,i)}}a.i++;var c=new Date().getTime();if(c-a.start>this.processUpdateTime&&a.i<a.scripts.length){a.start=c;this.RestartAfter(MathJax.Callback.Delay(1))}}}catch(f){return this.processError(f,a,\"Input\")}if(a.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}a.start=new Date().getTime();a.i=a.j=0;return null},postInputHooks:MathJax.Callback.Hooks(true),saveScript:function(a,d,b,c){if(!this.outputJax[a.mimeType]){b.MathJax.state=c.UPDATE;throw Error(\"No output jax registered for \"+a.mimeType)}a.outputJax=this.outputJax[a.mimeType][0].id;if(!d.jax[a.outputJax]){if(d.jaxIDs.length===0){d.jax[a.outputJax]=d.scripts}else{if(d.jaxIDs.length===1){d.jax[d.jaxIDs[0]]=d.scripts.slice(0,d.i)}d.jax[a.outputJax]=[]}d.jaxIDs.push(a.outputJax)}if(d.jaxIDs.length>1){d.jax[a.outputJax].push(b)}b.MathJax.state=c.OUTPUT},prepareOutput:function(c,f){while(c.j<c.jaxIDs.length){var e=c.jaxIDs[c.j],d=MathJax.OutputJax[e];if(d[f]){try{var a=d[f](c);if(typeof a===\"function\"){if(a.called){continue}this.RestartAfter(a)}}catch(b){if(!b.restart){MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",e,f],null,600);MathJax.Hub.lastPrepError=b;c.j++}return MathJax.Callback.After([\"prepareOutput\",this,c,f],b.restart)}}c.j++}return null},processOutput:function(h){var b,g=MathJax.ElementJax.STATE,d,a=h.scripts.length;try{while(h.i<a){d=h.scripts[h.i];if(!d||!d.MathJax||d.MathJax.error){h.i++;continue}var c=d.MathJax.elementJax;if(!c){h.i++;continue}b=MathJax.OutputJax[c.outputJax].Process(d,h);if(b!==false){d.MathJax.state=g.PROCESSED;if(d.MathJax.preview){d.MathJax.preview.innerHTML=\"\"}this.signal.Post([\"New Math\",c.inputID])}h.i++;var e=new Date().getTime();if(e-h.start>this.processUpdateTime&&h.i<h.scripts.length){h.start=e;this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}}}catch(f){return this.processError(f,h,\"Output\")}if(h.scripts.length&&this.config.showProcessingMessages){MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);MathJax.Message.Clear(0)}h.i=h.j=0;return null},processMessage:function(d,b){var a=Math.floor(d.i/(d.scripts.length)*100);var c=(b===\"Output\"?[\"TypesetMath\",\"Typesetting math: %1%%\"]:[\"ProcessMath\",\"Processing math: %1%%\"]);if(this.config.showProcessingMessages){MathJax.Message.Set(c.concat(a),0)}},processError:function(b,c,a){if(!b.restart){if(!this.config.errorSettings.message){throw b}this.formatError(c.scripts[c.i],b);c.i++}this.processMessage(c,a);return MathJax.Callback.After([\"process\"+a,this,c],b.restart)},formatError:function(b,f){var h=function(l,k,j,i){return MathJax.Localization._(l,k,j,i)};var e=h(\"ErrorMessage\",\"Error: %1\",f.message)+\"\\n\";if(f.sourceURL||f.fileName){e+=\"\\n\"+h(\"ErrorFile\",\"file: %1\",f.sourceURL||f.fileName)}if(f.line||f.lineNumber){e+=\"\\n\"+h(\"ErrorLine\",\"line: %1\",f.line||f.lineNumber)}e+=\"\\n\\n\"+h(\"ErrorTips\",\"Debugging tips: use %1, inspect %2 in the browser console\",\"'unpacked/MathJax.js'\",\"'MathJax.Hub.lastError'\");b.MathJax.error=MathJax.OutputJax.Error.Jax(e,b);if(b.MathJax.elementJax){b.MathJax.error.inputID=b.MathJax.elementJax.inputID}var g=this.config.errorSettings;var a=h(g.messageId,g.message);var c=MathJax.HTML.Element(\"span\",{className:\"MathJax_Error\",jaxID:\"Error\",isMathJax:true,id:b.MathJax.error.inputID+\"-Frame\"},[[\"span\",null,a]]);MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function(){var j=MathJax.Extension.MathEvents.Event,i=MathJax.Hub;c.oncontextmenu=j.Menu;c.onmousedown=j.Mousedown;c.onkeydown=j.Keydown;c.tabIndex=i.getTabOrder(i.getJaxFor(b))});var d=document.getElementById(c.id);if(d){d.parentNode.removeChild(d)}b.parentNode.insertBefore(c,b);if(b.MathJax.preview){b.MathJax.preview.innerHTML=\"\"}this.lastError=f;this.signal.Post([\"Math Processing Error\",b,f])},RestartAfter:function(a){throw this.Insert(Error(\"restart\"),{restart:MathJax.Callback(a)})},elementCallback:function(c,f){if(f==null&&(c instanceof Array||typeof c===\"function\")){try{MathJax.Callback(c);f=c;c=null}catch(d){}}if(c==null){c=this.config.elements||[]}if(this.isHTMLCollection(c)){c=this.HTMLCollection2Array(c)}if(!(c instanceof Array)){c=[c]}c=[].concat(c);for(var b=0,a=c.length;b<a;b++){if(typeof(c[b])===\"string\"){c[b]=document.getElementById(c[b])}}if(!document.body){document.body=document.getElementsByTagName(\"body\")[0]}if(c.length==0){c.push(document.body)}if(!f){f={}}return{count:c.length,elements:(c.length===1?c[0]:c),callback:f}},elementScripts:function(e){var b=[];if(e instanceof Array||this.isHTMLCollection(e)){for(var d=0,a=e.length;d<a;d++){var f=0;for(var c=0;c<d&&!f;c++){f=e[c].contains(e[d])}if(!f){b.push.apply(b,this.elementScripts(e[d]))}}return b}if(typeof(e)===\"string\"){e=document.getElementById(e)}if(!document.body){document.body=document.getElementsByTagName(\"body\")[0]}if(e==null){e=document.body}if(e.tagName!=null&&e.tagName.toLowerCase()===\"script\"){return[e]}b=e.getElementsByTagName(\"script\");if(this.msieHTMLCollectionBug){b=this.HTMLCollection2Array(b)}return b},isHTMLCollection:function(a){return(\"HTMLCollection\" in window&&typeof(a)===\"object\"&&a instanceof HTMLCollection)},HTMLCollection2Array:function(c){if(!this.msieHTMLCollectionBug){return[].slice.call(c)}var b=[];for(var d=0,a=c.length;d<a;d++){b[d]=c[d]}return b},Insert:function(c,a){for(var b in a){if(a.hasOwnProperty(b)){if(typeof a[b]===\"object\"&&!(a[b] instanceof Array)&&(typeof c[b]===\"object\"||typeof c[b]===\"function\")){this.Insert(c[b],a[b])}else{c[b]=a[b]}}}return c},getTabOrder:function(a){return this.config.menuSettings.inTabOrder?0:-1},SplitList:(\"trim\" in String.prototype?function(a){return a.trim().split(/\\s+/)}:function(a){return a.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\").split(/\\s+/)})};MathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);MathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});MathJax.Extension={};MathJax.Hub.Configured=MathJax.Callback({});MathJax.Hub.Startup={script:\"\",queue:MathJax.Callback.Queue(),signal:MathJax.Callback.Signal(\"Startup\"),params:{},Config:function(){this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);if(this.params.locale){MathJax.Localization.resetLocale(this.params.locale);MathJax.Hub.config.menuSettings.locale=this.params.locale}if(this.params.config){var c=this.params.config.split(/,/);for(var b=0,a=c.length;b<a;b++){if(!c[b].match(/\\.js$/)){c[b]+=\".js\"}this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",c[b])])}}this.queue.Push([\"Config\",MathJax.Hub,MathJax.AuthorConfig]);if(this.script.match(/\\S/)){this.queue.Push(this.script+\";\\n1;\")}this.queue.Push([\"ConfigDelay\",this],[\"ConfigBlocks\",this],[function(d){return d.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],[\"Post\",this.signal,\"End Config\"])},ConfigDelay:function(){var a=this.params.delayStartupUntil||MathJax.Hub.config.delayStartupUntil;if(a===\"onload\"){return this.onload}if(a===\"configured\"){return MathJax.Hub.Configured}return a},ConfigBlocks:function(){var c=document.getElementsByTagName(\"script\");var f=null,b=MathJax.Callback.Queue();for(var d=0,a=c.length;d<a;d++){var e=String(c[d].type).replace(/ /g,\"\");if(e.match(/^text\\/x-mathjax-config(;.*)?$/)&&!e.match(/;executed=true/)){c[d].type+=\";executed=true\";f=b.Push(c[d].innerHTML+\";\\n1;\")}}return f},Cookie:function(){return this.queue.Push([\"Post\",this.signal,\"Begin Cookie\"],[\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],[function(e){var d=e.menuSettings;if(d.locale){MathJax.Localization.resetLocale(d.locale)}var g=e.menuSettings.renderer,b=e.jax;if(g){var c=\"output/\"+g;b.sort();for(var f=0,a=b.length;f<a;f++){if(b[f].substr(0,7)===\"output/\"){break}}if(f==a-1){b.pop()}else{while(f<a){if(b[f]===c){b.splice(f,1);break}f++}}b.unshift(c)}if(d.CHTMLpreview!=null){if(d.FastPreview==null){d.FastPreview=d.CHTMLpreview}delete d.CHTMLpreview}if(d.FastPreview&&!MathJax.Extension[\"fast-preview\"]){MathJax.Hub.config.extensions.push(\"fast-preview.js\")}if(e.menuSettings.assistiveMML&&!MathJax.Extension.AssistiveMML){MathJax.Hub.config.extensions.push(\"AssistiveMML.js\")}},MathJax.Hub.config],[\"Post\",this.signal,\"End Cookie\"])},Styles:function(){return this.queue.Push([\"Post\",this.signal,\"Begin Styles\"],[\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],[\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],[\"Post\",this.signal,\"End Styles\"])},Jax:function(){var f=MathJax.Hub.config,c=MathJax.Hub.outputJax;for(var g=0,b=f.jax.length,d=0;g<b;g++){var e=f.jax[g].substr(7);if(f.jax[g].substr(0,7)===\"output/\"&&c.order[e]==null){c.order[e]=d;d++}}var a=MathJax.Callback.Queue();return a.Push([\"Post\",this.signal,\"Begin Jax\"],[\"loadArray\",this,f.jax,\"jax\",\"config.js\"],[\"Post\",this.signal,\"End Jax\"])},Extensions:function(){var a=MathJax.Callback.Queue();return a.Push([\"Post\",this.signal,\"Begin Extensions\"],[\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],[\"Post\",this.signal,\"End Extensions\"])},Message:function(){MathJax.Message.Init(true)},Menu:function(){var b=MathJax.Hub.config.menuSettings,a=MathJax.Hub.outputJax,d;for(var c in a){if(a.hasOwnProperty(c)){if(a[c].length){d=a[c];break}}}if(d&&d.length){if(b.renderer&&b.renderer!==d[0].id){d.unshift(MathJax.OutputJax[b.renderer])}b.renderer=d[0].id}},Hash:function(){if(MathJax.Hub.config.positionToHash&&document.location.hash&&document.body&&document.body.scrollIntoView){var d=document.location.hash.substr(1);var f=document.getElementById(d);if(!f){var c=document.getElementsByTagName(\"a\");for(var e=0,b=c.length;e<b;e++){if(c[e].name===d){f=c[e];break}}}if(f){while(!f.scrollIntoView){f=f.parentNode}f=this.HashCheck(f);if(f&&f.scrollIntoView){setTimeout(function(){f.scrollIntoView(true)},1)}}}},HashCheck:function(b){var a=MathJax.Hub.getJaxFor(b);if(a&&MathJax.OutputJax[a.outputJax].hashCheck){b=MathJax.OutputJax[a.outputJax].hashCheck(b)}return b},MenuZoom:function(){if(MathJax.Hub.config.showMathMenu){if(!MathJax.Extension.MathMenu){setTimeout(function(){MathJax.Callback.Queue([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],[\"loadDomain\",MathJax.Localization,\"MathMenu\"])},1000)}else{setTimeout(MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),1000)}if(!MathJax.Extension.MathZoom){setTimeout(MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),2000)}}},onLoad:function(){var a=this.onload=MathJax.Callback(function(){MathJax.Hub.Startup.signal.Post(\"onLoad\")});if(document.body&&document.readyState){if(MathJax.Hub.Browser.isMSIE){if(document.readyState===\"complete\"){return[a]}}else{if(document.readyState!==\"loading\"){return[a]}}}if(window.addEventListener){window.addEventListener(\"load\",a,false);if(!this.params.noDOMContentEvent){window.addEventListener(\"DOMContentLoaded\",a,false)}}else{if(window.attachEvent){window.attachEvent(\"onload\",a)}else{window.onload=a}}return a},Typeset:function(a,b){if(MathJax.Hub.config.skipStartupTypeset){return function(){}}return this.queue.Push([\"Post\",this.signal,\"Begin Typeset\"],[\"Typeset\",MathJax.Hub,a,b],[\"Post\",this.signal,\"End Typeset\"])},URL:function(b,a){if(!a.match(/^([a-z]+:\\/\\/|\\[|\\/)/)){a=\"[MathJax]/\"+b+\"/\"+a}return a},loadArray:function(b,f,c,a){if(b){if(!(b instanceof Array)){b=[b]}if(b.length){var h=MathJax.Callback.Queue(),j={},e;for(var g=0,d=b.length;g<d;g++){e=this.URL(f,b[g]);if(c){e+=\"/\"+c}if(a){h.Push([\"Require\",MathJax.Ajax,e,j])}else{h.Push(MathJax.Ajax.Require(e,j))}}return h.Push({})}}return null}};(function(d){var b=window[d],e=\"[\"+d+\"]\";var c=b.Hub,a=b.Ajax,f=b.Callback;var g=MathJax.Object.Subclass({JAXFILE:\"jax.js\",require:null,config:{},Init:function(i,h){if(arguments.length===0){return this}return(this.constructor.Subclass(i,h))()},Augment:function(k,j){var i=this.constructor,h={};if(k!=null){for(var l in k){if(k.hasOwnProperty(l)){if(typeof k[l]===\"function\"){i.protoFunction(l,k[l])}else{h[l]=k[l]}}}if(k.toString!==i.prototype.toString&&k.toString!=={}.toString){i.protoFunction(\"toString\",k.toString)}}c.Insert(i.prototype,h);i.Augment(null,j);return this},Translate:function(h,i){throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\")},Register:function(h){},Config:function(){this.config=c.CombineConfig(this.id,this.config);if(this.config.Augment){this.Augment(this.config.Augment)}},Startup:function(){},loadComplete:function(i){if(i===\"config.js\"){return a.loadComplete(this.directory+\"/\"+i)}else{var h=f.Queue();h.Push(c.Register.StartupHook(\"End Config\",{}),[\"Post\",c.Startup.signal,this.id+\" Jax Config\"],[\"Config\",this],[\"Post\",c.Startup.signal,this.id+\" Jax Require\"],[function(j){return MathJax.Hub.Startup.loadArray(j.require,this.directory)},this],[function(j,k){return MathJax.Hub.Startup.loadArray(j.extensions,\"extensions/\"+k)},this.config||{},this.id],[\"Post\",c.Startup.signal,this.id+\" Jax Startup\"],[\"Startup\",this],[\"Post\",c.Startup.signal,this.id+\" Jax Ready\"]);if(this.copyTranslate){h.Push([function(j){j.preProcess=j.preTranslate;j.Process=j.Translate;j.postProcess=j.postTranslate},this.constructor.prototype])}return h.Push([\"loadComplete\",a,this.directory+\"/\"+i])}}},{id:\"Jax\",version:\"2.6.0\",directory:e+\"/jax\",extensionDir:e+\"/extensions\"});b.InputJax=g.Subclass({elementJax:\"mml\",sourceMenuTitle:[\"Original\",\"Original Form\"],copyTranslate:true,Process:function(l,q){var j=f.Queue(),o;var k=this.elementJax;if(!(k instanceof Array)){k=[k]}for(var n=0,h=k.length;n<h;n++){o=b.ElementJax.directory+\"/\"+k[n]+\"/\"+this.JAXFILE;if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(o);j.Push(a.Require(o))}o=this.directory+\"/\"+this.JAXFILE;var p=j.Push(a.Require(o));if(!p.called){this.constructor.prototype.Process=function(){if(!p.called){return p}throw Error(o+\" failed to load properly\")}}k=c.outputJax[\"jax/\"+k[0]];if(k){j.Push(a.Require(k[0].directory+\"/\"+this.JAXFILE))}return j.Push({})},needsUpdate:function(h){var i=h.SourceElement();return(h.originalText!==b.HTML.getScript(i))},Register:function(h){if(!c.inputJax){c.inputJax={}}c.inputJax[h]=this}},{id:\"InputJax\",version:\"2.6.0\",directory:g.directory+\"/input\",extensionDir:g.extensionDir});b.OutputJax=g.Subclass({copyTranslate:true,preProcess:function(j){var i,h=this.directory+\"/\"+this.JAXFILE;this.constructor.prototype.preProcess=function(k){if(!i.called){return i}throw Error(h+\" failed to load properly\")};i=a.Require(h);return i},Register:function(i){var h=c.outputJax;if(!h[i]){h[i]=[]}if(h[i].length&&(this.id===c.config.menuSettings.renderer||(h.order[this.id]||0)<(h.order[h[i][0].id]||0))){h[i].unshift(this)}else{h[i].push(this)}if(!this.require){this.require=[]}else{if(!(this.require instanceof Array)){this.require=[this.require]}}this.require.push(b.ElementJax.directory+\"/\"+(i.split(/\\//)[1])+\"/\"+this.JAXFILE)},Remove:function(h){}},{id:\"OutputJax\",version:\"2.6.0\",directory:g.directory+\"/output\",extensionDir:g.extensionDir,fontDir:e+(b.isPacked?\"\":\"/..\")+\"/fonts\",imageDir:e+(b.isPacked?\"\":\"/..\")+\"/images\"});b.ElementJax=g.Subclass({Init:function(i,h){return this.constructor.Subclass(i,h)},inputJax:null,outputJax:null,inputID:null,originalText:\"\",mimeType:\"\",sourceMenuTitle:[\"MathMLcode\",\"MathML Code\"],Text:function(i,j){var h=this.SourceElement();b.HTML.setScript(h,i);h.MathJax.state=this.STATE.UPDATE;return c.Update(h,j)},Reprocess:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.UPDATE;return c.Reprocess(h,i)},Update:function(h){return this.Rerender(h)},Rerender:function(i){var h=this.SourceElement();h.MathJax.state=this.STATE.OUTPUT;return c.Process(h,i)},Remove:function(h){if(this.hover){this.hover.clear(this)}b.OutputJax[this.outputJax].Remove(this);if(!h){c.signal.Post([\"Remove Math\",this.inputID]);this.Detach()}},needsUpdate:function(){return b.InputJax[this.inputJax].needsUpdate(this)},SourceElement:function(){return document.getElementById(this.inputID)},Attach:function(i,j){var h=i.MathJax.elementJax;if(i.MathJax.state===this.STATE.UPDATE){h.Clone(this)}else{h=i.MathJax.elementJax=this;if(i.id){this.inputID=i.id}else{i.id=this.inputID=b.ElementJax.GetID();this.newID=1}}h.originalText=b.HTML.getScript(i);h.inputJax=j;if(h.root){h.root.inputID=h.inputID}return h},Detach:function(){var h=this.SourceElement();if(!h){return}try{delete h.MathJax}catch(i){h.MathJax=null}if(this.newID){h.id=\"\"}},Clone:function(h){var i;for(i in this){if(!this.hasOwnProperty(i)){continue}if(typeof(h[i])===\"undefined\"&&i!==\"newID\"){delete this[i]}}for(i in h){if(!h.hasOwnProperty(i)){continue}if(typeof(this[i])===\"undefined\"||(this[i]!==h[i]&&i!==\"inputID\")){this[i]=h[i]}}}},{id:\"ElementJax\",version:\"2.6.0\",directory:g.directory+\"/element\",extensionDir:g.extensionDir,ID:0,STATE:{PENDING:1,PROCESSED:2,UPDATE:3,OUTPUT:4},GetID:function(){this.ID++;return\"MathJax-Element-\"+this.ID},Subclass:function(){var h=g.Subclass.apply(this,arguments);h.loadComplete=this.prototype.loadComplete;return h}});b.ElementJax.prototype.STATE=b.ElementJax.STATE;b.OutputJax.Error={id:\"Error\",version:\"2.6.0\",config:{},errors:0,ContextMenu:function(){return b.Extension.MathEvents.Event.ContextMenu.apply(b.Extension.MathEvents.Event,arguments)},Mousedown:function(){return b.Extension.MathEvents.Event.AltContextMenu.apply(b.Extension.MathEvents.Event,arguments)},getJaxFromMath:function(h){return(h.nextSibling.MathJax||{}).error},Jax:function(j,i){var h=MathJax.Hub.inputJax[i.type.replace(/ *;(.|\\s)*/,\"\")];this.errors++;return{inputJax:(h||{id:\"Error\"}).id,outputJax:\"Error\",inputID:\"MathJax-Error-\"+this.errors,sourceMenuTitle:[\"ErrorMessage\",\"Error Message\"],sourceMenuFormat:\"Error\",originalText:MathJax.HTML.getScript(i),errorText:j}}};b.InputJax.Error={id:\"Error\",version:\"2.6.0\",config:{},sourceMenuTitle:[\"Original\",\"Original Form\"]}})(\"MathJax\");(function(o){var h=window[o];if(!h){h=window[o]={}}var d=h.Hub;var s=d.Startup;var w=d.config;var g=document.head||(document.getElementsByTagName(\"head\")[0]);if(!g){g=document.childNodes[0]}var b=(document.documentElement||document).getElementsByTagName(\"script\");if(b.length===0&&g.namespaceURI){b=document.getElementsByTagNameNS(g.namespaceURI,\"script\")}var f=new RegExp(\"(^|/)\"+o+\"\\\\.js(\\\\?.*)?$\");for(var q=b.length-1;q>=0;q--){if((b[q].src||\"\").match(f)){s.script=b[q].innerHTML;if(RegExp.$2){var t=RegExp.$2.substr(1).split(/\\&/);for(var p=0,l=t.length;p<l;p++){var n=t[p].match(/(.*)=(.*)/);if(n){s.params[unescape(n[1])]=unescape(n[2])}}}w.root=b[q].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,\"\").replace(/^(https?:\\/\\/cdn.mathjax.org\\/mathjax\\/)(latest)/,\"$1\"+h.version.split(/\\./).slice(0,2).join(\".\")+\"-$2\");h.Ajax.config.root=w.root;break}}var k=navigator.userAgent;var a={isMac:(navigator.platform.substr(0,3)===\"Mac\"),isPC:(navigator.platform.substr(0,3)===\"Win\"),isMSIE:(\"ActiveXObject\" in window&&\"clipboardData\" in window),isEdge:(\"MSGestureEvent\" in window&&\"chrome\" in window&&window.chrome.loadTimes==null),isFirefox:(!!k.match(/Gecko\\//)&&!k.match(/like Gecko/)),isSafari:(!!k.match(/ (Apple)?WebKit\\//)&&!k.match(/ like iPhone /)&&(!window.chrome||window.chrome.app==null)),isChrome:(\"chrome\" in window&&window.chrome.loadTimes!=null),isOpera:(\"opera\" in window&&window.opera.version!=null),isKonqueror:(\"konqueror\" in window&&navigator.vendor==\"KDE\"),versionAtLeast:function(y){var x=(this.version).split(\".\");y=(new String(y)).split(\".\");for(var z=0,j=y.length;z<j;z++){if(x[z]!=y[z]){return parseInt(x[z]||\"0\")>=parseInt(y[z])}}return true},Select:function(j){var i=j[d.Browser];if(i){return i(d.Browser)}return null}};var e=k.replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\").replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\").replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");d.Browser=d.Insert(d.Insert(new String(\"Unknown\"),{version:\"0.0\"}),a);for(var v in a){if(a.hasOwnProperty(v)){if(a[v]&&v.substr(0,2)===\"is\"){v=v.slice(2);if(v===\"Mac\"||v===\"PC\"){continue}d.Browser=d.Insert(new String(v),a);var r=new RegExp(\".*(Version/| Trident/.*; rv:)((?:\\\\d+\\\\.)+\\\\d+)|.*(\"+v+\")\"+(v==\"MSIE\"?\" \":\"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");var u=r.exec(e)||[\"\",\"\",\"\",\"unknown\",\"0.0\"];d.Browser.name=(u[1]!=\"\"?v:(u[3]||u[5]));d.Browser.version=u[2]||u[4]||u[6];break}}}try{d.Browser.Select({Safari:function(j){var i=parseInt((String(j.version).split(\".\"))[0]);if(i>85){j.webkit=j.version}if(i>=538){j.version=\"8.0\"}else{if(i>=537){j.version=\"7.0\"}else{if(i>=536){j.version=\"6.0\"}else{if(i>=534){j.version=\"5.1\"}else{if(i>=533){j.version=\"5.0\"}else{if(i>=526){j.version=\"4.0\"}else{if(i>=525){j.version=\"3.1\"}else{if(i>500){j.version=\"3.0\"}else{if(i>400){j.version=\"2.0\"}else{if(i>85){j.version=\"1.0\"}}}}}}}}}}j.webkit=(navigator.appVersion.match(/WebKit\\/(\\d+)\\./))[1];j.isMobile=(navigator.appVersion.match(/Mobile/i)!=null);j.noContextMenu=j.isMobile},Firefox:function(j){if((j.version===\"0.0\"||k.match(/Firefox/)==null)&&navigator.product===\"Gecko\"){var m=k.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);if(m){j.version=m[1]}else{var i=(navigator.buildID||navigator.productSub||\"0\").substr(0,8);if(i>=\"20111220\"){j.version=\"9.0\"}else{if(i>=\"20111120\"){j.version=\"8.0\"}else{if(i>=\"20110927\"){j.version=\"7.0\"}else{if(i>=\"20110816\"){j.version=\"6.0\"}else{if(i>=\"20110621\"){j.version=\"5.0\"}else{if(i>=\"20110320\"){j.version=\"4.0\"}else{if(i>=\"20100121\"){j.version=\"3.6\"}else{if(i>=\"20090630\"){j.version=\"3.5\"}else{if(i>=\"20080617\"){j.version=\"3.0\"}else{if(i>=\"20061024\"){j.version=\"2.0\"}}}}}}}}}}}}j.isMobile=(navigator.appVersion.match(/Android/i)!=null||k.match(/ Fennec\\//)!=null||k.match(/Mobile/)!=null)},Chrome:function(i){i.noContextMenu=i.isMobile=!!navigator.userAgent.match(/ Mobile[ \\/]/)},Opera:function(i){i.version=opera.version()},Edge:function(i){i.isMobile=!!navigator.userAgent.match(/ Phone/)},MSIE:function(j){j.isMobile=!!navigator.userAgent.match(/ Phone/);j.isIE9=!!(document.documentMode&&(window.performance||window.msPerformance));MathJax.HTML.setScriptBug=!j.isIE9||document.documentMode<9;MathJax.Hub.msieHTMLCollectionBug=(document.documentMode<9);if(document.documentMode<10&&!s.params.NoMathPlayer){try{new ActiveXObject(\"MathPlayer.Factory.1\");j.hasMathPlayer=true}catch(m){}try{if(j.hasMathPlayer){var i=document.createElement(\"object\");i.id=\"mathplayer\";i.classid=\"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";g.appendChild(i);document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");j.mpNamespace=true;if(document.readyState&&(document.readyState===\"loading\"||document.readyState===\"interactive\")){document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');j.mpImported=true}}else{document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\")}}catch(m){}}}})}catch(c){console.error(c.message)}d.Browser.Select(MathJax.Message.browsers);if(h.AuthorConfig&&typeof h.AuthorConfig.AuthorInit===\"function\"){h.AuthorConfig.AuthorInit()}d.queue=h.Callback.Queue();d.queue.Push([\"Post\",s.signal,\"Begin\"],[\"Config\",s],[\"Cookie\",s],[\"Styles\",s],[\"Message\",s],function(){var i=h.Callback.Queue(s.Jax(),s.Extensions());return i.Push({})},[\"Menu\",s],s.onLoad(),function(){MathJax.isReady=true},[\"Typeset\",s],[\"Hash\",s],[\"MenuZoom\",s],[\"Post\",s.signal,\"End\"])})(\"MathJax\")}};\n\ndefine(\"mathJax\", function(){});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Content Plugin : RubricBlock\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock',[\r\n    'jquery',\r\n    'i18n',\r\n    'core/promise',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'tpl!taoQtiTest/runner/plugins/content/rubricBlock/rubricBlock'\r\n], function ($, __, Promise, hider, pluginFactory, containerTpl){\r\n    'use strict';\r\n\r\n    /**\r\n     * Ensure the <a> links opens to blank pages\r\n     * @param {jQueryElement} $container - lookup scope\r\n     */\r\n    var blankifyLinks = function blankifyLinks($container){\r\n        $('a', $container).attr('target', '_blank');\r\n    };\r\n\r\n    /**\r\n     * Apply mathjax\r\n     */\r\n    var mathify = function mathify($container) {\r\n\r\n        return new Promise(function(resolve){\r\n            if($('math', $container).length > 0){\r\n                //load mathjax only if necessary\r\n                require(['mathJax'], function(MathJax){\r\n                    if(MathJax){\r\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $container[0]);\r\n                        MathJax.Hub.Queue(resolve);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }, resolve);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n        name : 'rubricBlock',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n\r\n            this.$element = $(containerTpl());\r\n\r\n            this.hide();\r\n\r\n            //change plugin state\r\n            testRunner\r\n                .on('ready', function(){\r\n                    self.hide();\r\n                })\r\n                .on('loaditem', function(itemRef, itemData){\r\n                    if(itemData.rubrics) {\r\n                        self.$element.html(itemData.rubrics);\r\n\r\n                        blankifyLinks(self.$element);\r\n                        mathify(self.$element).then(function(){\r\n                            // notify that the rubric blocks are loaded\r\n                            testRunner.trigger('rubricblock');\r\n                        });\r\n                    }\r\n                })\r\n                .on('renderitem', function(){\r\n                    self.show();\r\n                })\r\n                .on('unloaditem', function(){\r\n                    self.hide();\r\n                    self.$element.empty();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            //attach the element before the content area\r\n            var $container = this.getAreaBroker().getContentArea();\r\n            $container.before(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the container\r\n         */\r\n        enable : function enable (){\r\n            this.$element.removeProp('disabled')\r\n                         .removeClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Disable the container\r\n         */\r\n        disable : function disable (){\r\n            this.$element.prop('disabled', true)\r\n                         .addClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Show the container\r\n         */\r\n        show: function show(){\r\n            hider.show(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Hide the container\r\n         */\r\n        hide: function hide(){\r\n            hider.hide(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/connectivity/connectivity',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin'\r\n], function ($, _, __, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates the connectivity plugin.\r\n     * Detects connectivity issues\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'connectivity',\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            // this function is mandatory\r\n        },\r\n\r\n        /**\r\n         * Installs the plugin (called when the runner bind the plugin)\r\n         */\r\n        install: function install() {\r\n\r\n            var testRunner = this.getTestRunner();\r\n\r\n            function disconnect() {\r\n                if (!testRunner.getState('disconnected')) {\r\n                    testRunner.trigger('disconnect');\r\n                }\r\n            }\r\n\r\n            function reconnect() {\r\n                if (testRunner.getState('disconnected')) {\r\n                    testRunner.trigger('reconnect');\r\n                }\r\n            }\r\n\r\n            // immediate detection of connectivity loss using Offline API\r\n            $(window).on('offline.connectivity', function() {\r\n                disconnect();\r\n            });\r\n\r\n            // immediate detection of connectivity back using Offline API\r\n            $(window).on('online.connectivity', function() {\r\n                reconnect();\r\n            });\r\n\r\n            testRunner\r\n                .on('disconnect', function() {\r\n                    testRunner.setState('disconnected', true);\r\n                })\r\n                .on('reconnect', function() {\r\n                    testRunner.setState('disconnected', false);\r\n                })\r\n                .before('error', function(e, error) {\r\n                    // detect connectivity errors as network error without error code\r\n                    if (_.isObject(error) && error.source === 'network' && !error.code) {\r\n                        disconnect();\r\n\r\n                        // prevent default error handling\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            testRunner.getProxy()\r\n                .on('receive', function() {\r\n                    // any message received, state the runner is connected\r\n                    reconnect();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            $(window).off('offline.connectivity');\r\n            $(window).off('online.connectivity');\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Control Plugin : Duration (record exact spent time duration)\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/duration/duration',[\r\n    'lodash',\r\n    'core/polling',\r\n    'core/timer',\r\n    'core/store',\r\n    'core/promise',\r\n    'taoTests/runner/plugin',\r\n], function (_, pollingFactory, timerFactory, store, Promise, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Time interval between duration capture in ms\r\n     * @type {Number}\r\n     */\r\n    var refresh = 1000;\r\n\r\n\r\n    /**\r\n     * Creates the timer plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'duration',\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n\r\n            var self = this;\r\n            var testRunner   = this.getTestRunner();\r\n            var initContext  = testRunner.getTestContext();\r\n            var initItemAttemptId = initContext.itemIdentifier + '#' + initContext.attempt;\r\n\r\n            //where the duration of attempts are stored\r\n            return store('duration-' + testRunner.getConfig().serviceCallId).then(function(durationStore){\r\n\r\n                /**\r\n                 * Gets the duration of a particular item from the store\r\n                 * @param {String} attemptId - the attempt id to get the duration for\r\n                 * @returns {Promise}\r\n                 */\r\n                function getItemDuration(attemptId){\r\n                    if(!/^(.*)+#+\\d+$/.test(attemptId)){\r\n                        return Promise.reject(new Error('Is it really an attempt id, like \"itemid#attempt\"'));\r\n                    }\r\n\r\n                    return durationStore.getItem(attemptId);\r\n                }\r\n\r\n                //one stopwatch to count the time\r\n                self.stopwatch = timerFactory({\r\n                    autoStart : false\r\n                });\r\n\r\n                return durationStore.getItem(initItemAttemptId)\r\n                    .then(function(initDuration){\r\n                        initDuration = _.isNumber(initDuration) ? initDuration : 0;\r\n\r\n                        // if the current item attempt duration is empty in the client storage,\r\n                        // the test has probably been started in another browser or computer and a crash occurred,\r\n                        // so take the server provided duration to take care of elapsed time on the same attempt\r\n                        if (!initDuration && initContext.attemptDuration) {\r\n                            return durationStore.setItem(initItemAttemptId, initContext.attemptDuration || 0);\r\n                        }\r\n                    })\r\n                    .then(function(){\r\n                        //update the duration on a regular basis\r\n                        self.polling = pollingFactory({\r\n\r\n                            action : function updateDuration() {\r\n\r\n                                //how many time elapsed from the last tick ?\r\n                                var elapsed = self.stopwatch.tick();\r\n                                var context = testRunner.getTestContext();\r\n\r\n                                //store by attempt\r\n                                var itemAttemptId = context.itemIdentifier + '#' + context.attempt;\r\n\r\n                                durationStore.getItem(itemAttemptId).then(function(duration){\r\n                                    duration = _.isNumber(duration) ? duration : 0;\r\n                                    elapsed  = _.isNumber(elapsed) && elapsed > 0 ? (elapsed / 1000) : 0;\r\n\r\n                                    //store the last duration\r\n                                    durationStore.setItem(itemAttemptId, duration + elapsed);\r\n                                });\r\n                            },\r\n                            interval : refresh,\r\n                            autoStart : false\r\n                        });\r\n\r\n                        //change plugin state\r\n                        testRunner\r\n\r\n                            .after('renderitem enableitem', function(){\r\n                                self.enable();\r\n                            })\r\n\r\n                            .before('move disableitem skip error', function(){\r\n                                if (self.getState('enabled')) {\r\n                                    self.disable();\r\n                                }\r\n                            })\r\n\r\n                            .before('move skip exit timeout', function(){\r\n                                var context = testRunner.getTestContext();\r\n                                var itemAttemptId = context.itemIdentifier + '#' + context.attempt;\r\n                                return getItemDuration(itemAttemptId).then(function(duration) {\r\n                                    var params = {\r\n                                        itemDuration: 0\r\n                                    };\r\n                                    if(_.isNumber(duration) && duration > 0){\r\n                                        params.itemDuration = duration;\r\n                                    }\r\n\r\n                                    // the duration will be sent to the server with the next request,\r\n                                    // usually submitItem() or callItemAction()\r\n                                    testRunner.getProxy().addCallActionParams(params);\r\n                                });\r\n                            })\r\n\r\n                            /**\r\n                             * @event duration.get\r\n                             * @param {String} attemptId - the attempt id to get the duration for\r\n                             * @param {getDuration} getDuration - a receiver callback\r\n                             */\r\n                            .on('plugin-get.duration', function(e, attemptId, getDuration){\r\n                                if(_.isFunction(getDuration)){\r\n                                    getDuration(getItemDuration(attemptId));\r\n                                }\r\n                            })\r\n\r\n                            .before('finish', function(){\r\n                                return new Promise(function(resolve) {\r\n                                    durationStore.removeStore()\r\n                                        .then(resolve)\r\n                                        .catch(resolve);\r\n                                });\r\n                            });\r\n                    });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            this.polling.stop();\r\n            this.stopwatch.stop();\r\n        },\r\n\r\n        /**\r\n         * Enables the duration count\r\n         */\r\n        enable : function enable (){\r\n            this.polling.start();\r\n            this.stopwatch.resume();\r\n        },\r\n\r\n        /**\r\n         * Disables the duration count\r\n         */\r\n        disable : function disable (){\r\n            this.polling.stop();\r\n            this.stopwatch.pause();\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/progressbar/progressbar', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"progress-box\\\">\\r\\n    <div data-control=\\\"progress-bar\\\" class=\\\"qti-controls progressbar info\\\"></div>\\r\\n    <div data-control=\\\"progress-label\\\" class=\\\"qti-controls\\\"></div>\\r\\n</div>\\r\\n\";\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Control Plugin : Progress Bar\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/progressbar/progressbar',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'tpl!taoQtiTest/runner/plugins/controls/progressbar/progressbar',\r\n    'ui/progressbar'\r\n], function ($, _, __, pluginFactory, progressTpl){\r\n    'use strict';\r\n\r\n    /**\r\n     * Calculate progression based on the current context\r\n     *\r\n     * @param {Object} testContext - The current test context\r\n     * @param {Object} testMap - The items organization map\r\n     * @param {Object} progressConfig\r\n     * @param {String} progressConfig.indicator - to select the progression type\r\n     * @param {String} [progressConfig.scope] - to select the progression type\r\n     * @param {Bool} progressConfig.showTotal - display 'item x of y' (true) | 'item x'\r\n     * @returns {Object} the progression with a label and a ratio\r\n     */\r\n    var progressUpdater = function progressUpdater(testContext, testMap, progressConfig){\r\n\r\n\r\n        /**\r\n         * Provide progression calculation based on the type of indicator\r\n         */\r\n        var updater = {\r\n\r\n            /**\r\n            * Updates the progress bar displaying the percentage\r\n            * @param {Object} testContext The progression context\r\n            * @returns {{ratio: number, label: string}}\r\n            */\r\n            percentage : function percentage() {\r\n                var total = Math.max(1, testContext.numberItems);\r\n                var ratio = Math.floor(testContext.numberCompleted / total * 100);\r\n                return {\r\n                    ratio : ratio,\r\n                    label : ratio + '%'\r\n                };\r\n            },\r\n\r\n            /**\r\n            * Updates the progress bar displaying the position\r\n            * @param {Object} testContext The progression context\r\n            * @returns {{ratio: number, label: string}}\r\n            */\r\n            position : function position() {\r\n\r\n                //get the current test part in the map\r\n                var getTestPart = function getTestPart(){\r\n                    if(testMap && testMap.parts){\r\n                        return testMap.parts[testContext.testPartId];\r\n                    }\r\n                };\r\n\r\n                //get the current test section in the map\r\n                var getTestSection = function getTestSection(){\r\n                    var testPart = getTestPart();\r\n                    if(testPart && testPart.sections){\r\n                        return testPart.sections[testContext.sectionId];\r\n                    }\r\n                };\r\n\r\n                //provides you the methods to get total and position by scope\r\n                var progressScopeCounter = {\r\n                    test : {\r\n                        total : function(){\r\n                            return Math.max(1, testContext.numberItems);\r\n                        },\r\n                        position : function(){\r\n                            return testContext.itemPosition + 1;\r\n                        }\r\n                    },\r\n                    testPart : {\r\n                        total : function(){\r\n                            var testPart = getTestPart();\r\n                            if(testPart){\r\n                                return _.reduce(testMap.parts[testContext.testPartId].sections, function(acc, section){\r\n                                    return acc + _.size(section.items);\r\n                                }, 0);\r\n                            }\r\n                            return 0;\r\n                        },\r\n                        position : function(){\r\n                            var testSection = getTestSection();\r\n                            if(testSection){\r\n                                return testSection.items[testContext.itemIdentifier].positionInPart + 1;\r\n                            }\r\n                            return 0;\r\n                        }\r\n                    },\r\n                    testSection : {\r\n                        total : function(){\r\n                            var testSection = getTestSection();\r\n                            if(testSection){\r\n                                return _.size(testSection.items);\r\n                            }\r\n                            return 0;\r\n                        },\r\n                        position : function(){\r\n                            var testSection = getTestSection();\r\n                            if(testSection){\r\n                                return testSection.items[testContext.itemIdentifier].positionInSection + 1;\r\n                            }\r\n                            return 0;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                var counter = progressScopeCounter[progressConfig.scope] || progressScopeCounter.test;\r\n                var total = counter.total();\r\n                var currentPosition = counter.position();\r\n\r\n                return {\r\n                    ratio : total > 0 ? Math.floor(currentPosition / total * 100) : 0,\r\n                    label : progressConfig.showTotal ?\r\n                        __('Item %d of %d', currentPosition, total) :\r\n                        __('Item %d', currentPosition)\r\n                };\r\n            }\r\n        };\r\n        return updater[progressConfig.indicator]();\r\n    };\r\n\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name : 'progressBar',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var $progressLabel,\r\n                $progressControl;\r\n            var testRunner = this.getTestRunner();\r\n            var testData   = testRunner.getTestData();\r\n            var config     = testData.config.progressIndicator || {};\r\n\r\n            var progressConfig = {\r\n                indicator: config.type || 'percentage',\r\n                scope: config.scope || 'test',\r\n                showTotal: !!config.showTotal\r\n            };\r\n\r\n            /**\r\n             * Update the progress bar\r\n             */\r\n            var update = function update (){\r\n                var progressData = progressUpdater(testRunner.getTestContext(), testRunner.getTestMap(), progressConfig);\r\n                if(progressData && $progressLabel && $progressControl){\r\n                    $progressLabel.text(progressData.label);\r\n                    $progressControl.progressbar('value', progressData.ratio);\r\n                }\r\n            };\r\n\r\n            //create the progressbar\r\n            this.$element = $(progressTpl());\r\n\r\n            //store the controls\r\n            $progressLabel = $('[data-control=\"progress-label\"]', this.$element);\r\n            $progressControl = $('[data-control=\"progress-bar\"]', this.$element);\r\n\r\n            //and initialize the progress bar component\r\n            $progressControl.progressbar();\r\n\r\n            //let update the progression\r\n            update();\r\n\r\n            testRunner\r\n                .on('ready', update)\r\n                .on('loaditem', update);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            var $container = this.getAreaBroker().getControlArea();\r\n            $container.append(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/testState/testState',[\r\n    'lodash',\r\n    'taoTests/runner/plugin'\r\n], function (_, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates the testState plugin.\r\n     * Handle particular states of the assessment test\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'testState',\r\n\r\n        /**\r\n         * Installs the plugin (called when the runner bind the plugin)\r\n         */\r\n        install: function install() {\r\n            var testRunner = this.getTestRunner();\r\n\r\n            // middleware invoked on every requests\r\n            testRunner.getProxy()\r\n                .use(function qtiFilter(req, res, next) {\r\n                    var data = res && res.data;\r\n\r\n                    // test has been closed/suspended => redirect to the index page after message acknowledge\r\n                    if (data && data.type && data.type === 'TestState') {\r\n                        // spread the world about the reason of the leave\r\n                        testRunner.setState('closedOrSuspended', true);\r\n\r\n                        if (!testRunner.getState('ready')) {\r\n                            // if we open an inconsistent test just leave\r\n                            // should happen if we refresh an auto paused test\r\n                            testRunner.trigger('destroy');\r\n                        } else if (_.isEmpty(data.messages) || !_.find(data.messages, {channel: 'teststate'})) {\r\n                            testRunner.trigger('leave', data);\r\n                        }\r\n                        // break the chain to avoid uncaught exception in promise...\r\n                        // this will lead to unresolved promise, but the browser will be redirected soon!\r\n                        return;\r\n                    }\r\n                    next();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var testRunner = this.getTestRunner();\r\n            var isLeaving = false;\r\n\r\n            // immediate handling of proctor's actions\r\n            testRunner.getProxy()\r\n                .channel('teststate', function (data) {\r\n                    if (!isLeaving && data && ('close' === data.type || 'pause' === data.type) && !testRunner.getState('closedOrSuspended')) {\r\n                        isLeaving = true;\r\n\r\n                        testRunner.setState('closedOrSuspended', true);\r\n\r\n                        testRunner.trigger('leave', data);\r\n                    }\r\n                });\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/timer/timer', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" disabled\";\n  }\n\n  buffer += \"<span class=\\\"qti-timer qti-timer__type-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" qti-controls \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.running), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n    <span class=\\\"qti-timer_label truncate\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n    <span class=\\\"qti-timer_time\\\"></span>\\r\\n</span>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Component that controls the display of a timer (countdown/stopwatch like) into a QTI Test.\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/timer/timerComponent',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'moment',\r\n    'core/encoder/time',\r\n    'tpl!taoQtiTest/runner/plugins/controls/timer/timer'\r\n], function ($, _, __, moment, timeEncoder, timerTpl) {\r\n    'use strict';\r\n\r\n    var hasAnimationFrame = 'requestAnimationFrame' in window;\r\n\r\n    /**\r\n     * Duration of a second in the timer's base unit\r\n     * @type {Number}\r\n     */\r\n    var precision = 1000;\r\n\r\n    /**\r\n     * In a Qti context timers could be associated to those elements\r\n     */\r\n    var timerTypes = {\r\n        test:     'assessmentTest',\r\n        testPart: 'testPart',\r\n        section:  'assessmentSection',\r\n        item:     'assessmentItemRef'\r\n    };\r\n\r\n    /**\r\n     * Create a new timer component\r\n     * @param {Object} config - the timer config\r\n     * @param {String} config.id - used to identified the timer\r\n     * @param {String} config.type - the associated type (from timerTypes above)\r\n     * @param {String} [config.label] - the label to display next to the timer\r\n     * @param {Number} [config.remaining = 0] - the remaining time\r\n     * @param {Number|Boolean} [config.warning = false] - to warn the user their is only the specified amount of time left\r\n     * @param {Boolean} [config.running = true] - timer state\r\n     * @returns {timerComponent} the timer component\r\n     * @throws {TypeError} if the config is not correct\r\n     */\r\n    var timerComponentFactory = function timerComponentFactory(config){\r\n        var data;\r\n\r\n        if(!_.isPlainObject(config)){\r\n            throw new TypeError('A timer needs to be configured using a config object');\r\n        }\r\n        if(_.isEmpty(config.id)){\r\n            throw new TypeError('A timer needs and identifier');\r\n        }\r\n        if(!_.contains(timerTypes, config.type)){\r\n            throw new TypeError('Invalid type configured');\r\n        }\r\n\r\n        data = _.defaults(config, {\r\n            label:     '',\r\n            remaining: 0,\r\n            warnings: {},\r\n            running:   true\r\n        });\r\n\r\n        /**\r\n         * @typedef {timerComponent} the component to manage the timer\r\n         */\r\n        return {\r\n\r\n            /**\r\n             * Initialize the component\r\n             * @returns {timerComponent} chains\r\n             */\r\n            init   : function init(){\r\n               this.$element = $(timerTpl(data));\r\n               this.$display = $('.qti-timer_time', this.$element);\r\n               return this;\r\n            },\r\n\r\n            /**\r\n             * Attach the component to the DOM\r\n             * @param {jQueryElement} $container - where to append the component\r\n             * @returns {timerComponent} chains\r\n             */\r\n            render : function render($container){\r\n                $container.append(this.$element);\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Destroy the component\r\n             * @returns {timerComponent} chains\r\n             */\r\n            destroy : function destroy(){\r\n                this.$element.remove();\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Refresh the display\r\n             * @returns {timerComponent} chains\r\n             */\r\n            refresh : function refresh(){\r\n                var self = this;\r\n                var update = function update(){\r\n                    self.$display.text( timeEncoder.encode( data.remaining / precision) );\r\n                };\r\n                if(hasAnimationFrame){\r\n                   window.requestAnimationFrame(update);\r\n                } else {\r\n                    update();\r\n                }\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Warn about time remaining\r\n             * @returns {Object} the warning message and type of popup\r\n             */\r\n            warn : function warn() {\r\n                var remaining,\r\n                    message = {},\r\n                    warning = _.findLast(data.warnings, { showed: false });\r\n\r\n                if (!_.isEmpty(warning)\r\n                    && _.isFinite(warning.point)\r\n                    && data.remaining <= warning.point\r\n                ) {\r\n                    remaining = moment.duration(data.remaining / precision, \"seconds\").humanize();\r\n                    this.$display.removeClass('txt-info txt-warning txt-danger').addClass('txt-' + warning.type);\r\n                    switch (data.type) {\r\n                        case 'assessmentItemRef':\r\n                            message.text = __(\"Warning – You have %s remaining to complete this item.\", remaining);\r\n                            break;\r\n\r\n                        case 'assessmentSection':\r\n                            message.text = __(\"Warning – You have %s remaining to complete this section.\", remaining);\r\n                            break;\r\n\r\n                        case 'testPart':\r\n                            message.text = __(\"Warning – You have %s remaining to complete this test part.\", remaining);\r\n                            break;\r\n\r\n                        case 'assessmentTest':\r\n                            message.text = __(\"Warning – You have %s remaining to complete the test.\", remaining);\r\n                            break;\r\n                    }\r\n\r\n                    var showed = _.find(data.warnings, { point: warning.point });\r\n                    if (showed && showed.point && data.warnings[showed.point / precision]) {\r\n                        data.warnings[showed.point / precision].showed = true;\r\n                    }\r\n\r\n                    message.type = warning.type;\r\n                }\r\n\r\n                return message;\r\n            },\r\n\r\n\r\n            /**\r\n             * Get the timer id\r\n             * @returns {String} the id\r\n             */\r\n            id  : function id(){\r\n                return data.id;\r\n            },\r\n\r\n            /**\r\n             * Get/set the current/remaining value\r\n             * @param {Number} [value] - only as a setter\r\n             * @returns {Number|timerComponent} the value as a getter, or chains as a setter\r\n             */\r\n            val : function val(value){\r\n                if(typeof value !== 'undefined'){\r\n                    data.remaining = value;\r\n                    return this;\r\n                }\r\n                return data.remaining;\r\n            },\r\n\r\n            /**\r\n             * Get/set the running state\r\n             * @param {Boolean} [value] - only as a setter\r\n             * @returns {Boolean|timerComponent} the value as a getter, or chains as a setter\r\n             */\r\n            running : function running(value){\r\n                if(typeof value !== 'undefined'){\r\n                    data.running = !!value;\r\n                    return this;\r\n                }\r\n                return !!data.running;\r\n            }\r\n        };\r\n    };\r\n\r\n    return timerComponentFactory;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/helpers/map',[\r\n    'lodash'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Gets an empty stats record\r\n     * @returns {Object}\r\n     */\r\n    function getEmptyStats() {\r\n        return {\r\n            questions: 0,\r\n            answered: 0,\r\n            flagged: 0,\r\n            viewed: 0,\r\n            total: 0\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Defines a helper that provides extractors for an assessment test map\r\n     */\r\n    return {\r\n        /**\r\n         * Gets the jumps table\r\n         * @param {Object} map - The assessment test map\r\n         * @returns {Object}\r\n         */\r\n        getJumps: function getJumps(map) {\r\n            return map && map.jumps;\r\n        },\r\n\r\n        /**\r\n         * Gets the parts table\r\n         * @param {Object} map - The assessment test map\r\n         * @returns {Object}\r\n         */\r\n        getParts: function getParts(map) {\r\n            return map && map.parts;\r\n        },\r\n\r\n        /**\r\n         * Gets the jump at a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The position of the item\r\n         * @returns {Object}\r\n         */\r\n        getJump: function getJump(map, position) {\r\n            var jumps = this.getJumps(map);\r\n            return jumps && jumps[position];\r\n        },\r\n\r\n        /**\r\n         * Gets a test part by its identifier\r\n         * @param {Object} map - The assessment test map\r\n         * @param {String} partName - The identifier of the test part\r\n         * @returns {Object}\r\n         */\r\n        getPart: function getPart(map, partName) {\r\n            var parts = this.getParts(map);\r\n            return parts && parts[partName];\r\n        },\r\n\r\n        /**\r\n         * Gets a test section by its identifier\r\n         * @param {Object} map - The assessment test map\r\n         * @param {String} sectionName - The identifier of the test section\r\n         * @returns {Object}\r\n         */\r\n        getSection: function getSection(map, sectionName) {\r\n            var parts = this.getParts(map);\r\n            var section = null;\r\n            _.forEach(parts, function (part) {\r\n                var sections = part.sections;\r\n                if (sections && sections[sectionName]) {\r\n                    section = sections[sectionName];\r\n                    return false;\r\n                }\r\n            });\r\n            return section;\r\n        },\r\n\r\n        /**\r\n         * Gets a test item by its identifier\r\n         * @param {Object} map - The assessment test map\r\n         * @param {String} itemName - The identifier of the test item\r\n         * @returns {Object}\r\n         */\r\n        getItem: function getItem(map, itemName) {\r\n            var jump = _.find(this.getJumps(map), {identifier: itemName});\r\n            return this.getItemAt(map, jump && jump.position);\r\n        },\r\n\r\n        /**\r\n         * Gets the global stats of the assessment test\r\n         * @param {Object} map - The assessment test map\r\n         * @returns {Object}\r\n         */\r\n        getTestStats: function getTestStats(map) {\r\n            return map && map.stats;\r\n        },\r\n\r\n        /**\r\n         * Gets the stats of the test part containing a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {String} partName - The identifier of the test part\r\n         * @returns {Object}\r\n         */\r\n        getPartStats: function getPartStats(map, partName) {\r\n            var part = this.getPart(map, partName);\r\n            return part && part.stats;\r\n        },\r\n\r\n        /**\r\n         * Gets the stats of the test section containing a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {String} sectionName - The identifier of the test section\r\n         * @returns {Object}\r\n         */\r\n        getSectionStats: function getSectionStats(map, sectionName) {\r\n            var section = this.getSection(map, sectionName);\r\n            return section && section.stats;\r\n        },\r\n\r\n        /**\r\n         * Gets the stats related to a particular scope\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The current position\r\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\r\n         * @returns {Object}\r\n         */\r\n        getScopeStats: function getScopeStats(map, position, scope) {\r\n            var jump = this.getJump(map, position);\r\n\r\n            switch (scope) {\r\n                case 'section':\r\n                case 'testSection':\r\n                    return this.getSectionStats(map, jump && jump.section);\r\n\r\n                case 'part':\r\n                case 'testPart':\r\n                    return this.getPartStats(map, jump && jump.part);\r\n\r\n                default:\r\n                case 'test':\r\n                    return this.getTestStats(map);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the map of a particular scope from a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The current position\r\n         * @param {String} [scope] - The name of the scope. Can be: test, part, section (default: test)\r\n         * @returns {object} The scoped map\r\n         */\r\n        getScopeMap: function getScopeMap(map, position, scope) {\r\n            // need a clone of the map as we will change some properties\r\n            var scopeMap = _.cloneDeep(map || {});\r\n\r\n            // gets the current part and section\r\n            var jump = this.getJump(map, position);\r\n            var part = this.getPart(scopeMap, jump && jump.part);\r\n            var section = this.getSection(scopeMap, jump && jump.section);\r\n\r\n            // reduce the map to the scope part\r\n            if (scope && scope !== 'test') {\r\n                scopeMap.parts = {};\r\n                if (part) {\r\n                    scopeMap.parts[jump.part] = part;\r\n                }\r\n            }\r\n\r\n            // reduce the map to the scope section\r\n            if (part && (scope === 'section' || scope === 'testSection')) {\r\n                part.sections = {};\r\n                if (section) {\r\n                    part.sections[jump.section] = section;\r\n                }\r\n            }\r\n\r\n            // update the stats to reflect the scope\r\n            if (section) {\r\n                section.stats = this.computeItemStats(section.items);\r\n            }\r\n            if (part) {\r\n                part.stats = this.computeStats(part.sections);\r\n            }\r\n            scopeMap.stats = this.computeStats(scopeMap.parts);\r\n\r\n            return scopeMap;\r\n        },\r\n\r\n        /**\r\n         * Gets the test part containing a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The position of the item\r\n         * @returns {Object}\r\n         */\r\n        getItemPart: function getItemPart(map, position) {\r\n            var jump = this.getJump(map, position);\r\n            return this.getPart(map, jump && jump.part);\r\n        },\r\n\r\n        /**\r\n         * Gets the test section containing a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The position of the item\r\n         * @returns {Object}\r\n         */\r\n        getItemSection: function getItemSection(map, position) {\r\n            var jump = this.getJump(map, position);\r\n            var part = this.getPart(map, jump && jump.part);\r\n            var sections = part && part.sections;\r\n            return sections && sections[jump && jump.section];\r\n        },\r\n\r\n        /**\r\n         * Gets the item located at a particular position\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The position of the item\r\n         * @returns {Object}\r\n         */\r\n        getItemAt: function getItemAt(map, position) {\r\n            var jump = this.getJump(map, position);\r\n            var part = this.getPart(map, jump && jump.part);\r\n            var sections = part && part.sections;\r\n            var section = sections && sections[jump && jump.section];\r\n            var items = section && section.items;\r\n            return items && items[jump && jump.identifier];\r\n        },\r\n\r\n        /**\r\n         * Applies a callback on each item of the provided map\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Function} callback(item, section, part, map) - A callback to apply on each item\r\n         * @returns {Object}\r\n         */\r\n        each: function each(map, callback) {\r\n            if (_.isFunction(callback)) {\r\n                _.forEach(map && map.parts, function(part) {\r\n                    _.forEach(part && part.sections, function(section) {\r\n                        _.forEach(section && section.items, function(item) {\r\n                            callback(item, section, part, map);\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            return map;\r\n        },\r\n\r\n        /**\r\n         * Update the map stats from a particular item\r\n         * @param {Object} map - The assessment test map\r\n         * @param {Number} position - The position of the item\r\n         * @returns {Object}\r\n         */\r\n        updateItemStats: function updateItemStats(map, position) {\r\n            var jump = this.getJump(map, position);\r\n            var part = this.getPart(map, jump && jump.part);\r\n            var sections = part && part.sections;\r\n            var section = sections && sections[jump && jump.section];\r\n\r\n            if (section) {\r\n                section.stats = this.computeItemStats(section.items);\r\n            }\r\n            if (part) {\r\n                part.stats = this.computeStats(part.sections);\r\n            }\r\n            if (map) {\r\n                map.stats = this.computeStats(map.parts);\r\n            }\r\n\r\n            return map;\r\n        },\r\n\r\n        /**\r\n         * Computes the stats for a list of items\r\n         * @param {Object} items\r\n         * @returns {Object}\r\n         */\r\n        computeItemStats: function computeItemStats(items) {\r\n            return _.reduce(items, function accStats(acc, item) {\r\n                if (!item.informational) {\r\n                    acc.questions++;\r\n                }\r\n                if (item.answered) {\r\n                    acc.answered++;\r\n                }\r\n                if (item.flagged) {\r\n                    acc.flagged++;\r\n                }\r\n                if (item.viewed) {\r\n                    acc.viewed++;\r\n                }\r\n                acc.total++;\r\n                return acc;\r\n            }, getEmptyStats());\r\n        },\r\n\r\n        /**\r\n         * Computes the global stats of a collection of stats\r\n         * @param {Object} collection\r\n         * @returns {Object}\r\n         */\r\n        computeStats: function computeStats(collection) {\r\n            return _.reduce(collection, function accStats(acc, item) {\r\n                acc.questions += item.stats.questions;\r\n                acc.answered += item.stats.answered;\r\n                acc.flagged += item.stats.flagged;\r\n                acc.viewed += item.stats.viewed;\r\n                acc.total += item.stats.total;\r\n                return acc;\r\n            }, getEmptyStats());\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * This helper provides information about the current item\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/helpers/currentItem',[\r\n    'lodash'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * List of QTI model cardinalities\r\n     * @type {Object}\r\n     */\r\n    var responseCardinalities = {\r\n        single: 'base',\r\n        multiple: 'list',\r\n        ordered: 'list',\r\n        record: 'record'\r\n    };\r\n\r\n    /**\r\n     * @typedef {currentItemHelper}\r\n     */\r\n    var currentItemHelper = {\r\n        /**\r\n         * Gets the responses declarations of the current item.\r\n         * @param {Object} runner - testRunner instance\r\n         * @returns {Object}\r\n         */\r\n        getDeclarations: function getDeclarations(runner) {\r\n            var itemRunner = runner.itemRunner;\r\n            return itemRunner._item && itemRunner._item.responses;\r\n        },\r\n\r\n        /**\r\n         * Gets a response declaration by the identifier of the response\r\n         * @param {Object} runner - testRunner instance\r\n         * @param {String} identifier - The identifier of the response\r\n         * @returns {Object|null}\r\n         */\r\n        getResponseDeclaration: function getResponseDeclaration(runner, identifier) {\r\n            var found = null;\r\n            _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\r\n                var attributes = declaration.attributes || {};\r\n                if (attributes.identifier === identifier) {\r\n                    found = declaration;\r\n                    return false;\r\n                }\r\n            });\r\n            return found;\r\n        },\r\n\r\n        /**\r\n         * Convert a value to a response object\r\n         * @param {Array|String} value\r\n         * @param {String} baseType\r\n         * @param {String} cardinality\r\n         * @returns {Object}\r\n         */\r\n        toResponse: function toResponse(value, baseType, cardinality) {\r\n            var mappedCardinality = responseCardinalities[cardinality];\r\n            var response = {};\r\n\r\n            if (_.isString(value)) {\r\n                value = [value];\r\n            }\r\n\r\n            value = _.map(value || [], function (v) {\r\n                return (baseType === 'boolean') ? (v === true || v === 'true') : v;\r\n            });\r\n\r\n            if (mappedCardinality) {\r\n                if (mappedCardinality === 'base') {\r\n                    if (value.length === 0) {\r\n                        //return empty response:\r\n                        response.base = null;\r\n                    } else {\r\n                        response.base = {};\r\n                        response.base[baseType] = value[0];\r\n                    }\r\n                } else {\r\n                    response[mappedCardinality] = {};\r\n                    response[mappedCardinality][baseType] = value;\r\n                }\r\n            }\r\n\r\n            return response;\r\n        },\r\n\r\n        /**\r\n         * Checks if the provided value can be considered as null\r\n         * @param {Object} value\r\n         * @param {String} baseType\r\n         * @param {String} cardinality\r\n         * @returns {boolean}\r\n         */\r\n        isQtiValueNull: function isQtiValueNull(value, baseType, cardinality) {\r\n            var mappedCardinality = responseCardinalities[cardinality];\r\n            if (_.isObject(value) && value[mappedCardinality] && 'undefined' !== typeof value[mappedCardinality][baseType]) {\r\n                value = value[mappedCardinality][baseType];\r\n            }\r\n            return null === value || ('string' === baseType && _.isEmpty(value)) || (cardinality !== 'single' && _.isEmpty(value));\r\n        },\r\n\r\n        /**\r\n         * Tells if an item question has been answered or not\r\n         * @param response\r\n         * @param baseType\r\n         * @param cardinality\r\n         * @param [defaultValue]\r\n         * @returns {*}\r\n         */\r\n        isQuestionAnswered: function isQuestionAnswered(response, baseType, cardinality, defaultValue) {\r\n            var answered;\r\n            defaultValue = defaultValue || null;\r\n            if (currentItemHelper.isQtiValueNull(response, baseType, cardinality)) {\r\n                answered = !currentItemHelper.isQtiValueNull(defaultValue, baseType, cardinality);\r\n            } else {\r\n                answered = !_.isEqual(response, currentItemHelper.toResponse(defaultValue, baseType, cardinality));\r\n            }\r\n            return answered;\r\n        },\r\n\r\n        /**\r\n         * Tells is the current item has been answered or not\r\n         * The item is considered answered when at least one response has been set to not empty {base : null}\r\n         * @param {Object} runner - testRunner instance\r\n         * @returns {Boolean}\r\n         */\r\n        isAnswered: function isAnswered(runner) {\r\n            var itemRunner = runner.itemRunner;\r\n            var responses = itemRunner && itemRunner.getResponses();\r\n            var count = 0;\r\n            var empty = 0;\r\n\r\n            if (itemRunner) {\r\n                _.forEach(currentItemHelper.getDeclarations(runner), function (declaration) {\r\n                    var attributes = declaration.attributes || {};\r\n                    var response = responses[attributes.identifier];\r\n                    var baseType = attributes.baseType;\r\n                    var cardinality = attributes.cardinality;\r\n\r\n                    count++;\r\n                    if (!currentItemHelper.isQuestionAnswered(response, baseType, cardinality, declaration.defaultValue)) {\r\n                        empty++;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return count !== 0 && empty !== count;\r\n        }\r\n    };\r\n\r\n    return currentItemHelper;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * This helper provides more statistics about the test\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/helpers/stats',[\r\n    'lodash',\r\n    'taoQtiTest/runner/helpers/map',\r\n    'taoQtiTest/runner/helpers/currentItem'\r\n], function (_, mapHelper, currentItemHelper) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Return scope stats that takes into account any test taker interaction made since the item has been loaded\r\n     * @param {String} scope - scope to consider for calculating the stats\r\n     * @param {Object} runner - testRunner instance\r\n     * @returns {Object}\r\n     */\r\n    function getInstantStats(scope, runner) {\r\n        var map = runner.getTestMap(),\r\n            context = runner.getTestContext(),\r\n            stats = _.clone(mapHelper.getScopeStats(map, context.itemPosition, scope)),\r\n\r\n            isItemCurrentlyAnswered = currentItemHelper.isAnswered(runner);\r\n\r\n        if (isItemCurrentlyAnswered){\r\n            if (!isItemCurrentlyAnswered && context.itemAnswered) {\r\n                stats.answered--;\r\n            }\r\n\r\n            if (isItemCurrentlyAnswered && !context.itemAnswered) {\r\n                stats.answered++;\r\n            }\r\n        }\r\n        return stats;\r\n    }\r\n\r\n    return {\r\n        getInstantStats: getInstantStats\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/helpers/messages',[\r\n    'i18n',\r\n    'taoQtiTest/runner/helpers/map',\r\n    'taoQtiTest/runner/helpers/stats'\r\n], function (__, mapHelper, statsHelper) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Completes an exit message\r\n     * @param {String} message - custom message that will be appended to the unanswered stats count\r\n     * @param {String} scope - scope to consider for calculating the stats\r\n     * @param {Object} runner - testRunner instance\r\n     * @returns {String} Returns the message text\r\n     */\r\n    function getExitMessage(message, scope, runner) {\r\n        var stats = statsHelper.getInstantStats(scope, runner),\r\n            unansweredCount = stats && (stats.questions - stats.answered),\r\n            flaggedCount = stats && stats.flagged,\r\n            itemsCountMessage = '';\r\n\r\n        var testData = runner.getTestData(),\r\n            testConfig = testData && testData.config,\r\n            messageEnabled = testConfig ? testConfig.enableUnansweredItemsWarning : true;\r\n\r\n        if (messageEnabled) {\r\n            if (flaggedCount && unansweredCount) {\r\n                itemsCountMessage = __('You have %s unanswered question(s) and have %s item(s) marked for review.',\r\n                    unansweredCount.toString(),\r\n                    flaggedCount.toString()\r\n                );\r\n\r\n            } else if (flaggedCount) {\r\n                itemsCountMessage = __('You have %s item(s) marked for review.', flaggedCount.toString());\r\n\r\n            } else if (unansweredCount) {\r\n                itemsCountMessage = __('You have %s unanswered question(s).', unansweredCount.toString());\r\n            }\r\n        }\r\n        return (itemsCountMessage + ' ' + message).trim();\r\n    }\r\n\r\n    return {\r\n        getExitMessage: getExitMessage\r\n    };\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/timer/timers', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"timer-box\\\"></div>\\r\\n\";\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Control Plugin : Timer\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/timer/timer',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'core/promise',\r\n    'core/polling',\r\n    'core/timer',\r\n    'core/store',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/plugins/controls/timer/timerComponent',\r\n    'taoQtiTest/runner/helpers/messages',\r\n    'tpl!taoQtiTest/runner/plugins/controls/timer/timers'\r\n], function($, _, __, Promise, pollingFactory, timerFactory, store, hider, pluginFactory, timerComponentFactory, messages, timerBoxTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Time interval between timer refreshes, in milliseconds\r\n     * @type {Number}\r\n     */\r\n    var timerRefresh = 1000;\r\n\r\n    /**\r\n     * Duration of a second in the timer's base unit\r\n     * @type {Number}\r\n     */\r\n    var precision = 1000;\r\n\r\n    /**\r\n     * The message to display when exiting\r\n     */\r\n    var exitMessage = __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?');\r\n\r\n\r\n    var timerTypes = {\r\n        test: 'assessmentTest',\r\n        testPart: 'testPart',\r\n        section: 'assessmentSection',\r\n        item: 'assessmentItemRef'\r\n    };\r\n\r\n    /**\r\n     * Are we in a timed section\r\n     * @param {Object} context - the current test context\r\n     * @returns {Boolean}\r\n     */\r\n    var isTimedSection = function isTimedSection(context) {\r\n        var timeConstraints = context.timeConstraints || [];\r\n        return _.some(timeConstraints, function(constraint) {\r\n            return constraint.qtiClassName === 'assessmentSection';\r\n        });\r\n    };\r\n\r\n\r\n    /**\r\n     * Creates the timer plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'timer',\r\n\r\n        /**\r\n         * Installation of the plugin (called before init)\r\n         */\r\n        install: function install() {\r\n            var self = this;\r\n            //the storechange event is fired early (before runner's init is done)\r\n            //so we attach the handler early\r\n            var testRunner = this.getTestRunner();\r\n            testRunner.on('storechange', function handleStoreChange() {\r\n                self.shouldClearStorage = true;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n\r\n            var self         = this;\r\n            var testRunner   = this.getTestRunner();\r\n            var testData     = testRunner.getTestData() || {};\r\n            var itemStates   = testData.itemStates || {};\r\n            var timerWarning = testData.config && testData.config.timerWarning || {};\r\n\r\n            var displayedTimers = {};\r\n            var timers = {};\r\n\r\n            var extraTime = 0;\r\n            var consumedExtraTime = 0;\r\n            var lastConsumedExtraTime = 0;\r\n\r\n            /**\r\n             * Gets the remaining extra time, if any\r\n             * @returns {Number} the remaining extra time in milliseconds\r\n             */\r\n            var getRemainingExtraTime = function getRemainingExtraTime() {\r\n                return Math.max(0, extraTime - consumedExtraTime) * precision;\r\n            };\r\n\r\n            /**\r\n             * Sets correctly the remaining time on a timer config set\r\n             * @param {Object} timerConfig\r\n             * @param {Number} remaining\r\n             * @returns {Object}\r\n             */\r\n            var setRemainingTime = function setRemainingTime(timerConfig, remaining) {\r\n                // will display the timer with extra time, if any\r\n                timerConfig.remaining = remaining + getRemainingExtraTime();\r\n\r\n                // keep track of the regular timer, without extra time\r\n                timerConfig.regular = remaining;\r\n\r\n                return timerConfig;\r\n            };\r\n\r\n            /**\r\n             * Load the configuration of a timer from the current context\r\n             * @param {String} type - the timer type/qtiClass\r\n             * @returns {Object} the timer config if there's one for the given type\r\n             */\r\n            var getTimerConfig = function getTimerConfig(type) {\r\n                var timeConstraint;\r\n                var timer;\r\n                var closestPreviousWarning;\r\n                var context = testRunner.getTestContext();\r\n\r\n                // get the config of each timer\r\n                if (!context.isTimeout && context.itemSessionState === itemStates.interacting) {\r\n                    timeConstraint = _.findLast(context.timeConstraints, {\r\n                        qtiClassName: type\r\n                    });\r\n                    if (timeConstraint) {\r\n                        timer = setRemainingTime({\r\n                            label: timeConstraint.label,\r\n                            type: timeConstraint.qtiClassName,\r\n                            id: timeConstraint.source,\r\n                            running: true,\r\n                            warnings: {}\r\n                        }, timeConstraint.seconds * precision);\r\n\r\n                        _(timerWarning[timeConstraint.qtiClassName]).forEach(function(value, key) {\r\n                            if (_.contains(['info', 'warning', 'danger'], value)) {\r\n                                timer.warnings[key] = {\r\n                                    type: value,\r\n                                    showed: timer.remaining / precision <= key,\r\n                                    point: parseInt(key, 10) * precision\r\n                                };\r\n                            }\r\n                        });\r\n\r\n                        closestPreviousWarning = _.find(timer.warnings, {\r\n                            showed: true\r\n                        });\r\n                        if (!_.isEmpty(closestPreviousWarning) && closestPreviousWarning.point && timer.warnings[closestPreviousWarning.point / precision]) {\r\n                            timer.warnings[closestPreviousWarning.point / precision].showed = false;\r\n                        }\r\n                    }\r\n                }\r\n                return timer;\r\n            };\r\n\r\n            //TODO this kind of function is generic enough to be moved to a util/helper\r\n            var leaveTimedSection = function leaveTimedSection(type, scope, position) {\r\n                var context = testRunner.getTestContext();\r\n                var map = testRunner.getTestMap();\r\n\r\n                var section = map.parts[context.testPartId].sections[context.sectionId];\r\n                var nbItems = _.size(section.items);\r\n                var item = _.find(section.items, {\r\n                    position: context.itemPosition\r\n                });\r\n\r\n                if (!context.isTimeout && context.itemSessionState !== itemStates.closed && isTimedSection(context) && item) {\r\n\r\n                    return !!((type === 'next' && (scope === 'assessmentSection' || ((item.positionInSection + 1) === nbItems))) ||\r\n                        (type === 'previous' && item.positionInSection === 0) ||\r\n                        (type === 'jump' && position > 0 && (position < section.position || position >= section.position + nbItems)));\r\n\r\n                }\r\n                return false;\r\n            };\r\n\r\n            /**\r\n             * Remove a timer from the current ones\r\n             * @param {String} type - the timer type to remove\r\n             */\r\n            var removeTimer = function removeTimer(type) {\r\n                if (displayedTimers[type]) {\r\n                    self.storage.removeItem(displayedTimers[type].id());\r\n\r\n                    displayedTimers[type].destroy();\r\n                    displayedTimers = _.omit(displayedTimers, type);\r\n                    timers = _.omit(timers, type);\r\n\r\n                    /**\r\n                     * @event timerPlugin#removetimer\r\n                     * @param {String} type of timer (such as 'assessmentSection', 'testPart' etc.)\r\n                     */\r\n                    self.trigger('removetimer', type);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Add and initialize a timer of the given type\r\n             * @param {Object} config - the timer config\r\n             * @param {String} type - the timer type to remove\r\n             */\r\n            var addTimer = function addTimer(type, config) {\r\n                if (config) {\r\n                    // track the regular remaining timer, without the extra time\r\n                    timers[type] = config.regular;\r\n\r\n                    // creates the component that will display the final timer\r\n                    displayedTimers[type] = timerComponentFactory(config);\r\n                    displayedTimers[type]\r\n                        .init()\r\n                        .render(self.$element);\r\n\r\n                    /**\r\n                     * @event timerPlugin#addtimer\r\n                     * @param {String} type of timer (such as 'assessmentSection', 'testPart' etc.)\r\n                     * @param {Object} timer instance ('core/timer' timer factory).\r\n                     */\r\n                    self.trigger('addtimer', type, displayedTimers[type]);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Update the timers.\r\n             * It will remove, let, add or update the current timers based on the current context.\r\n             */\r\n            var updateTimers = function updateTimers(checkStorage) {\r\n                var timerUpdatePromises = [];\r\n                var context = testRunner.getTestContext();\r\n                if (context.extraTime) {\r\n                    extraTime = context.extraTime.total;\r\n                    consumedExtraTime = Math.max(consumedExtraTime, context.extraTime.consumed);\r\n                }\r\n\r\n                _.forEach(timerTypes, function(type) {\r\n                    timerUpdatePromises.push(\r\n                        new Promise(function(resolve) {\r\n                            var timerConfig = getTimerConfig(type);\r\n\r\n                            if (displayedTimers[type]) {\r\n                                if (!timerConfig) {\r\n                                    removeTimer(type);\r\n                                } else if (displayedTimers[type].id() !== timerConfig.id) {\r\n                                    removeTimer(type);\r\n                                    addTimer(type, timerConfig);\r\n                                } else {\r\n                                    setRemainingTime(timerConfig, timers[type]);\r\n                                    displayedTimers[type].val(timerConfig.remaining);\r\n                                }\r\n                                return resolve();\r\n                            } else if (timerConfig) {\r\n\r\n                                if (checkStorage) {\r\n                                    //check for the last value in the storage\r\n                                    self.storage.getItem(timerConfig.id).then(function(savedTime) {\r\n                                        if (_.isNumber(savedTime) && savedTime >= 0) {\r\n                                            setRemainingTime(timerConfig, savedTime);\r\n                                        }\r\n                                        addTimer(type, timerConfig);\r\n                                        return resolve();\r\n                                    }).catch(function() {\r\n                                        //add the timer even if the storage doesn't work\r\n                                        addTimer(type, timerConfig);\r\n                                        return resolve();\r\n                                    });\r\n                                } else {\r\n                                    addTimer(type, timerConfig);\r\n                                    return resolve();\r\n                                }\r\n                            } else {\r\n                                return resolve();\r\n                            }\r\n                        })\r\n                    );\r\n                });\r\n                return Promise.all(timerUpdatePromises);\r\n            };\r\n\r\n            /**\r\n             * Secured call to enable\r\n             */\r\n            function doEnable() {\r\n                if (!self.getState('enabled')) {\r\n                    self.enable();\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Secured call to disable\r\n             */\r\n            function doDisable() {\r\n                if (self.getState('enabled')) {\r\n                    self.disable();\r\n                }\r\n            }\r\n\r\n            return store('timer-' + testRunner.getConfig().serviceCallId)\r\n                .then(function(timeStore) {\r\n                    if (self.shouldClearStorage) {\r\n                        return timeStore.clear().then(function() {\r\n                            return timeStore;\r\n                        });\r\n                    }\r\n                    return Promise.resolve(timeStore);\r\n                }).then(function(timeStore) {\r\n\r\n                    //the timer's storage\r\n                    self.storage = timeStore;\r\n\r\n                    //the element that'll contain the timers\r\n                    self.$element = $(timerBoxTpl());\r\n\r\n                    //one stopwatch to count the time\r\n                    self.stopwatch = timerFactory({\r\n                        autoStart: false\r\n                    });\r\n\r\n                    //update the timers at regular intervals\r\n                    self.polling = pollingFactory({\r\n\r\n                        /**\r\n                         * The polling action consists in updating each timers,\r\n                         * checking timeout and warnings\r\n                         */\r\n                        action: function updateTime() {\r\n\r\n                            //how many time elapsed from the last tick ?\r\n                            var elapsed = self.stopwatch.tick();\r\n                            var elapsedExtraTime = 0;\r\n                            var timeout = false;\r\n                            var timeoutScope, timeoutRef;\r\n\r\n                            _.forEach(displayedTimers, function(timer, type) {\r\n                                var regularVal,\r\n                                    displayedVal,\r\n                                    warning;\r\n                                var runTimeout = function runTimeout() {\r\n                                    testRunner.timeout(timeoutScope, timeoutRef);\r\n                                };\r\n\r\n                                if (timer.running()) {\r\n                                    regularVal = timers[type] - elapsed;\r\n                                    displayedVal = timer.val() - elapsed;\r\n                                    timers[type] = Math.max(regularVal, 0);\r\n                                    timer\r\n                                        .val(Math.max(displayedVal, 0))\r\n                                        .refresh();\r\n\r\n                                    if (regularVal <= 0) {\r\n                                        // compute the actual consumed extra time for this period\r\n                                        elapsedExtraTime = Math.max(elapsedExtraTime, Math.abs(regularVal));\r\n                                    }\r\n\r\n                                    if (displayedVal <= 0) {\r\n                                        timer.running(false);\r\n                                        timeout = true;\r\n                                        timeoutRef = timer.id();\r\n                                        timeoutScope = type;\r\n\r\n                                        self.storage.setItem(timer.id(), 0)\r\n                                            .then(runTimeout)\r\n                                            .catch(runTimeout);\r\n\r\n                                    } else {\r\n                                        self.storage.setItem(timer.id(), timers[type]);\r\n                                        warning = timer.warn();\r\n                                        if (!_.isEmpty(warning)) {\r\n                                            testRunner.trigger(warning.type, warning.text);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            if (elapsedExtraTime) {\r\n                                consumedExtraTime += elapsedExtraTime / precision;\r\n                                lastConsumedExtraTime += elapsedExtraTime;\r\n                            }\r\n                            if (timeout) {\r\n                                self.disable();\r\n                            }\r\n                        },\r\n                        interval: timerRefresh,\r\n                        autoStart: false\r\n                    });\r\n\r\n                    //change plugin state\r\n                    testRunner\r\n                        .before('renderitem resumeitem', function() {\r\n                            return updateTimers(true);\r\n                        })\r\n                        .on('enableitem', doEnable)\r\n                        .on('disableitem disconnect', doDisable)\r\n                        .after('renderitem', doEnable)\r\n                        .before('move', function(e, type, scope, position) {\r\n                            var context = testRunner.getTestContext();\r\n                            var testData = testRunner.getTestData();\r\n                            var config = testData && testData.config;\r\n                            var timerConfig = config && config.timer || {};\r\n                            var options = context && context.options || {};\r\n\r\n                            var movePromise = new Promise(function(resolve, reject) {\r\n                                // endTestWarning has already been displayed, so we don't repeat the warning\r\n                                if (context.isLast && options.endTestWarning) {\r\n                                    resolve();\r\n                                    // display a message if we exit a timed section\r\n                                } else if (leaveTimedSection(type, scope, position) && !options.noExitTimedSectionWarning && !timerConfig.keepUpToTimeout) {\r\n                                    testRunner.trigger('confirm.exittimed', messages.getExitMessage(exitMessage, 'section', testRunner), resolve, reject);\r\n                                } else {\r\n                                    resolve();\r\n                                }\r\n                            });\r\n\r\n                            movePromise\r\n                                .then(function doMove() {\r\n                                    //pause the timers when moving\r\n                                    doDisable();\r\n                                    removeTimer(timerTypes.item);\r\n                                })\r\n                                .catch(function cancelMove() {\r\n                                    // Use `defer` to be sure the timer resume will occur after the move event is\r\n                                    // finished to be handled. Otherwise, the duration plugin will be frozen and\r\n                                    // the additional time will not be taken into account!\r\n                                    _.defer(function() {\r\n                                        testRunner.trigger('enableitem enablenav');\r\n                                    });\r\n                                });\r\n\r\n                            return movePromise;\r\n                        })\r\n                        .before('move skip exit timeout', function() {\r\n                            testRunner.getProxy().addCallActionParams({\r\n                                consumedExtraTime: lastConsumedExtraTime / precision\r\n                            });\r\n                            lastConsumedExtraTime = 0;\r\n                        })\r\n                        .before('finish', function() {\r\n                            return new Promise(function(resolve) {\r\n                                self.storage.removeStore()\r\n                                    .then(resolve)\r\n                                    .catch(resolve);\r\n                            });\r\n                        });\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render: function render() {\r\n            var $container = this.getAreaBroker().getControlArea();\r\n            $container.append(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            this.polling.stop();\r\n            this.stopwatch.stop();\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enables the timers\r\n         */\r\n        enable: function enable() {\r\n            this.polling.start();\r\n            this.stopwatch.resume();\r\n        },\r\n\r\n        /**\r\n         * Disables the timers\r\n         */\r\n        disable: function disable() {\r\n            this.polling.stop();\r\n            this.stopwatch.pause();\r\n        },\r\n\r\n        /**\r\n         * Shows the timers\r\n         */\r\n        show: function show() {\r\n            hider.show(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Hides the timers\r\n         */\r\n        hide: function hide() {\r\n            hider.hide(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/controls/title/title', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n        <span data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"qti-controls\\\" title=\\\"\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  stack1 = helpers.unless.call(depth0, (data == null || data === false ? data : data.first), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" - \";\n  }\n\n  buffer += \"<div class=\\\"title-box truncate\\\">\\r\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.titles), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Control Plugin : Title\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/title/title',[\r\n    'jquery',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'tpl!taoQtiTest/runner/plugins/controls/title/title'\r\n], function ($, __, pluginFactory, titleTpl){\r\n    'use strict';\r\n\r\n    return pluginFactory({\r\n        name : 'title',\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var testData   = testRunner.getTestData();\r\n\r\n            var createElement = function(){\r\n\r\n                var context  = testRunner.getTestContext();\r\n                var titles =  [{\r\n                    control : 'qti-test-title',\r\n                    text    : testData.title\r\n                }];\r\n               if(context.isDeepestSectionVisible){\r\n                    titles.push({\r\n                        control : 'qti-test-position',  //WTF !? isn't it the section title... ?\r\n                        text    : context.sectionTitle\r\n                    });\r\n                }\r\n\r\n                return $(titleTpl({ titles : titles }));\r\n            };\r\n\r\n            this.$element = createElement();\r\n\r\n\r\n            testRunner\r\n                .after('renderitem', function(){\r\n                    var $element = createElement();\r\n                    self.$element.replaceWith($element);\r\n                    self.$element = $element;\r\n                });\r\n\r\n        },\r\n        render : function render(){\r\n            var $container = this.getAreaBroker().getControlArea();\r\n            $container.append(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * Test Runner Control Plugin : Item Trace Variables\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/controls/trace/itemTraceVariables',[\r\n    'lodash',\r\n    'moment',\r\n    'core/store',\r\n    'taoTests/runner/plugin'\r\n], function (_, moment, storeFactory, pluginFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Duration of a second in the timer's base unit\r\n     * @type {Number}\r\n     */\r\n    var precision = 1000;\r\n\r\n    /**\r\n     * Gets the current timestamp\r\n     * @returns {Number}\r\n     */\r\n    function timestamp() {\r\n        return Date.now() / precision;\r\n    }\r\n\r\n    /**\r\n     * Creates the timer plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'itemTraceVariables',\r\n\r\n        /**\r\n         * Installation of the plugin (called before init)\r\n         */\r\n        install: function install() {\r\n            var self = this;\r\n            self.getTestRunner().on('storechange', function () {\r\n                self.shouldClearStorage = true;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var variables = {};\r\n\r\n            function onError(err) {\r\n                testRunner.trigger('error', err);\r\n            }\r\n\r\n            return storeFactory('trace-' + testRunner.getConfig().serviceCallId)\r\n                .then(function (tracesStore) {\r\n                    if (self.shouldClearStorage) {\r\n                        return tracesStore.clear().then(function () {\r\n                            return tracesStore;\r\n                        });\r\n                    }\r\n                    return tracesStore;\r\n                }).then(function (tracesStore) {\r\n                    testRunner\r\n                        .after('renderitem enableitem', function () {\r\n                            var context = testRunner.getTestContext();\r\n\r\n                            variables = {\r\n                                ITEM_START_TIME_CLIENT: timestamp()\r\n                            };\r\n\r\n                            tracesStore.getItem(context.itemUri)\r\n                                .then(function (data) {\r\n                                    if (data) {\r\n                                        _.merge(variables, data);\r\n                                    }\r\n\r\n                                    return tracesStore.setItem(context.itemUri, variables);\r\n                                })\r\n                                .catch(onError);\r\n                        })\r\n\r\n                        .before('move skip exit timeout', function () {\r\n                            var context = testRunner.getTestContext();\r\n\r\n                            variables.ITEM_END_TIME_CLIENT = timestamp();\r\n                            variables.ITEM_TIMEZONE = moment().utcOffset(moment().utcOffset()).format('Z');\r\n\r\n                            return tracesStore.setItem(context.itemUri, variables).catch(onError);\r\n                        })\r\n\r\n                        .before('unloaditem', function () {\r\n                            var context = testRunner.getTestContext();\r\n                            return testRunner.getProxy().callItemAction(context.itemUri, 'storeTraceData', {\r\n                                traceData: JSON.stringify(variables)\r\n                            });\r\n                        })\r\n\r\n                        .before('finish', function () {\r\n                            return new Promise(function (resolve) {\r\n                                tracesStore.removeStore()\r\n                                    .then(resolve)\r\n                                    .catch(resolve);\r\n                            });\r\n                        });\r\n                });\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * This is a helper for navigation plugins. It decides if a warning should be displayed\r\n * before actually moving to the next item\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',[], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert a value to a boolean\r\n     * @param {*} value\r\n     * @param {Boolean} defaultValue\r\n     * @returns {Boolean}\r\n     */\r\n    var toBoolean = function toBoolean(value, defaultValue) {\r\n        if (typeof(value) === \"undefined\") {\r\n            return defaultValue;\r\n        } else {\r\n            return (value === true || value === \"true\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Object} options\r\n     * @param {Boolean} options.endTestWarning - enables the end test warning, when applicable\r\n     * @param {Boolean} options.isLast - if the item is the last of the test\r\n     * @param {Boolean} options.isLinear - if the current part is linear\r\n     * @param {Boolean} options.nextItemWarning - enables the next item warning, when applicable\r\n     * @param {Boolean} options.nextPartWarning - enables the next item warning on part change\r\n     * @param {Boolean} options.stats - current state of the test\r\n     * @param {Object} options.nextPart - description of the next part of the test\r\n     * @param {Number} options.remainingAttempts - remaining attempts for the current item\r\n     * @param {String} options.testPartId - current test part identifier\r\n     * @param {Boolean} options.unansweredOnly - warn only if there are unanswered/flagged items\r\n     * @returns {Object}\r\n     */\r\n    var nextWarningHelper = function nextWarningHelper(options) {\r\n        var endTestWarning      = toBoolean(options.endTestWarning, false),\r\n            isLast              = toBoolean(options.isLast, false),\r\n            isLinear            = toBoolean(options.isLinear, false),\r\n            nextItemWarning     = toBoolean(options.nextItemWarning, false),\r\n            nextPartWarning     = toBoolean(options.nextPartWarning, false),\r\n            stats               = options.stats,\r\n            nextPart            = options.nextPart || {},\r\n            remainingAttempts   = typeof(options.remainingAttempts) === 'undefined' ? -1 : options.remainingAttempts,\r\n            testPartId          = options.testPartId || '',\r\n            unansweredOnly      = toBoolean(options.unansweredOnly, false),\r\n\r\n            warnBeforeNext = shouldWarnBeforeNext(),\r\n            warnBeforeEnd = shouldWarnBeforeEnd();\r\n\r\n        /**\r\n         * Decide if we should display a warning before moving to the next item.\r\n         * This is useful to prevent accidental navigation (for example by pressing a shortcut) that would occur\r\n         * before the test taker actually gets a chance to answer an item\r\n         */\r\n        function shouldWarnBeforeNext() {\r\n            return nextItemWarning\r\n                && !itemCanBeTriedAtWill();\r\n                //&& !exitTimedSectionWarning(); //todo: this should be implemented to prevent a double warning!\r\n        }\r\n\r\n        /**\r\n         * We try to decide if the test taker has the freedom to come back to this item as many times as he wants\r\n         */\r\n        function itemCanBeTriedAtWill() {\r\n            return (\r\n                isLast === false                // the test is not over\r\n                && isLinear === false           // the context is not linear\r\n                && remainingAttempts === -1     // the item doesn't have a configured max attempts number\r\n                && !isNextItemInLinearPart()    // the next item is not in a linear part\r\n            );\r\n        }\r\n\r\n        /**\r\n         * Check if the next item is in a linear part, as this would prevent the test taker to come back to the current item\r\n         */\r\n        function isNextItemInLinearPart() {\r\n            return nextPart && typeof nextPart.isLinear !== 'undefined'\r\n                && isLastOfPart()\r\n                && nextPart.isLinear === true;\r\n        }\r\n\r\n        /**\r\n         * Decide if we should display a warning before ending the test\r\n         */\r\n        function shouldWarnBeforeEnd() {\r\n            return shouldWarnOnTestEnd()\r\n                || shouldWarnOnPartChange();\r\n        }\r\n\r\n        /**\r\n         * Are we on the last test item?\r\n         * @returns {Boolean}\r\n         */\r\n        function shouldWarnOnTestEnd() {\r\n            return isLast\r\n                && (\r\n                    endTestWarning                      // warning is explicitly required by endTestWarning category\r\n                    || warnBeforeNext                   // warning is implicitly triggered by the next item warning being true (prevent double warning)\r\n                )\r\n                && shouldWarnForUnansweredItems();\r\n        }\r\n\r\n        /**\r\n         * Provide the opportunity to cancel the display of the warning if there are no unanswered/flagged item\r\n         * for this to work, the unansweredOnly option has to be set\r\n         * @returns {Boolean}\r\n         */\r\n        function shouldWarnForUnansweredItems() {\r\n            var hasUnanswered = stats && ((stats.questions - stats.answered) !== 0),\r\n                hasFlagged = stats && stats.flagged !== 0;\r\n\r\n            if (unansweredOnly) {\r\n                return (hasUnanswered || hasFlagged);\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Are we on the last part item?\r\n         * @returns {Boolean}\r\n         */\r\n        function shouldWarnOnPartChange() {\r\n            return nextPartWarning\r\n                && isLastOfPart()\r\n                && shouldWarnForUnansweredItems();\r\n        }\r\n\r\n        /**\r\n         * Check if the next item belong to a different part\r\n         * @returns {Boolean}\r\n         */\r\n        function isLastOfPart() {\r\n            return nextPart && nextPart.id\r\n                && testPartId !== nextPart.id;\r\n        }\r\n\r\n        /**\r\n         * The helper object\r\n         */\r\n        return {\r\n            shouldWarnBeforeEnd: function () {\r\n                return warnBeforeEnd;\r\n            },\r\n            shouldWarnBeforeNext: function () {\r\n                return warnBeforeNext;\r\n            }\r\n        };\r\n    };\r\n\r\n    return nextWarningHelper;\r\n\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Navigation Plugin : Next\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/next',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/plugins/navigation/next/nextWarningHelper',\r\n    'taoQtiTest/runner/helpers/messages',\r\n    'taoQtiTest/runner/helpers/map',\r\n    'taoQtiTest/runner/helpers/stats',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'tpl!taoQtiTest/runner/plugins/templates/button'\r\n], function ($, _, __, hider, pluginFactory, nextWarningHelper, messages, mapHelper, statsHelper, shortcut, namespaceHelper, buttonTpl){\r\n    'use strict';\r\n\r\n    /**\r\n     * The display of the next button\r\n     */\r\n    var buttonData = {\r\n        next : {\r\n            control : 'move-forward',\r\n            title   : __('Submit and go to the next item'),\r\n            icon    : 'forward',\r\n            text    : __('Next')\r\n        },\r\n        end : {\r\n            control : 'move-end',\r\n            title   : __('Submit and go to the end of the test'),\r\n            icon    : 'fast-forward',\r\n            text    : __('End test')\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the button based on the current context\r\n     * @param {Object} context - the test context\r\n     * @returns {jQueryElement} the button\r\n     */\r\n    var createElement = function createElement(context){\r\n        var dataType = context.isLast ? 'end' : 'next';\r\n        return $(buttonTpl(buttonData[dataType]));\r\n    };\r\n\r\n    /**\r\n     * Update the button based on the context\r\n     * @param {jQueryElement} $element - the element to update\r\n     * @param {Object} context - the test context\r\n     */\r\n    var updateElement = function updateElement($element, context){\r\n        var dataType = context.isLast ? 'end' : 'next';\r\n        if($element.data('control') !== buttonData[dataType].control){\r\n\r\n            $element.data('control', buttonData[dataType].control)\r\n                    .attr('title', buttonData[dataType].title)\r\n                    .find('.text').text(buttonData[dataType].text);\r\n\r\n            if(dataType === 'next'){\r\n                $element.find('.icon-' + buttonData.end.icon)\r\n                        .removeClass('icon-' + buttonData.end.icon)\r\n                        .addClass('icon-' + buttonData.next.icon);\r\n            } else {\r\n                $element.find('.icon-' + buttonData.next.icon)\r\n                        .removeClass('icon-' + buttonData.next.icon)\r\n                        .addClass('icon-' + buttonData.end.icon);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n        name : 'next',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData();\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n\r\n            //plugin behavior\r\n            /**\r\n             * @param {Boolean} nextItemWarning - enable the display of a warning when going to the next item.\r\n             * Note: the actual display of the warning depends on other conditions (see nextWarningHelper)\r\n             */\r\n            function doNext(nextItemWarning) {\r\n                var context = testRunner.getTestContext(),\r\n                    testOptions = context.options || {};\r\n\r\n                var map = testRunner.getTestMap();\r\n                var nextItemPosition = context.itemPosition + 1;\r\n\r\n                // x-tao-option-unansweredWarning is a deprecated option whose behavior now matches the one of\r\n                // x-tao-option-nextPartWarning with the unansweredOnly option\r\n                var nextPartWarning = testOptions.nextPartWarning || testOptions.unansweredWarning;\r\n                var unansweredOnly =\r\n                    !testOptions.endTestWarning // this check to avoid an edge case where having both endTestWarning\r\n                                                // and unansweredWarning options would prevent endTestWarning to behave normally\r\n                    && testOptions.unansweredWarning;\r\n\r\n                var warningScope = (nextPartWarning) ? 'part' : 'test';\r\n\r\n                var warningHelper = nextWarningHelper({\r\n                    endTestWarning:     testOptions.endTestWarning,\r\n                    isLast:             context.isLast,\r\n                    isLinear:           context.isLinear,\r\n                    nextItemWarning:    nextItemWarning,\r\n                    nextPartWarning:    nextPartWarning,\r\n                    nextPart:           mapHelper.getItemPart(map, nextItemPosition),\r\n                    remainingAttempts:  context.remainingAttempts,\r\n                    testPartId:         context.testPartId,\r\n                    unansweredWarning:  testOptions.unansweredWarning,\r\n                    stats:              statsHelper.getInstantStats(warningScope, testRunner),\r\n                    unansweredOnly:     unansweredOnly\r\n                });\r\n\r\n                function enable() {\r\n                    testRunner.trigger('enablenav enabletools');\r\n                }\r\n\r\n                if(self.getState('enabled') !== false) {\r\n                    testRunner.trigger('disablenav disabletools');\r\n\r\n                    if (warningHelper.shouldWarnBeforeEnd()) {\r\n                        testRunner.trigger(\r\n                            'confirm.endTest',\r\n                            messages.getExitMessage(\r\n                                __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\r\n                                warningScope, testRunner),\r\n                            _.partial(triggerNextAction, context), // if the test taker accept\r\n                            enable  // if the test taker refuse\r\n                        );\r\n\r\n                    } else if (warningHelper.shouldWarnBeforeNext()) {\r\n                        testRunner.trigger(\r\n                            'confirm.next',\r\n                            __('You are about to go to the next item. Click OK to continue and go to the next item.'),\r\n                            _.partial(triggerNextAction, context), // if the test taker accept\r\n                            enable  // if the test taker refuse\r\n                        );\r\n\r\n                    } else {\r\n                        triggerNextAction(context);\r\n                    }\r\n                }\r\n            }\r\n\r\n            function triggerNextAction(context) {\r\n                if(context.isLast){\r\n                    self.trigger('end');\r\n                }\r\n                testRunner.next();\r\n            }\r\n\r\n            //create the button (detached)\r\n            this.$element = createElement(testRunner.getTestContext());\r\n\r\n            //attach behavior\r\n            this.$element.on('click', function(e){\r\n                e.preventDefault();\r\n                testRunner.trigger('nav-next');\r\n            });\r\n\r\n            if(testConfig.allowShortcuts && pluginShortcuts.trigger){\r\n                shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.trigger, this.getName(), true), function(e) {\r\n                    if (self.getState('enabled') === true) {\r\n                        testRunner.trigger('nav-next', true);\r\n                    }\r\n                }, {\r\n                    avoidInput: true,\r\n                    prevent: true\r\n                });\r\n            }\r\n\r\n            //disabled by default\r\n            this.disable();\r\n\r\n            //change plugin state\r\n            testRunner\r\n                .on('loaditem', function(){\r\n                    updateElement(self.$element, testRunner.getTestContext());\r\n                })\r\n                .on('enablenav', function(){\r\n                    self.enable();\r\n                })\r\n                .on('disablenav', function(){\r\n                    self.disable();\r\n                })\r\n                .on('nav-next', function(nextItemWarning) {\r\n                    doNext(nextItemWarning);\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n\r\n            //attach the element to the navigation area\r\n            var $container = this.getAreaBroker().getNavigationArea();\r\n            $container.append(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            shortcut.remove('.' + this.getName());\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable (){\r\n            this.$element.removeProp('disabled')\r\n                         .removeClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable (){\r\n            this.$element.prop('disabled', true)\r\n                         .addClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show(){\r\n            hider.show(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide(){\r\n            hider.hide(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Navigation Plugin : Next Section\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/nextSection',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/helpers/messages',\r\n    'tpl!taoQtiTest/runner/plugins/templates/button'\r\n], function ($, _, __, hider, pluginFactory, messages, buttonTpl){\r\n    'use strict';\r\n\r\n    return pluginFactory({\r\n        name : 'nextsection',\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var testConfig = testRunner.getTestData().config;\r\n\r\n            function toggle(){\r\n                var options = testRunner.getTestContext().options;\r\n                if(testConfig.nextSection && (options.nextSection || options.nextSectionWarning)){\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            function nextSection() {\r\n                testRunner.next('section');\r\n            }\r\n\r\n            this.$element = $(buttonTpl({\r\n                control : 'next-section',\r\n                title   : __('Skip to the next section'),\r\n                icon    : 'fast-forward',\r\n                text    : __('Next Section')\r\n            }));\r\n\r\n            this.$element.on('click', function(e){\r\n                var context = testRunner.getTestContext();\r\n                var enable = _.bind(self.enable, self);\r\n                e.preventDefault();\r\n                if(self.getState('enabled') !== false){\r\n                    self.disable();\r\n\r\n                    if(context.options.nextSectionWarning){\r\n                        testRunner.trigger(\r\n                            'confirm.nextsection',\r\n                            messages.getExitMessage(\r\n                                __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\r\n                                'section', testRunner),\r\n                            nextSection, // if the test taker accept\r\n                            enable       // if the test taker refuse\r\n                        );\r\n                    } else {\r\n                        nextSection();\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.disable();\r\n            toggle();\r\n\r\n            testRunner\r\n                .on('loaditem', toggle)\r\n                .on('enablenav', function(){\r\n                    self.enable();\r\n                })\r\n                .on('disablenav', function(){\r\n                    self.disable();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n\r\n            //attach the element to the navigation area\r\n            var $container = this.getAreaBroker().getNavigationArea();\r\n            $container.append(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable (){\r\n            this.$element.removeProp('disabled')\r\n                         .removeClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable (){\r\n            this.$element.prop('disabled', true)\r\n                         .addClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show(){\r\n            hider.show(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide(){\r\n            hider.hide(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Navigation Plugin : Previous\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/previous',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'tpl!taoQtiTest/runner/plugins/templates/button'\r\n], function ($, _, __, hider, pluginFactory, shortcut, namespaceHelper, buttonTpl){\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name : 'previous',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData();\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n\r\n            /**\r\n             * Check if the \"Previous\" functionality should be available or not\r\n             */\r\n            var canDoPrevious = function canDoPrevious() {\r\n                var context = testRunner.getTestContext();\r\n                return context.isLinear === false && context.canMoveBackward === true;\r\n            };\r\n\r\n            /**\r\n             * Hide the plugin if the Previous functionality shouldn't be available\r\n             */\r\n            var toggle = function toggle(){\r\n                if(canDoPrevious()){\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            };\r\n\r\n            //build element (detached)\r\n            this.$element =  $(buttonTpl({\r\n                control : 'move-backward',\r\n                title   : __('Submit and go to the previous item'),\r\n                icon    : 'backward',\r\n                text    : __('Previous')\r\n            }));\r\n\r\n            //attach behavior\r\n            function doPrevious(previousItemWarning) {\r\n                var context = testRunner.getTestContext();\r\n\r\n                function enable() {\r\n                    testRunner.trigger('enablenav enabletools');\r\n                }\r\n\r\n                if(self.getState('enabled') !== false){\r\n                    testRunner.trigger('disablenav disabletools');\r\n\r\n                    if (previousItemWarning && context.remainingAttempts !== -1) {\r\n                        testRunner.trigger(\r\n                            'confirm.previous',\r\n                            __('You are about to go to the previous item. Click OK to continue and go to the previous item.'),\r\n                            testRunner.previous, // if the test taker accept\r\n                            enable  // if the test taker refuse\r\n                        );\r\n\r\n                    } else {\r\n                        testRunner.previous();\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.$element.on('click', function(e){\r\n                e.preventDefault();\r\n                testRunner.trigger('nav-previous');\r\n            });\r\n\r\n            if(testConfig.allowShortcuts && pluginShortcuts.trigger){\r\n                shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.trigger, this.getName(), true), function(e) {\r\n                    if (canDoPrevious() && self.getState('enabled') === true) {\r\n                        testRunner.trigger('nav-previous', [true]);\r\n                    }\r\n                }, {\r\n                    avoidInput: true,\r\n                    prevent: true\r\n                });\r\n            }\r\n\r\n            //start disabled\r\n            toggle();\r\n            self.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', toggle)\r\n                .on('enablenav', function(){\r\n                    self.enable();\r\n                })\r\n                .on('disablenav', function(){\r\n                    self.disable();\r\n                })\r\n                .on('nav-previous', function(previousItemWarning){\r\n                    doPrevious(previousItemWarning);\r\n                });\r\n        },\r\n\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            var $container = this.getAreaBroker().getNavigationArea();\r\n            $container.append(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            shortcut.remove('.' + this.getName());\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable (){\r\n            this.$element.removeProp('disabled')\r\n                         .removeClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable (){\r\n            this.$element.prop('disabled', true)\r\n                         .addClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show(){\r\n            hider.show(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide(){\r\n            hider.hide(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/navigation/review/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\r\\n    <div class=\\\"qti-navigator-info collapsible\\\">\\r\\n                <span class=\\\"qti-navigator-label\\\">\\r\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\r\\n                    <span class=\\\"icon-up\\\"></span>\\r\\n                    <span class=\\\"icon-down\\\"></span>\\r\\n                </span>\\r\\n        <ul class=\\\"collapsible-panel plain\\\">\\r\\n            <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n            </li>\\r\\n            <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n            </li>\\r\\n            <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n            </li>\\r\\n            <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    \";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \"(<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \"icon-unanswered \";\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \"icon-flagged \";\n  }\n\nfunction program13(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \" (<span class=\\\"qti-navigator-counter\\\">0</span>)\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"qti-panel qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\r\\n    <div class=\\\"qti-navigator-collapsible\\\">\\r\\n        <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\r\\n        <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\r\\n    </div>\\r\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n\\r\\n\\r\\n    <div class=\\\"qti-navigator-filters\\\">\\r\\n        <ul class=\\\"plain clearfix\\\">\\r\\n            <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\r\\n                <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"\\r\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                </span>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\r\\n                <span class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\">\\r\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                </span>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\r\\n                <span class=\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\">\\r\\n                    \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.showLegend), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                </span>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n    <nav class=\\\"qti-navigator-tree\\\"></nav>\\r\\n\\r\\n    <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\r\\n        <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\r\\n        <p class=\\\"qti-navigator-message\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\r\\n        </p>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/navigation/review/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n            <span class=\\\"icon-up\\\"></span>\\r\\n            <span class=\\\"icon-down\\\"></span>\\r\\n        </span>\\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isLinear), {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n    </li>\\r\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\r\\n        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\r\\n            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\r\\n            <p class=\\\"qti-navigator-message\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\r\\n            </p>\\r\\n            <p class=\\\"qti-navigator-actions\\\">\\r\\n                <button class=\\\"btn-info small\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\r\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\r\\n                    <span class=\\\"icon-play r\\\"></span>\\r\\n                </button>\\r\\n            </p>\\r\\n        </div>\\r\\n        \";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\r\\n        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\r\\n            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n        </ul>\\r\\n        \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n                    <span class=\\\"qti-navigator-counter\\\">\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.answered)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.stats)),stack1 == null || stack1 === false ? stack1 : stack1.total)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\r\\n                </span>\\r\\n                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\r\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                </ul>\\r\\n            </li>\\r\\n            \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n                    <li class=\\\"qti-navigator-item \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-number\\\">\";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    \";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"qti-navigator-parts plain\\\">\\r\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n</ul>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/review/navigator',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/component',\r\n    'ui/autoscroll',\r\n    'taoQtiTest/runner/helpers/map',\r\n    'tpl!taoQtiTest/runner/plugins/navigation/review/navigator',\r\n    'tpl!taoQtiTest/runner/plugins/navigation/review/navigatorTree'\r\n], function ($, _, __, component, autoscroll, mapHelper, navigatorTpl, navigatorTreeTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Some default values\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _defaults = {\r\n        scope: 'test',\r\n        canCollapse: false,\r\n        preventsUnseen: true,\r\n        hidden: false\r\n    };\r\n\r\n    /**\r\n     * List of CSS classes\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _cssCls = {\r\n        active: 'active',\r\n        collapsed: 'collapsed',\r\n        collapsible: 'collapsible',\r\n        hidden: 'hidden',\r\n        disabled: 'disabled',\r\n        flagged: 'flagged',\r\n        answered: 'answered',\r\n        viewed: 'viewed',\r\n        unseen: 'unseen',\r\n        info: 'info',\r\n        icon: 'qti-navigator-icon',\r\n        scope: {\r\n            test: 'scope-test',\r\n            testPart: 'scope-test-part',\r\n            testSection: 'scope-test-section'\r\n        }\r\n    };\r\n\r\n    /**\r\n     * List of icon CSS classes\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    var _iconCls = [\r\n        _cssCls.info,\r\n        _cssCls.flagged,\r\n        _cssCls.answered,\r\n        _cssCls.viewed\r\n    ];\r\n\r\n    /**\r\n     * List of common CSS selectors\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _selectors = {\r\n        component: '.qti-navigator',\r\n        filterBar: '.qti-navigator-filters',\r\n        filter: '.qti-navigator-filter',\r\n        tree: '.qti-navigator-tree',\r\n        collapseHandle: '.qti-navigator-collapsible',\r\n        linearState: '.qti-navigator-linear',\r\n        infoAnswered: '.qti-navigator-answered .qti-navigator-counter',\r\n        infoViewed: '.qti-navigator-viewed .qti-navigator-counter',\r\n        infoUnanswered: '.qti-navigator-unanswered .qti-navigator-counter',\r\n        infoFlagged: '.qti-navigator-flagged .qti-navigator-counter',\r\n        infoPanel: '.qti-navigator-info',\r\n        infoPanelLabels: '.qti-navigator-info > .qti-navigator-label',\r\n        tabInfoAll: '[data-mode=\"all\"] .qti-navigator-counter',\r\n        tabInfoUnanswered: '[data-mode=\"unanswered\"] .qti-navigator-counter',\r\n        tabInfoFlagged: '[data-mode=\"flagged\"] .qti-navigator-counter',\r\n        parts: '.qti-navigator-part',\r\n        partLabels: '.qti-navigator-part > .qti-navigator-label',\r\n        sections: '.qti-navigator-section',\r\n        sectionLabels: '.qti-navigator-section > .qti-navigator-label',\r\n        items: '.qti-navigator-item',\r\n        itemLabels: '.qti-navigator-item > .qti-navigator-label',\r\n        itemIcons: '.qti-navigator-item > .qti-navigator-icon',\r\n        activeItem: '.qti-navigator-item.active',\r\n        icons: '.qti-navigator-icon',\r\n        linearStart: '.qti-navigator-linear-part button',\r\n        counters: '.qti-navigator-counter',\r\n        actives: '.active',\r\n        collapsible: '.collapsible',\r\n        collapsiblePanels: '.collapsible-panel',\r\n        unseen: '.unseen',\r\n        answered: '.answered',\r\n        flagged: '.flagged',\r\n        notFlagged: ':not(.flagged)',\r\n        notAnswered: ':not(.answered)',\r\n        notInformational: ':not(.info)',\r\n        informational: '.info',\r\n        hidden: '.hidden',\r\n        disabled : '.disabled'\r\n    };\r\n\r\n    /**\r\n     * Maps the filter mode to filter criteria.\r\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _filterMap = {\r\n        all: \"\",\r\n        unanswered: [_selectors.answered, _selectors.informational].join(','),\r\n        flagged: _selectors.notFlagged,\r\n        answered: _selectors.notAnswered,\r\n        filtered: _selectors.hidden\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @type {Object}\r\n     */\r\n    var navigatorApi = {\r\n        /**\r\n         * Updates the stats on the flagged items in the current map\r\n         * @param {Number} position\r\n         * @param {Boolean} flag\r\n         */\r\n        updateStats: function updateStats(position, flag) {\r\n            var map = this.map;\r\n            var item;\r\n\r\n            if (map) {\r\n                item = mapHelper.getItemAt(map, position);\r\n\r\n                if (item) {\r\n                    item.flagged = flag;\r\n                    mapHelper.updateItemStats(map, position);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the total number of items for the provided target\r\n         * @param {Object} progression\r\n         * @param {String} target\r\n         * @returns {Number}\r\n         */\r\n        getProgressionTotal: function getProgressionTotal(progression, target) {\r\n            var total;\r\n\r\n            if ('questions' === target) {\r\n                total = progression.questions;\r\n            } else {\r\n                total = progression.total;\r\n            }\r\n\r\n            return total;\r\n        },\r\n\r\n        /**\r\n         * Set the marked state of an item\r\n         * @param {Number|String|jQuery} position\r\n         * @param {Boolean} flag\r\n         */\r\n        setItemFlag: function setItemFlag(position, flag) {\r\n            var $item = position && position.jquery ? position : this.controls.$tree.find('[data-position=' + position + ']');\r\n            var progression = this.progression;\r\n            var icon;\r\n\r\n            // update the map stats\r\n            this.updateStats(position, flag);\r\n\r\n            // update the item flag\r\n            $item.toggleClass(_cssCls.flagged, flag);\r\n\r\n            // set the item icon according to its state\r\n            icon = _.find(_iconCls, _.bind($item.hasClass, $item)) || _cssCls.unseen;\r\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\r\n\r\n            // update the info panel\r\n            progression.flagged = this.controls.$tree.find(_selectors.flagged).length;\r\n            this.writeCount(this.controls.$infoFlagged, progression.flagged, this.getProgressionTotal(progression, 'questions'));\r\n\r\n            // recompute the filters\r\n            this.filter(this.currentFilter);\r\n        },\r\n\r\n        /**\r\n         * Filters the items by a criteria\r\n         * @param {String} criteria\r\n         */\r\n        filter: function filter(criteria) {\r\n            var self = this;\r\n\r\n            // remove the current filter by restoring all items\r\n            var $items = this.controls.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\r\n\r\n            // filter the items according to the provided criteria\r\n            var filterCb = _filterMap[criteria];\r\n            if (filterCb) {\r\n                $items.filter(filterCb).addClass(_cssCls.hidden);\r\n            }\r\n\r\n            // update the section counters\r\n            this.controls.$tree.find(_selectors.sections).each(function () {\r\n                var $section     = $(this);\r\n                var $itemsFound  = $section.find(_selectors.items).not(_selectors.hidden);\r\n                var $filtered    = $itemsFound.not(_selectors.disabled);\r\n                self.writeCount($section.find(_selectors.counters), $filtered.length, $itemsFound.length);\r\n            });\r\n            this.currentFilter = criteria;\r\n        },\r\n\r\n        /**\r\n         * Update the config\r\n         * @param {Object} [config]\r\n         * @returns {navigatorApi}\r\n         */\r\n        updateConfig: function updateConfig(config) {\r\n            var $component = this.getElement();\r\n            var scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\r\n\r\n            // apply the new config\r\n            config = _.merge(this.config, config || {});\r\n\r\n            // enable/disable the collapsing of the panel\r\n            $component.toggleClass(_cssCls.collapsible, config.canCollapse);\r\n\r\n            // update the component CSS class according to the scope\r\n            $component.removeClass(scopeClass);\r\n            scopeClass = _cssCls.scope[this.config.scope || _defaults.scope];\r\n            $component.addClass(scopeClass);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Keep the active item visible, auto scroll if needed\r\n         */\r\n        autoScroll: function autoScroll() {\r\n            autoscroll(this.controls.$tree.find(_selectors.activeItem), this.controls.$tree);\r\n        },\r\n\r\n        /**\r\n         * Updates the review screen\r\n         * @param {Object} map The current test map\r\n         * @param {Object} context The current test context\r\n         * @returns {navigatorApi}\r\n         * @fires navigator#update\r\n         */\r\n        update: function update(map, context) {\r\n            var scopedMap = this.getScopedMap(map, context);\r\n            var progression = scopedMap.stats || {\r\n                questions: 0,\r\n                answered: 0,\r\n                flagged: 0,\r\n                viewed: 0,\r\n                total: 0\r\n            };\r\n            var totalQuestions = this.getProgressionTotal(progression, 'questions');\r\n\r\n            this.map = map;\r\n            this.progression = progression;\r\n\r\n            // update the info panel\r\n            this.writeCount(this.controls.$infoAnswered, progression.answered, totalQuestions);\r\n            this.writeCount(this.controls.$infoUnanswered, totalQuestions - progression.answered, totalQuestions);\r\n            this.writeCount(this.controls.$infoViewed, progression.viewed, this.getProgressionTotal(progression, 'total'));\r\n            this.writeCount(this.controls.$infoFlagged, progression.flagged, totalQuestions);\r\n            this.writeCount(this.controls.$infoAll, totalQuestions, null);\r\n\r\n\r\n            // rebuild the tree\r\n            if (!context.isLinear) {\r\n                this.controls.$filterBar.show();\r\n                this.controls.$linearState.hide();\r\n                this.controls.$tree.html(navigatorTreeTpl(scopedMap));\r\n\r\n                this.autoScroll();\r\n\r\n                this.setState('prevents-unseen', this.config.preventsUnseen);\r\n                if (this.config.preventsUnseen) {\r\n                    // disables all unseen items to prevent the test taker has access to.\r\n                    this.controls.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\r\n                }\r\n            } else {\r\n                this.controls.$filterBar.hide();\r\n                this.controls.$linearState.show();\r\n                this.controls.$tree.empty();\r\n            }\r\n\r\n            // apply again the current filter\r\n            this.filter(this.controls.$filters.filter(_selectors.actives).data('mode'));\r\n\r\n            /**\r\n             * @event navigator#update the navigation data have changed\r\n             */\r\n            this.trigger('update');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets the scoped map\r\n         * @param {Object} map The current test map\r\n         * @param {Object} context The current test context\r\n         * @returns {object} The scoped map\r\n         */\r\n        getScopedMap: function getScopedMap(map, context) {\r\n            var scopedMap = mapHelper.getScopeMap(map, context.itemPosition, this.config.scope);\r\n            var testPart = mapHelper.getPart(scopedMap, context.testPartId) || {};\r\n            var section = mapHelper.getSection(scopedMap, context.sectionId) || {};\r\n            var item = mapHelper.getItem(scopedMap, context.itemIdentifier) || {};\r\n\r\n            // set the active part/section/item\r\n            testPart.active = true;\r\n            section.active = true;\r\n            item.active = true;\r\n\r\n            // adjust each item with additional meta\r\n            return mapHelper.each(scopedMap, function(itm) {\r\n                var cls = [];\r\n                var icon = '';\r\n\r\n                if (itm.active) {\r\n                    cls.push('active');\r\n                }\r\n                if (itm.informational) {\r\n                    cls.push('info');\r\n                    icon = icon || 'info';\r\n                }\r\n                if (itm.flagged) {\r\n                    cls.push('flagged');\r\n                    icon = icon || 'flagged';\r\n                }\r\n                if (itm.answered) {\r\n                    cls.push('answered');\r\n                    icon = icon || 'answered';\r\n                }\r\n                if (itm.viewed) {\r\n                    cls.push('viewed');\r\n                    icon = icon || 'viewed';\r\n                } else {\r\n                    cls.push('unseen');\r\n                    icon = icon || 'unseen';\r\n                }\r\n\r\n                itm.cls = cls.join(' ');\r\n                itm.icon = icon;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates a counter\r\n         * @param {jQuery} $place\r\n         * @param {Number} count\r\n         * @param {Number|Null} total\r\n         * @private\r\n         */\r\n        writeCount: function writeCount($place, count, total) {\r\n\r\n            var display = 0;\r\n            if($place.parent().hasClass('qti-navigator-tab')){\r\n                display = Math.max(count, 0);\r\n            }\r\n            else if(total > 0){\r\n                display = Math.min(count, total) + '/' + total;\r\n            }\r\n            $place.text(display);\r\n        },\r\n\r\n        /**\r\n         * Selects an item\r\n         * @param {String|jQuery} position The item's position\r\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\r\n         * @returns {jQuery} Returns the selected item\r\n         */\r\n        select: function select(position, open) {\r\n            // find the item to select and extract its hierarchy\r\n            var $tree = this.controls.$tree;\r\n            var selected = position && position.jquery ? position : $tree.find('[data-position=' + position + ']');\r\n            var hierarchy = selected.parentsUntil($tree);\r\n            var previousPosition = 0;\r\n            var $previous = $tree.find(_selectors.activeItem);\r\n            if ( $previous.length ) {\r\n                previousPosition = $previous.data('position');\r\n            }\r\n\r\n            // collapse the full tree and open only the hierarchy of the selected item\r\n            if (open) {\r\n                this.openOnly(hierarchy);\r\n            }\r\n\r\n            // select the item\r\n            $tree.find(_selectors.actives).removeClass(_cssCls.active);\r\n            hierarchy.add(selected).addClass(_cssCls.active);\r\n\r\n            position = selected.data('position');\r\n\r\n            /**\r\n             * An item is selected\r\n             *\r\n             * @param {Number} position - The item position on which select\r\n             * @param {Number} previousPosition - The item position from which select\r\n             * @event navigator#selected\r\n             */\r\n            this.trigger('selected', position, previousPosition);\r\n\r\n            return selected;\r\n        },\r\n\r\n        /**\r\n         * Opens the tree on the selected item only\r\n         * @returns {jQuery} Returns the selected item\r\n         */\r\n        openSelected: function openSelected() {\r\n            // find the selected item and extract its hierarchy\r\n            var $tree = this.controls.$tree;\r\n            var selected = $tree.find(_selectors.items + _selectors.actives);\r\n            var hierarchy = selected.parentsUntil($tree);\r\n\r\n            // collapse the full tree and open only the hierarchy of the selected item\r\n            this.openOnly(hierarchy);\r\n\r\n            return selected;\r\n        },\r\n\r\n        /**\r\n         * Collapses the full tree and opens only the provided branch\r\n         * @param {jQuery} opened The element to be opened\r\n         * @param {jQuery} [root] The root element from which collapse the panels\r\n         */\r\n        openOnly: function openOnly(opened, root) {\r\n            (root || this.controls.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\r\n            opened.removeClass(_cssCls.collapsed);\r\n        },\r\n\r\n        /**\r\n         * Toggles a panel\r\n         * @param {jQuery} panel The panel to toggle\r\n         * @param {String} [collapseSelector] Selector of panels to collapse\r\n         * @returns {Boolean} Returns `true` if the panel just expanded now\r\n         */\r\n        togglePanel: function togglePanel(panel, collapseSelector) {\r\n            var collapsed = panel.hasClass(_cssCls.collapsed);\r\n\r\n            if (collapseSelector) {\r\n                this.controls.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\r\n            }\r\n\r\n            if (collapsed) {\r\n                panel.removeClass(_cssCls.collapsed);\r\n            } else {\r\n                panel.addClass(_cssCls.collapsed);\r\n            }\r\n            return collapsed;\r\n        },\r\n\r\n        /**\r\n         * Toggles the display state of the component\r\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\r\n         * @returns {navigatorApi}\r\n         */\r\n        toggle: function toggle(show) {\r\n            if (typeof show === 'undefined') {\r\n                show = this.is('hidden');\r\n            }\r\n\r\n            if (show) {\r\n                this.show();\r\n            } else {\r\n                this.hide();\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Object} config\r\n     * @param {String} [config.scope] Limit the review screen to a particular scope: test, testPart, testSection\r\n     * @param {Boolean} [config.preventsUnseen] Prevents the test taker to access unseen items\r\n     * @param {Boolean} [config.canCollapse] Allow the test taker to collapse the component\r\n     * @param {Boolean} [config.canFlag] Allow the test taker to flag items\r\n     * @param {Boolean} [config.hidden] Hide the component at init\r\n     * @param {Object} map The current test map\r\n     * @param {Object} context The current test context\r\n     * @returns {*}\r\n     */\r\n    function navigatorFactory(config, map, context) {\r\n\r\n        var navigator;\r\n\r\n        /**\r\n         * Flags an item\r\n         * @param {jQuery} $item\r\n         */\r\n        function flagItem($item) {\r\n            var position = $item.data('position');\r\n            var flagged = !$item.hasClass(_cssCls.flagged);\r\n\r\n            // update the display\r\n            navigator.setItemFlag(position, flagged);\r\n\r\n            /**\r\n             * An item is flagged\r\n             * @event navigator#flag\r\n             * @param {Number} position - The item position on which jump\r\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\r\n             */\r\n            navigator.trigger('flag', position, flagged);\r\n        }\r\n\r\n        /**\r\n         * Jumps to an item\r\n         * @param {jQuery} $item\r\n         * @private\r\n         */\r\n        function jump($item) {\r\n            var position = $item.data('position');\r\n\r\n            /**\r\n             * A jump to a particular item is required\r\n             * @event navigator#jump\r\n             * @param {Number} position - The item position on which jump\r\n             */\r\n            navigator.trigger('jump', position);\r\n        }\r\n\r\n        navigator = component(navigatorApi, _defaults)\r\n            .setTemplate(navigatorTpl)\r\n\r\n\r\n            // uninstalls the component\r\n            .on('destroy', function () {\r\n                this.controls = null;\r\n            })\r\n\r\n            // keep the activ item visible\r\n            .on('show', function () {\r\n                this.autoScroll();\r\n            })\r\n\r\n            // renders the component\r\n            .on('render', function () {\r\n                var self = this;\r\n\r\n                // main component elements\r\n                var $component = this.getElement();\r\n                var $filterBar = $component.find(_selectors.filterBar);\r\n                var $filters = $filterBar.find('li');\r\n                var $tree = $component.find(_selectors.tree);\r\n\r\n                // links the component to the underlying DOM elements\r\n                this.controls = {\r\n                    // access to info panel displaying counters\r\n\r\n                    $infoAnswered: $component.find(_selectors.infoAnswered),\r\n                    $infoViewed: $component.find(_selectors.infoViewed),\r\n                    $infoAll: $component.find(_selectors.tabInfoAll),\r\n                    $infoUnanswered: this.config.showLegend ?\r\n                        $component.find(_selectors.infoUnanswered) :\r\n                        $component.find(_selectors.tabInfoUnanswered),\r\n                    $infoFlagged: this.config.showLegend ?\r\n                        $component.find(_selectors.infoFlagged) :\r\n                        $component.find(_selectors.tabInfoFlagged),\r\n\r\n                    // access to filter switches\r\n                    $filterBar: $filterBar,\r\n                    $filters: $filters,\r\n\r\n                    // access to the tree of parts/sections/items\r\n                    $tree: $tree,\r\n\r\n                    // access to the panel displayed when a linear part is reached\r\n                    $linearState: $component.find(_selectors.linearState)\r\n                };\r\n\r\n                // apply options\r\n                this.updateConfig();\r\n\r\n                // click on the collapse handle: collapse/expand the review panel\r\n                $component.on('click' + _selectors.component, _selectors.collapseHandle, function () {\r\n                    if (!self.is('disabled')) {\r\n                        $component.toggleClass(_cssCls.collapsed);\r\n                        if ($component.hasClass(_cssCls.collapsed)) {\r\n                            self.openSelected();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // click on the info panel title: toggle the related panel\r\n                $component.on('click' + _selectors.component, _selectors.infoPanelLabels, function () {\r\n                    if (!self.is('disabled')) {\r\n                        self.togglePanel($(this).closest(_selectors.infoPanel), _selectors.infoPanel);\r\n                    }\r\n                });\r\n\r\n                // click on a part title: toggle the related panel\r\n                $tree.on('click' + _selectors.component, _selectors.partLabels, function () {\r\n                    var $panel;\r\n\r\n                    if (!self.is('disabled')) {\r\n                        $panel = $(this).closest(_selectors.parts);\r\n\r\n                        if (self.togglePanel($panel, _selectors.parts)) {\r\n                            if ($panel.hasClass(_cssCls.active)) {\r\n                                self.openSelected();\r\n                            } else {\r\n                                self.openOnly($panel.find(_selectors.sections).first(), $panel);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                // click on a section title: toggle the related panel\r\n                $tree.on('click' + _selectors.component, _selectors.sectionLabels, function () {\r\n                    if (!self.is('disabled')) {\r\n                        self.togglePanel($(this).closest(_selectors.sections), _selectors.sections);\r\n                    }\r\n                });\r\n\r\n                // click on an item: jump to the position\r\n                $tree.on('click' + _selectors.component, _selectors.itemLabels, function (event) {\r\n                    var $item, $target;\r\n\r\n                    if (!self.is('disabled')) {\r\n                        $item = $(this).closest(_selectors.items);\r\n\r\n                        if (!$item.hasClass(_cssCls.disabled)) {\r\n                            $target = $(event.target);\r\n                            if (self.config.canFlag && $target.is(_selectors.icons) && !$component.hasClass(_cssCls.collapsed)) {\r\n                                // click on the icon, just flag the item, unless the panel is collapsed\r\n                                if (!$item.hasClass(_cssCls.unseen) && !$item.hasClass(_cssCls.info)) {\r\n                                    flagItem($item);\r\n                                }\r\n                            } else if (!$item.hasClass(_cssCls.active)){\r\n                                // go to the selected item\r\n                                self.select($item);\r\n                                jump($item);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // click on the start button inside a linear part: jump to the position\r\n                $tree.on('click' + _selectors.component, _selectors.linearStart, function () {\r\n                    var $btn;\r\n\r\n                    if (!self.is('disabled')) {\r\n                        $btn = $(this);\r\n\r\n                        // go to the first item of the linear part\r\n                        if (!$btn.hasClass(_cssCls.disabled)) {\r\n                            $btn.addClass(_cssCls.disabled);\r\n                            jump($btn);\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                // click on a filter button\r\n                $filterBar.on('click' + _selectors.component, _selectors.filter, function () {\r\n                    var $btn, mode;\r\n\r\n                    if (!self.is('disabled')) {\r\n                        $btn = $(this);\r\n                        mode = $btn.data('mode');\r\n\r\n                        // select the button\r\n                        $filters.removeClass(_cssCls.active);\r\n                        $component.removeClass(_cssCls.collapsed);\r\n                        $btn.addClass(_cssCls.active);\r\n\r\n                        // filter the items\r\n                        self.filter(mode);\r\n\r\n                        //after filtering, ensure that the active item (if exists) is visible\r\n                        self.autoScroll();\r\n                    }\r\n                });\r\n\r\n                this.update(map, context);\r\n            });\r\n\r\n        // set default filter\r\n        navigator.currentFilter = 'all';\r\n\r\n        // the component will be ready\r\n        return navigator.init(config);\r\n    }\r\n\r\n    return navigatorFactory;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Control Plugin : Review panel\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/review/review',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/helpers/map',\r\n    'taoQtiTest/runner/plugins/navigation/review/navigator'\r\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory, mapHelper, navigatorFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The display states of the buttons\r\n     */\r\n    var buttonData = {\r\n        setFlag: {\r\n            control: 'set-item-flag',\r\n            title: __('Flag the current item for later review'),\r\n            icon: 'anchor',\r\n            text: __('Flag for Review')\r\n        },\r\n        unsetFlag: {\r\n            control: 'unset-item-flag',\r\n            title: __('Do not flag the current item for later review'),\r\n            icon: 'anchor',\r\n            text: __('Unflag for Review')\r\n        },\r\n        showReview: {\r\n            control: 'show-review',\r\n            title: __('Show the review screen'),\r\n            icon: 'right',\r\n            text: __('Show Review')\r\n        },\r\n        hideReview: {\r\n            control: 'hide-review',\r\n            title: __('Hide the review screen'),\r\n            icon: 'left',\r\n            text: __('Hide Review')\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the definition of the flagItem button related to the context\r\n     * @param {Object} context - the test context\r\n     * @returns {Object}\r\n     */\r\n    function getFlagItemButtonData(context) {\r\n        var dataType = context.itemFlagged ? 'unsetFlag' : 'setFlag';\r\n        return buttonData[dataType];\r\n    }\r\n\r\n    /**\r\n     * Gets the definition of the toggleNavigator button related to the context\r\n     * @param {Object} navigator - the navigator component\r\n     * @returns {Object}\r\n     */\r\n    function getToggleButtonData(navigator) {\r\n        var dataType = navigator.is('hidden') ? 'showReview' : 'hideReview';\r\n        return buttonData[dataType];\r\n    }\r\n\r\n    /**\r\n     * Update the button based on the provided data\r\n     * @param {Component} button - the element to update\r\n     * @param {Object} data - the button data\r\n     */\r\n    function updateButton(button, data) {\r\n        var $button = button.getElement();\r\n        if (button.is('rendered')) {\r\n            if ($button.data('control') !== data.control) {\r\n                $button\r\n                    .data('control', data.control)\r\n                    .attr('title', data.title);\r\n\r\n                $button.find('.icon').attr('class', 'icon icon-' + data.icon);\r\n                $button.find('.text').text(data.text);\r\n\r\n                if (_.contains(data.control, 'flag')) {\r\n                    if (button.is('active')) {\r\n                        button.turnOff();\r\n                    } else {\r\n                        button.turnOn();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the current context allows to mark the item for review\r\n     * @param {Object} testRunner\r\n     * @returns {Boolean}\r\n     */\r\n    function canFlag(testRunner) {\r\n        var context = testRunner.getTestContext();\r\n        var map = testRunner.getTestMap();\r\n        var item = mapHelper.getItemAt(map, context.itemPosition);\r\n        return !!(!context.isLinear && context.options.markReview && !(item && item.informational));\r\n    }\r\n\r\n    /**\r\n     * Creates the timer plugin\r\n     */\r\n    return pluginFactory({\r\n        name: 'review',\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData();\r\n            var testContext = testRunner.getTestContext();\r\n            var testMap = testRunner.getTestMap();\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n            var navigatorConfig = testConfig.review || {};\r\n            var previousItemPosition;\r\n\r\n            /**\r\n             * Tells if the component is enabled\r\n             * @returns {Boolean}\r\n             */\r\n            function isPluginAllowed() {\r\n                var context = testRunner.getTestContext();\r\n                return navigatorConfig.enabled && context && context.options && context.options.reviewScreen;\r\n            }\r\n\r\n            /**\r\n             * Mark an item for review\r\n             * @param {Number} position\r\n             * @param {Boolean} flag\r\n             * @returns {Promise}\r\n             */\r\n            function flagItem(position, flag) {\r\n                self.disable();\r\n\r\n                return testRunner.getProxy()\r\n                    .callTestAction('flagItem', {\r\n                        position: position,\r\n                        flag: flag\r\n                    })\r\n                    .then(function () {\r\n                        var context = testRunner.getTestContext();\r\n\r\n                        // update the state in the context if the flagged item is the current one\r\n                        if (context.itemPosition === position) {\r\n                            context.itemFlagged = flag;\r\n                        }\r\n\r\n                        // update the display of the flag button\r\n                        updateButton(self.flagItemButton, getFlagItemButtonData(context));\r\n\r\n                        // update the item state\r\n                        self.navigator.setItemFlag(position, flag);\r\n                        self.enable();\r\n                    })\r\n                    .catch(function () {\r\n                        // rollback on the item flag\r\n                        self.navigator.setItemFlag(position, !flag);\r\n                        self.enable();\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * Mark the current item for review\r\n             */\r\n            function flagCurrentItem() {\r\n                var context = testRunner.getTestContext();\r\n                if (self.getState('enabled') !== false) {\r\n                    flagItem(context.itemPosition, !context.itemFlagged);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Shows/hides the review panel\r\n             *\r\n             * @param [{Boolean} forcedState], true will show the panel\r\n             */\r\n            function togglePanel(forcedState) {\r\n                var isHidden = _.isUndefined(forcedState) ? self.navigator.is('hidden') : forcedState;\r\n                if (isHidden) {\r\n                    self.explicitlyHidden = false;\r\n                    self.navigator.show();\r\n                } else {\r\n                    self.explicitlyHidden = true;\r\n                    self.navigator.hide();\r\n                }\r\n                updateButton(self.toggleButton, getToggleButtonData(self.navigator));\r\n            }\r\n\r\n            this.navigator = navigatorFactory(navigatorConfig, testMap, testContext)\r\n                .on('selected', function(position, previousPosition){\r\n                    previousItemPosition = previousPosition;\r\n                })\r\n                .on('jump', function (position) {\r\n                    if (self.getState('enabled') !== false) {\r\n                        self.disable();\r\n                        testRunner.jump(position, 'item');\r\n                    }\r\n                })\r\n                .on('flag', function (position, flag) {\r\n                    if (self.getState('enabled') !== false) {\r\n                        flagItem(position, flag);\r\n                    }\r\n                })\r\n                .render();\r\n\r\n            // restore current item in the navigator if movement not allowed\r\n            testRunner.on('alert.notallowed', function() {\r\n                self.navigator.select(previousItemPosition);\r\n            });\r\n\r\n            this.explicitlyHidden = false;\r\n\r\n            // register buttons in the toolbox component\r\n            this.toggleButton = this.getAreaBroker().getToolbox().createEntry(getToggleButtonData(this.navigator));\r\n            this.toggleButton.on('click', function (e) {\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-reviewpanel');\r\n            });\r\n\r\n            this.flagItemButton = this.getAreaBroker().getToolbox().createEntry(getFlagItemButtonData(testContext));\r\n            this.flagItemButton.on('click', function (e) {\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-flagitem');\r\n            });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.flag) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.flag, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-flagitem');\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                }\r\n\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-reviewpanel');\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (!isPluginAllowed()) {\r\n                this.hide();\r\n            }\r\n\r\n            //disabled by default\r\n            this.disable();\r\n\r\n            togglePanel(testConfig.review.defaultOpen);\r\n\r\n            //change plugin state\r\n            testRunner\r\n                .on('render', function () {\r\n                    if (isPluginAllowed()) {\r\n                        self.show();\r\n                        updateButton(self.toggleButton, getToggleButtonData(self.navigator));\r\n                    } else {\r\n                        self.hide();\r\n                    }\r\n                })\r\n                .on('loaditem', function () {\r\n                    var context = testRunner.getTestContext();\r\n                    var map = testRunner.getTestMap();\r\n\r\n                    if (isPluginAllowed()) {\r\n                        updateButton(self.flagItemButton, getFlagItemButtonData(context));\r\n                        self.navigator\r\n                            .update(map, context)\r\n                            .updateConfig({\r\n                                canFlag: !context.isLinear && context.options.markReview\r\n                            });\r\n                        self.show();\r\n                        updateButton(self.toggleButton, getToggleButtonData(self.navigator));\r\n                    } else {\r\n                        self.hide();\r\n                    }\r\n                })\r\n                .on('enabletools', function () {\r\n                    if (isPluginAllowed()) {\r\n                        self.enable();\r\n                    }\r\n                })\r\n                .on('disabletools', function () {\r\n                    if (isPluginAllowed()) {\r\n                        self.disable();\r\n                    }\r\n                })\r\n                .on('tool-flagitem', function () {\r\n                    if (isPluginAllowed() && canFlag(testRunner)) {\r\n                        flagCurrentItem();\r\n                    }\r\n                })\r\n                .on('tool-reviewpanel', function () {\r\n                    if (isPluginAllowed() && self.getState('enabled')) {\r\n                        togglePanel();\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render: function render() {\r\n            var areaBroker = this.getAreaBroker();\r\n            var $panelContainer = areaBroker.getPanelArea();\r\n            $panelContainer.append(this.navigator.getElement());\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + this.getName());\r\n            this.navigator.destroy();\r\n        },\r\n\r\n        /**\r\n         * Enables the button\r\n         */\r\n        enable: function enable() {\r\n            var testRunner = this.getTestRunner();\r\n            var testContext = testRunner.getTestContext();\r\n\r\n            this.flagItemButton.enable();\r\n            this.toggleButton.enable();\r\n            this.navigator.enable();\r\n            if (testContext.itemFlagged) {\r\n                this.flagItemButton.turnOn();\r\n            } else {\r\n                this.flagItemButton.turnOff();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Disables the button\r\n         */\r\n        disable: function disable() {\r\n            this.flagItemButton.disable();\r\n            this.flagItemButton.turnOff();\r\n\r\n            this.toggleButton.disable();\r\n\r\n            this.navigator.disable();\r\n        },\r\n\r\n        /**\r\n         * Shows the button\r\n         */\r\n        show: function show() {\r\n            var testRunner = this.getTestRunner();\r\n            if (canFlag(testRunner)) {\r\n                this.flagItemButton.show();\r\n            } else {\r\n                this.flagItemButton.hide();\r\n            }\r\n            this.toggleButton.show();\r\n\r\n            if (!this.explicitlyHidden) {\r\n                this.navigator.show();\r\n            } else {\r\n                this.navigator.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hides the button\r\n         */\r\n        hide: function hide() {\r\n            this.flagItemButton.hide();\r\n            this.toggleButton.hide();\r\n            this.navigator.hide();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Navigation Plugin : Skip\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/navigation/skip',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/helpers/messages',\r\n    'tpl!taoQtiTest/runner/plugins/templates/button'\r\n], function ($, _, __, hider, pluginFactory, messages, buttonTpl){\r\n    'use strict';\r\n\r\n    /**\r\n     * The display of the skip\r\n     */\r\n    var buttonData = {\r\n        skip : {\r\n            control : 'skip',\r\n            title   : __('Skip  and go to the next item'),\r\n            icon    : 'external',\r\n            text    : __('Skip')\r\n        },\r\n        end : {\r\n            control : 'skip-end',\r\n            title   : __('Skip and go to the end of the test'),\r\n            icon    : 'external',\r\n            text    : __('Skip and end test')\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the button based on the current context\r\n     * @param {Object} context - the test context\r\n     * @returns {jQueryElement} the button\r\n     */\r\n    var createElement = function createElement(context){\r\n        var dataType = context.isLast ? 'end' : 'skip';\r\n        return $(buttonTpl(buttonData[dataType]));\r\n    };\r\n\r\n    /**\r\n     * Update the button based on the context\r\n     * @param {jQueryElement} $element - the element to update\r\n     * @param {Object} context - the test context\r\n     */\r\n    var updateElement = function updateElement($element, context){\r\n        var dataType = context.isLast ? 'end' : 'skip';\r\n        if($element.data('control') !== buttonData[dataType].control){\r\n\r\n            $element.data('control', buttonData[dataType].control)\r\n                    .attr('title', buttonData[dataType].title)\r\n                    .find('.text').text(buttonData[dataType].text);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name : 'skip',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n\r\n            var toggle = function toggle(){\r\n                var context = testRunner.getTestContext();\r\n                if(context.options.allowSkipping === true){\r\n                    self.show();\r\n                    return true;\r\n                }\r\n\r\n                self.hide();\r\n                return false;\r\n            };\r\n\r\n            function doSkip() {\r\n                testRunner.skip();\r\n            }\r\n\r\n            this.$element = createElement(testRunner.getTestContext());\r\n\r\n            this.$element.on('click', function(e){\r\n                var enable = _.bind(self.enable, self);\r\n                var context = testRunner.getTestContext();\r\n\r\n                e.preventDefault();\r\n\r\n                if(self.getState('enabled') !== false){\r\n                    self.disable();\r\n                    if(context.options.endTestWarning && context.isLast){\r\n                        testRunner.trigger(\r\n                            'confirm.endTest',\r\n                            messages.getExitMessage(\r\n                                __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\r\n                                'test', testRunner),\r\n                            doSkip, // if the test taker accept\r\n                            enable  // if the test taker refuse\r\n                        );\r\n                    } else {\r\n                        doSkip();\r\n                    }\r\n                }\r\n            });\r\n\r\n            toggle();\r\n            self.disable();\r\n\r\n            testRunner\r\n                .on('loaditem', function(){\r\n                    if(toggle()){\r\n                        updateElement(self.$element, testRunner.getTestContext());\r\n                    }\r\n                })\r\n                .on('enablenav', function(){\r\n                    self.enable();\r\n                })\r\n                .on('disablenav', function(){\r\n                    self.disable();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            var $container = this.getAreaBroker().getNavigationArea();\r\n            $container.append(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy (){\r\n            this.$element.remove();\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable (){\r\n            this.$element.removeProp('disabled')\r\n                         .removeClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable (){\r\n            this.$element.prop('disabled', true)\r\n                         .addClass('disabled');\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show(){\r\n            hider.show(this.$element);\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide(){\r\n            hider.hide(this.$element);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/security/disableRightClick',[\r\n    'taoTests/runner/plugin'\r\n], function (pluginFactory) {\r\n    'use strict';\r\n\r\n    return pluginFactory({\r\n\r\n        name: 'disableRightClick',\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var rightClickEvents = ['contextmenu', 'mousedown', 'mouseup'];\r\n\r\n            rightClickEvents.forEach(function(eventName) {\r\n                window.document.addEventListener(eventName, function disableRightClick(event) {\r\n                    if (event.button === 2) {\r\n                        event.preventDefault();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    });\r\n});\r\n\n","\r\n/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\n/**\r\n * Answer Eliminator Plugin\r\n *\r\n * While the platform's answer eliminator works on a per-item base, this variation allows\r\n * answer elimination on a test level. Essentially it allows to add a class 'eliminable'\r\n * to a choice interaction, from there the aforementioned item-based behaviour and styling takes\r\n * over.\r\n *\r\n * Alternative styling will be on a per customer basis and should always be published as a recipe\r\n * in the theme-toolkit.\r\n *\r\n * @author Dieter Raber <dieter@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/answerElimination/eliminator',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoTests/runner/plugin'\r\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory){\r\n    'use strict';\r\n\r\n    /**\r\n     * The public name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'eliminator';\r\n\r\n    /**\r\n     * The prefix of actions triggered through the event loop\r\n     * @type {String}\r\n     */\r\n    var actionPrefix = 'tool-' + pluginName + '-';\r\n\r\n\r\n    /**\r\n     * Some default options for the plugin\r\n     * @type {Object}\r\n     */\r\n    var defaultConfig = {\r\n        // when hiding the buttons, don't remove existing eliminations\r\n        removeEliminationsOnClose: false,\r\n        // when showing the buttons, restore previously set eliminations\r\n        restoreEliminationsOnOpen: false\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: pluginName,\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner();\r\n            var $container = testRunner.getAreaBroker().getContentArea().parent();\r\n            var testConfig = testRunner.getTestData().config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\r\n            var config     = _.defaults(_.clone((testConfig.plugins || {})[pluginName]) || {}, defaultConfig);\r\n\r\n            // register the button in the toolbox\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                control : 'eliminator',\r\n                title : __('Eliminate choices'),\r\n                icon : 'eliminate',\r\n                text : __('Answer Eliminator')\r\n            });\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isPluginEnabled() {\r\n                var context = testRunner.getTestContext() || {},\r\n                    options = context.options || {};\r\n                //to be activated with the special category x-tao-option-eliminator\r\n                return !!options.eliminator;\r\n            }\r\n\r\n            /**\r\n             * Is plugin activated ? if not, then we hide the plugin\r\n             */\r\n            function togglePluginButton() {\r\n                if (isPluginEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            function togglePlugin() {\r\n                if (!self.$choiceInteractions) {\r\n                    return;\r\n                }\r\n                self.$choiceInteractions.toggleClass('eliminable');\r\n                if (isEliminable()) {\r\n                    enableEliminator();\r\n                } else {\r\n                    disableEliminator();\r\n                }\r\n            }\r\n\r\n            function isEliminable() {\r\n                if (!self.$choiceInteractions) {\r\n                    return;\r\n                }\r\n                return self.$choiceInteractions.hasClass('eliminable');\r\n            }\r\n\r\n            function enableEliminator() {\r\n                var $choices;\r\n                if (!self.$choiceInteractions) {\r\n                    return;\r\n                }\r\n                $choices = self.$choiceInteractions.find('.qti-choice');\r\n\r\n                self.button.turnOn();\r\n                self.trigger('start');\r\n\r\n                if(config.restoreEliminationsOnOpen) {\r\n                    $choices.each(function() {\r\n                        var input = this.querySelector('.real-label input');\r\n                        if(this.dataset.wasEliminated) {\r\n                            this.dataset.wasEliminated = null;\r\n                            this.classList.add('eliminated');\r\n                            input.setAttribute('disabled', 'disabled');\r\n                            input.checked = false;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            function disableEliminator() {\r\n                var $choices;\r\n                if (!self.$choiceInteractions) {\r\n                    return;\r\n                }\r\n                $choices = self.$choiceInteractions.find('.qti-choice');\r\n\r\n                self.$choiceInteractions.removeClass('eliminable');\r\n                self.button.turnOff();\r\n                self.trigger('end');\r\n\r\n                $choices.each(function() {\r\n                    if(this.classList.contains('eliminated')) {\r\n                        this.dataset.wasEliminated = true;\r\n                        this.classList.remove('eliminated');\r\n                        this.querySelector('.real-label input').removeAttribute('disabled');\r\n                    }\r\n                });\r\n            }\r\n\r\n            //add a new mask each time the button is pressed\r\n            this.button.on('click', function (e){\r\n                e.preventDefault();\r\n                testRunner.trigger(actionPrefix + 'toggle');\r\n            });\r\n\r\n            // handle the plugin's shortcuts\r\n            if (testConfig.allowShortcuts) {\r\n                _.forEach(pluginShortcuts, function (command, key) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\r\n                        // just fire the action using the event loop\r\n                        testRunner.trigger(actionPrefix + key);\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                });\r\n            }\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', togglePluginButton)\r\n                .on('renderitem', function conditionalInit() {\r\n                    // show button only when in the presence of choice interactions\r\n                    self.$choiceInteractions = $container.find('.qti-choiceInteraction');\r\n                    if(!self.$choiceInteractions.length) {\r\n                        self.hide();\r\n                        return;\r\n                    }\r\n                    if (isPluginEnabled()) {\r\n                        self.show();\r\n                    }\r\n                })\r\n                .on('enabletools renderitem', function (){\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function (){\r\n                    self.disable();\r\n                    disableEliminator();\r\n                })\r\n\r\n                // commands that controls the plugin\r\n                .on(actionPrefix + 'toggle', function () {\r\n                    if (isPluginEnabled()) {\r\n                        togglePlugin();\r\n                    }\r\n                })\r\n                // Answer-eliminator and Answer-masking are mutually exclusive tools\r\n                .on('tool-answer-masking-toggle', function () {\r\n                    if (isEliminable()) {\r\n                        disableEliminator();\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy(){\r\n            shortcut.remove('.' + pluginName);\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable(){\r\n            this.button.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable(){\r\n            this.button.disable();\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show : function show(){\r\n            this.button.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide : function hide(){\r\n            this.button.hide();\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/answerMasking/tpl/mask', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"answer-mask\\\">\\r\\n    <span class=\\\"answer-mask-toggle\\\"></span>\\r\\n</div>\";\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n */\r\n/**\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/answerMasking/answerMasking',[\r\n    'lodash',\r\n    'jquery',\r\n    'core/statifier',\r\n    'ui/component',\r\n    'tpl!taoQtiTest/runner/plugins/tools/answerMasking/tpl/mask'\r\n], function(_, $, statifier, componentFactory, maskTpl) {\r\n    'use strict';\r\n\r\n    var ns = '.answerMasking';\r\n\r\n    /**\r\n     * @param {jQuery} $contentArea - DOM element containing the rendered item\r\n     */\r\n    return function answerMaskingFactory($contentArea) {\r\n        var answerMasking,\r\n            allMasks = [],\r\n\r\n            maskApi = {\r\n                /**\r\n                 * Toggle mask visibility\r\n                 * @returns {component}\r\n                 */\r\n                toggle: function toggle() {\r\n                    if (this.is('masked')) {\r\n                        return this.reveal();\r\n                    } else {\r\n                        return this.mask();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Show the choice under the current mask\r\n                 * @returns {component}\r\n                 */\r\n                reveal: function reveal() {\r\n                    var $container = this.getContainer();\r\n                    $container.removeClass('masked');\r\n                    $container.find('input').removeAttr('disabled');\r\n\r\n                    this.setState('masked', false);\r\n\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Cover the whole choice with the mask\r\n                 * @returns {component}\r\n                 */\r\n                mask: function mask() {\r\n                    var $container = this.getContainer();\r\n                    $container.addClass('masked');\r\n                    $container.find('input').attr('disabled', 'disabled');\r\n\r\n                    this.setState('masked', true);\r\n\r\n                    return this;\r\n                }\r\n            };\r\n\r\n        /**\r\n         * Creates a ui/component to serve as a mask over a QTI Choice\r\n         * @param {jQuery} $container - the qti-choice element\r\n         * @returns {component}\r\n         */\r\n        function createMask($container) {\r\n            return componentFactory(maskApi)\r\n                .setTemplate(maskTpl)\r\n                .on('render', function() {\r\n                    var self = this,\r\n                        $component = this.getElement();\r\n\r\n                    $component.on('click' + ns, function(e) {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n\r\n                        self.toggle();\r\n                    });\r\n                })\r\n                .on('destroy', function() {\r\n                    var $component = this.getElement();\r\n                    $component.off(ns);\r\n                })\r\n                .init()\r\n                .render($container)\r\n                .mask();\r\n        }\r\n\r\n        /**\r\n         * The answer masking helper\r\n         */\r\n        answerMasking = {\r\n            /**\r\n             * Enable the answer masking functionality by creating masks over the Qti Choices\r\n             */\r\n            enable: function enable() {\r\n                var $choiceInteractions = $contentArea.find('.qti-choiceInteraction'),\r\n                    $qtiChoices = $contentArea.find('.qti-choice');\r\n\r\n                allMasks = [];\r\n\r\n                $choiceInteractions.addClass('maskable');\r\n\r\n                $qtiChoices.each(function () {\r\n                    var $choice = $(this);\r\n                    allMasks.push(createMask($choice));\r\n                });\r\n\r\n                this.setState('enabled', true);\r\n            },\r\n\r\n            /**\r\n             * Remove any answerMasking-related markup from the rendered item\r\n             */\r\n            disable: function disable() {\r\n                var $choiceInteractions = $contentArea.find('.qti-choiceInteraction');\r\n                $choiceInteractions.removeClass('maskable');\r\n\r\n                allMasks.forEach(function(mask) {\r\n                    mask.reveal(); // remove class on container\r\n                    mask.destroy();\r\n                });\r\n\r\n                allMasks = [];\r\n\r\n                this.setState('enabled', false);\r\n            },\r\n\r\n            /**\r\n             * Return the current state of the masks\r\n             * @returns {Boolean[]} - true if the choice is masked, false if the choice is revealed\r\n             */\r\n            getMasksState: function getMasksState() {\r\n                var state = allMasks.map(function (mask) {\r\n                    return mask.is('masked');\r\n                });\r\n                return state;\r\n            },\r\n\r\n            /**\r\n             * Restore a previously saved state for the masked choices\r\n             * @param {Boolean[]} state - array of boolean, most probably given by the getMasksState method\r\n             */\r\n            setMasksState: function setMasksState(state) {\r\n                state = state || [];\r\n\r\n                state.forEach(function (masked, index) {\r\n                    var mask = allMasks[index];\r\n\r\n                    if (_.isObject(mask) && _.isFunction(mask.reveal) && ! masked) {\r\n                        mask.reveal();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        statifier(answerMasking);\r\n\r\n        return answerMasking;\r\n    };\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n *\r\n */\r\n/**\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/answerMasking/plugin',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoQtiTest/runner/plugins/tools/answerMasking/answerMasking'\r\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, answerMaskingFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The public name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'answer-masking';\r\n\r\n    /**\r\n     * The prefix of actions triggered through the event loop\r\n     * @type {String}\r\n     */\r\n    var actionPrefix = 'tool-' + pluginName + '-';\r\n\r\n    /**\r\n     * Stores the masking state for each item in the test\r\n     * @type {Object}\r\n     */\r\n    var itemStates = {};\r\n\r\n    /**\r\n     * Default Configuration\r\n     */\r\n    var defaultConfig = {\r\n        restoreStateOnToggle: true,\r\n        restoreStateOnMove: true\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: pluginName,\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner(),\r\n                testData = testRunner.getTestData() || {},\r\n                testConfig = testData.config || {},\r\n                pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultConfig),\r\n                pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {},\r\n                $contentArea = this.getAreaBroker().getContentArea();\r\n\r\n            var answerMasking = answerMaskingFactory($contentArea);\r\n\r\n            function isPluginEnabled() {\r\n                var context = testRunner.getTestContext() || {},\r\n                    options = context.options || {};\r\n                //to be activated with the special category x-tao-option-answerMasking\r\n                return options.answerMasking && itemContainsChoiceInteraction();\r\n            }\r\n\r\n            function itemContainsChoiceInteraction() {\r\n                var $container = self.getAreaBroker().getContentArea().parent();\r\n                return $container.find('.qti-choiceInteraction').length;\r\n            }\r\n\r\n            function togglePluginButton() {\r\n                if (isPluginEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            function togglePlugin() {\r\n                if (! answerMasking.getState('enabled')) {\r\n                    enableMasking();\r\n                } else {\r\n                    disableMasking();\r\n                }\r\n            }\r\n\r\n            function enableMasking() {\r\n                var testContext = testRunner.getTestContext(),\r\n                    itemId = testContext.itemIdentifier;\r\n\r\n                answerMasking.enable();\r\n                if (pluginConfig.restoreStateOnToggle) {\r\n                    answerMasking.setMasksState(itemStates[itemId]);\r\n                }\r\n                self.button.turnOn();\r\n                self.trigger('start');\r\n            }\r\n\r\n            function disableMasking() {\r\n                var testContext = testRunner.getTestContext(),\r\n                    itemId = testContext.itemIdentifier;\r\n\r\n                if (answerMasking.getState('enabled')) {\r\n                    itemStates[itemId] = answerMasking.getMasksState();\r\n                }\r\n\r\n                answerMasking.disable();\r\n                self.button.turnOff();\r\n                self.trigger('end');\r\n            }\r\n\r\n            // create buttons\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                title: __('Answer Masking'),\r\n                icon: 'result-nok',\r\n                control: 'answer-masking',\r\n                text: __('Answer Masking')\r\n            });\r\n\r\n            // attach user events\r\n            this.button\r\n                .on('click', function(e) {\r\n                    e.preventDefault();\r\n                    testRunner.trigger(actionPrefix + 'toggle');\r\n                });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger(actionPrefix + 'toggle');\r\n                    }, { avoidInput: true, prevent: true });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', function() {\r\n                    var testContext = testRunner.getTestContext(),\r\n                        itemId = testContext.itemIdentifier;\r\n\r\n                    if (! pluginConfig.restoreStateOnMove) {\r\n                        itemStates[itemId] = [];\r\n                    }\r\n\r\n                    togglePluginButton();\r\n                })\r\n                .on('enabletools renderitem', function () {\r\n                    togglePluginButton(); // we repeat this here as we need the rendered item markup in order to decide whether the plugin is enabled\r\n                    self.enable();\r\n                })\r\n                .on('beforeunloaditem', function() {\r\n                    disableMasking();\r\n                })\r\n                .on('disabletools unloaditem', function () {\r\n                    self.disable();\r\n                    disableMasking();\r\n                })\r\n                .on(actionPrefix + 'toggle', function () {\r\n                    if (isPluginEnabled()) {\r\n                        togglePlugin();\r\n                    }\r\n                })\r\n                // Answer-eliminator and Answer-masking are mutually exclusive tools\r\n                .on('tool-eliminator-toggle', function () {\r\n                    disableMasking();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + this.getName());\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable: function enable() {\r\n            this.button.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable: function disable() {\r\n            this.button.disable();\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show() {\r\n            this.button.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide() {\r\n            this.button.hide();\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/areaMasking/mask', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"mask\\\">\\r\\n   <div class=\\\"inner\\\"></div>\\r\\n   <div class=\\\"controls\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"view\\\"  title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Preview the covered area\", options) : helperMissing.call(depth0, \"__\", \"Preview the covered area\", options)))\n    + \"\\\"><span class=\\\"icon-preview\\\"></span></a>\\r\\n        <a href=\\\"#\\\" class=\\\"close\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close the mask\", options) : helperMissing.call(depth0, \"__\", \"Close the mask\", options)))\n    + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\r\\n   </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\n/**\r\n * Create a movable and resizable element in order to mask areas.\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/areaMasking/mask',[\r\n    'lodash',\r\n    'ui/movableComponent',\r\n    'tpl!taoQtiTest/runner/plugins/tools/areaMasking/mask'\r\n], function (_, movableComponent, areaMaskingTpl) {\r\n    'use strict';\r\n\r\n    var defaultConfig = {\r\n        previewDelay: 3000,\r\n        stackingScope: 'test-runner'\r\n    };\r\n\r\n    /**\r\n     * Creates a new masking component\r\n     * @returns {maskComponent} the component (uninitialized)\r\n     */\r\n    function maskingComponentFactory () {\r\n\r\n        /**\r\n         * @typedef {Object} maskComponent\r\n         */\r\n        var maskComponent = movableComponent({\r\n            /**\r\n             * Preview the content under the masked area\r\n             * @returns {maskComponent} chains\r\n             *\r\n             * @fires maskComponent#preview\r\n             */\r\n            preview : function preview(){\r\n                var self   = this;\r\n                var delay  = this.config.previewDelay || 1000;\r\n                if( this.is('rendered') && !this.is('disabled') && !this.is('previewing') ){\r\n                    this.setState('previewing', true)\r\n                        .trigger('preview');\r\n                    _.delay(function(){\r\n                        self.setState('previewing', false);\r\n                    }, delay);\r\n                }\r\n                return this;\r\n            }\r\n        }, defaultConfig);\r\n\r\n\r\n        maskComponent\r\n            .setTemplate(areaMaskingTpl)\r\n            .on('render', function(){\r\n                var self     = this;\r\n                var $element = this.getElement();\r\n\r\n                $element\r\n                    .on('click touchstart', '.view', function(e){\r\n                        e.preventDefault();\r\n                        self.preview();\r\n                    })\r\n                    .on('click touchstart', '.close', function(e){\r\n                        e.preventDefault();\r\n                        self.destroy();\r\n                    });\r\n            });\r\n\r\n        return maskComponent;\r\n    }\r\n\r\n    return maskingComponentFactory;\r\n});\r\n\n","\r\n/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\n/**\r\n * Area Masking Plugin\r\n *\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/areaMasking/areaMasking',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoTests/runner/plugin',\r\n    'taoQtiTest/runner/plugins/tools/areaMasking/mask'\r\n], function ($, _, __, hider, shortcut, namespaceHelper, pluginFactory, maskComponent){\r\n    'use strict';\r\n\r\n    /**\r\n     * The public name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'area-masking';\r\n\r\n    /**\r\n     * The prefix of actions triggered through the event loop\r\n     * @type {String}\r\n     */\r\n    var actionPrefix = 'tool-' + pluginName + '-';\r\n\r\n    /**\r\n     * Some default options for the plugin\r\n     * @type {Object}\r\n     */\r\n    var defaultConfig = {\r\n        max : 5,\r\n        foo : true\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: pluginName,\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner();\r\n            var $container = testRunner.getAreaBroker().getContentArea().parent();\r\n            var testConfig = testRunner.getTestData().config || {};\r\n            var config     = _.defaults(_.clone((testConfig.plugins || {})[pluginName]) || {}, defaultConfig);\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\r\n\r\n            function addMask() {\r\n                maskComponent()\r\n                    .on('render', function(){\r\n                        self.masks.push(this);\r\n                        self.button.turnOn();\r\n\r\n                        /**\r\n                         * @event areaMasking#maskadd\r\n                         */\r\n                        self.trigger('maskadd');\r\n                    })\r\n                    .on('destroy', function(){\r\n                        self.masks = _.without(self.masks, this);\r\n                        if(self.masks.length < config.max){\r\n                            self.enable();\r\n                        }\r\n                        if (self.masks.length === 0) {\r\n                            self.button.turnOff();\r\n                            self.trigger('close');\r\n                        }\r\n\r\n                        /**\r\n                         * @event areaMasking#maskclose\r\n                         */\r\n                        self.trigger('maskclose');\r\n                    })\r\n                    .init({\r\n                        x : self.masks.length * 10,\r\n                        y : self.masks.length * 10\r\n                    })\r\n                    .render($container);\r\n            }\r\n\r\n            //keep a ref to all masks\r\n            this.masks = [];\r\n\r\n            // register the element in the Toolbox\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                control : 'area-masking',\r\n                text : __('Masking'),\r\n                title : __('Covers parts of the item'),\r\n                icon : 'eye-slash'\r\n            });\r\n\r\n            //add a new mask each time the button is pressed\r\n            this.button.on('click', function (e){\r\n                e.preventDefault();\r\n                testRunner.trigger(actionPrefix + 'toggle');\r\n            });\r\n\r\n            // handle the plugin's shortcuts\r\n            if (testConfig.allowShortcuts) {\r\n                _.forEach(pluginShortcuts, function (command, key) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\r\n                        // just fire the action using the event loop\r\n                        testRunner.trigger(actionPrefix + key);\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                });\r\n            }\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isEnabled() {\r\n                var context = testRunner.getTestContext(),\r\n                    options = context.options || {};\r\n                //to be activated with the special category x-tao-option-areaMasking\r\n                return !!options.areaMasking;\r\n            }\r\n\r\n            /**\r\n             * Is plugin activated ? if not, then we hide the plugin\r\n             */\r\n            function togglePlugin() {\r\n                if (isEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', togglePlugin)\r\n                .on('enabletools renderitem', function (){\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function (){\r\n                    self.disable();\r\n                    //remove all masks\r\n                    _.invoke(self.masks, 'destroy');\r\n                })\r\n                // commands that controls the plugin\r\n                .on(actionPrefix + 'toggle', function () {\r\n                    if (isEnabled()) {\r\n                        if (self.masks.length === 0) {\r\n                            self.trigger('open');\r\n                        }\r\n                        if (self.masks.length < config.max) {\r\n                            addMask();\r\n                        } else if (config.max === 1) {\r\n                            _.invoke(self.masks, 'destroy');\r\n                        }\r\n                    }\r\n                });\r\n\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy(){\r\n            shortcut.remove('.' + pluginName);\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable(){\r\n            this.button.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable(){\r\n            this.button.disable();\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show : function show(){\r\n            this.button.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide : function hide(){\r\n            this.button.hide();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Tool Plugin : Calculator\r\n *\r\n * @author Sam <sam@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/calculator',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/hider',\r\n    'ui/calculator',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoTests/runner/plugin'\r\n], function ($, _, __, hider, calculatorFactory, shortcut, namespaceHelper, pluginFactory){\r\n    'use strict';\r\n\r\n    var _default = {\r\n        height : 360,\r\n        width : 240,\r\n        top : 50,\r\n        left : 10,\r\n        stackingScope: 'test-runner'\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n        name : 'calculator',\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var areaBroker = this.getAreaBroker();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginsConfig = testConfig.plugins || {};\r\n            var config = pluginsConfig.calculator || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isEnabled() {\r\n                var context = testRunner.getTestContext() || {},\r\n                    options = context.options || {};\r\n\r\n                //to be activated with the special category x-tao-option-calculator\r\n                return !!options.calculator;\r\n            }\r\n\r\n            /**\r\n             * Is calculator activated ? if not, then we hide the plugin\r\n             */\r\n            function togglePlugin() {\r\n                if (isEnabled()) {//allow calculator\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Build the calculator component\r\n             * @param {Function} [calcTpl] - an optional alternative template for the calculator\r\n             */\r\n            function buildCalculator(calcTpl){\r\n                self.calculator = calculatorFactory(_.defaults({\r\n                    renderTo: self.$calculatorContainer,\r\n                    replace: true,\r\n                    draggableContainer: areaBroker.getContainer(),\r\n                    alternativeTemplate : calcTpl || null\r\n                }, _default)).on('show', function () {\r\n                    self.trigger('open');\r\n                    self.button.turnOn();\r\n                }).on('hide', function () {\r\n                    self.trigger('close');\r\n                    self.button.turnOff();\r\n                }).show();\r\n            }\r\n\r\n            /**\r\n             * Show/hide the calculator\r\n             */\r\n            function toggleCalculator() {\r\n                if (self.getState('enabled') !== false) {\r\n                    if (self.calculator) {\r\n                        //just show/hide the calculator widget\r\n                        if (self.calculator.is('hidden')) {\r\n                            self.calculator.show();\r\n                        } else {\r\n                            self.calculator.hide();\r\n                        }\r\n                    } else {\r\n                        //build calculator widget\r\n                        if(config.template){\r\n                            require(['tpl!' + config.template.replace(/\\.tpl$/, '')], function(calcTpl){\r\n                                buildCalculator(calcTpl);\r\n                            }, function(){\r\n                                //in case of error, display the default calculator:\r\n                                buildCalculator();\r\n                            });\r\n                        }else{\r\n                            buildCalculator();\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            //build element (detached)\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                control : 'calculator',\r\n                title : __('Open Calculator'),\r\n                icon : 'table',\r\n                text : __('Calculator')\r\n            });\r\n            this.$calculatorContainer = $('<div class=\"widget-calculator\">');\r\n\r\n            //init calculator instance var, it will be created only necessary\r\n            this.calculator = null;\r\n\r\n            //attach behavior\r\n            this.button.on('click', function (e){\r\n                //prevent action if the click is made inside the form which is a sub part of the button\r\n                if($(e.target).closest('.widget-calculator').length){\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-calculator');\r\n            });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-calculator');\r\n                    }, {\r\n                        avoidInput: true,\r\n                        allowIn: '.widget-calculator'\r\n                    });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            togglePlugin();\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', togglePlugin)\r\n                .on('enabletools renderitem', function (){\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function (){\r\n                    self.disable();\r\n                    if(self.calculator){\r\n                        //destroy calculator to create a new instance of calculator each time\r\n                        self.calculator.destroy();\r\n                        self.calculator = null;\r\n                    }\r\n                })\r\n                .on('tool-calculator', function () {\r\n                    if (isEnabled()) {\r\n                        toggleCalculator();\r\n                    }\r\n                });\r\n        },\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render : function render(){\r\n            var areaBroker = this.getAreaBroker();\r\n            areaBroker.getContainer().append(this.$calculatorContainer);\r\n        },\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy(){\r\n            shortcut.remove('.' + this.getName());\r\n\r\n            this.$calculatorContainer.remove();\r\n            if(this.calculator){\r\n                this.calculator.destroy();\r\n            }\r\n        },\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable(){\r\n            this.button.enable();\r\n        },\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable(){\r\n            this.button.disable();\r\n            if(this.calculator){\r\n                this.calculator.hide();\r\n            }\r\n        },\r\n        /**\r\n         * Show the button\r\n         */\r\n        show : function show(){\r\n            this.button.show();\r\n        },\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide : function hide(){\r\n            this.button.hide();\r\n            if(this.calculator){\r\n                this.calculator.hide();\r\n            }\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/comment/comment', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div data-control=\\\"qti-comment\\\" class=\\\"hidden\\\">\\r\\n    <textarea data-control=\\\"qti-comment-text\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Your comment…\", options) : helperMissing.call(depth0, \"__\", \"Your comment…\", options)))\n    + \"\\\"></textarea>\\r\\n    <button data-control=\\\"qti-comment-cancel\\\" class=\\\"btn-info small\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cancel\", options) : helperMissing.call(depth0, \"__\", \"Cancel\", options)))\n    + \"</button>\\r\\n    <button data-control=\\\"qti-comment-send\\\" class=\\\"btn-info small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Send\", options) : helperMissing.call(depth0, \"__\", \"Send\", options)))\n    + \"</button>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Tool Plugin : Comment form\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/comment/comment',[\r\n    'jquery',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/hider',\r\n    'ui/stacker',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'tpl!taoQtiTest/runner/plugins/tools/comment/comment'\r\n], function ($, __, pluginFactory, hider, stackerFactory, shortcut, namespaceHelper, commentTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'comment',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n            var stacker = stackerFactory('test-runner');\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isEnabled() {\r\n                var context = testRunner.getTestContext();\r\n                return !!context.options.allowComment;\r\n            }\r\n\r\n            /**\r\n             * Can we comment ? if not, then we hide the plugin\r\n             */\r\n            function togglePlugin() {\r\n                if (isEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Show/hide the comment panel\r\n             */\r\n            function toggleComment() {\r\n                if (self.getState('enabled') !== false) {\r\n                    //just show/hide the form\r\n                    hider.toggle(self.$form);\r\n                    if (!hider.isHidden(self.$form)) {\r\n                        //reset the form on each display\r\n                        self.$input.val('').focus();\r\n                        self.button.turnOn();\r\n                        stacker.bringToFront(self.$form);\r\n                    } else {\r\n                        self.button.turnOff();\r\n                    }\r\n                }\r\n            }\r\n\r\n            // register button in toolbox\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                control: 'comment',\r\n                title: __('Leave a comment'),\r\n                icon: 'tag',\r\n                text: __('Comment')\r\n            });\r\n\r\n            //get access to controls\r\n            this.button.on('render', function() {\r\n                self.$button = self.button.getElement();\r\n                self.$form = $(commentTpl()).appendTo(self.$button);\r\n                self.$input = self.$button.find('[data-control=\"qti-comment-text\"]');\r\n                self.$cancel = self.$button.find('[data-control=\"qti-comment-cancel\"]');\r\n                self.$submit = self.$button.find('[data-control=\"qti-comment-send\"]');\r\n\r\n                stacker.autoBringToFront(self.$form);\r\n\r\n                //hide the form without submit\r\n                self.$cancel.on('click', function () {\r\n                    hider.hide(self.$form);\r\n                    self.button.turnOff();\r\n                });\r\n\r\n                //submit the comment, then hide the form\r\n                self.$submit.on('click', function () {\r\n                    var comment = self.$input.val();\r\n\r\n                    if (comment) {\r\n                        self.disable();\r\n                        self.button.turnOff();\r\n\r\n                        testRunner.getProxy()\r\n                            .callTestAction('comment', {\r\n                                comment: comment\r\n                            })\r\n                            .then(function () {\r\n                                hider.hide(self.$form);\r\n                                self.enable();\r\n                            })\r\n                            .catch(function () {\r\n                                hider.hide(self.$form);\r\n                                self.enable();\r\n                            });\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n            //attach behavior\r\n            this.button.on('click', function (e) {\r\n                //prevent action if the click is made inside the form which is a sub part of the button\r\n                if ($(e.target).closest('[data-control=\"qti-comment\"]').length) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-comment');\r\n            });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-comment');\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            togglePlugin();\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', togglePlugin)\r\n                .on('renderitem enabletools', function () {\r\n                    self.enable();\r\n                })\r\n                .on('unloaditem disabletools', function () {\r\n                    self.disable();\r\n                })\r\n                .on('tool-comment', function () {\r\n                    if (isEnabled()) {\r\n                        toggleComment();\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + this.getName());\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable: function enable() {\r\n            this.button.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable: function disable() {\r\n            if (this.$form) {\r\n                hider.hide(this.$form);\r\n            }\r\n            this.button.disable();\r\n            this.button.turnOff();\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show() {\r\n            this.button.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide() {\r\n            if (this.$form) {\r\n                hider.hide(this.$form);\r\n            }\r\n            this.button.hide();\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/documentViewer/panel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"document-viewer-plugin hidden\\\">\\r\\n    <div class=\\\"viewer-overlay\\\"></div>\\r\\n    <div class=\\\"viewer-panel\\\">\\r\\n        <div class=\\\"viewer-header\\\">\\r\\n            <span class=\\\"viewer-title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n            <span class=\\\"icon icon-close\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"viewer-content\\\">\";\n  if (helper = helpers.content) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.content); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\r\\n        <div class=\\\"viewer-footer\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Tool Plugin : View a document\r\n *\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/documentViewer/documentViewer',[\r\n    'jquery',\r\n    'lodash',\r\n    'ui/hider',\r\n    'ui/documentViewer',\r\n    'ui/documentViewer/providers/pdfViewer',\r\n    'taoTests/runner/plugin',\r\n    'tpl!taoQtiTest/runner/plugins/tools/documentViewer/panel'\r\n], function ($, _, hider, viewerFactory, pdfViewer, pluginFactory, panelTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'documentViewer';\r\n\r\n    /**\r\n     * Shows the panel, trigger the `panelshow` event\r\n     *\r\n     * @param plugin\r\n     */\r\n    function showPanel(plugin) {\r\n        hider.show(plugin.controls.$panel);\r\n        plugin.trigger('panelshow');\r\n        $(window).on('resize.' + plugin.getName(), _.debounce(_.partial(resizeViewer, plugin), 50));\r\n    }\r\n\r\n    /**\r\n     * Hides the panel, trigger the `panelhide` event\r\n     *\r\n     * @param plugin\r\n     */\r\n    function hidePanel(plugin) {\r\n        hider.hide(plugin.controls.$panel);\r\n        plugin.trigger('panelhide');\r\n        $(window).off('resize.' + plugin.getName());\r\n    }\r\n\r\n    /**\r\n     * Hides the panel if it is visible\r\n     *\r\n     * @param plugin\r\n     * @returns {Boolean} Returns `true` if the panel was visible and has been hidden\r\n     */\r\n    function hideIfVisible(plugin) {\r\n        var isVisible = !hider.isHidden(plugin.controls.$panel, true);\r\n        if (isVisible) {\r\n            hidePanel(plugin);\r\n        }\r\n        return isVisible;\r\n    }\r\n\r\n    /**\r\n     * Initializes the event handlers for the panel container\r\n     *\r\n     * @param plugin\r\n     */\r\n    function initPanelEvents(plugin) {\r\n        var namespace = '.' + plugin.getName();\r\n        var stopEvents = ['click', 'mousedown', 'mouseup', 'touchstart', 'touchend', 'keyup', 'keydow', 'keypress', 'scroll', 'drop'].join(namespace + ' ') + namespace;\r\n        var hideViewer = _.partial(hidePanel, plugin);\r\n\r\n        function stopPropagation(e) {\r\n            e.stopImmediatePropagation();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        plugin.controls.$overlay\r\n            .off(namespace)\r\n            .on('click' + namespace, hideViewer)\r\n            .on(stopEvents, stopPropagation);\r\n\r\n        plugin.controls.$panel\r\n            .off(namespace)\r\n            .on('click' + namespace, '.icon-close', hideViewer)\r\n            .on(stopEvents, stopPropagation);\r\n    }\r\n\r\n    /**\r\n     * Resizes the viewer to fit the panel content area\r\n     * @param plugin\r\n     */\r\n    function resizeViewer(plugin) {\r\n        var $content = plugin.controls.$content;\r\n        plugin.viewer.setSize($content.width(), $content.height());\r\n    }\r\n\r\n    // all document viewers need to be registered\r\n    viewerFactory.registerProvider('pdf', pdfViewer);\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: pluginName,\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var $panel = $(panelTpl());\r\n\r\n            /**\r\n             * @param {Object} data\r\n             * @param {String} data.label - document title\r\n             * @param {String} data.document - document url\r\n             */\r\n            function displayViewer(data) {\r\n                if (self.getState('enabled') !== false) {\r\n                    showPanel(self);\r\n                    self.controls.$title.text(data.label);\r\n                    resizeViewer(self);\r\n                    self.viewer.load(data.document, 'pdf');\r\n                }\r\n            }\r\n\r\n            this.controls = {\r\n                $panel: $panel,\r\n                $overlay: $panel.find('.viewer-overlay'),\r\n                $title: $panel.find('.viewer-title'),\r\n                $content: $panel.find('.viewer-content')\r\n            };\r\n\r\n            this.viewer = viewerFactory({\r\n                renderTo: this.controls.$content,\r\n                replace: true,\r\n                fitToWidth: true,\r\n                allowSearch: true\r\n            });\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('renderitem enabletools', function () {\r\n                    self.enable();\r\n                })\r\n                .on('renderitem', function () {\r\n                    self.getAreaBroker().getContentArea()\r\n                        .append(self.controls.$panel)\r\n                        .off('.' + self.getName())\r\n                        .on('viewDocument.' + self.getName(), function (event) {\r\n                            var data = event.originalEvent.detail;\r\n                            displayViewer(data);\r\n                        });\r\n                    initPanelEvents(self);\r\n                })\r\n                .on('move', function () {\r\n                    hideIfVisible(self);\r\n                })\r\n                .on('skip', function () {\r\n                    hideIfVisible(self);\r\n                })\r\n                .on('unloaditem disabletools', function () {\r\n                    self.disable();\r\n                })\r\n                .on('tool-documentViewer', function(data) {\r\n                    displayViewer(data);\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's render phase\r\n         */\r\n        render: function render() {\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            this.getAreaBroker().getContentArea().off('.' + this.getName());\r\n\r\n            if (this.viewer) {\r\n                this.viewer.destroy();\r\n            }\r\n\r\n            if (this.controls.$panel) {\r\n                this.controls.$panel.remove();\r\n            }\r\n\r\n            this.viewer = null;\r\n            this.controls = {};\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable: function enable() {\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable: function disable() {\r\n            hideIfVisible(this);\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show() {\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide() {\r\n            hideIfVisible(this);\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n/**\r\n * This plugin allows the test taker to select text inside an item.\r\n * Highlight is preserved when navigating between items\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/highlighter/highlighter',[\r\n    'lodash',\r\n    'jquery',\r\n    'ui/highlighter'\r\n], function (\r\n    _,\r\n    $,\r\n    highlighterFactory\r\n) {\r\n    'use strict';\r\n    var selection;\r\n\r\n    if (!window.getSelection) throw new Error('Browser does not support getSelection()');\r\n\r\n    selection = window.getSelection();\r\n\r\n    /**\r\n     * Returns an array of active ranges.\r\n     * If browser doesn't support multiple Ranges, returns only the first range\r\n     * see note on https://w3c.github.io/selection-api/#methods\r\n     *\r\n     * @returns {Range[]}\r\n     */\r\n    function getAllRanges() {\r\n        var i, allRanges = [];\r\n\r\n        for (i = 0; i < selection.rangeCount; i++) {\r\n            allRanges.push(selection.getRangeAt(i));\r\n        }\r\n        return allRanges;\r\n    }\r\n\r\n    /**\r\n     * The highlighter Factory\r\n     */\r\n    return function(testRunner) {\r\n\r\n        /**\r\n         * Are we in highlight mode, meaning that each new selection is automatically highlighted\r\n         * without having to press any button\r\n         * @type {boolean}\r\n         */\r\n        var isHighlighting = false;\r\n\r\n        /**\r\n         * Store, for each item, an array containing the its highlight index\r\n         * @type {Object}\r\n         */\r\n        var itemsHighlights = {};\r\n\r\n        /**\r\n         * The helper that does the highlight magic\r\n         */\r\n        var highlightHelper = highlighterFactory({\r\n            className: 'txt-user-highlight',\r\n            containerSelector: '.qti-itemBody'\r\n        });\r\n\r\n        // add event to automatically highlight the recently made selection if needed\r\n        $(document).on('mouseup.highlighter', function() {\r\n            if (isHighlighting && !selection.isCollapsed) {\r\n                highlightHelper.highlightRanges(getAllRanges());\r\n                selection.removeAllRanges();\r\n            }\r\n        });\r\n\r\n        /**\r\n         * The highlighter instance\r\n         */\r\n        return {\r\n            /**\r\n             * toggle highlighting mode on and off\r\n             * @param {Boolean} bool - wanted state\r\n             */\r\n            toggleHighlighting: function toggleHighlighting(bool) {\r\n                isHighlighting = bool;\r\n                if (isHighlighting) {\r\n                    testRunner.trigger('plugin-start.highlighter');\r\n                } else {\r\n                    testRunner.trigger('plugin-end.highlighter');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Either highlight the current or selection, or toggle highlighting mode\r\n             */\r\n            trigger: function trigger() {\r\n                if (!isHighlighting) {\r\n                    if (!selection.isCollapsed) {\r\n                        testRunner.trigger('plugin-start.highlighter');\r\n                        highlightHelper.highlightRanges(getAllRanges());\r\n                        testRunner.trigger('plugin-end.highlighter');\r\n                        selection.removeAllRanges();\r\n                    } else {\r\n                        this.toggleHighlighting(true);\r\n                    }\r\n                } else {\r\n                    this.toggleHighlighting(false);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * save the highlight index for the current item\r\n             * @param itemId\r\n             */\r\n            saveHighlight: function saveHighlight(itemId) {\r\n                var index = highlightHelper.getHighlightIndex();\r\n                if (index && index.length > 0) {\r\n                    itemsHighlights[itemId] = index;\r\n                }\r\n            },\r\n\r\n\r\n            /**\r\n             * restore the highlight index on the current item\r\n             * @param itemId\r\n             */\r\n            restoreHighlight: function restoreHighlight(itemId) {\r\n                var index = itemsHighlights[itemId];\r\n                if (index && index.length > 0) {\r\n                    highlightHelper.highlightFromIndex(index);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * remove all highlights\r\n             */\r\n            clearHighlights: function clearHighlights() {\r\n                highlightHelper.clearHighlights();\r\n                selection.removeAllRanges();\r\n            }\r\n        };\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Tool Plugin : Text Highlighter\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/highlighter/plugin',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoQtiTest/runner/plugins/tools/highlighter/highlighter'\r\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, highlighterFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'highlighter',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n\r\n            var highlighter = highlighterFactory(testRunner);\r\n\r\n            // create buttons\r\n            this.buttonMain = this.getAreaBroker().getToolbox().createEntry({\r\n                title: __('Highlight Text'),\r\n                icon: 'text-marker',\r\n                control: 'highlight-trigger',\r\n                text: __('Highlight')\r\n            });\r\n\r\n            this.buttonRemove = this.getAreaBroker().getToolbox().createEntry({\r\n                title: __('Clear all active highlights'),\r\n                control: 'highlight-clear',\r\n                text: __('Clear Highlights')\r\n            });\r\n\r\n            // attach user events\r\n            this.buttonMain\r\n                .on('mousedown', function(e) { // using 'mousedown' instead of 'click' to avoid losing current selection\r\n                    e.preventDefault();\r\n                    testRunner.trigger('tool-highlight');\r\n                });\r\n\r\n            this.buttonRemove\r\n                .on('click', function(e) {\r\n                    e.preventDefault();\r\n                    testRunner.trigger('tool-highlight-remove');\r\n                });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-highlight');\r\n                    }, { avoidInput: true, prevent: true });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isEnabled() {\r\n                var context = testRunner.getTestContext() || {},\r\n                    options = context.options || {};\r\n                //to be activated with the special category x-tao-option-highlighter\r\n                return !!options.highlighter;\r\n            }\r\n\r\n            /**\r\n             * Is plugin activated ? if not, then we hide the plugin\r\n             */\r\n            function togglePlugin() {\r\n                if (isEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', togglePlugin)\r\n                .on('enabletools renderitem', function () {\r\n                    self.enable();\r\n                })\r\n                .on('renderitem', function() {\r\n                    var testContext = testRunner.getTestContext();\r\n                    highlighter.restoreHighlight(testContext.itemIdentifier);\r\n                })\r\n                .on('beforeunloaditem', function() {\r\n                    var testContext = testRunner.getTestContext();\r\n                    highlighter.saveHighlight(testContext.itemIdentifier);\r\n                })\r\n                .on('disabletools unloaditem', function () {\r\n                    self.disable();\r\n                    highlighter.toggleHighlighting(false);\r\n                })\r\n                .on('tool-highlight', function () {\r\n                    if (isEnabled()) {\r\n                        highlighter.trigger();\r\n                    }\r\n                })\r\n                .on('tool-highlight-remove', function () {\r\n                    highlighter.clearHighlights();\r\n                })\r\n                .on('plugin-start.highlighter', function() {\r\n                    self.buttonMain.turnOn();\r\n                })\r\n                .on('plugin-end.highlighter', function() {\r\n                    self.buttonMain.turnOff();\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + this.getName());\r\n            $(document).off('.highlighter');\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable: function enable() {\r\n            this.buttonMain.enable();\r\n            this.buttonRemove.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable: function disable() {\r\n            this.buttonMain.disable();\r\n            this.buttonRemove.disable();\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show() {\r\n            this.buttonMain.show();\r\n            this.buttonRemove.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide() {\r\n            this.buttonMain.hide();\r\n            this.buttonRemove.hide();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Tool Plugin : item Theme Switcher\r\n *\r\n * @author\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/itemThemeSwitcher/itemThemeSwitcher',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/hider',\r\n    'ui/themes',\r\n    'util/shortcut',\r\n    'util/namespace'\r\n], function ($, _, __, pluginFactory, hider, themeHandler, shortcut, namespaceHelper) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: 'itemThemeSwitcher',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n            var themesConfig = themeHandler.get('items') || {};\r\n            var state = {\r\n                availableThemes: [],\r\n                defaultTheme: '',\r\n                selectedTheme: ''\r\n            };\r\n\r\n            /**\r\n             * Load the selected theme\r\n             * @param themeId\r\n             */\r\n            function changeTheme(themeId) {\r\n                var $qtiItem = $('.qti-item');\r\n                state.selectedTheme = themeId;\r\n\r\n                if ($qtiItem) {\r\n                    _.defer(function(){\r\n                        $qtiItem.trigger('themechange', [state.selectedTheme]);\r\n                    });\r\n                }\r\n            }\r\n\r\n            //init plugin state\r\n            if (themesConfig) {\r\n                if (themesConfig.default) {\r\n                    state.defaultTheme = themesConfig.default;\r\n                    state.selectedTheme = themesConfig.default;\r\n                }\r\n                if (themesConfig.available) {\r\n                    _.forEach(themesConfig.available, function (theme) {\r\n                        state.availableThemes.push({\r\n                            id: theme.id,\r\n                            label: theme.name\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            // register toolbox button\r\n            this.menuButton = this.getAreaBroker().getToolbox().createMenu({\r\n                control: 'color-contrast',\r\n                title: __('Change the current color preset'),\r\n                icon: 'contrast',\r\n                text: __('Contrast')\r\n            });\r\n\r\n            this.menuButton.on('click', function (e) {\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-themeswitcher-toggle');\r\n            });\r\n\r\n\r\n            // register menu entries\r\n            state.availableThemes.forEach(function (theme) {\r\n                var themeEntry = self.getAreaBroker().getToolbox().createEntry({\r\n                    control: theme.id,\r\n                    title: theme.label,\r\n                    icon: 'preview',\r\n                    text: theme.label\r\n                });\r\n\r\n                themeEntry.setMenuId('color-contrast');\r\n\r\n                themeEntry.on('click', function(e) {\r\n                    var themeId = this.config.control;\r\n                    e.preventDefault();\r\n\r\n                    self.menuButton.turnOffAll();\r\n                    this.turnOn();\r\n\r\n                    changeTheme(themeId);\r\n                });\r\n\r\n                if (state.defaultTheme === theme.id) {\r\n                    themeEntry.on('render', function() {\r\n                        this.turnOn();\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-themeswitcher-toggle');\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', function() {\r\n                    self.show();\r\n                })\r\n                .on('renderitem', function () {\r\n                    self.enable();\r\n                    changeTheme(state.selectedTheme);\r\n                })\r\n                .on('enabletools', function() {\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function () {\r\n                    self.disable();\r\n                })\r\n                .on('tool-themeswitcher-toggle', function () {\r\n                    if (self.getState('enabled') !== false) {\r\n                        self.menuButton.toggleMenu();\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + this.getName());\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable: function enable() {\r\n            this.menuButton.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable: function disable() {\r\n            this.menuButton.disable();\r\n\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show() {\r\n            this.menuButton.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide() {\r\n            this.menuButton.hide();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\r\n */\r\n/**\r\n * A compound mask is a mask built with multiple ui/components that interacts with each other.\r\n * The compound mask itself is not a ui/component but mimic most of its API.\r\n *\r\n * Most mask transformations (resize, drag) are achieved by updating a very simple transform model (position, dimensions)\r\n * which is latter applied to the actual individual components at a proper time\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/lineReader/compoundMask',[\r\n    'jquery',\r\n    'lodash',\r\n    'core/statifier',\r\n    'core/eventifier',\r\n    'ui/component',\r\n    'ui/component/placeable',\r\n    'ui/component/draggable',\r\n    'ui/component/resizable',\r\n    'ui/component/stackable'\r\n], function(\r\n    $,\r\n    _,\r\n    statifier,\r\n    eventifier,\r\n    componentFactory,\r\n    makePlaceable,\r\n    makeDraggable,\r\n    makeResizable,\r\n    makeStackable\r\n) {\r\n    'use strict';\r\n\r\n    var defaultDimensions = {\r\n        outerWidth:  600,\r\n        outerHeight: 400,\r\n        innerWidth:  500,\r\n        innerHeight: 20\r\n    };\r\n    var defaultPosition = {\r\n        outerX: 0,\r\n        outerY: 0,\r\n        innerX: 50,\r\n        innerY: 50\r\n    };\r\n    var defaultOptions = {\r\n        dragMinWidth: 10,\r\n        dragMinHeight: 10,\r\n        resizeHandleSize: 10,\r\n        innerDragHeight: 20\r\n    };\r\n    var stackingOptions = {\r\n        stackingScope: 'test-runner'\r\n    };\r\n    var constrains;\r\n\r\n    /**\r\n     * @param {Object} options\r\n     * @param {Number} options.resizeHandleSize - size of the resize handlers on each resizable edge\r\n     * @param {Number} options.dragMinWidth - minimal width for the draggable area of each component.\r\n     * @param {Number} options.dragMinHeight - minimal height for the draggable area of each component.\r\n     * @param {Number} options.innerDragHeight - height of the inner window drag handle\r\n     * @param {Object} dimensions\r\n     * @param {Number} dimensions.outerWidth - overall mask width\r\n     * @param {Number} dimensions.outerHeight - overall mask height\r\n     * @param {Number} dimensions.innerWidth - inner window width\r\n     * @param {Number} dimensions.innerHeight - inner window height\r\n     * @param {Number} position\r\n     * @param {Number} position.outerX - overall mask x\r\n     * @param {Number} position.outerY - overall mask y\r\n     * @param {Number} position.innerX - inner window mask x\r\n     * @param {Number} position.innerY - inner window mask y\r\n     */\r\n    return function compoundMaskFactory(options, dimensions, position) {\r\n        var compoundMask,\r\n            allParts = {},\r\n            innerDrag,\r\n            closer,\r\n            visualGuides = {};\r\n\r\n        /**\r\n         * ============================================\r\n         * Definition of Mask & Overlay component types\r\n         * ============================================\r\n         */\r\n\r\n        /**\r\n         * Create a mask component. They are used for masking (obviously) but also resizing the compound mask\r\n         * @param {Object} maskConfig\r\n         * @param {String} maskConfig.id\r\n         * @param {Function} maskConfig.place - size and position the mask according to the transform model\r\n         * @param {Function} maskConfig.placeOverlay - size and position the overlay according to the transform model\r\n         * @param {Function} maskConfig.beforeResize - used to set the resize limit depending on which edge the resizing occurs\r\n         * @param {Function} maskConfig.onResize - how the resize affect the transform model\r\n         * @param {Object} maskConfig.edges - Interact configuration to specify which edges can be used for resizing\r\n         * @param {Number} maskConfig.minWidth\r\n         * @param {Number} maskConfig.minHeight\r\n         */\r\n        function createMask(maskConfig) {\r\n            var mask,\r\n                maskAPI = {\r\n                    place: maskConfig.place,\r\n                    placeOverlay: maskConfig.placeOverlay,\r\n\r\n                    styleResizableEdges: function styleResizableEdges() {\r\n                        var $element = this.getElement();\r\n                        _.forOwn(this.config.edges, function (isResizable, edgeId) {\r\n                            if (isResizable) {\r\n                                $element.addClass('border-' + edgeId);\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n\r\n            mask = componentFactory(maskAPI, maskConfig);\r\n            makeResizable(mask);\r\n            makeStackable(mask, stackingOptions);\r\n\r\n            return mask\r\n                .on('render', function() {\r\n                    var $element = this.getElement();\r\n\r\n                    this.styleResizableEdges();\r\n\r\n                    $element\r\n                        .addClass('line-reader-mask ' + maskConfig.id)\r\n                        .on('mousedown', function() {\r\n                            bringAllToFront();\r\n                        });\r\n\r\n                    // uncomment this to see what's going on with masks:\r\n                    // $element.css({ border: '1px solid olive'});\r\n                })\r\n                .on('resizestart', function () {\r\n                    innerDrag.hide();\r\n                    closer.hide();\r\n                    invokeOnOverlays('hide');\r\n                    invokeOnMasks('setState', ['resizing', true]);\r\n                })\r\n                .on('beforeresize', maskConfig.beforeResize || _.noop)\r\n                .on('resize', maskConfig.onResize || _.noop)\r\n                .on('resizeend', function () {\r\n                    applyTransformsToOverlays();\r\n                    applyTransformsToInnerDrag();\r\n                    applyTransformsToCloser();\r\n\r\n                    invokeOnMasks('setState', ['resizing', false]);\r\n                    invokeOnOverlays('show');\r\n                    innerDrag.show();\r\n                    closer.show();\r\n                })\r\n                .init();\r\n        }\r\n\r\n\r\n        /**\r\n         * Create a overlay component. Overlay are invisible and are used for dragging.\r\n         * When clicked, the whole mask is hidden and only the overlay is displayed, after being resized to fit the whole mask surface\r\n         * this allows for performance improvement as well as giving the dragged element proper dragging boundaries.\r\n         * Also, visual guides are added, like a fake inner window, during the drag\r\n         * @param {Object} overlayConfig\r\n         * @param {String} overlayConfig.id\r\n         */\r\n        function createOverlay(overlayConfig) {\r\n            var overlay,\r\n                overlayAPI = {\r\n                    transformOverlay: function transformOverlay() {\r\n                        var $element = this.getElement();\r\n\r\n                        this._sizeBackup = this.getSize();\r\n                        this._posBackup = this.getPosition();\r\n\r\n                        this.setSize(dimensions.outerWidth, dimensions.outerHeight)\r\n                            .moveTo(position.outerX, position.outerY);\r\n                        $element.addClass('moving');\r\n\r\n                        this.setState('transformed', true);\r\n                    },\r\n\r\n                    restoreOverlay: function restoreOverlay() {\r\n                        var $element = this.getElement();\r\n\r\n                        if (this.is('transformed')) {\r\n\r\n                            this.setSize(this._sizeBackup.width, this._sizeBackup.height)\r\n                                .moveTo(this._posBackup.x, this._posBackup.y);\r\n                            $element.removeClass('moving');\r\n\r\n                            this._sizeBackup = null;\r\n                            this._posBackup = null;\r\n\r\n                            this.setState('transformed', false);\r\n                        }\r\n                    },\r\n\r\n                    appendVisualGuides: function appendVisualGuides() {\r\n                        var $element = this.getElement(),\r\n                            borderWidth = 1, // this mirror the $lrBorderWidth css variable\r\n                            borderOffset = borderWidth * 2;\r\n\r\n                        $element.append(visualGuides.$maskBg);\r\n                        $element.append(visualGuides.$innerWindow);\r\n\r\n                        visualGuides.$maskBg.css({\r\n                            width:  dimensions.outerWidth - borderOffset,\r\n                            height: dimensions.outerHeight - borderOffset,\r\n                            'border-top-width':     dimensions.topHeight - borderOffset,\r\n                            'border-right-width':   dimensions.rightWidth - borderOffset,\r\n                            'border-bottom-width':  dimensions.bottomHeight - borderOffset,\r\n                            'border-left-width':    dimensions.leftWidth - borderOffset\r\n                        });\r\n\r\n                        visualGuides.$innerWindow.css({\r\n                            width:  dimensions.innerWidth,\r\n                            height: dimensions.innerHeight,\r\n                            left:   dimensions.leftWidth - borderOffset,\r\n                            top:    dimensions.topHeight - borderOffset\r\n                        });\r\n                    },\r\n\r\n                    removeVisualGuides: function removeVisualGuides() {\r\n                        visualGuides.$maskBg.remove();\r\n                        visualGuides.$innerWindow.remove();\r\n                    }\r\n                };\r\n\r\n            overlay = componentFactory(overlayAPI, overlayConfig);\r\n            makeDraggable(overlay);\r\n            makeStackable(overlay, stackingOptions);\r\n\r\n            return overlay\r\n                .on('render', function() {\r\n                    var self = this,\r\n                        $element = this.getElement();\r\n\r\n                    $element\r\n                        .addClass('line-reader-overlay ' + overlayConfig.id)\r\n                        .on('mousedown', function() {\r\n                            bringAllToFront();\r\n                            self.transformOverlay();\r\n                        })\r\n                        .on('mouseup', function() {\r\n                            self.restoreOverlay();\r\n                        });\r\n\r\n                    // uncomment this to see what's going on with overlays:\r\n                    // $element.css({ opacity: 0.5, 'background-color': 'yellow', border: '1px solid brown '});\r\n                })\r\n                .on('dragstart', function() {\r\n                    innerDrag.hide();\r\n                    closer.hide();\r\n                    invokeOnMasks('hide');\r\n                    this.appendVisualGuides();\r\n                })\r\n                .on('dragmove', function moveAllPartsTogether(xOffsetRelative, yOffsetRelative) {\r\n                    // update the transform model\r\n                    position.outerX += xOffsetRelative;\r\n                    position.outerY += yOffsetRelative;\r\n                    position.innerX += xOffsetRelative;\r\n                    position.innerY += yOffsetRelative;\r\n                })\r\n                .on('dragend', function() {\r\n                    this.removeVisualGuides();\r\n                    // although they are already display, calling show() again on the overlays\r\n                    // will force their z-Index at the top of the stack\r\n                    invokeOnAll('show');\r\n                    innerDrag.show();\r\n                    closer.show();\r\n\r\n                    // apply the new transform model\r\n                    applyTransforms();\r\n                })\r\n                .init();\r\n        }\r\n\r\n\r\n        /**\r\n         * ==========================\r\n         * Inner Drag Handle & Closer\r\n         * ==========================\r\n         */\r\n\r\n        /**\r\n         * This handle allows to drag the inner window\r\n         */\r\n        function createInnerDragHandle() {\r\n            // uncomment this (and a few lines below) if debugging is needed:\r\n            // var $boundingBox = $('<div>').css({ position: 'fixed', 'box-sizing': 'border-box', border: '1px solid red' });\r\n\r\n            innerDrag = componentFactory();\r\n\r\n            makeStackable(innerDrag, stackingOptions);\r\n            makeDraggable(innerDrag, {\r\n                dragRestriction: function dragRestriction() {\r\n                    var fixedXY = allParts.nw.mask.getElement().offset(),\r\n                        rect;\r\n\r\n                    rect = {\r\n                        x: fixedXY.left + constrains.minWidth,\r\n                        y: fixedXY.top + (constrains.minHeight + dimensions.innerHeight + options.resizeHandleSize),\r\n                        width: dimensions.outerWidth - (constrains.minWidth * 2 ),\r\n                        height: dimensions.outerHeight -\r\n                            (dimensions.innerHeight + constrains.minHeight + constrains.minBottomHeight - options.innerDragHeight)\r\n                    };\r\n\r\n                    // uncomment to see what's going on:\r\n                    // allParts.ne.mask.getContainer().append($boundingBox);\r\n                    // $boundingBox.css({ width: rect.width, height: rect.height, top: rect.y, left: rect.x });\r\n\r\n                    return rect;\r\n                }\r\n            })\r\n                .on('render', function() {\r\n                    var $element = this.getElement(),\r\n                        $dragIcon = $('<div>', {\r\n                            'class': 'icon icon-move'\r\n                        });\r\n\r\n                    $element.addClass('line-reader-inner-drag');\r\n                    $element.append($dragIcon);\r\n                    $element.on('mousedown', function(e) {\r\n                        e.stopPropagation();\r\n                        bringAllToFront();\r\n                    });\r\n                })\r\n                .on('dragstart', function() {\r\n                    closer.hide();\r\n                    invokeOnOverlays('hide');\r\n                    invokeOnMasks('setState', ['resizing', true]);\r\n                })\r\n                .on('dragmove', function(xOffsetRelative, yOffsetRelative) {\r\n                    position.innerX += xOffsetRelative;\r\n                    position.innerY += yOffsetRelative;\r\n\r\n                    dimensions.leftWidth += xOffsetRelative;\r\n                    dimensions.topHeight += yOffsetRelative;\r\n\r\n                    dimensions.rightWidth   -= xOffsetRelative;\r\n                    dimensions.bottomHeight -= yOffsetRelative;\r\n\r\n                    applyTransformsToMasks();\r\n                })\r\n                .on('dragend', function() {\r\n                    invokeOnOverlays('show');\r\n                    innerDrag.bringToFront();\r\n                    closer.show();\r\n                    invokeOnMasks('setState', ['resizing', false]);\r\n\r\n                    applyTransformsToOverlays();\r\n                })\r\n                .init();\r\n        }\r\n\r\n        /**\r\n         * Close button for the compound mask\r\n         */\r\n        function createCloser() {\r\n            closer = componentFactory();\r\n\r\n            makeStackable(closer, stackingOptions);\r\n            makePlaceable(closer)\r\n                .on('render', function() {\r\n                    var self = this,\r\n                        $element = this.getElement(),\r\n                        $closeIcon = $('<div>', {\r\n                            'class': 'icon icon-result-nok'\r\n                        });\r\n\r\n                    $element.append($closeIcon);\r\n                    $element.addClass('line-reader-closer');\r\n\r\n                    $element.on('mousedown', function() {\r\n                        bringAllToFront();\r\n                    });\r\n\r\n                    $element.on('click', function(e) {\r\n                        e.stopPropagation();\r\n                        self.trigger('click');\r\n                    });\r\n                })\r\n                .init();\r\n        }\r\n\r\n        /**\r\n         * =================\r\n         * Utility functions\r\n         * =================\r\n         */\r\n        function bringAllToFront() {\r\n            invokeOnAll('bringToFront');\r\n            innerDrag.bringToFront();\r\n            closer.bringToFront();\r\n        }\r\n\r\n        function invokeOnAll(fn, args) {\r\n            invokeOnMasks(fn, args);\r\n            invokeOnOverlays(fn, args);\r\n        }\r\n\r\n        function invokeOnMasks(fn, args) {\r\n            invokeOn('mask', fn, args);\r\n        }\r\n\r\n        function invokeOnOverlays(fn, args) {\r\n            invokeOn('overlay', fn, args);\r\n        }\r\n\r\n        /**\r\n         * Invoke a method on all compound mask parts, whether mask or overlays\r\n         * @param {String} target - mask | overlay\r\n         * @param {String} fn - the name of the method to invoke\r\n         * @param {*[]} args - arguments passed on invoke\r\n         */\r\n        function invokeOn(target, fn, args) {\r\n            _.forOwn(allParts, function(part) {\r\n                if (_.isObject(part[target]) && _.isFunction(part[target][fn])) {\r\n                    part[target][fn].apply(part[target], args);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * =================================\r\n         * Transform model related functions\r\n         * =================================\r\n         */\r\n\r\n        function applyTransforms() {\r\n            applyTransformsToMasks();\r\n            applyTransformsToOverlays();\r\n            applyTransformsToInnerDrag();\r\n            applyTransformsToCloser();\r\n        }\r\n\r\n        function applyTransformsToMasks() {\r\n            invokeOnMasks('place');\r\n        }\r\n\r\n        function applyTransformsToOverlays() {\r\n            _.forOwn(allParts, function(part) {\r\n                part.mask.placeOverlay(part.overlay);\r\n            });\r\n        }\r\n\r\n        function applyTransformsToInnerDrag() {\r\n            if (innerDrag) {\r\n                innerDrag\r\n                    .setSize(dimensions.innerWidth, options.innerDragHeight)\r\n                    .moveTo(\r\n                        position.innerX,\r\n                        position.innerY + dimensions.innerHeight + options.resizeHandleSize\r\n                    );\r\n            }\r\n        }\r\n\r\n        function applyTransformsToCloser() {\r\n            if (closer) {\r\n                closer\r\n                    .setSize(\r\n                        constrains.minWidth - options.resizeHandleSize,\r\n                        constrains.minHeight - options.resizeHandleSize\r\n                    )\r\n                    .moveTo(\r\n                        position.outerX + dimensions.outerWidth - constrains.minWidth + 3, // manual adjustment so it looks better\r\n                        position.outerY + options.resizeHandleSize\r\n                    );\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Check that the given transform model respect the current constrains.\r\n         * If not, correct them\r\n         */\r\n        function correctTransforms() {\r\n            if (dimensions.topHeight < constrains.minHeight) {\r\n                dimensions.topHeight = constrains.minHeight;\r\n                position.innerY = position.outerY + constrains.minHeight;\r\n            }\r\n            if (dimensions.innerHeight < constrains.minHeight) {\r\n                dimensions.innerHeight = constrains.minHeight;\r\n            }\r\n            if (dimensions.bottomHeight < constrains.minBottomHeight) {\r\n                dimensions.bottomHeight = constrains.minBottomHeight;\r\n            }\r\n            dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + dimensions.bottomHeight;\r\n\r\n            if (dimensions.leftWidth < constrains.minWidth) {\r\n                dimensions.leftWidth = constrains.minWidth;\r\n                position.innerX = position.outerX + constrains.minWidth;\r\n            }\r\n            if (dimensions.innerWidth < constrains.minWidth) {\r\n                dimensions.innerWidth = constrains.minWidth;\r\n            }\r\n            if (dimensions.rightWidth < constrains.minWidth) {\r\n                dimensions.rightWidth = constrains.minWidth;\r\n            }\r\n            dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + dimensions.rightWidth;\r\n        }\r\n\r\n        /**\r\n         * Update the transform model during a resize affecting the top height\r\n         * @param {Number} newHeight\r\n         * @param {Number} newY\r\n         * @param {Boolean} fromTop - if the resize occurs from the top\r\n         */\r\n        function setTopHeight(newHeight, newY, fromTop) {\r\n            dimensions.topHeight = newHeight;\r\n\r\n            if (fromTop) {\r\n                dimensions.outerHeight = newHeight + dimensions.innerHeight + dimensions.bottomHeight;\r\n                position.outerY = newY;\r\n            } else {\r\n                dimensions.innerHeight = dimensions.outerHeight - newHeight - dimensions.bottomHeight;\r\n                position.innerY = position.outerY + newHeight;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Update the transform model during a resize affecting the right width\r\n         * @param {Number} newWidth\r\n         * @param {Number} newX\r\n         * @param {Boolean} fromLeft - if the resize occurs from the left\r\n         */\r\n        function setRightWidth(newWidth, newX, fromLeft) {\r\n            dimensions.rightWidth = newWidth;\r\n\r\n            if (fromLeft) {\r\n                dimensions.innerWidth = newX - position.innerX;\r\n            } else {\r\n                dimensions.outerWidth = dimensions.leftWidth + dimensions.innerWidth + newWidth;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Update the transform model during a resize affecting the bottom height\r\n         * @param {Number} newHeight\r\n         * @param {Number} newY\r\n         * @param {Boolean} fromTop - if the resize occurs from the top\r\n         */\r\n        function setBottomHeight(newHeight, newY, fromTop) {\r\n            dimensions.bottomHeight = newHeight;\r\n\r\n            if (fromTop) {\r\n                dimensions.innerHeight = newY - position.innerY;\r\n                dimensions.bottomHeight = newHeight;\r\n            } else {\r\n                dimensions.outerHeight = dimensions.topHeight + dimensions.innerHeight + newHeight;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Update the transform model during a resize affecting the left width\r\n         * @param {Number} newWidth\r\n         * @param {Number} newX\r\n         * @param {Boolean} fromLeft - if the resize occurs from the left\r\n         */\r\n        function setLeftWidth(newWidth, newX, fromLeft) {\r\n            dimensions.leftWidth = newWidth;\r\n\r\n            if (fromLeft) {\r\n                dimensions.outerWidth = newWidth + dimensions.innerWidth + dimensions.rightWidth;\r\n                position.outerX = newX;\r\n            } else {\r\n                dimensions.innerWidth = dimensions.outerWidth - newWidth - dimensions.rightWidth;\r\n                position.innerX = position.outerX + newWidth;\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * ======================================\r\n         * Mask parts and other elements creation\r\n         * ======================================\r\n         */\r\n\r\n        function createCompoundMask() {\r\n\r\n            // North\r\n            createPart({\r\n                id: 'n',\r\n                edges: { top: true, right: false, bottom: true, left: false },\r\n\r\n                // move and dimension the mask\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.innerX,\r\n                        position.outerY\r\n                    ).setSize(\r\n                        dimensions.innerWidth,\r\n                        dimensions.topHeight\r\n                    );\r\n                },\r\n\r\n                // move and dimension the overlay\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x,\r\n                        pos.y + options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width,\r\n                        size.height - (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                // set a resize limit whenever resize happens on an inner edge (here, the top inner edge, eg. the bottom of the mask),\r\n                // so the min/max width/height limit for \"inner component\" is respected\r\n                beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\r\n                    this.config.maxHeight = (fromTop)\r\n                        ? null\r\n                        : dimensions.topHeight + (dimensions.innerHeight - constrains.minHeight);\r\n                },\r\n\r\n                // set the new transform values (dimension and position) resulting from the current mask resize, and apply them\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\r\n                    setTopHeight(height, y, fromTop);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // North-east\r\n            createPart({\r\n                id: 'ne',\r\n                edges: { top: true, right: true, bottom: false, left: false },\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.innerX + dimensions.innerWidth,\r\n                        position.outerY\r\n                    ).setSize(\r\n                        dimensions.rightWidth,\r\n                        dimensions.topHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x,\r\n                        pos.y + options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width - options.resizeHandleSize,\r\n                        size.height - (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\r\n                    setTopHeight(height, y, fromTop);\r\n                    setRightWidth(width, x, fromLeft);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // East\r\n            createPart({\r\n                id: 'e',\r\n                edges: { top: false, right: true, bottom: false, left: true },\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.innerX + dimensions.innerWidth,\r\n                        position.innerY\r\n                    ).setSize(\r\n                        dimensions.rightWidth,\r\n                        dimensions.innerHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x + options.resizeHandleSize,\r\n                        pos.y - options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width - (options.resizeHandleSize * 2),\r\n                        size.height + (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                beforeResize: function beforeResize(width, height, fromLeft) {\r\n                    this.config.maxWidth = (fromLeft)\r\n                        ? dimensions.rightWidth + (dimensions.innerWidth - constrains.minWidth)\r\n                        : null;\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x) {\r\n                    setRightWidth(width, x, fromLeft);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // South east\r\n            createPart({\r\n                id: 'se',\r\n                edges: { top: false, right: true, bottom: true, left: false },\r\n                minHeight: constrains.minBottomHeight,\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.innerX + dimensions.innerWidth,\r\n                        position.innerY + dimensions.innerHeight\r\n                    ).setSize(\r\n                        dimensions.rightWidth,\r\n                        dimensions.bottomHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x,\r\n                        pos.y + options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width - options.resizeHandleSize,\r\n                        size.height - (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\r\n                    setRightWidth(width, x, fromLeft);\r\n                    setBottomHeight(height, y, fromTop);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // South\r\n            createPart({\r\n                id: 's',\r\n                edges: { top: true, right: false, bottom: true, left: false },\r\n                minHeight: constrains.minBottomHeight,\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.innerX ,\r\n                        position.innerY + dimensions.innerHeight\r\n                    ).setSize(\r\n                        dimensions.innerWidth,\r\n                        dimensions.bottomHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x,\r\n                        pos.y + options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width,\r\n                        size.height - (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                beforeResize: function beforeResize(width, height, fromLeft, fromTop) {\r\n                    this.config.maxHeight = (fromTop)\r\n                        ? dimensions.bottomHeight + (dimensions.innerHeight - constrains.minHeight)\r\n                        : null;\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\r\n                    setBottomHeight(height, y, fromTop);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // South-west\r\n            createPart({\r\n                id: 'sw',\r\n                edges: { top: false, right: false, bottom: true, left: true },\r\n                minHeight: constrains.minBottomHeight,\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.outerX,\r\n                        position.innerY + dimensions.innerHeight\r\n                    ).setSize(\r\n                        dimensions.leftWidth,\r\n                        dimensions.bottomHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x + options.resizeHandleSize,\r\n                        pos.y + options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width - options.resizeHandleSize,\r\n                        size.height - (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\r\n                    setBottomHeight(height, y, fromTop);\r\n                    setLeftWidth(width, x, fromLeft);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // West\r\n            createPart({\r\n                id: 'w',\r\n                edges: { top: false, right: true, bottom: false, left: true },\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.outerX,\r\n                        position.innerY\r\n                    ).setSize(\r\n                        dimensions.leftWidth,\r\n                        dimensions.innerHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x + options.resizeHandleSize,\r\n                        pos.y - options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width - (options.resizeHandleSize * 2),\r\n                        size.height + (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                beforeResize: function beforeResize(width, height, fromLeft) {\r\n                    this.config.maxWidth = (fromLeft)\r\n                        ? null\r\n                        : dimensions.leftWidth + (dimensions.innerWidth - constrains.minWidth);\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x) {\r\n                    setLeftWidth(width, x, fromLeft);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n\r\n            // North-west\r\n            createPart({\r\n                id: 'nw',\r\n                edges: { top: true, right: false, bottom: false, left: true },\r\n\r\n                place: function place() {\r\n                    this.moveTo(\r\n                        position.outerX,\r\n                        position.outerY\r\n                    ).setSize(\r\n                        dimensions.leftWidth,\r\n                        dimensions.topHeight\r\n                    );\r\n                },\r\n\r\n                placeOverlay: function placeOverlay(overlay) {\r\n                    var pos = this.getPosition(),\r\n                        size = this.getSize();\r\n                    overlay.moveTo(\r\n                        pos.x + options.resizeHandleSize,\r\n                        pos.y + options.resizeHandleSize\r\n                    ).setSize(\r\n                        size.width - options.resizeHandleSize,\r\n                        size.height - (options.resizeHandleSize * 2)\r\n                    );\r\n                },\r\n\r\n                onResize: function onResize(width, height, fromLeft, fromTop, x, y) {\r\n                    setTopHeight(height, y, fromTop);\r\n                    setLeftWidth(width, x, fromLeft);\r\n                    applyTransformsToMasks();\r\n                }\r\n            });\r\n        }\r\n\r\n        function createPart(partConfig) {\r\n            allParts[partConfig.id] = {\r\n                mask: createMask(_.assign({}, constrains, partConfig)),\r\n                overlay: createOverlay(partConfig)\r\n            };\r\n        }\r\n\r\n\r\n        function createVisualGuides() {\r\n            visualGuides.$maskBg = $('<div>', {\r\n                'class': 'mask-bg'\r\n            });\r\n            visualGuides.$innerWindow = $('<div>', {\r\n                'class': 'inner-window'\r\n            });\r\n        }\r\n\r\n\r\n        /**\r\n         * =========================\r\n         * The compoundMask instance\r\n         * =========================\r\n         */\r\n\r\n        dimensions  = _.defaults(dimensions || {}, defaultDimensions);\r\n        position    = _.defaults(position   || {}, defaultPosition);\r\n        options     = _.defaults(options    || {}, defaultOptions);\r\n\r\n        constrains = {\r\n            minWidth:           (options.resizeHandleSize * 2) + options.dragMinWidth,\r\n            minHeight:          (options.resizeHandleSize * 2) + options.dragMinHeight,\r\n            minBottomHeight:    (options.resizeHandleSize * 2) + options.innerDragHeight\r\n        };\r\n\r\n        compoundMask = {\r\n            init: function init() {\r\n                var self = this;\r\n\r\n                this.setTransforms(dimensions, position);\r\n\r\n                createCompoundMask();\r\n                createVisualGuides();\r\n                createInnerDragHandle();\r\n                createCloser();\r\n\r\n                closer.on('click', function() {\r\n                    self.hide();\r\n                    self.trigger('close');\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            render: function render($container) {\r\n                invokeOnAll('render', [$container]);\r\n                innerDrag.render($container);\r\n                closer.render($container);\r\n                applyTransforms();\r\n                return this;\r\n            },\r\n\r\n            destroy: function destroy() {\r\n                invokeOnAll('destroy');\r\n                visualGuides = null;\r\n                innerDrag = null;\r\n                closer = null;\r\n                return this;\r\n            },\r\n\r\n            show: function show() {\r\n                invokeOnAll('show');\r\n                innerDrag.show();\r\n                closer.show();\r\n                this.setState('hidden', false);\r\n                return this;\r\n            },\r\n\r\n            hide: function hide() {\r\n                invokeOnAll('hide');\r\n                innerDrag.hide();\r\n                closer.hide();\r\n                this.setState('hidden', true);\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Allow updating the transform model\r\n             * @param {Object} dim\r\n             * @param {Number} dim.outerWidth - overall mask width\r\n             * @param {Number} dim.outerHeight - overall mask height\r\n             * @param {Number} dim.innerWidth - inner window width\r\n             * @param {Number} dim.innerHeight - inner window height\r\n             * @param {Number} pos\r\n             * @param {Number} pos.outerX - overall mask x\r\n             * @param {Number} pos.outerY - overall mask y\r\n             * @param {Number} pos.innerX - inner window x\r\n             * @param {Number} pos.innerY - inner window y\r\n             */\r\n            setTransforms: function setTransforms(dim, pos) {\r\n                dimensions  = _.defaults(dim || {}, dimensions);\r\n                position    = _.defaults(pos || {}, position);\r\n\r\n                // automatically complete the dimensions\r\n                dimensions.topHeight    = pos.innerY - pos.outerY;\r\n                dimensions.rightWidth   = dim.outerWidth - (pos.innerX - pos.outerX) - dim.innerWidth;\r\n                dimensions.bottomHeight = dim.outerHeight - (pos.innerY - pos.outerY) - dim.innerHeight;\r\n                dimensions.leftWidth    = pos.innerX - pos.outerX;\r\n\r\n                correctTransforms();\r\n                applyTransforms();\r\n            },\r\n\r\n            getDimensions: function getDimensions() {\r\n                return dimensions;\r\n            },\r\n\r\n            getPosition: function getPosition() {\r\n                return position;\r\n            },\r\n\r\n            getParts: function getParts() {\r\n                return allParts;\r\n            }\r\n        };\r\n\r\n        statifier(compoundMask);\r\n        eventifier(compoundMask);\r\n\r\n        return compoundMask;\r\n    };\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * Test Runner Tool Plugin : Line Reader\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/lineReader/plugin',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoQtiTest/runner/plugins/tools/lineReader/compoundMask'\r\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, compoundMaskFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The public name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'line-reader';\r\n\r\n    /**\r\n     * The prefix of actions triggered through the event loop\r\n     * @type {String}\r\n     */\r\n    var actionPrefix = 'tool-' + pluginName + '-';\r\n\r\n    /**\r\n     * Options for the compoundMask factory\r\n     * @type {Object}\r\n     */\r\n    var maskOptions = {\r\n        dragMinWidth: 7,\r\n        dragMinHeight: 7,\r\n        resizeHandleSize: 7,\r\n        innerDragHeight: 20\r\n    };\r\n\r\n    var dimensions,\r\n        position;\r\n\r\n    /**\r\n     * These functions are a first effort to place the mask on the first line on the item\r\n     * They make a lot of assumptions:\r\n     * - the item starts with a text\r\n     * - the padding is set on the .qti-item container\r\n     * - the padding is consistent with the minWidth/minHeight configuration of the mask\r\n     * - and some other...\r\n     * @param {jQuery} $container - where the mask is appended\r\n     */\r\n    function getDimensions($container) {\r\n        var $qtiContent = $container.find('#qti-content'),\r\n            $qtiItem = $qtiContent.find('.qti-item'),\r\n\r\n            lineHeight = Math.ceil(parseFloat($qtiContent.css('line-height'))) || 20; // reasonable default line height\r\n\r\n        return {\r\n            outerWidth:     $qtiItem.width() + (maskOptions.resizeHandleSize * 4) + (maskOptions.dragMinWidth * 2),\r\n            outerHeight:    175, // reasonable default height\r\n            innerWidth:     $qtiItem.width(),\r\n            innerHeight:    lineHeight\r\n        };\r\n    }\r\n    function getPosition($container) {\r\n        var $qtiContent = $container.find('#qti-content'),\r\n            $qtiItem = $qtiContent.find('.qti-item'),\r\n\r\n            itemPosition = $qtiItem.position() || {},\r\n\r\n            paddingLeft = parseInt($qtiItem.css('padding-left'), 10),\r\n            paddingTop = parseInt($qtiItem.css('padding-top'), 10),\r\n\r\n            textPadding = 3, // this is to let the text breathe a bit\r\n\r\n            innerX = parseInt(itemPosition.left, 10) + paddingLeft - textPadding,\r\n            innerY = parseInt(itemPosition.top, 10) + paddingTop - textPadding;\r\n\r\n        return {\r\n            outerX: innerX - (maskOptions.resizeHandleSize * 2) - maskOptions.dragMinWidth,\r\n            outerY: 0,\r\n            innerX: innerX,\r\n            innerY: innerY\r\n        };\r\n    }\r\n\r\n    function containerWidthHasChanged($container) {\r\n        var newDimensions = getDimensions($container);\r\n        return newDimensions.outerWidth !== dimensions.outerWidth;\r\n    }\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: pluginName,\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this,\r\n\r\n                testRunner = this.getTestRunner(),\r\n                testData = testRunner.getTestData() || {},\r\n                testConfig = testData.config || {},\r\n                pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {},\r\n                $container = testRunner.getAreaBroker().getContentArea().parent();\r\n\r\n            this.compoundMask = compoundMaskFactory(maskOptions)\r\n                .init()\r\n                .render($container)\r\n                .on('close', function() {\r\n                    closeMask();\r\n                })\r\n                .hide();\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isEnabled() {\r\n                var context = testRunner.getTestContext() || {},\r\n                    options = context.options || {};\r\n                //to be activated with the special category x-tao-option-lineReader\r\n                return !!options.lineReader;\r\n            }\r\n\r\n            function toggleButton() {\r\n                if (isEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            function toggleMask() {\r\n                if (self.compoundMask.getState('hidden')) {\r\n                    if (containerWidthHasChanged($container)) {\r\n                        transformMask($container);\r\n                    }\r\n                    openMask();\r\n                } else {\r\n                    closeMask();\r\n                }\r\n            }\r\n\r\n            function openMask() {\r\n                self.compoundMask.show();\r\n                self.trigger('start');\r\n                self.button.turnOn();\r\n            }\r\n\r\n            function closeMask() {\r\n                if (! self.compoundMask.getState('hidden')) {\r\n                    self.compoundMask.hide();\r\n                }\r\n                self.trigger('end');\r\n                self.button.turnOff();\r\n            }\r\n\r\n            function transformMask($maskContainer) {\r\n                dimensions = getDimensions($maskContainer);\r\n                position = getPosition($maskContainer);\r\n                self.compoundMask.setTransforms(\r\n                    _.clone(dimensions),\r\n                    _.clone(position)\r\n                );\r\n            }\r\n\r\n            // create button\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                title: __('Line Reader'),\r\n                icon: 'insert-horizontal-line',\r\n                control: 'line-reader',\r\n                text: __('Line Reader')\r\n            });\r\n\r\n            // attach user events\r\n            this.button\r\n                .on('click', function(e) {\r\n                    e.preventDefault();\r\n                    testRunner.trigger(actionPrefix + 'toggle');\r\n                });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.toggle) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.toggle, this.getName(), true), function () {\r\n                        testRunner.trigger(actionPrefix + 'toggle');\r\n                    }, { avoidInput: true, prevent: true });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', toggleButton)\r\n                .on('renderitem', function() {\r\n                    transformMask($container);\r\n                })\r\n                .on('enabletools renderitem', function () {\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function () {\r\n                    self.disable();\r\n                    closeMask();\r\n                })\r\n                .on(actionPrefix + 'toggle', function () {\r\n                    if (isEnabled()) {\r\n                        toggleMask();\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            this.compoundMask.destroy();\r\n            shortcut.remove('.' + this.getName());\r\n        },\r\n\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable: function enable() {\r\n            this.button.enable();\r\n        },\r\n\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable: function disable() {\r\n            this.button.disable();\r\n        },\r\n\r\n        /**\r\n         * Show the button\r\n         */\r\n        show: function show() {\r\n            this.button.show();\r\n        },\r\n\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide: function hide() {\r\n            this.button.hide();\r\n        }\r\n    });\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div class=\\\"magnifier\\\">\\r\\n    <div class=\\\"level\\\">\";\n  if (helper = helpers.level) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.level); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\r\\n    <div class=\\\"overlay\\\"></div>\\r\\n    <div class=\\\"inner\\\"></div>\\r\\n    <div class=\\\"controls close\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"closeMagnifier\\\" data-control=\\\"closeMagnifier\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Close Magnifier\", options) : helperMissing.call(depth0, \"__\", \"Close Magnifier\", options)))\n    + \"\\\"><span class=\\\"icon-result-nok\\\"></span></a>\\r\\n    </div>\\r\\n    <div class=\\\"controls zoom\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"control\\\"  data-control=\\\"zoomOut\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify less\", options) : helperMissing.call(depth0, \"__\", \"Magnify less\", options)))\n    + \"\\\"><span class=\\\"icon-remove\\\"></span></a>\\r\\n        <a href=\\\"#\\\" class=\\\"control\\\" data-control=\\\"zoomIn\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Magnify more\", options) : helperMissing.call(depth0, \"__\", \"Magnify more\", options)))\n    + \"\\\"><span class=\\\"icon-add\\\"></span></a>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel',[\r\n    'jquery',\r\n    'lodash',\r\n    'ui/movableComponent',\r\n    'tpl!taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel'\r\n], function ($, _, movableComponent, magnifierPanelTpl) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The screen pixel ratio\r\n     * @type {Number}\r\n     */\r\n    var screenRatio = window.screen.width / window.screen.height;\r\n\r\n    /**\r\n     * Standard debounce delay for heavy process\r\n     * @type {Number}\r\n     */\r\n    var debounceDelay = 50;\r\n\r\n    /**\r\n     * Standard scrolling throttling for the scrolling\r\n     * It can be lower than the debounce delay as it is lighter in process and it improves the user experience\r\n     * @type {Number}\r\n     */\r\n    var scrollingDelay = 20;\r\n\r\n    /**\r\n     * The default base size\r\n     * @type {Number}\r\n     */\r\n    var defaultBaseSize = 116;\r\n\r\n    /**\r\n     * The minimum zoom level\r\n     * @type {Number}\r\n     */\r\n    var defaultLevelMin = 2;\r\n\r\n    /**\r\n     * The maximum zoom level\r\n     * @type {Number}\r\n     */\r\n    var defaultLevelMax = 8;\r\n\r\n    /**\r\n     * The default zoom level\r\n     * @type {Number}\r\n     */\r\n    var defaultLevel = defaultLevelMin;\r\n\r\n    /**\r\n     * Some default values\r\n     * @type {Object}\r\n     */\r\n    var defaultConfig = {\r\n        level: defaultLevel,\r\n        levelMin: defaultLevelMin,\r\n        levelMax: defaultLevelMax,\r\n        levelStep: .5,\r\n        baseSize: defaultBaseSize,\r\n        width: defaultBaseSize * defaultLevel,\r\n        height: defaultBaseSize * defaultLevel / screenRatio,\r\n        minWidth: defaultBaseSize * defaultLevelMin,\r\n        minHeight: defaultBaseSize * defaultLevelMin / screenRatio,\r\n        maxRatio: .5,\r\n        stackingScope: 'test-runner'\r\n    };\r\n\r\n    /**\r\n     * Creates a magnifier panel component\r\n     * @param {Object} config\r\n     * @param {Number} [config.level] - The default zoom level\r\n     * @param {Number} [config.levelMin] - The minimum allowed zoom level\r\n     * @param {Number} [config.levelMax] - The maximum allowed zoom level\r\n     * @param {Number} [config.levelStep] - The level increment applied when using the controls + and -\r\n     * @param {Number} [config.baseSize] - The base size used to assign the width and the height according to the zoom level\r\n     * @param {Number} [config.maxRatio] - The ratio for the maximum size regarding the size of the window\r\n     * @returns {magnifierPanel} the component (initialized)\r\n     */\r\n    function magnifierPanelFactory(config) {\r\n        var initConfig = _.defaults(config || {}, defaultConfig);\r\n        var zoomLevelMin = parseFloat(initConfig.levelMin);\r\n        var zoomLevelMax = parseFloat(initConfig.levelMax);\r\n        var zoomLevelStep = parseFloat(initConfig.levelStep);\r\n        var zoomLevel = adjustZoomLevel(initConfig.level);\r\n        var maxRatio = parseFloat(initConfig.maxRatio);\r\n        var baseSize = parseInt(initConfig.baseSize, 10);\r\n        var zoomSize = baseSize * zoomLevel;\r\n        var $initTarget = null;\r\n        var controls = null;\r\n        var observer = null;\r\n        var targetWidth, targetHeight, dx, dy;\r\n        var scrolling = [];\r\n\r\n        /**\r\n         * @typedef {Object} magnifierPanel\r\n         */\r\n        var magnifierPanel = movableComponent({\r\n            /**\r\n             * Gets the current zoom level\r\n             * @returns {Number}\r\n             */\r\n            getZoomLevel: function getZoomLevel() {\r\n                return zoomLevel;\r\n            },\r\n\r\n            /**\r\n             * Gets the targeted content the magnifier will zoom\r\n             * @returns {jQuery}\r\n             */\r\n            getTarget: function getTarget() {\r\n                return controls && controls.$target;\r\n            },\r\n\r\n            /**\r\n             * Sets the targeted content the magnifier will zoom\r\n             * @param {jQuery} $newTarget\r\n             * @returns {magnifierPanel}\r\n             * @fires targetchange\r\n             * @fires update\r\n             */\r\n            setTarget: function setTarget($newTarget) {\r\n                if (controls) {\r\n                    controls.$target = $newTarget;\r\n                    controls.$viewTarget = null;\r\n\r\n                    setScrollingListener();\r\n\r\n                    /**\r\n                     * @event magnifierPanel#targetchange\r\n                     * @param {jQuery} $target\r\n                     */\r\n                    this.trigger('targetchange', controls.$target);\r\n\r\n                    this.update();\r\n                } else {\r\n                    $initTarget = $newTarget;\r\n                }\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Sets the zoom level of the magnifier\r\n             * @param {Number} level\r\n             * @returns {magnifierPanel}\r\n             * @fires zoom\r\n             */\r\n            zoomTo: function zoomTo(level) {\r\n                if (level && _.isFinite(level)) {\r\n                    zoomLevel = adjustZoomLevel(level);\r\n                }\r\n\r\n                applyZoomLevel();\r\n                showZoomLevel();\r\n                updateMaxSize();\r\n                updateZoom();\r\n\r\n                /**\r\n                 * @event magnifierPanel#zoom\r\n                 * @param {Number} zoomLevel\r\n                 */\r\n                this.trigger('zoom', zoomLevel);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Increments the zoom level of the magnifier\r\n             * @param {Number} step\r\n             * @returns {magnifierPanel}\r\n             * @fires zoom\r\n             */\r\n            zoomBy: function zoomBy(step) {\r\n                if (step && _.isFinite(step)) {\r\n                    this.zoomTo(zoomLevel + parseFloat(step));\r\n                }\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Zoom-in using the configured level step\r\n             * @returns {magnifierPanel}\r\n             * @fires zoom\r\n             */\r\n            zoomIn: function zoomIn() {\r\n                return this.zoomBy(zoomLevelStep);\r\n            },\r\n\r\n            /**\r\n             * Zoom-out using the configured level step\r\n             * @returns {magnifierPanel}\r\n             * @fires zoom\r\n             */\r\n            zoomOut: function zoomOut() {\r\n                return this.zoomBy(-zoomLevelStep);\r\n            },\r\n\r\n            /**\r\n             * Places the magnifier sight at a particular position on the target content\r\n             * @param {Number} x\r\n             * @param {Number} y\r\n             * @returns {magnifierPanel}\r\n             */\r\n            zoomAt: function zoomAt(x, y) {\r\n                var position;\r\n                if (controls) {\r\n                    position = this.translate(x, y);\r\n                    controls.$inner.css({\r\n                        top: -position.top,\r\n                        left: -position.left\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Translates screen coordinates to zoom coordinates\r\n             * @param {Number} x\r\n             * @param {Number} y\r\n             * @returns {Object}\r\n             */\r\n            translate: function translate(x, y) {\r\n                return {\r\n                    top: translateMagnifier(y, targetHeight, this.config.height),\r\n                    left: translateMagnifier(x, targetWidth, this.config.width)\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Updates the magnifier with the target content\r\n             * @returns {magnifierPanel}\r\n             * @fires update\r\n             */\r\n            update: function update() {\r\n                if (controls && controls.$target) {\r\n                    controls.$clone = controls.$target.clone().removeAttr('id');\r\n                    controls.$clone.find('iframe').remove();\r\n                    controls.$clone.find('[name],[id],[data-serial]').removeAttr('name id data-serial');\r\n                    controls.$inner.empty().append(controls.$clone);\r\n\r\n                    applySize();\r\n                    applyZoomLevel();\r\n                    updateZoom();\r\n                    updateMaxSize();\r\n                    applyScrolling();\r\n\r\n                    /**\r\n                     * @event magnifierPanel#update\r\n                     */\r\n                    this.trigger('update');\r\n                }\r\n\r\n                return this;\r\n            }\r\n        }, defaultConfig);\r\n\r\n        /**\r\n         * Will update the magnifier content with the actual content\r\n         * @type {Function}\r\n         */\r\n        var updateMagnifier = _.debounce(_.bind(magnifierPanel.update, magnifierPanel), debounceDelay);\r\n\r\n        /**\r\n         * Will update the magnifier content with the scrolling position\r\n         * @type {Function}\r\n         */\r\n        var scrollingListenerCallback = _.throttle(function (event) {\r\n\r\n            var $target = $(event.target);\r\n            var scrollingTop = event.target.scrollTop;\r\n            var scrollLeft = event.target.scrollLeft;\r\n            var scrollId, scrollData;\r\n\r\n            //check if the element is already known as a scrollable element\r\n            if (controls && controls.$clone && $target.data('magnifier-scroll')) {\r\n\r\n                scrollId = $target.data('magnifier-scroll');\r\n                scrollData = _.find(scrolling, {id: scrollId});\r\n                scrollData.scrollTop = scrollingTop;\r\n                scrollData.scrollLeft = scrollLeft;\r\n\r\n                //if in clone, scroll it\r\n                scrollInClone(scrollData);\r\n\r\n            } else {\r\n                //if the element is not yet identified as a scrollable element, tag it and register its id\r\n                scrollId = _.uniqueId('scrolling_');\r\n                $target.attr('data-magnifier-scroll', scrollId);\r\n                scrolling.push({\r\n                    id: scrollId,\r\n                    scrollTop: scrollingTop,\r\n                    scrollLeft: scrollLeft\r\n                });\r\n\r\n                //update all\r\n                magnifierPanel.update();\r\n            }\r\n\r\n        }, scrollingDelay);\r\n\r\n        /**\r\n         * Scroll an element in the clone\r\n         *\r\n         * @param {Object} scrollData\r\n         * @param {String} scrollData.id\r\n         * @param {Number} [scrollData.scrollTop]\r\n         * @param {Number} [scrollData.scrollLeft]\r\n         */\r\n        function scrollInClone(scrollData) {\r\n            var $clonedTarget;\r\n            if (controls && controls.$clone && scrollData && scrollData.id) {\r\n                $clonedTarget = controls.$clone.find('[data-magnifier-scroll=' + scrollData.id + ']');\r\n                if ($clonedTarget.length) {\r\n                    if (_.isNumber(scrollData.scrollTop)) {\r\n                        $clonedTarget[0].scrollTop = scrollData.scrollTop;\r\n                    }\r\n                    if (_.isNumber(scrollData.scrollLeft)) {\r\n                        $clonedTarget[0].scrollLeft = scrollData.scrollLeft;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Initializes the listener for scrolling event and transfer the scrolling\r\n         */\r\n        function setScrollingListener() {\r\n            window.addEventListener('scroll', scrollingListenerCallback, true);\r\n        }\r\n\r\n        /**\r\n         * Stops the listener for scrolling event\r\n         */\r\n        function removeScrollingListener() {\r\n            window.removeEventListener('scroll', scrollingListenerCallback, true);\r\n        }\r\n\r\n        /**\r\n         * Applies scrolling programmatically from the recorded list of elements to be scrolled\r\n         */\r\n        function applyScrolling() {\r\n            _.forEach(scrolling, scrollInClone);\r\n        }\r\n\r\n        /**\r\n         * Adjusts a provided zoom level to fit the constraints\r\n         * @param {Number|String} level\r\n         * @returns {Number}\r\n         */\r\n        function adjustZoomLevel(level) {\r\n            return Math.max(zoomLevelMin, Math.min(parseFloat(level), zoomLevelMax));\r\n        }\r\n\r\n        /**\r\n         * Applies the zoom level to the content\r\n         */\r\n        function applyZoomLevel() {\r\n            if (controls) {\r\n                controls.$inner.css({\r\n                    transform: 'scale(' + zoomLevel + ')'\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Shows the zoom level using a CSS animation\r\n         */\r\n        function showZoomLevel() {\r\n            var $newZoomLevel;\r\n            if (controls) {\r\n                $newZoomLevel = controls.$zoomLevel.clone(true).html(zoomLevel);\r\n                controls.$zoomLevel.before($newZoomLevel).remove();\r\n                controls.$zoomLevel = $newZoomLevel;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Updates the max size according to the window's size\r\n         */\r\n        function updateMaxSize() {\r\n            var $window = $(window);\r\n            magnifierPanel.config.maxWidth = $window.width() * maxRatio;\r\n            magnifierPanel.config.maxHeight = $window.height() * maxRatio;\r\n        }\r\n\r\n        /**\r\n         * Forwards the size of the target to the cloned content\r\n         */\r\n        function applySize() {\r\n            if (controls && controls.$clone) {\r\n                targetWidth = controls.$target.width();\r\n                targetHeight = controls.$target.height();\r\n\r\n                controls.$clone\r\n                    .width(targetWidth)\r\n                    .height(targetHeight);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Place the zoom sight at the right place inside the magnifier\r\n         */\r\n        function updateZoom() {\r\n            var position;\r\n            if (controls && controls.$target) {\r\n                position = magnifierPanel.getPosition();\r\n\r\n                position.x += dx + controls.$target.scrollLeft();\r\n                position.y += dy + controls.$target.scrollTop();\r\n\r\n                magnifierPanel.zoomAt(position.x, position.y);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Creates the observer that will react to DOM changes to update the magnifier\r\n         */\r\n        function createObserver() {\r\n            observer = new window.MutationObserver(updateMagnifier);\r\n        }\r\n\r\n        /**\r\n         * Starts to observe the DOM of the magnifier target\r\n         */\r\n        function startObserver() {\r\n            if (controls && controls.$target) {\r\n                observer.observe(controls.$target.get(0), {\r\n                    childList: true,        // Set to true if additions and removals of the target node's child elements (including text nodes) are to be observed.\r\n                    attributes: true,       // Set to true if mutations to target's attributes are to be observed.\r\n                    characterData: true,    // Set to true if mutations to target's data are to be observed.\r\n                    subtree: true           // Set to true if mutations to target and target's descendants are to be observed.\r\n                });\r\n            }\r\n            setScrollingListener();\r\n        }\r\n\r\n        /**\r\n         * Stops to observe the DOM of the magnifier target\r\n         */\r\n        function stopObserver() {\r\n            observer.disconnect();\r\n            removeScrollingListener();\r\n        }\r\n\r\n        /**\r\n         * Translates a screen coordinate into the magnifier\r\n         * @param {Number} coordinate\r\n         * @param {Number} actualSize\r\n         * @param {Number} magnifierSize\r\n         * @returns {Number}\r\n         */\r\n        function translateMagnifier(coordinate, actualSize, magnifierSize) {\r\n            var delta = 0;\r\n            var ratio = zoomLevel;\r\n\r\n            if (actualSize) {\r\n                delta = ((actualSize * (zoomLevel - 1)) / 2);\r\n                ratio = (actualSize * zoomLevel - magnifierSize) / (actualSize - magnifierSize);\r\n            }\r\n\r\n            return coordinate * ratio - delta;\r\n        }\r\n\r\n        /**\r\n         * Gets the top element from a particular absolute point.\r\n         * @param {Number} x - the page X-coordinate of the point\r\n         * @param {Number} y - the page Y-coordinate of the point\r\n         * @returns {HTMLElement}\r\n         */\r\n        function getElementFromPoint(x, y) {\r\n            var el;\r\n\r\n            if (controls) {\r\n                controls.$overlay.addClass('hidden');\r\n            }\r\n\r\n            el = document.elementFromPoint(x, y);\r\n\r\n            if (controls) {\r\n                controls.$overlay.removeClass('hidden');\r\n            }\r\n\r\n            return el;\r\n        }\r\n\r\n        /**\r\n         * Find the related node in the target. The both trees must have the same content.\r\n         * @param {jQuery|HTMLElement} node - the node for which find a relation\r\n         * @param {jQuery|HTMLElement} root - the root of the tree that contains the actual node\r\n         * @param {jQuery|HTMLElement} target - the root of the tree that could contains the related node\r\n         * @returns {jQuery}\r\n         */\r\n        function findSourceNode(node, root, target) {\r\n            var $node = $(node);\r\n            var $root = $(root);\r\n            var $target = $(target);\r\n            var indexes = [$node.index()];\r\n\r\n            // compute map of node's parents indexes\r\n            $node.parents().each(function () {\r\n                var $this = $(this);\r\n                if (!$this.is($root)) {\r\n                    indexes.push($this.index());\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            // the last index is related to the root, so ignore it\r\n            indexes.pop();\r\n\r\n            // now try to find the same node using the path provided by the indexes map\r\n            if (indexes.length) {\r\n                $node = $target;\r\n                _.forEachRight(indexes, function (index) {\r\n                    $node = $node.children().eq(index);\r\n                    if (!$node.length) {\r\n                        return false;\r\n                    }\r\n                });\r\n            } else {\r\n                // nothing to search for...\r\n                $node = $();\r\n            }\r\n            return $node;\r\n        }\r\n\r\n        initConfig.width = zoomSize;\r\n        initConfig.height = zoomSize / screenRatio;\r\n        initConfig.minWidth = baseSize * zoomLevelMin;\r\n        initConfig.minHeight = baseSize * zoomLevelMin / screenRatio;\r\n\r\n        magnifierPanel\r\n            .setTemplate(magnifierPanelTpl)\r\n            .on('render', function () {\r\n                var self = this;\r\n                var $component = this.getElement();\r\n\r\n                this.setState('hidden', true);\r\n\r\n                // compute the padding of the magnifier content\r\n                dx = ($component.outerWidth() - $component.width()) / 2;\r\n                dy = ($component.outerHeight() - $component.height()) / 2;\r\n\r\n                controls = {\r\n                    $target: $initTarget,\r\n                    $inner: $('.inner', $component),\r\n                    $zoomLevel: $('.level', $component),\r\n                    $overlay: $('.overlay', $component)\r\n                };\r\n                $initTarget = null;\r\n\r\n                // click on zoom-in or zoom-out controls\r\n                $component.on('click touchstart', '.zoom', function (event) {\r\n                    var $button = $(event.target).closest('.control');\r\n                    var action = $button.data('control');\r\n\r\n                    event.preventDefault();\r\n                    if (action && self[action]) {\r\n                        self[action]();\r\n                    }\r\n                });\r\n\r\n                // click on close controls\r\n                $component.on('click touchstart', '.closeMagnifier', function (event) {\r\n                    event.preventDefault();\r\n                    self.hide();\r\n                    self.trigger('close');\r\n                });\r\n\r\n                // interact through the magnifier glass with the zoomed content\r\n                $component.on('click touchstart', '.overlay', function (event) {\r\n                    if (!self.is('noclick')) {\r\n                        findSourceNode(\r\n                            getElementFromPoint(event.pageX, event.pageY),\r\n                            controls.$inner,\r\n                            controls.$target\r\n                        ).click().focus();\r\n                    } else {\r\n                        // was a 'dragend' click, just ignore\r\n                        self.setState('noclick', false);\r\n                    }\r\n                });\r\n\r\n                createObserver();\r\n                updateMaxSize();\r\n                applyZoomLevel();\r\n            })\r\n            .on('dragstart resizestart', function () {\r\n                // prevent the 'dragend' click to be understood as an actual click\r\n                this.setState('noclick', true);\r\n            })\r\n            .on('move resize', function () {\r\n                updateZoom();\r\n            })\r\n            .on('show', function () {\r\n                updateMagnifier();\r\n                startObserver();\r\n            })\r\n            .on('hide', function () {\r\n                stopObserver();\r\n            })\r\n            .on('resize', function () {\r\n                updateMaxSize();\r\n            })\r\n            .on('destroy', function () {\r\n                stopObserver();\r\n                $initTarget = null;\r\n                controls = null;\r\n                observer = null;\r\n            })\r\n            .init(initConfig);\r\n\r\n        return magnifierPanel;\r\n    }\r\n\r\n    return magnifierPanelFactory;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/runner/plugins/tools/magnifier/magnifier',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'taoTests/runner/plugin',\r\n    'ui/hider',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoQtiTest/runner/plugins/tools/magnifier/magnifierPanel'\r\n], function ($, _, __, pluginFactory, hider, shortcut, namespaceHelper, magnifierPanelFactory) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The public name of the plugin\r\n     * @type {String}\r\n     */\r\n    var pluginName = 'magnifier';\r\n\r\n    /**\r\n     * The prefix of actions triggered through the event loop\r\n     * @type {String}\r\n     */\r\n    var actionPrefix = 'tool-' + pluginName + '-';\r\n\r\n    /**\r\n     * Some default options for the plugin\r\n     * @type {Object}\r\n     */\r\n    var defaultOptions = {\r\n        zoomMin: 2,    // Smallest magnification factor\r\n        zoomMax: 8,    // Biggest magnification factor\r\n        zoomStep: .5   // Increment between min an max\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name: pluginName,\r\n\r\n        /**\r\n         * Initializes the plugin (called during runner's init)\r\n         */\r\n        init: function init() {\r\n            var self = this;\r\n\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginConfig = _.defaults((testConfig.plugins || {})[pluginName] || {}, defaultOptions);\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[pluginName] || {};\r\n            var magnifierPanel = null;\r\n\r\n            /**\r\n             * Creates the magnifier panel on demand\r\n             * @returns {magnifierPanel}\r\n             * @fires plugin-magnifier-create.magnifier\r\n             */\r\n            function getMagnifierPanel() {\r\n                var $container;\r\n\r\n                if (!magnifierPanel) {\r\n                    $container = testRunner.getAreaBroker().getContainer();\r\n\r\n                    magnifierPanel = magnifierPanelFactory({\r\n                        levelMin: pluginConfig.zoomMin,\r\n                        levelMax: pluginConfig.zoomMax,\r\n                        levelStep: pluginConfig.zoomStep\r\n                    })\r\n                        .on('show', function () {\r\n                            /**\r\n                             * @event plugin-magnifier-show.magnifier\r\n                             */\r\n                            self.trigger('magnifier-show');\r\n                        })\r\n                        .on('hide', function () {\r\n                            /**\r\n                             * @event plugin-magnifier-hide.magnifier\r\n                             */\r\n                            self.trigger('magnifier-hide');\r\n                        })\r\n                        .on('zoom', function (level) {\r\n                            /**\r\n                             * @event plugin-magnifier-zoom.magnifier\r\n                             * @param {Number} zoomLevel\r\n                             */\r\n                            self.trigger('magnifier-zoom', level);\r\n                        })\r\n                        .on('close', function () {\r\n                            hideMagnifier();\r\n                        })\r\n                        .setTarget($container)\r\n                        .render($container.parent());\r\n\r\n                    /**\r\n                     * @event plugin-magnifier-create.magnifier\r\n                     */\r\n                    self.trigger('magnifier-create');\r\n                }\r\n                return magnifierPanel;\r\n            }\r\n\r\n            /**\r\n             * Checks if the plugin is currently available\r\n             * @returns {Boolean}\r\n             */\r\n            function isEnabled() {\r\n                var context = testRunner.getTestContext() || {},\r\n                    options = context.options || {};\r\n                //to be activated with the special category x-tao-option-magnifier\r\n                return !!options.magnifier;\r\n            }\r\n\r\n            /**\r\n             * Shows/hides the plugin GUI according to context\r\n             */\r\n            function togglePlugin() {\r\n                if (isEnabled()) {\r\n                    self.show();\r\n                } else {\r\n                    self.hide();\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Shows/hides the magnifier\r\n             */\r\n            function toggleMagnifier() {\r\n                if (self.getState('enabled')) {\r\n                    if (self.getState('active')) {\r\n                        hideMagnifier();\r\n                    } else {\r\n                        showMagnifier();\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Opens the magnifier panel\r\n             * @fires plugin-magnifier-show.magnifier\r\n             */\r\n            function showMagnifier() {\r\n                getMagnifierPanel();\r\n\r\n                if (magnifierPanel.is('hidden')) {\r\n                    magnifierPanel.show();\r\n                }\r\n                self.button.turnOn();\r\n                testRunner.trigger('plugin-open.' + pluginName);\r\n\r\n                self.setState('active', true);\r\n            }\r\n\r\n            /**\r\n             * Closes the magnifier panel\r\n             * @fires plugin-magnifier-hide.magnifier\r\n             */\r\n            function hideMagnifier() {\r\n                self.setState('active', false);\r\n\r\n                self.button.turnOff();\r\n                testRunner.trigger('plugin-close.' + pluginName);\r\n\r\n                if (magnifierPanel && !magnifierPanel.is('hidden')) {\r\n                    magnifierPanel.hide();\r\n                }\r\n            }\r\n\r\n            // build element\r\n            this.button = this.getAreaBroker().getToolbox().createEntry({\r\n                control: 'magnify',\r\n                title: __('Displays a customisable magnifier'),\r\n                text: __('Magnifying Glass'),\r\n                icon: 'find'\r\n            });\r\n\r\n            // attach behavior\r\n            this.button.on('click', function (event) {\r\n                event.preventDefault();\r\n                testRunner.trigger(actionPrefix + 'toggle');\r\n            });\r\n\r\n\r\n            // handle the plugin's shortcuts\r\n            if (testConfig.allowShortcuts) {\r\n                _.forEach(pluginShortcuts, function (command, key) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(command, pluginName, true), function () {\r\n                        // just fire the action using the event loop\r\n                        testRunner.trigger(actionPrefix + key);\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                });\r\n            }\r\n\r\n            //start disabled\r\n            togglePlugin();\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n            // runner life cycle\r\n                .on('loaditem', function () {\r\n                    togglePlugin();\r\n                    self.disable();\r\n                })\r\n                .on('renderitem', function () {\r\n                    if (magnifierPanel) {\r\n                        magnifierPanel\r\n                            .update()\r\n                            .zoomTo(pluginConfig.zoomMin);\r\n                    }\r\n                })\r\n                .on('enabletools renderitem', function () {\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function () {\r\n                    if (self.getState('active')) {\r\n                        hideMagnifier();\r\n                    }\r\n                    self.disable();\r\n                })\r\n                .on('destroy', function () {\r\n                    if (magnifierPanel) {\r\n                        magnifierPanel.destroy();\r\n                    }\r\n                    magnifierPanel = null;\r\n                })\r\n\r\n                // commands that controls the magnifier\r\n                .on(actionPrefix + 'toggle', function () {\r\n                    if (isEnabled()) {\r\n                        toggleMagnifier();\r\n                    }\r\n                })\r\n                .on(actionPrefix + 'in', function () {\r\n                    if (isEnabled() && self.getState('enabled') && self.getState('active')) {\r\n                        getMagnifierPanel().zoomIn();\r\n                    }\r\n                })\r\n                .on(actionPrefix + 'out', function () {\r\n                    if (isEnabled() && self.getState('enabled') && self.getState('active')) {\r\n                        getMagnifierPanel().zoomOut();\r\n                    }\r\n                })\r\n                .on(actionPrefix + 'close', function () {\r\n                    if (self.getState('active')) {\r\n                        hideMagnifier();\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy: function destroy() {\r\n            shortcut.remove('.' + pluginName);\r\n        },\r\n\r\n        /**\r\n         * Enables the button\r\n         */\r\n        enable: function enable() {\r\n            this.button.enable();\r\n        },\r\n\r\n        /**\r\n         * Disables the button\r\n         */\r\n        disable: function disable() {\r\n            this.button.disable();\r\n        },\r\n\r\n        /**\r\n         * Shows the button\r\n         */\r\n        show: function show() {\r\n            this.button.show();\r\n        },\r\n\r\n        /**\r\n         * Hides the button\r\n         */\r\n        hide: function hide() {\r\n            this.button.hide();\r\n        }\r\n    });\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016  (original work) Open Assessment Technologies SA;\r\n *\r\n * @author dieter <dieter@taotesting.com>\r\n * @author Alexander Zagovorichev <zagovorichev@1pt.com>\r\n */\r\n\r\ndefine('taoQtiTest/runner/plugins/tools/zoom',[\r\n    'jquery',\r\n    'i18n',\r\n    'ui/hider',\r\n    'ui/transformer',\r\n    'util/shortcut',\r\n    'util/namespace',\r\n    'taoTests/runner/plugin'\r\n], function ($, __, hider, transformer, shortcut, namespaceHelper, pluginFactory){\r\n    'use strict';\r\n\r\n    /**\r\n     * The standard zoom level, in percentage\r\n     * @type {Number}\r\n     */\r\n    var standard = 100;\r\n\r\n    /**\r\n     * Zoom-In/Zoom-Out steps\r\n     * @type {Number}\r\n     */\r\n    var increment = 10;\r\n\r\n    /**\r\n     * The zoom boundaries, in percentage\r\n     * @type {Object}\r\n     */\r\n    var threshold = {\r\n        lower: 10,\r\n        upper: 200\r\n    };\r\n\r\n    /**\r\n     * Sets the zoom level\r\n     * @param {jQuery} $target\r\n     * @param {Number} level - Zoom percentage\r\n     */\r\n    var setZoomLevel = function($target, level) {\r\n        transformer.setTransformOrigin($target, '0 0');\r\n        transformer.scale($target, level / 100);\r\n    };\r\n\r\n    /**\r\n     * Restores the standard zoom level\r\n     * @param {jQuery} $target\r\n     */\r\n    var resetZoom = function($target) {\r\n        transformer.reset($target);\r\n    };\r\n\r\n    /**\r\n     * Forces a browser repaint\r\n     * Solution from http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes?answertab=votes#tab-top\r\n     * @param {jQuery} $target\r\n     */\r\n    var forceRepaint = function($target) {\r\n        var sel = $target[0];\r\n        if (sel) {\r\n            sel.style.display = 'none';\r\n            sel.offsetHeight; // no need to store this anywhere, the reference is enough\r\n            sel.style.display = '';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the configured plugin\r\n     */\r\n    return pluginFactory({\r\n\r\n        name : 'zoom',\r\n\r\n        /**\r\n         * Initialize the plugin (called during runner's init)\r\n         */\r\n        init : function init(){\r\n            var self = this;\r\n            var testRunner = this.getTestRunner();\r\n            var testData = testRunner.getTestData() || {};\r\n            var testConfig = testData.config || {};\r\n            var pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\r\n\r\n            function zoomAction(dir) {\r\n\r\n                var inc = increment * dir;\r\n                var el, sx, sy, before, after, margin;\r\n\r\n                if (self.$zoomTarget) {\r\n                    el = self.$zoomTarget[0];\r\n\r\n                    before = el.getBoundingClientRect();\r\n\r\n                    sx = self.$container.scrollLeft();\r\n                    sy = self.$container.scrollTop();\r\n\r\n                    self.zoom = Math.max(threshold.lower, Math.min(threshold.upper, self.zoom + inc));\r\n\r\n                    if (self.zoom === standard) {\r\n                        resetZoom(self.$zoomTarget);\r\n                    } else {\r\n                        setZoomLevel(self.$zoomTarget, self.zoom);\r\n                    }\r\n\r\n                    // force a browser repaint to fix a scrollbar issue with WebKit\r\n                    forceRepaint(self.$zoomTarget);\r\n\r\n                    after = el.getBoundingClientRect();\r\n\r\n                    sx = Math.max(0, sx + (after.width - before.width) / 2);\r\n                    sy = Math.max(0, sy + (after.height - before.height) / 2);\r\n\r\n                    self.$container.scrollLeft(sx).scrollTop(sy);\r\n                }\r\n            }\r\n\r\n            function zoomIn() {\r\n                if (self.getState('enabled') !== false) {\r\n                    zoomAction(1);\r\n                }\r\n            }\r\n\r\n            function zoomOut() {\r\n                if (self.getState('enabled') !== false) {\r\n                    zoomAction(-1);\r\n                }\r\n            }\r\n\r\n            //build element (detached)\r\n            this.buttonZoomOut = this.getAreaBroker().getToolbox().createEntry({\r\n                control : 'zoomOut',\r\n                title : __('Zoom out'),\r\n                icon : 'remove'\r\n            });\r\n\r\n            this.buttonZoomIn = this.getAreaBroker().getToolbox().createEntry({\r\n                control : 'zoomIn',\r\n                title : __('Zoom in'),\r\n                icon : 'add'\r\n            });\r\n\r\n            //attach behavior\r\n            this.buttonZoomIn.on('click', function (e){\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-zoomin');\r\n            });\r\n\r\n            //attach behavior\r\n            this.buttonZoomOut.on('click', function (e){\r\n                e.preventDefault();\r\n                testRunner.trigger('tool-zoomout');\r\n            });\r\n\r\n            if (testConfig.allowShortcuts) {\r\n                if (pluginShortcuts.in) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.in, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-zoomin');\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                }\r\n\r\n                if (pluginShortcuts.out) {\r\n                    shortcut.add(namespaceHelper.namespaceAll(pluginShortcuts.out, this.getName(), true), function () {\r\n                        testRunner.trigger('tool-zoomout');\r\n                    }, {\r\n                        avoidInput: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            //start disabled\r\n            this.show();\r\n            this.disable();\r\n\r\n            //update plugin state based on changes\r\n            testRunner\r\n                .on('loaditem', function (){\r\n                    self.zoom = standard;\r\n\r\n                    self.show();\r\n                    self.disable();\r\n                })\r\n                .on('renderitem', function (){\r\n                    self.$container = $('#qti-content');\r\n                    self.$zoomTarget = $('.qti-item');\r\n\r\n                    self.enable();\r\n                })\r\n                .on('enabletools', function() {\r\n                    self.enable();\r\n                })\r\n                .on('disabletools unloaditem', function (){\r\n                    self.disable();\r\n                })\r\n                .on('tool-zoomin', zoomIn)\r\n                .on('tool-zoomout', zoomOut);\r\n        },\r\n        /**\r\n         * Called during the runner's destroy phase\r\n         */\r\n        destroy : function destroy(){\r\n            shortcut.remove('.' + this.getName());\r\n        },\r\n        /**\r\n         * Enable the button\r\n         */\r\n        enable : function enable(){\r\n            this.buttonZoomIn.enable();\r\n            this.buttonZoomOut.enable();\r\n        },\r\n        /**\r\n         * Disable the button\r\n         */\r\n        disable : function disable(){\r\n            this.buttonZoomIn.disable();\r\n            this.buttonZoomOut.disable();\r\n        },\r\n        /**\r\n         * Show the button\r\n         */\r\n        show : function show(){\r\n            this.buttonZoomIn.show();\r\n            this.buttonZoomOut.show();\r\n        },\r\n        /**\r\n         * Hide the button\r\n         */\r\n        hide : function hide(){\r\n            this.buttonZoomIn.hide();\r\n            this.buttonZoomOut.hide();\r\n        }\r\n    });\r\n});\r\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.test-runner-scope .content-wrapper p.key-navigation-group,.test-runner-scope .content-wrapper div.key-navigation-group{padding:5px !important}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction){border-width:1px !important;border-style:solid;border-color:transparent}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction).focusin{border-color:#0e5d91 !important;outline:none}.test-runner-scope .content-wrapper .key-navigation-group:not(.qti-extendedTextInteraction):not(.qti-textEntryInteraction).qti-interaction .qti-choice.key-navigation-highlight{background:#e7eff4 !important}.test-runner-scope .content-wrapper span.key-navigation-group{border:none !important}.test-runner-scope .content-wrapper span.key-navigation-group.focusin{outline:solid #0e5d91 1px !important;outline-offset:1px}.test-runner-scope .test-sidebar .key-navigation-group.focusin{background:#e7eff4}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight .qti-navigator-tab{border-width:2px}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus{outline:none}.test-runner-scope .test-sidebar .key-navigation-group .qti-navigator-filters .key-navigation-highlight:focus .qti-navigator-tab{border-top-color:#222 !important;border-left-color:#222 !important;border-right-color:#222 !important}.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight{padding-left:8px;border-left:solid 2px #222}.test-runner-scope .test-sidebar .key-navigation-group li.qti-navigator-item.key-navigation-highlight .key-navigation-highlight:focus{outline:none}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group.focusin{-webkit-box-shadow:0 0 6px 2px #3e7da7;-moz-box-shadow:0 0 6px 2px #3e7da7;-ms-box-shadow:0 0 6px 2px #3e7da7;-o-box-shadow:0 0 6px 2px #3e7da7;box-shadow:0 0 6px 2px #3e7da7}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus{margin-bottom:0;border-bottom-color:#e7eff4 !important;outline:none}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus.active{border-bottom-color:transparent !important;background:#e7eff4 !important}.test-runner-scope .bottom-action-bar.content-action-bar.key-navigation-group .key-navigation-highlight:focus:not(.active) .li-inner{color:#e7eff4}header .settings-menu .key-navigation-group{padding-right:5px}header .settings-menu .key-navigation-group.focusin{background-color:rgba(14,93,145,0.5);padding-bottom:10px}header .settings-menu .key-navigation-highlight:focus{height:54px;color:white !important;border-bottom:solid 2px white !important}\\r\\n/*# sourceMappingURL=key-navigation.css.map */\\r\\n');\n"]}