{"version":3,"sources":["routes.js","creator/templates/testpart!tpl","creator/templates/section!tpl","creator/templates/rubricblock!tpl","creator/templates/itemref!tpl","creator/templates/item!tpl","tpl!taoQtiTest/controller/creator/templates/test-props","tpl!taoQtiTest/controller/creator/templates/testpart-props","tpl!taoQtiTest/controller/creator/templates/section-props","tpl!taoQtiTest/controller/creator/templates/itemref-props","tpl!taoQtiTest/controller/creator/templates/itemref-props-weight","tpl!taoQtiTest/controller/creator/templates/rubricblock-props","creator/templates/index.js","creator/views/item.js","creator/views/property.js","creator/views/actions.js","creator/helpers/sectionCategory.js","creator/helpers/qtiTest.js","creator/views/itemref.js","creator/helpers/ckConfigurator.js","creator/views/rubricblock.js","creator/views/section.js","creator/views/testpart.js","creator/views/test.js","creator/encoders/dom2qti.js","creator/creator.js","../testRunner/actionBarHook.js","../testRunner/actionBarTools.js","../testRunner/tpl/navigator!tpl","../testRunner/tpl/navigatorTree!tpl","../testRunner/testReview.js","../testRunner/progressUpdater.js","../testRunner/testMetaData.js","../../serviceApi/ServiceApi.js","../../serviceApi/UserInfoService.js","../../serviceApi/StateStorage.js","runtime/testRunner.js"],"names":["define","Creator","css","actions","index","hb","template","Handlebars","depth0","helpers","partials","data","this","compilerInfo","merge","stack1","helper","buffer","functionType","escapeExpression","identifier","call","hash","options","helperMissing","title","__","href","label","program1","uri","categories","parent","inverse","self","noop","fn","program","program2","each","value","testPart","section","rubricBlock","itemRef","item","testProps","testPartProps","sectionProps","itemRefProps","itemRefPropsWeight","rubricBlockProps","testpart","itemref","rubricblock","properties","test","itemrefweight","$","_","templates","itemTemplate","itemView","loadItems","getCategories","setUpLiveSearch","timeout","liveSearch","pattern","$search","val","length","clearTimeout","setTimeout","getItems","keyup","siblings","click","update","items","disableSelection","$itemBox","empty","append","enableSelection","$panel","selectable","filter","selected","event","ui","addClass","unselected","removeClass","stop","trigger","then","pluck","map","isArray","DataBinder","propView","tmplName","model","propValidation","$view","on","e","isValid","namespace","$togglers","groupValidator","$container","open","databinder","binderOptions","children","hide","appendTo","startDomComponent","bind","getView","isOpen","onOpen","cb","stopPropagation","onClose","destroy","remove","toggle","not","show","propertyView","find","preventDefault","$elt","hasClass","disabledClass","blur","activeClass","btnOnClass","move","$actionContainer","containerClass","elementClass","$element","parents","$elements","is","fadeOut","insertBefore","fadeIn","insertAfter","movable","actionContainerElt","$moveUp","$moveDown","removable","$delete","disable","enable","errorHandler","isValidSectionModel","isObject","sectionParts","setCategories","oldCategories","removed","difference","all","propagated","addCategories","removeCategories","compact","arrays","values","union","apply","intersection","partial","sort","_ns","getTaoOptionCategories","name","description","qtiTestHelper","extractIdentifiers","obj","identifiers","has","concat","toLowerCase","flatten","forEach","getIdentifier","qtiType","lockedIdentifiers","suggestion","glue","contains","push","idFormatValidator","qtiIdPattern","message","validate","callback","testidFormatValidator","qtiTestIdPattern","idAvailableValidator","original","filterQtiType","type","addMissingQtiType","collection","parentType","key","isNumber","replace","consolidateModel","testParts","assessmentSections","assessmentSection","ordering","undefined","shuffle","part","rubricBlocks","content","views","sectionCategory","weightTpl","resize","throttle","$refs","first","$actions","width","innerWidth","outerWidth","setUp","$itemRef","propHandler","removePropHandler","categoriesProperty","weightsProperty","initCategories","$select","select2","tags","multiple","tokenSeparators","formatNoMatches","maximumInputLength","$weightList","defaultData","weights","listenActionState","document","$parent","$target","target","ckConfigurator","mathJax","getConfig","editor","toolbarType","underline","ckeditor","ckConfig","filterPlugin","plugin","plugins","reject","split","join","extraPlugins","$rubricBlock","rbViews","$propContainer","setUpEditor","$rubricBlockBinding","$rubricBlockContent","syncRubricBlockContent","html","inline","itemRefView","rubricBlockView","$section","$title","$selectionSwitcher","$selectionSelect","$selectionWithRep","switchSelection","prop","incrementer","selection","text","itemRefs","labels","encode","acceptItemRefs","$selected","$items","Array","prototype","slice","arguments","$placeholder","$placeholders","off","defaultItemData","itemSessionControl","isUndefined","maxAttempts","clone","$item","itemCategories","itemData","defaults","decode","trim","end","qti-type","isEmpty","addItemRef","attr","$refList","eq","addRubricBlock","adder","templateData","$li","indexOf","$sections","sectionView","$testPart","$identifier","sections","addSection","sectionIndex","$testParts","testPartView","testView","addTestPart","testPartIndex","navigationMode","submissionMode","added","getAttributes","object","omit","attrToStr","attributes","reduce","acc","isString","Dom2QtiEncoder","modelValue","result","startTag","nodeValue","$nodeValue","elt","nodeType","xmlBase","nodeName","id","class","lang","transform","childNodes","module","history","feedback","DataBindController","itemrefView","validators","Promise","url","search","resolve","getJSON","notempty","done","fail","xhr","Error","status","statusText","uris","Controller","routes","start","binder","$saver","config","back","filters","isItemRef","isSection","encoders","dom2qti","beforeSave","takeControl","get","register","window","save","success","isValidConfig","toolconfig","hook","triggerItemLoaded","tool","itemLoaded","initQtiTool","$toolsContainer","testContext","testRunner","itemIsLoaded","tools","require","$button","$existingBtn","isValidHook","init","clear","isVisible","render","_appendInOrder","$after","$before","order","prepend","parseInt","isNaN","$btn","_order","after","before","method","isFunction","$doc","eventifier","actionBarHook","registeredQtiTools","qtiTools","actionBarTools","registerTools","getRegisteredTools","getRegistered","isRegistered","list","container","promises","forIn","getId","region","hidden","active","program4","program29","program6","program7","answered","program8","program9","flagged","program11","program13","viewed","program17","program15","position","program21","program19","program24","program22","program27","program25","itemId","parts","navigatorTpl","navigatorTreeTpl","capitalize","_cssCls","collapsed","collapsible","disabled","unseen","icon","scope","testSection","_selectors","component","filterBar","tree","collapseHandle","linearState","infoAnswered","infoViewed","infoUnanswered","infoFlagged","infoPanel","infoPanelLabels","partLabels","sectionLabels","itemLabels","itemIcons","icons","linearStart","counters","actives","collapsiblePanels","notFlagged","notAnswered","_filterMap","unanswered","filtered","_optionsMap","reviewScope","reviewPreventsUnseen","canCollapse","_reviewScopes","testReview","element","initOptions","putOnRight","insertMethod","currentFilter","$component","_loadDOM","_initEvents","_updateDisplayOptions","$infoAnswered","$infoViewed","$infoUnanswered","$infoFlagged","$filterBar","$filters","$tree","$linearState","toggleClass","_openSelected","closest","_togglePanel","_openOnly","_mark","_select","_jump","mode","_filter","criteria","_updateSectionCounters","jquery","hierarchy","parentsUntil","add","opened","root","panel","collapseSelector","_setItemIcon","_adjustItemIcon","defaultIcon","iconCls","cls","_toggleFlag","flag","itemPosition","$filtered","total","nb","_writeCount","scopeClass","$root","_updateOptions","optionKey","contextKey","_updateInfos","progression","Number","$place","count","_getProgressionOfTest","numberItems","numberCompleted","numberPresented","numberFlagged","_getProgressionOfTestPart","numberItemsPart","numberCompletedPart","numberPresentedPart","numberFlaggedPart","_getProgressionOfTestSection","numberItemsSection","numberCompletedSection","numberPresentedSection","numberFlaggedSection","_updateTree","navigatorMap","reviewScopePart","reviewScopeSection","_partsFilter","preventsUnseen","setItemFlag","updateNumberFlagged","fields","currentPosition","currentFound","currentSection","currentPart","itemFound","itemSection","itemPart","field","getProgression","progressInfoMethod","eventName","dom","extraParameters","testReviewFactory","progressUpdaters","progressBar","progressLabel","progressbar","write","ratio","progressIndicator","progressIndicatorMethod","percentageProgression","Math","max","floor","positionProgression","progressScope","progressIndicatorScope","progressScopeCounter","counter","progressUpdaterFactory","updater","testMetaDataFactory","_testServiceCallId","testServiceCallId","testMetaData","setData","getLocalStorageData","setLocalStorageData","currentKey","getLocalStorageKey","localStorage","setItem","domException","i","removeItem","getItem","JSON","parse","_storageKeyPrefix","_data","TypeError","SECTION_EXIT_CODE","COMPLETED_NORMALLY","QUIT","COMPLETE_TIMEOUT","TIMEOUT","FORCE_QUIT","IN_PROGRESS","ERROR","TEST_EXIT_CODE","COMPLETE","TERMINATED","INCOMPLETE","INCOMPLETE_QUIT","INACTIVE","CANDIDATE_DISAGREED_WITH_NDA","getTestServiceCallId","setTestServiceCallId","stringify","addData","overwrite","getData","clearData","UrlParser","ServiceApi","baseUrl","parameters","serviceCallId","stateStorage","userService","paused","connected","state","hasBeenPaused","SIG_SUCCESS","SIG_ERROR","loadInto","frame","$frame","callUrl","getCallUrl","isCORSAllowed","checkCORS","connect","contentWindow","__knownParent__","onServiceApiReady","params","param","getUserPropertyValues","property","getServiceCallId","getState","setState","set","getHasBeenPaused","setHasBeenPaused","getParameter","onFinish","onFinishCallback","onKill","onKillCallback","onExit","onExitCallback","kill","exit","finish","valueArray","UserInfoService","requestUrl","hasOwnProperty","ajax","dataType","service","r","StateStorage","submitUrl","progressUpdater","iframeNotifier","MathJax","deleter","moment","modal","timerIds","currentTimes","lastDates","timeDiffs","waitingTime","$timers","$controls","timerIndex","sessionStateService","optionNextSection","optionNextSectionWarning","optionReviewScreen","optionEndTestWarning","TestRunner","TEST_STATE_INITIAL","TEST_STATE_INTERACTING","TEST_STATE_MODAL_FEEDBACK","TEST_STATE_SUSPENDED","TEST_STATE_CLOSED","TEST_NAVIGATION_LINEAR","TEST_NAVIGATION_NONLINEAR","TEST_ITEM_STATE_INTERACTING","beforeTransition","disableGui","$itemFrame","$rubricBlocks","$timerWrapper","afterTransition","enableGui","ITEM","ITEM_START_TIME_CLIENT","Date","now","jump","action","isJumpOutOfSection","isCurrentItemActive","isTimedSection","exitTimedSection","killItemSession","actionCall","keepItemTimed","duration","markForReview","markForReviewUrl","cache","async","itemFlagged","updateTools","moveForward","doExitSection","isTimeout","exitSection","itemPositionSection","shouldDisplayEndTestWarning","displayEndTestWarning","isLast","hasOption","nextAction","confirmLabel","cancelLabel","showItemCount","displayExitMessage","moveBackward","jumpPosition","getCurrentSectionItems","isJumpToOtherSection","isValidPosition","exitCode","SECTION","qtiRunner","getQtiRunner","doExitTimedSection","updateItemApi","nextSection","doNextSection","scopeSuffixMap","scopeSuffix","$confirmBox","unansweredCount","flaggedCount","isCurrentItemAnswered","toString","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","format","itemServiceApi","itemSessionState","getCurrentItemState","response","base","option","itemFrame","getElementById","itemWindow","itemContainerFrame","itemContainerWindow","timeConstraints","qtiClassName","sectionItems","partId","testPartId","navMap","partIndex","skip","doSkip","updateTimer","confirmBox","confirmBtn","setTestContext","eval","itemServiceApiCall","initMetadata","getSessionStateService","accuracy","$runner","restart","updateContext","updateProgress","updateNavigation","updateTestReview","updateInformation","updateRubrics","updateExitButton","resetCurrentItemState","$contentBox","adjustFrame","visibility","error","itemIdentifier","showSkip","showSkipEnd","showNextSection","allowSkipping","$skip","$skipEnd","$nextSection","createTimer","cst","$timer","$label","$time","formatTime","seconds","hasTimers","$topActionBar","allowLateSubmission","timerWarning","warnings","showed","point","closestPreviousWarning","setInterval","getTime","round","clearInterval","warning","findLast","isFinite","timeWarning","remaining","humanize","rubrics","prependTo","Hub","Queue","$exit","$moveForward","$moveEnd","$moveBackward","canMoveBackward","considerProgress","$progressBox","testTitle","sectionText","isDeepestSectionVisible","sectionTitle","$position","$titleGroup","$logout","logoutButton","exitButton","frameContentHeight","rubricHeight","outerHeight","finalHeight","innerHeight","$bottomActionBar","height","$sideBars","$sideBar","contents","$naviButtons","hideGui","showGui","totalSeconds","sec_num","hours","minutes","time","processError","serviceApi","extraParams","metaData","assign","TEST","setCurrentItemState","currentItemState","$skipButtons","$forwardButtons","$progressBar","$progressLabel","$contentPanel","ajaxError","jqxhr","getDuration","reviewScreen","reviewRegion","reviewCanCollapse","animate","opacity","responseId"],"mappings":"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3L,YAAAwG,qBACAC,cAAAzG,YAAAiiB,oBACAx1B,GAAA,OAAA,SAAAjB,MAAAgY,UACA2R,WAAAoB,KAAA/S,YACA/W,GAAA,OAAA,SAAAjB,MAAA+d,KAAA/F,UACA2R,WAAA8B,cAAA1N,KAAA/F,YAEAoR,UAAAwL,UAAA32B,EAAA,kBAGA0rB,WAAA0G,iBACA1G,WAAA4G,mBAEA9H,eAAAlsB,OAAA;AAGAotB,A9Bl0CA,W8Bk0CAkH,cAEAzH,UAAA4I,cAAA5U,IAAAgM,UAAAsL,kBAAAgC,SAAAC,QAAA,GAAA,KAEAhO,QAAA1qB,EAAA,kBACA4qB,MAAA5qB,EAAA,SAGAA,EAAAuM,UAAAvJ,GAAA,iBAAA,SAAAC,EAAA01B,WAAApI,UACAoI,YAAApI,UACA7E,WAAAkM,oBAAAe,YAAApI,SAAAA,aAEAvtB,GAAA,aAAA,SAAAC,EAAAmQ,GAAAsU,OACAtU,IAAAsU,OACAgE,WAAAkM,oBAAAxkB,GAAAsU,SAEA1kB,GAAA,eAAA,SAAAC,EAAAyzB,QACAvL,UAAAkB,WAAAqK,OAAAA;A9Bl1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvlGA,ADmGA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA,ADqCA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjtgrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzLA,AD0LA;ACzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrjvIA,ADwIA;ACvpOA,ADqOA;ACpjzxNA,ADyNA;ACxphNA,ADiNA;AChhDA,ADiDA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtfile":"taoQtiTest/controller/routes.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoQtiTest/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Creator': {\n            'css': 'creator', \n            'actions': {\n                'index' : 'controller/creator/creator'\n            }\n        }\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart clearfix\\\">\\n\\n   <h1><span data-bind=\\\"identifier\\\">\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\"> \\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"Test Part Properties\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"Move Up\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"Move Down\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span> \\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"Remove Test Part\\\" data-delete=\\\"#\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>  \\n                        <!--<span class=\\\"tlb-bar\\\">-->\\n                            <!--<span class=\\\"tlb-start\\\"></span>-->\\n                            <!--<span class=\\\"tlb-text-button-box\\\">-->\\n                                <!--<a class=\\\"tlb-text-button-off section-adder\\\">-->\\n                                    <!--<span class=\\\"icon-add\\\"></span>-->\\n                                    <!--<span class=\\\"tlb-text\\\">New Section</span>-->\\n                                <!--</a>-->\\n                            <!--</span>-->\\n                            <!--<span class=\\\"tlb-end\\\"></span>-->\\n                        <!--</span>-->\\n                    </span>   \\n                </div>\\n            </div>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"toggler opened\\\" data-toggle=\\\"#testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\n    </h1>\\n    <div id=\\\"testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-content\\\">\\n        \\n       <!-- assessmentTest/testPart/assessmentSections -->\\n       <div class=\\\"sections\\\" data-bind-each=\\\"assessmentSections\\\" data-bind-tmpl=\\\"section\\\" data-bind-filter=\\\"isSection\\\"></div>\\n\\n        <button class=\\\"btn-info small section-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>New section\\n        </button>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section\\\">\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <h2><span data-bind=\\\"title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\">\\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off rub-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Manage Rubric Blocks\", options)))\n    + \"\\\" data-toggle=\\\"#rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" ><span class=\\\"icon-rubric\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section Properties\", options) : helperMissing.call(depth0, \"__\", \"Section Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Section\", options) : helperMissing.call(depth0, \"__\", \"Remove Section\", options)))\n    + \"\\\" data-delete=\\\":parent .section\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </h2>\\n\\n    <div id=\\\"rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"rublocks clearfix toggled\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Rubric Blocks\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"rubricblocks decimal\\\" data-bind-each=\\\"rubricBlocks\\\" data-bind-tmpl=\\\"rubricblock\\\"></ol>\\n        <button class=\\\"btn-info small rublock-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"New Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"New Rubric Block\", options)))\n    + \"\\n        </button>\\n    </div>\\n    <div class=\\\"itemrefs-wrapper\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items\", options) : helperMissing.call(depth0, \"__\", \"Items\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"itemrefs decimal clearfix\\\" data-bind-each=\\\"sectionParts\\\" data-bind-tmpl=\\\"itemref\\\" data-bind-filter=\\\"isItemRef\\\" data-msg=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\\"></ol>\\n        <div class=\\\"itemref-placeholder\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"rubricblock\\\">\\n    <div class=\\\"actions\\\">\\n       <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <!--<a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block Properties\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>-->\\n                            <!--<span class=\\\"tlb-separator\\\"></span> -->\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Remove Rubric Block\", options)))\n    + \"\\\" data-delete=\\\":parent .rubricblock\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"rubricblock-content\\\" contenteditable></div>\\n    <div class=\\\"rubricblock-binding\\\" data-bind=\\\"content\\\" data-bind-html=\\\"true\\\" data-bind-encoder=\\\"dom2qti\\\"></div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<li id='\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-uri='\";\n  if (helper = helpers.href) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.href); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='itemref'>\\n    <span class='title truncate'>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <div class=\\\"actions\\\"> \\n        <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Reference Properties\", options) : helperMissing.call(depth0, \"__\", \"Item Reference Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span> \\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Item Reference\", options) : helperMissing.call(depth0, \"__\", \"Remove Item Reference\", options)))\n    + \"\\\" data-delete=\\\":parent .itemref\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>  \\n                </span>   \\n            </div>\\n        </div>\\n    </div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n     <li data-uri='\";\n  if (helper = helpers.uri) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.uri); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-categories='\";\n  if (helper = helpers.categories) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.categories); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='truncate'>\\n        \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parent), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n     </li>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class='flag truncate' title=\\\"\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/test-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"test-props props clearfix\\\">\\n\\n    <!-- test properties -->\\n    <h3 data-bind=\\\"title\\\"></h3>\\n\\n<!-- assessmentTest/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The principle identifier of the test.\", options) : helperMissing.call(depth0, \"__\", \"The principle identifier of the test.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test title.\", options) : helperMissing.call(depth0, \"__\", \"The test title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"test-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for the all test.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for the all test.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"testpart-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n    <form autocomplete=\\\"off\\\">\\n\\n<!-- assessmentTest/testPart/identifier -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"testpart-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"testpart-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test part identifier.\", options) : helperMissing.call(depth0, \"__\", \"The test part identifier.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/navigationMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n               \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"navigationMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Linear\", options) : helperMissing.call(depth0, \"__\", \"Linear\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Non Linear\", options) : helperMissing.call(depth0, \"__\", \"Non Linear\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options) : helperMissing.call(depth0, \"__\", \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/submissionMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Submission\", options) : helperMissing.call(depth0, \"__\", \"Submission\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"submissionMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Individual\", options) : helperMissing.call(depth0, \"__\", \"Individual\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Simultaneous\", options) : helperMissing.call(depth0, \"__\", \"Simultaneous\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options) : helperMissing.call(depth0, \"__\", \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl -->\\n        <div class=\\\"testpart-item-session-control toggled\\\">\\n\\n<!-- assessmentTest/testPart/itemSessionControl/maxAttempts -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input name=\\\"testpart-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/showFeedback -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowComment -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-comment\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowSkipping -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\"   />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/timeLimits/minTime -->\\n        <div class=\\\"testpart-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/testPart/timeLimits/maxTime -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this test part.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this test part.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/timeLimits/allowLateSubmission -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"section-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the section.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The section title.\", options) : helperMissing.call(depth0, \"__\", \"The section title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/visible -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-visible\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Visible\", options) : helperMissing.call(depth0, \"__\", \"Visible\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-visible\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"visible\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"A visible section is one that is identifiable by the candidate.\", options) : helperMissing.call(depth0, \"__\", \"A visible section is one that is identifiable by the candidate.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/keepTogether -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-keep-together\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keep Together\", options) : helperMissing.call(depth0, \"__\", \"Keep Together\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-keep-together\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"keepTogether\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options) : helperMissing.call(depth0, \"__\", \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-category\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options) : helperMissing.call(depth0, \"__\", \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Selection\", options) : helperMissing.call(depth0, \"__\", \"Selection\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection -->\\n    <div class=\\\"section-selection toggled\\\">\\n\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-enable-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enable selection\", options) : helperMissing.call(depth0, \"__\", \"Enable selection\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-enable-selection\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/select -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-select\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select\", options) : helperMissing.call(depth0, \"__\", \"Select\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-select\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"0\\\" data-bind=\\\"selection.select\\\"  data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The number of child elements to be selected.\", options) : helperMissing.call(depth0, \"__\", \"The number of child elements to be selected.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/withReplacement -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-with-replacement\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With Replacement\", options) : helperMissing.call(depth0, \"__\", \"With Replacement\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-with-replacement\\\" value=\\\"true\\\" data-bind=\\\"selection.withReplacement\\\"  data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"When selecting child elements each element is normally eligible for selection once only.\", options) : helperMissing.call(depth0, \"__\", \"When selecting child elements each element is normally eligible for selection once only.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-ordering\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Ordering\", options) : helperMissing.call(depth0, \"__\", \"Ordering\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/ordering -->\\n    <div class=\\\"section-ordering toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/ordering/shuffle -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-shuffle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Shuffle\", options) : helperMissing.call(depth0, \"__\", \"Shuffle\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-shuffle\\\" value=\\\"true\\\" data-bind=\\\"ordering.shuffle\\\"  data-bind-encoder=\\\"boolean\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options) : helperMissing.call(depth0, \"__\", \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl -->\\n    <div class=\\\"section-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"section-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this section.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this section.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"itemref-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"itemref-props props clearfix\\\">\\n\\n    <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the item reference.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the item reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/href -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-href\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reference\", options) : helperMissing.call(depth0, \"__\", \"Reference\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-href\\\" data-bind=\\\"href\\\" readonly=\\\"readonly\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The reference.\", options) : helperMissing.call(depth0, \"__\", \"The reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-category\\\" data-bind=\\\"categories\\\" data-bind-encoder=\\\"str2array\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items can optionally be assigned to one or more categories.\", options) : helperMissing.call(depth0, \"__\", \"Items can optionally be assigned to one or more categories.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/required -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-required\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required\", options) : helperMissing.call(depth0, \"__\", \"Required\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-required\\\" value=\\\"true\\\" data-bind=\\\"required\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If required it must appear (at least once) in the selection.\", options) : helperMissing.call(depth0, \"__\", \"If required it must appear (at least once) in the selection.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/fixed -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-fixed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Fixed\", options) : helperMissing.call(depth0, \"__\", \"Fixed\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-fixed\\\" value=\\\"true\\\" data-bind=\\\"fixed\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Not shuffled, the position remains fixed.\", options) : helperMissing.call(depth0, \"__\", \"Not shuffled, the position remains fixed.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-weights\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Weights\", options) : helperMissing.call(depth0, \"__\", \"Weights\", options)))\n    + \"</h4>\\n\\n    <div class=\\\"itemref-weights toggled\\\">\\n        <div class=\\\"grid-row \\\">\\n            <div class=\\\"col-9\\\">\\n                <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</strong>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n                <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Value\", options) : helperMissing.call(depth0, \"__\", \"Value\", options)))\n    + \"</strong>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the contribution of an individual item score to the overall test score.\", options) : helperMissing.call(depth0, \"__\", \"Controls the contribution of an individual item score to the overall test score.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/weights -->\\n        <div data-bind-each=\\\"weights\\\" data-bind-tmpl=\\\"itemrefweight\\\"></div>\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-12\\\">\\n                <a class=\\\"itemref-weight-add\\\"><span class=\\\"icon-add\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"add a new weight\", options) : helperMissing.call(depth0, \"__\", \"add a new weight\", options)))\n    + \"</a>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl -->\\n    <div class=\\\"itemref-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"itemref-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"itemref-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this item.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this item.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props-weight', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"grid-row itemref-weight\\\">\\n    <div class=\\\"col-9\\\">\\n        <input data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" type=\\\"text\\\" value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n        <input data-bind=\\\"value\\\" data-validate=\\\"$notEmpty; $numeric;\\\" type=\\\"text\\\" value=\\\"\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-bind-encoder=\\\"float\\\" />\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <a class=\\\"itemref-weight-remove\\\" data-delete=\\\":parent .itemref-weight\\\">\\n            <span class=\\\"icon-bin\\\"></span>\\n        </a>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"rubricblock-props props clearfix\\\">\\n\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block\", options)))\n    + \": \";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n <!--assessmentTest/testPart/assessmentSection/sectionPart/rubrickBlocK/views -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Views\", options) : helperMissing.call(depth0, \"__\", \"Views\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <select name=\\\"view\\\" multiple=\\\"multiple\\\" data-bind=\\\"views\\\">\\n                <option value=\\\"author\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Author\", options) : helperMissing.call(depth0, \"__\", \"Author\", options)))\n    + \"</option>\\n                <option value=\\\"candidate\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Candidate\", options) : helperMissing.call(depth0, \"__\", \"Candidate\", options)))\n    + \"</option>\\n                <option value=\\\"proctor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proctor\", options) : helperMissing.call(depth0, \"__\", \"Proctor\", options)))\n    + \"</option>\\n                <option value=\\\"scorer\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scorer\", options) : helperMissing.call(depth0, \"__\", \"Scorer\", options)))\n    + \"</option>\\n                <option value=\\\"testConstructor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test constructor\", options) : helperMissing.call(depth0, \"__\", \"Test constructor\", options)))\n    + \"</option>\\n                <option value=\\\"tutor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Tutor\", options) : helperMissing.call(depth0, \"__\", \"Tutor\", options)))\n    + \"</option>\\n            </select>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Who can view the rubric block during the delivery.\", options) : helperMissing.call(depth0, \"__\", \"Who can view the rubric block during the delivery.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","define('taoQtiTest/controller/creator/templates/index',[\n    'tpl!taoQtiTest/controller/creator/templates/testpart',\n    'tpl!taoQtiTest/controller/creator/templates/section',\n    'tpl!taoQtiTest/controller/creator/templates/rubricblock',\n    'tpl!taoQtiTest/controller/creator/templates/itemref',\n    'tpl!taoQtiTest/controller/creator/templates/item',\n    'tpl!taoQtiTest/controller/creator/templates/test-props',\n    'tpl!taoQtiTest/controller/creator/templates/testpart-props',\n    'tpl!taoQtiTest/controller/creator/templates/section-props',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props-weight',\n    'tpl!taoQtiTest/controller/creator/templates/rubricblock-props'\n],\nfunction(\n    testPart,\n    section,\n    rubricBlock,\n    itemRef,\n    item,\n    testProps,\n    testPartProps,\n    sectionProps,\n    itemRefProps,\n    itemRefPropsWeight,\n    rubricBlockProps\n){\n    'use strict';\n\n    /**\n     * Expose all the templates used by the test creator\n     * @exports taoQtiTest/controller/creator/templates/index\n     */\n    return {\n        'testpart'      : testPart,\n        'section'       : section,\n        'itemref'       : itemRef,\n        'item'          : item,\n        'rubricblock'   : rubricBlock,\n        'properties'    : {\n            'test'      : testProps,\n            'testpart'  : testPartProps,\n            'section'   : sectionProps,\n            'itemref'   : itemRefProps,\n            'itemrefweight': itemRefPropsWeight,\n            'rubricblock'   : rubricBlockProps\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/item',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/templates/index'\n], function($, _, templates){\n    'use strict';\n\n    var itemTemplate = templates.item;\n\n\n\n   /**\n     * The ItemView setup items related components\n     * @exports taoQtiTest/controller/creator/views/item\n     * @param {Function} loadItems - the function used to get items from the server\n     * @param {Function} getCategories - the function used to get items' categories\n     */\n    var itemView =  function(loadItems, getCategories){\n\n        var $panel     = $('.test-creator-items .item-selection');\n        var $search    = $('#item-filter');\n        var $itemBox   = $('.item-box', $panel);\n\n        var getItems = function getItems(pattern){\n            return loadItems(pattern).then(function(items){\n                if(!items || !items.length){\n                    return update();\n                }\n                return getCategories(_.pluck(items, 'uri')).then(function(categories){\n                    update(_.map(items, function(item){\n                        item.categories = _.isArray(categories[item.uri]) ? categories[item.uri] : [];\n                        return item;\n                    }));\n                });\n            });\n        };\n\n        getItems().then(setUpLiveSearch);\n\n        /**\n         * Set up the search behavior: once 3 chars are enters into the field,\n         * we load the items that matches the given search pattern.\n         * @private\n         */\n        function setUpLiveSearch (){\n            var timeout;\n\n            var liveSearch = function(){\n                var pattern = $search.val();\n                if(pattern.length > 1 || pattern.length === 0){\n                    clearTimeout(timeout);\n                    timeout = setTimeout(function(){\n                        getItems(pattern);\n                    }, 300);\n                }\n            };\n\n            //trigger the search on keyp and on the magnifer button click\n            $search.keyup(liveSearch)\n                     .siblings('.ctrl').click(liveSearch);\n        }\n\n        /**\n         * Update the items list\n         * @private\n         * @param {Array} items - the new items\n         */\n        function update (items){\n            disableSelection();\n            $itemBox.empty().append(itemTemplate(items));\n            enableSelection();\n        }\n\n        /**\n         * Disable the selectable component\n         * @private\n         * @param {Array} items - the new items\n         */\n        function disableSelection (){\n            if($panel.data('selectable')){\n                $panel.selectable('disable');\n            }\n        }\n\n        /**\n         * Enable to select items to be added to sections\n         * using the jquery-ui selectable.\n         * @private\n         */\n        function enableSelection (){\n\n            if($panel.data('selectable')){\n                $panel.selectable('enable');\n            } else {\n                $panel.selectable({\n                    filter: 'li',\n                    selected: function( event, ui ) {\n                        $(ui.selected).addClass('selected');\n                    },\n                    unselected: function( event, ui ) {\n                        $(ui.unselected).removeClass('selected');\n                    },\n                    stop: function(){\n                        $(this).trigger('itemselect.creator', $('.selected'));\n                    }\n                });\n            }\n        }\n    };\n\n    return itemView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/property',[\n    'jquery',\n    'ui',\n    'core/databinder',\n    'taoQtiTest/controller/creator/templates/index'\n],\nfunction($, ui, DataBinder, templates){\n    'use strict';\n\n    /**\n     * @callback PropertyViewCallback\n     * @param {propertyView} propertyView - the view object\n     */\n\n    /**\n     * The PropertyView setup the property panel component\n     *\n     * @exports taoQtiTest/controller/creator/views/property\n     */\n    var propView = function propView(tmplName, model){\n        var $container = $('.test-creator-props');\n        var template = templates.properties[tmplName];\n        var $view;\n\n        /**\n         * Opens the view for the 1st time\n         */\n        var open = function propOpen(){\n            var databinder,\n                binderOptions = {\n                    templates: templates.properties\n                };\n            $container.children('.props').hide().trigger('propclose.propview');\n            $view = $(template(model)).appendTo($container).filter('.props');\n\n            //start listening for DOM compoenents inside the view\n            ui.startDomComponent($view);\n\n            //start the data binding\n            databinder = new DataBinder($view, model, binderOptions);\n            databinder.bind();\n\n            propValidation();\n\n            $view.trigger('propopen.propview');\n        };\n\n       /**\n        * Get the view container element\n        * @returns {jQueryElement}\n        */\n        var getView = function propGetView(){\n            return $view;\n        };\n\n       /**\n        * Check wheter the view is displayed\n        * @returns {boolean} true id opened\n        */\n        var isOpen = function propIsOpen(){\n            return $view.css('display') !== 'none';\n        };\n\n       /**\n        * Bind a callback on view open\n        * @param {PropertyViewCallback} cb\n        */\n        var onOpen = function propOnOpen(cb){\n            $view.on('propopen.propview', function(e){\n                e.stopPropagation();\n                cb();\n            });\n        };\n\n\n        /**\n         * Bind a callback on view close\n         * @param {PropertyViewCallback} cb\n         */\n        var onClose = function propOnClose(cb){\n            $view.on('propclose.propview', function(e){\n                e.stopPropagation();\n                cb();\n            });\n        };\n\n        /**\n         * Removes the property view\n         */\n        var destroy = function propDestroy(){\n            $view.remove();\n        };\n\n        /**\n         * Toggles the property view display\n         */\n        var toggle = function propToggle(){\n            $container.children('.props').not($view).hide().trigger('propclose.propview');\n            if(isOpen()){\n                $view.hide().trigger('propclose.propview');\n            } else {\n                $view.show().trigger('propopen.propview');\n            }\n        };\n\n       /**\n        * Set up the validation on the property view\n        * @private\n        */\n        function propValidation() {\n            $view.on('validated.group', function(e, isValid){\n                if(e.namespace === 'group'){\n                    var $togglers = $('#test-creator .property-toggler, #saver');\n                    if(isValid === true){\n                        $togglers.removeClass('disabled');\n                    } else {\n                        $togglers.addClass('disabled');\n                    }\n                }\n            });\n            $view.groupValidator();\n         }\n\n        return {\n            open : open,\n            getView : getView,\n            isOpen : isOpen,\n            onOpen : onOpen,\n            onClose : onClose,\n            destroy : destroy,\n            toggle : toggle\n        };\n    };\n\n   return propView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/actions',[\n'jquery',\n'taoQtiTest/controller/creator/views/property'],\nfunction($, propertyView){\n    'use strict';\n\n    var disabledClass = 'disabled';\n    var activeClass = 'active';\n    var btnOnClass = 'tlb-button-on';\n\n    /**\n     * Set up the property view for an element\n     * @param {jQueryElement} $container - that contains the property opener\n     * @param {String} template - the name of the template to give to the propertyView\n     * @param {Object} model - the model to bind\n     * @param {PropertyViewCallback} cb - execute at view setup phase\n     */\n    function properties ($container, template, model, cb) {\n        var propView = null;\n        $container.find('.property-toggler').on('click', function(e){\n            e.preventDefault();\n            var $elt = $(this);\n            if(!$(this).hasClass(disabledClass)){\n\n                $elt.blur(); //to remove the focus\n\n                if(propView === null){\n\n                    $container.addClass(activeClass);\n                    $elt.addClass(btnOnClass);\n\n                    propView = propertyView(template, model);\n                    propView.open();\n\n                    propView.onOpen(function(){\n                        $container.addClass(activeClass);\n                        $elt.addClass(btnOnClass);\n                    });\n                    propView.onClose(function(){\n                        $container.removeClass(activeClass);\n                        $elt.removeClass(btnOnClass);\n                    });\n\n                    if(typeof cb === 'function'){\n                        cb(propView);\n                    }\n                } else {\n                    propView.toggle();\n                }\n            }\n        });\n    }\n\n\n    /**\n     * Enable to move an element\n     * @param {jQueryElement} $actionContainer - where the mover is\n     * @param {String} containerClass - the cssClass of the element container\n     * @param {String} elementClass - the cssClass to identify elements\n     */\n    function move ($actionContainer, containerClass, elementClass) {\n        var $element = $actionContainer.parents('.' + elementClass);\n        var $container = $element.parents('.' + containerClass );\n\n        //move up an element\n        $('.move-up', $actionContainer).click(function(e){\n            var $elements, index;\n\n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            index = $elements.index($element);\n            if (index > 0) {\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertBefore($('.' + elementClass + ' :eq(' + (index - 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n\n        //move down an element\n        $('.move-down', $actionContainer).click(function(e){\n            var $elements, index;\n\n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            index = $elements.index($element);\n            if (index < ($elements.length - 1) && $elements.length > 1) {\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertAfter($('.' + elementClass + ' :eq(' + (index + 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n    }\n\n    /**\n     * Update the movable state of an element\n     * @param {jQueryElement} $container - the movable elements (scopped)\n     * @param {String} elementClass - the cssClass to identify elements\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function movable ($container, elementClass, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n\n            var index = $container.index($elt);\n            var $moveUp = $('.move-up', $actionContainer);\n            var $moveDown = $('.move-down', $actionContainer);\n\n            //only one test part, no moving\n            if( $container.length === 1 ){\n                $moveUp.addClass(disabledClass);\n                $moveDown.addClass(disabledClass);\n\n            //testpart is the first, only moving down\n            } else if(index === 0) {\n                $moveUp.addClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n\n            //testpart is the lasst, only moving up\n            } else if ( index >= ($container.length - 1) ) {\n                $moveDown.addClass(disabledClass);\n                $moveUp.removeClass(disabledClass);\n\n            //or enable moving top/bottom\n            } else {\n                $moveUp.removeClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n            }\n         });\n    }\n\n    /**\n     * Update the removable state of an element\n     * @param {jQueryElement} $container - that contains the removable action\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function removable ($container, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n            var $delete = $('[data-delete]', $actionContainer);\n\n            if($container.length <= 1){\n                $delete.addClass(disabledClass);\n            } else {\n                $delete.removeClass(disabledClass);\n            }\n        });\n    }\n\n    /**\n     * Disable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function disable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').addClass(disabledClass);\n    }\n\n    /**\n     * Enable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function enable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').removeClass(disabledClass);\n    }\n\n    /**\n     * The actions gives you shared behavior for some actions.\n     *\n     * @exports taoQtiTest/controller/creator/views/actions\n     */\n    return {\n        properties  : properties,\n        move        : move,\n        removable   : removable,\n        movable     : movable,\n        disable     : disable,\n        enable      : enable\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiTest/controller/creator/helpers/sectionCategory',[\n    'lodash',\n    'i18n',\n    'core/errorHandler'\n], function (_, __, errorHandler){\n\n    'use strict';\n\n    var _ns = '.sectionCategory';\n\n    /**\n     * Check if the given object is a valid assessmentSection model object\n     *\n     * @param {object} model\n     * @returns {boolean}\n     */\n    function isValidSectionModel(model){\n        return (_.isObject(model) && model['qti-type'] === 'assessmentSection' && _.isArray(model.sectionParts));\n    }\n\n    /**\n     * Set an array of categories to the section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function setCategories(model, categories){\n\n        var oldCategories = getCategories(model);\n\n        //the categories that are no longer in the new list of categories should be removed\n        var removed = _.difference(oldCategories.all, categories);\n\n        //the categories that are not in the old categories collection should be added to the children\n        var propagated = _.difference(categories, oldCategories.all);\n\n        //process the modification\n        addCategories(model, propagated);\n        removeCategories(model, removed);\n    }\n\n    /**\n     * Get the categories assign to the section model, infered by its interal itemRefs\n     *\n     * @param {object} model\n     * @returns {object}\n     */\n    function getCategories(model){\n\n        if(isValidSectionModel(model)){\n            var categories = _.map(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    return _.compact(itemRef.categories);\n                }\n            });\n            //array of categories\n            var arrays = _.values(categories);\n            var union = _.union.apply(null, arrays);\n\n            //categories that are common to all itemRef\n            var propagated = _.intersection.apply(null, arrays);\n\n            //the categories that are only partially covered on the section level : complementary of \"propagated\"\n            var partial = _.difference(union, propagated);\n\n            return {\n                all : union.sort(),\n                propagated : propagated.sort(),\n                partial : partial.sort()\n            };\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Add an array of categories to a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function addCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef'){\n                    if(!_.isArray(itemRef.categories)){\n                        itemRef.categories = [];\n                    }\n                    itemRef.categories = _.union(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Remove an array of categories from a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function removeCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    itemRef.categories = _.difference(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Give the list of tao pre-defined test option categories\n     * Useful to have this list somewhere in the code.\n     *\n     * @returns {array}\n     */\n    function getTaoOptionCategories(){\n        return [\n            {\n                name : 'x-tao-option-endTestWarning',\n                description : __('displays a warning before the user finishes the test')\n            },\n            {\n                name : 'x-tao-option-nextSectionWarning',\n                description : __('displays a next section button that warns the user that they will not be able to return to the section')\n            },\n            {\n                name : 'x-tao-option-nextSection',\n                description : __('displays a next section button')\n            },\n            {\n                name : 'x-tao-option-exit',\n                description : __('displays an exit button')\n            },\n            {\n                name : 'x-tao-option-markReview',\n                description : __('displays a mark for review button. This option requires requires the x-tao-option-reviewScreen option')\n            },\n            {\n                name : 'x-tao-option-reviewScreen',\n                description : __('displays the review screen / navigator')\n            },\n            {\n                name : 'x-tao-option-calculator',\n                description : __('enable calculator')\n            },\n            {\n                name : 'x-tao-itemusage-informational',\n                description : __('describe the item as informational')\n            }\n        ];\n    }\n\n    return {\n        isValidSectionModel : isValidSectionModel,\n        setCategories : setCategories,\n        getCategories : getCategories,\n        addCategories : addCategories,\n        removeCategories : removeCategories,\n        getTaoOptionCategories : getTaoOptionCategories\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiTest',['lodash', 'i18n'], function(_, __){\n    'use strict';\n\n    /**\n     * Utils to manage the QTI Test model\n     * @exports taoQtiTest/controller/creator/qtiTestHelper\n     */\n    var qtiTestHelper = {\n\n        /**\n         * Extract qti identifiers from a model\n         * @param {Object} obj - the model to extract id from\n         * @returns {Array} the extracted identifiers\n         */\n        extractIdentifiers : function extractIdentifiers(obj){\n            var self = this;\n            var identifiers = [];\n            if(_.has(obj, 'identifier')){\n                identifiers = identifiers.concat(obj.identifier.toLowerCase());\n            }\n            _.flatten(_.forEach(obj, function(value) {\n                identifiers = identifiers.concat(typeof value === \"object\" ? self.extractIdentifiers(value) : []);\n            }), true);\n            return identifiers;\n        },\n\n        /**\n         * Get a valid and avialable qti identifier\n         * @param {String} qtiType - the type of element you want an id for\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {String} the identifier\n         */\n        getIdentifier : function getIdentifier(qtiType, lockedIdentifiers){\n            var index = 1;\n            var suggestion;\n            var glue =  '-';\n\n            do {\n                suggestion = qtiType +  glue + (index++);\n            } while(_.contains(lockedIdentifiers, suggestion.toLowerCase()));\n\n            lockedIdentifiers.push(suggestion.toLowerCase());\n\n            return suggestion;\n        },\n\n        /**\n         * Gives you a validator that check QTI id format\n         * @returns {Object} the validator\n         */\n        idFormatValidator : function idFormatValidator(){\n            var qtiIdPattern = /^[_a-zA-Z]{1}[a-zA-Z0-9\\-._]{0,31}$/i;\n            return {\n                name : 'idFormat',\n                message : __('is not a valid identifier (alphanum, underscore, dash and dots)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Gives you a validator that check QTI id format of the test (it is different from the others...)\n         * @returns {Object} the validator\n         */\n        testidFormatValidator : function testidFormatValidator(){\n            var qtiTestIdPattern = /^\\S+$/;\n            return {\n                name : 'testIdFormat',\n                message : __('is not a valid identifier (everything except spaces)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiTestIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Gives you a validator that check if a QTI id is available\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {Object} the validator\n         */\n        idAvailableValidator : function idAvailableValidator(lockedIdentifiers){\n            return {\n                name : 'testIdAvailable',\n                message : __('is already used in the test.'),\n                validate : function(value, callback, options){\n                    if(typeof callback === 'function'){\n                        callback(!_.contains(_.values(lockedIdentifiers), value.toLowerCase()) || (options.original && value === options.original));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Does the value contains the type type\n         * @param {Object} value\n         * @param {string} type\n         * @returns {boolean}\n         */\n        filterQtiType : function filterQtiType (value, type){\n            return value['qti-type'] && value['qti-type'] === type;\n        },\n\n        /**\n         * Add the 'qti-type' properties to object that miss it, using the parent key name\n         * @param {Object|Array} collection\n         * @param {string} parentType\n         */\n        addMissingQtiType : function addMissingQtiType(collection, parentType) {\n            var self = this;\n            _.forEach(collection, function(value, key) {\n                if (_.isObject(value) && !_.isArray(value) && !_.has(value, 'qti-type')) {\n                    if (_.isNumber(key)) {\n                        if (parentType) {\n                            value['qti-type'] = parentType;\n                        }\n                    } else {\n                        value['qti-type'] = key;\n                    }\n                }\n                if (_.isArray(value)) {\n                    self.addMissingQtiType(value, key.replace(/s$/, ''));\n                } else if (_.isObject(value)) {\n                    self.addMissingQtiType(value);\n                }\n            });\n        },\n\n        /**\n         * Applies consolidation rules to the model\n         * @param {Object} model\n         * @returns {Object}\n         */\n        consolidateModel : function consolidateModel(model){\n            if(model && model.testParts && _.isArray(model.testParts)){\n\n                _.forEach(model.testParts, function(testPart) {\n\n                    if(testPart.assessmentSections && _.isArray(testPart.assessmentSections)){\n\n                        _.forEach(testPart.assessmentSections, function(assessmentSection) {\n\n                            //remove ordering is shuffle is false\n                            if(assessmentSection.ordering &&\n                                assessmentSection.ordering.shuffle !== undefined && assessmentSection.ordering.shuffle === false){\n                                delete assessmentSection.ordering;\n                            }\n\n                            // clean categories (QTI identifier can't be empty string)\n                            if(assessmentSection.sectionParts && _.isArray(assessmentSection.sectionParts)) {\n                                _.forEach(assessmentSection.sectionParts, function(part) {\n                                    if(part.categories && _.isArray(part.categories) && (part.categories.length === 0 || part.categories[0].length === 0)) {\n                                        part.categories = [];\n                                    }\n                                });\n                            }\n\n                            if(assessmentSection.rubricBlocks && _.isArray(assessmentSection.rubricBlocks)) {\n\n                                //remove rubrick blocks if empty\n                                if (assessmentSection.rubricBlocks.length === 0 ||\n                                    (assessmentSection.rubricBlocks.length === 1 && assessmentSection.rubricBlocks[0].content.length === 0) ) {\n\n                                    delete assessmentSection.rubricBlocks;\n                                }\n                                //ensure the view attribute is present\n                                else if(assessmentSection.rubricBlocks.length > 0){\n                                    _.forEach(assessmentSection.rubricBlocks, function(rubricBlock){\n                                        rubricBlock.views = ['candidate'];\n                                        //change once views are supported\n                                        //if(rubricBlock && rubricBlock.content && (!rubricBlock.views || (_.isArray(rubricBlock.views) && rubricBlock.views.length === 0))){\n                                        //rubricBlock.views = ['candidate'];\n                                        //}\n                                    });\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n            return model;\n        }\n    };\n\n    return  qtiTestHelper;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/itemref',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/helpers/sectionCategory',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props-weight'\n],\nfunction(\n    $,\n    _,\n    __,\n    actions,\n    sectionCategory,\n    qtiTestHelper,\n    weightTpl\n){\n    'use strict';\n\n    /**\n     * We need to resize the itemref in case of long labels\n     */\n    var resize = _.throttle(function resize(){\n        var $refs = $('.itemrefs').first();\n        var $actions = $('.itemref .actions').first();\n        var width = $refs.innerWidth() - $actions.outerWidth();\n        $('.itemref > .title').width(width);\n    }, 100);\n\n    /**\n     * Set up an item ref: init action behaviors. Called for each one.\n     *\n     * @param {jQueryElement} $itemRef - the itemRef element to set up\n     * @param {Object} model - the data model to bind to the ref\n     */\n    var setUp =  function setUp ($itemRef, model){\n\n        var $actionContainer = $('.actions', $itemRef);\n\n        actions.properties($actionContainer, 'itemref', model, propHandler);\n        actions.move($actionContainer, 'itemrefs', 'itemref');\n\n        resize();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            categoriesProperty(propView.getView());\n            weightsProperty(propView);\n\n            $itemRef.parents('.testpart').on('delete', removePropHandler);\n            $itemRef.parents('.section').on('delete', removePropHandler);\n            $itemRef.on('delete', removePropHandler);\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         */\n        function categoriesProperty($view){\n            var $select = $view.find('[name=itemref-category]');\n            $select.select2({\n                width: '100%',\n                tags : _.pluck(sectionCategory.getTaoOptionCategories(), 'name'),\n                multiple : true,\n                tokenSeparators: [\",\", \" \", \";\"],\n                formatNoMatches : function(){\n                    return __('Enter a category');\n                },\n                maximumInputLength : 32\n            });\n\n            initCategories();\n            $view.on('propopen.propview', function(){\n                initCategories();\n            });\n\n            /**\n             * save the categories into the model\n             * @private\n             */\n            function initCategories(){\n                $select.select2('val', model.categories);\n            }\n        }\n\n\n        /**\n         * Setup the weights properties\n         */\n        function weightsProperty(propView) {\n            var $view = propView.getView(),\n                $weightList = $view.find('[data-bind-each=\"weights\"]');\n\n            $view.find('.itemref-weight-add').on('click', function(e) {\n                var defaultData = {\n                    value: 1,\n                    identifier: (model.weights.length === 0)\n                        ? 'WEIGHT'\n                        : qtiTestHelper.getIdentifier('WEIGHT', qtiTestHelper.extractIdentifiers(model))\n                };\n                e.preventDefault();\n\n                $weightList.append(weightTpl(defaultData));\n                $weightList.trigger('add.internalbinder'); // trigger model update\n\n                $view.groupValidator();\n            });\n        }\n    };\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    var listenActionState =  function listenActionState (){\n\n        $('.itemrefs').each(function(){\n            actions.movable($('.itemref', $(this)), 'itemref', '.actions');\n        });\n\n        $(document)\n        .on('delete', function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('itemref')){\n                $parent = $target.parents('.itemrefs');\n                actions.disable($parent.find('.itemref'), '.actions');\n            }\n        })\n        .on('add change undo.deleter deleted.deleter', '.itemrefs',  function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('itemref') || $target.hasClass('itemrefs')){\n                $parent = $('.itemref', $target.hasClass('itemrefs') ? $target : $target.parents('.itemrefs'));\n                actions.enable($parent, '.actions');\n                actions.movable($parent, 'itemref', '.actions');\n            }\n        });\n    };\n\n    /**\n     * The itemrefView setup itemref related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/itemref\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState,\n        resize : resize\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator', 'mathJax'], function(ckConfigurator, mathJax) {\n    'use strict';\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options){\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator.getConfig(editor, toolbarType, options);\n    };\n\n    return {\n        getConfig : getConfig\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/rubricblock',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/views/actions',\n    'helpers',\n    'ckeditor',\n    'taoQtiTest/controller/creator/helpers/ckConfigurator'\n], function($, _, actions, helpers, ckeditor, ckConfigurator){ // qtiClasses, creatorRenderer, XmlRenderer, simpleParser){\n    'use strict';\n\n    //compute ckeditor config only once\n    var ckConfig = ckConfigurator.getConfig(ckeditor, 'qtiBlock');\n\n    var filterPlugin = function filterPlugin(plugin){\n        return _.contains(['taoqtiimage', 'taoqtimedia','taoqtimaths', 'taoqtiinclude'], plugin);\n    };\n    ckConfig.plugins = _.reject(ckConfig.plugins.split(','), filterPlugin).join(',');\n    ckConfig.extraPlugins = _.reject(ckConfig.extraPlugins.split(','), filterPlugin).join(',');\n\n    /**\n     * Set up a rubric block: init action beahviors. Called for each one.\n     *\n     * @param {jQueryElement} $rubricBlock - the rubricblock to set up\n     */\n    var setUp = function setUp($rubricBlock, model, data){\n\n        actions.properties($rubricBlock, 'rubricblock', model, propHandler);\n        setUpEditor();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler(propView){\n\n            rbViews(propView.getView());\n\n            $rubricBlock.parents('.testpart').on('delete', removePropHandler);\n            $rubricBlock.parents('.section').on('delete', removePropHandler);\n            $rubricBlock.on('delete', removePropHandler);\n\n            function removePropHandler(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the views select box\n         * @private\n         * @param {jQuerElement} $propContainer - the element container\n         */\n        function rbViews($propContainer){\n            var $select = $('select', $propContainer);\n\n            $select.select2({\n                'width' : '100%'\n            }).on(\"select2-removed\", function(e){\n                if($select.select2('val').length === 0){\n                    $select.select2('val', [1]);\n                }\n            });\n\n            if($select.select2('val').length === 0){\n                $select.select2('val', [1]);\n            }\n        }\n\n        /**\n         * Set up ck editor\n         * @private\n         */\n        function setUpEditor(){\n            var editor;\n\n            //we need to synchronize the ck elt with an hidden elt that has data-binding\n            var $rubricBlockBinding = $('.rubricblock-binding', $rubricBlock);\n            var $rubricBlockContent = $('.rubricblock-content', $rubricBlock);\n            var syncRubricBlockContent = _.throttle(function(){\n                 $rubricBlockBinding\n                    .html($rubricBlockContent.html())\n                    .trigger('change');\n            }, 100);\n\n            $rubricBlockContent.empty().html($rubricBlockBinding.html());\n\n            editor = ckeditor.inline($rubricBlockContent[0], ckConfig);\n            editor.on('change', function(e) {\n                syncRubricBlockContent();\n            });\n        }\n    };\n\n    /**\n     * The rubriclockView setup RB related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/rubricblock\n     */\n    return {\n        setUp : setUp\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/section',[\n    'jquery',\n    'lodash',\n    'uri',\n    'i18n',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/views/rubricblock',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'taoQtiTest/controller/creator/helpers/sectionCategory'\n],\nfunction($, _, uri, __, actions, itemRefView, rubricBlockView, templates, qtiTestHelper, sectionCategory){\n    'use strict';\n\n    /**\n     * Set up a section: init action beahviors. Called for each section.\n     *\n     * @param {jQueryElement} $sectuin - the section to set up\n     * @param {Object} model - the data model to bind to the test part\n     * @param {Object} [data] - additionnal data used by the setup\n     * @param {Array} [data.identifiers] - the locked identifiers\n     */\n    var setUp = function setUp ($section, model, data){\n\n        var $actionContainer = $('h2', $section);\n\n        actions.properties($actionContainer, 'section', model, propHandler);\n        actions.move($actionContainer, 'sections', 'section');\n        itemRefs();\n        acceptItemRefs();\n        rubricBlocks();\n        addRubricBlock();\n\n        //trigger for the case the section is added an a selection is ongoing\n\n\n        /**\n         *  Perform some binding once the property view is create\n         *  @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $title;\n            var $view = propView.getView();\n\n            //enable/disable selection\n            var $selectionSwitcher = $('[name=section-enable-selection]', $view);\n            var $selectionSelect = $('[name=section-select]', $view);\n            var $selectionWithRep = $('[name=section-with-replacement]', $view);\n\n            var switchSelection = function switchSelection(){\n                if($selectionSwitcher.prop('checked') === true){\n                    $selectionSelect.incrementer('enable');\n                    $selectionWithRep.removeClass('disabled');\n                } else {\n                    $selectionSelect.incrementer('disable');\n                    $selectionWithRep.addClass('disabled');\n                }\n            };\n            $selectionSwitcher.on('change', switchSelection);\n            $selectionSwitcher.on('change', function updateModel(){\n                if(!$selectionSwitcher.prop('checked')){\n                    $selectionSelect.val(0);\n                    $selectionWithRep.prop('checked', false);\n                    delete model.selection;\n                }\n            });\n\n            $selectionSwitcher.prop('checked', !!model.selection).trigger('change');\n\n            //listen for databinder change to update the test part title\n            $title =  $('[data-bind=title]', $section);\n            $view.on('change.binder', function(e){\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentSection'){\n                    $title.text(model.title);\n                }\n            });\n\n            $section.parents('.testpart').on('deleted.deleter', removePropHandler);\n            $section.on('deleted.deleter', removePropHandler);\n\n            //section level category configuration\n            categoriesProperty($view);\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the item refs that already belongs to the section\n         * @private\n         */\n        function itemRefs(){\n\n            if(!model.sectionParts){\n                model.sectionParts = [];\n            }\n            $('.itemref', $section).each(function(){\n                var $itemRef = $(this);\n                var index = $itemRef.data('bind-index');\n                if(!model.sectionParts[index]){\n                    model.sectionParts[index] = {};\n                }\n\n                itemRefView.setUp($itemRef, model.sectionParts[index]);\n                $itemRef.find('.title').text(\n                    data.labels[uri.encode($itemRef.data('uri'))]\n                );\n            });\n        }\n\n        /**\n         * Make the section to accept the selected items\n         * @private\n         */\n        function acceptItemRefs(){\n            var $selected;\n            var $items     = $('.test-creator-items');\n\n            //the item selector trigger a select event\n            $items.on('itemselect.creator', function(){\n                var selection = Array.prototype.slice.call(arguments, 1);\n                var $placeholder = $('.itemref-placeholder', $section);\n                var $placeholders = $('.itemref-placeholder');\n\n                if(selection.length > 0){\n                    $placeholder.show().off('click').on('click', function(){\n\n                        //prepare the item data\n                        var categories,\n                            defaultItemData = {};\n\n                        if(model.itemSessionControl && !_.isUndefined(model.itemSessionControl.maxAttempts)){\n\n                            //for a matter of consistency, the itemRef will \"inherit\" the itemSessionControl configuration from its parent section\n                            defaultItemData.itemSessionControl = _.clone(model.itemSessionControl);\n                        }\n\n                        //the itemRef should also \"inherit\" the categories set at the item level\n                        categories = sectionCategory.getCategories(model);\n                        defaultItemData.categories = _.clone(categories.propagated);\n\n                        _.forEach(selection, function(item){\n                            var $item = $(item);\n                            var itemCategories = $item.data('categories');\n                            var itemData = _.defaults({\n                                href        : uri.decode($item.data('uri')),\n                                label       : $.trim($item.clone().children().remove().end().text()),\n                                'qti-type'  : 'assessmentItemRef'\n                            }, defaultItemData);\n                            if(!_.isEmpty(itemCategories)){\n                                itemData.categories = _.merge( itemData.categories, itemCategories.trim().split(',') );\n                            }\n\n                            addItemRef($('.itemrefs', $section), undefined, itemData);\n                        });\n\n                        //reset the current selection\n                        $('.ui-selected', $items).removeClass('ui-selected').removeClass('selected');\n                        $placeholders.hide().off('click');\n                    });\n                } else {\n                    $placeholders.hide().off('click');\n                }\n            });\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '#' + $section.attr('id') + ' .itemrefs')\n              .on('add.binder', '#' + $section.attr('id') + ' .itemrefs', function(e, $itemRef){\n                  var index;\n                  if(e.namespace === 'binder' && $itemRef.hasClass('itemref')){\n                      index = $itemRef.data('bind-index');\n\n                      //initialize the new item ref\n                      itemRefView.setUp($itemRef, model.sectionParts[index]);\n                  }\n              });\n\n            //on set up, if there is a selection ongoing, we trigger the event\n            $selected = $('.selected', $items);\n            if($selected.length > 0){\n                $items.trigger('itemselect.creator', $selected);\n            }\n\n        }\n\n        /**\n         * Add a new item ref to the section\n         * @param {jQueryElement} $refList - the element to add the item to\n         * @param {Number} [index] - the position of the item to add\n         * @param {Object} [itemData] - the data to bind to the new item ref\n         */\n        function addItemRef($refList, index, itemData){\n            var $itemRef;\n            var $items = $refList.children('li');\n            index = index || $items.length;\n            itemData.identifier = qtiTestHelper.getIdentifier('item', data.identifiers);\n            itemData.index = index + 1;\n            $itemRef = $(templates.itemref(itemData));\n            if(index > 0){\n                $itemRef.insertAfter($items.eq(index - 1));\n            } else {\n                $itemRef.appendTo($refList);\n            }\n            $refList.trigger('add', [$itemRef, itemData]);\n        }\n\n\n        /**\n         * Set up the rubric blocks that already belongs to the section\n         * @private\n         */\n        function rubricBlocks () {\n            if(!model.rubricBlocks){\n                model.rubricBlocks = [];\n            }\n            $('.rubricblock', $section).each(function(){\n                var $rubricBlock = $(this);\n                var index = $rubricBlock.data('bind-index');\n                if(!model.rubricBlocks[index]){\n                    model.rubricBlocks[index] = {};\n                }\n\n                rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\n            });\n\n            //opens the rubric blocks section if they are there.\n            if(model.rubricBlocks.length > 0){\n                $('.rub-toggler', $section).trigger('click');\n            }\n        }\n\n        /**\n         * Enable to add new rubrick block\n         * @private\n         */\n        function addRubricBlock () {\n\n            $('.rublock-adder', $section).adder({\n                target: $('.rubricblocks', $section),\n                content : templates.rubricblock,\n                templateData : function(cb){\n                    cb({\n                        'qti-type' : 'rubricBlock',\n                        index  : $('.rubricblock', $section).length,\n                        content : [],\n                        views : [1]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document).on('add.binder', '#' + $section.attr('id') + ' .rubricblocks', function(e, $rubricBlock){\n                var index;\n                if(e.namespace === 'binder' && $rubricBlock.hasClass('rubricblock')){\n                    index = $rubricBlock.data('bind-index');\n                    $('.rubricblock-binding', $rubricBlock).html('<p>&nbsp;</p>');\n                    rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\n                }\n            });\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         */\n        function categoriesProperty($view){\n            var $select = $('[name=section-category]', $view);\n            $select.select2({\n                width: '100%',\n                tags : _.pluck(sectionCategory.getTaoOptionCategories(), 'name'),\n                multiple : true,\n                tokenSeparators: [\",\", \" \", \";\"],\n                formatNoMatches : function(){\n                    return __('Enter a category');\n                },\n                maximumInputLength : 32\n            }).on('change', function(e){\n                setCategories(e.val);\n            });\n\n            initCategories();\n            $view.on('propopen.propview', function(){\n                initCategories();\n            });\n\n            /**\n             * Start the categories editing\n             * @private\n             */\n            function initCategories(){\n\n                var categories = sectionCategory.getCategories(model);\n\n                //set categories found in the model in the select2 input\n                $select.select2('val', categories.all);\n\n                //color partial categories\n                $select.siblings('.select2-container').find('.select2-search-choice').each(function(){\n                    var $li = $(this);\n                    var content = $li.find('div').text();\n                    if(_.indexOf(categories.partial, content) >= 0){\n                        $li.addClass('partial');\n                    }\n                });\n            }\n\n            /**\n             * save the categories into the model\n             * @private\n             */\n            function setCategories(categories){\n                sectionCategory.setCategories(model, categories);\n            }\n\n        }\n    };\n\n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n    var listenActionState =  function listenActionState (){\n\n        var $sections;\n\n        $('.sections').each(function(){\n            $sections = $('.section', $(this));\n\n            actions.removable($sections, 'h2');\n            actions.movable($sections, 'section', 'h2');\n        });\n\n        $(document)\n        .on('delete', function(e){\n            var $parent;\n            var $target = $(e.target);\n            if($target.hasClass('section')){\n                $parent = $target.parents('.sections');\n                actions.disable($parent.find('.section'), 'h2');\n            }\n        })\n        .on('add change undo.deleter deleted.deleter', function(e){\n            var $target = $(e.target);\n            if($target.hasClass('section') || $target.hasClass('sections')){\n                $sections = $('.section', $target.hasClass('sections') ? $target : $target.parents('.sections'));\n                actions.removable($sections, 'h2');\n                actions.movable($sections, 'section', 'h2');\n            }\n        })\n        .on('open.toggler', '.rub-toggler', function(e){\n            if(e.namespace === 'toggler'){\n                $(this).parents('h2').addClass('active');\n            }\n        })\n        .on('close.toggler', '.rub-toggler', function(e){\n            if(e.namespace === 'toggler'){\n                $(this).parents('h2').removeClass('active');\n            }\n        });\n    };\n\n\n   /**\n     * The sectionView setup section related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/section\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/testpart',[\n'jquery', 'lodash', \n'taoQtiTest/controller/creator/views/actions', \n'taoQtiTest/controller/creator/views/section',\n'taoQtiTest/controller/creator/templates/index', \n'taoQtiTest/controller/creator/helpers/qtiTest'],\nfunction($, _, actions, sectionView, templates, qtiTestHelper){\n    'use strict';\n\n   /**\n    * Set up a test part: init action beahviors. Called for each test part.\n    *\n    * @param {jQueryElement} $testPart - the testpart to set up\n    * @param {Object} model - the data model to bind to the test part\n    * @param {Object} [data] - additionnal data used by the setup\n    * @param {Array} [data.identifiers] - the locked identifiers\n    */\n   var setUp =  function setUp ($testPart, model, data){\n\n        var $actionContainer = $('h1', $testPart);\n\n        //run setup methods\n        actions.properties($actionContainer, 'testpart', model, propHandler);\n        actions.move($actionContainer, 'testparts', 'testpart');\n        sections();\n        addSection();\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n            \n           var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n           var $identifier =  $('[data-bind=identifier]', $testPart);\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'testPart'){\n                    $identifier.text(model.identifier);\n                }\n            });\n\n            //destroy it when it's testpart is removed\n            $testPart.on('delete', function(e){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            });\n        }\n\n        /**\n         * Set up sections that already belongs to the test part\n         * @private\n         */\n        function sections(){\n            if(!model.assessmentSections){\n                model.assessmentSections = [];\n            }                   \n            $('.section', $testPart).each(function(){\n                var $section = $(this);\n                var index = $section.data('bind-index');\n                if(!model.assessmentSections[index]){\n                    model.assessmentSections[index] = {};\n                }\n\n                sectionView.setUp($section, model.assessmentSections[index], data);\n            });\n        }\n\n        /**\n         * Enable to add new sections\n         * @private\n         */\n        function addSection(){\n            $('.section-adder', $testPart).adder({\n                target: $('.sections', $testPart),\n                content : templates.section,\n                templateData : function(cb){\n\n                    //create a new section model object to be bound to the template\n                    var sectionIndex = $('.section', $testPart).length;\n                    cb({\n                        'qti-type' : 'assessmentSection',\n                        identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\n                        title : 'Section ' + (sectionIndex + 1),\n                        index : 0,\n                        sectionParts : []             \n                    });\n                }\n            });\n            \n                   \n \n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '#' + $testPart.attr('id') + ' .sections')\n              .on ('add.binder', '#' + $testPart.attr('id') + ' .sections', function(e, $section){\n                if(e.namespace === 'binder' && $section.hasClass('section')){\n                    var index = $section.data('bind-index'); \n                    //initialize the new test part\n                    sectionView.setUp($section, model.assessmentSections[index], data);\n                }\n            });\n        }\n\n   };\n   \n   /**\n    * Listen for state changes to enable/disable . Called globally.\n    */\n   var listenActionState =  function listenActionState (){\n\n        var $testParts = $('.testpart');\n        \n        actions.removable($testParts, 'h1');\n        actions.movable($testParts, 'testpart', 'h1');\n\n        $('.testparts')\n        .on('delete', function(e){\n            var $target = $(e.target);\n            if($target.hasClass('testpart')){\n                actions.disable($('.testpart'), 'h1');\n           }\n        })\n        .on('add change undo.deleter deleted.deleter', function(e){\n            var $target = $(e.target);\n\n            if($target.hasClass('testpart') || $target.hasClass('testparts')){\n                \n                //refresh\n                $testParts = $('.testpart');\n\n                //check state\n                actions.removable($testParts, 'h1');\n                actions.movable($testParts, 'testpart', 'h1');\n            }\n        });\n   };\n \n    /**\n     * The testPartView setup testpart related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/testpart\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n   }; \n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/test',[\n'jquery', 'lodash',\n'taoQtiTest/controller/creator/views/actions', \n'taoQtiTest/controller/creator/views/testpart',\n'taoQtiTest/controller/creator/templates/index',\n'taoQtiTest/controller/creator/helpers/qtiTest'\n], \nfunction($, _, actions, testPartView, templates, qtiTestHelper){\n    'use strict';\n \n   /**\n     * The TestView setup test related components and beahvior\n     * \n     * @exports taoQtiTest/controller/creator/views/test\n     * @param {Object} model - the data model to bind to the test\n     * @param {Object} [data] - additionnal data used by the setup\n     * @param {Array} [data.identifiers] - the locked identifiers\n     */\n   var testView = function testView (model, data) {\n       \n        actions.properties($('.test-creator-test > h1'), 'test', model, propHandler);\n        testParts();\n        addTestPart();\n\n        /**\n         * set up the exisiting test part views\n         * @private\n         */\n        function testParts () {\n            if(!model.testParts){\n                model.testParts = [];\n            }                   \n            $('.testpart').each(function(){\n                var $testPart = $(this);\n                var index = $testPart.data('bind-index');\n                if(!model.testParts[index]){\n                    model.testParts[index] = {};\n                }\n\n                testPartView.setUp($testPart, model.testParts[index], data);\n            });\n        }\n        \n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n            \n           var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n           var $title =  $('.test-creator-test > h1 [data-bind=title]');\n           $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentTest'){\n                    $title.text(model.title);\n                }\n            });\n        }\n\n        /**\n         * Enable to add new test parts\n         * @private\n         */\n        function addTestPart () {\n\n            $('.testpart-adder').adder({\n                target: $('.testparts'),\n                content : templates.testpart,\n                templateData : function(cb){\n\n                    //create an new testPart model object to be bound to the template\n                    var testPartIndex = $('.testpart').length;\n                    cb({\n                        'qti-type' : 'testPart',\n                        identifier : qtiTestHelper.getIdentifier('testPart', data.identifiers),\n                        index  : testPartIndex,\n                        navigationMode : 0,\n                        submissionMode : 0,\n                        assessmentSections : [{\n                            'qti-type' : 'assessmentSection',\n                            identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\n                            title : 'Section 1',\n                            index : 0,\n                            sectionParts : []             \n                        }]\n                    });\n                }\n            });\n            \n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n              .off('add.binder', '.testparts')\n              .on ('add.binder', '.testparts', function(e, $testPart, added){\n                if(e.namespace === 'binder' && $testPart.hasClass('testpart')){\n                    //initialize the new test part\n                    testPartView.setUp($testPart, model.testParts[added.index], data);\n                }\n            });\n        }\n    };\n\n    return testView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/encoders/dom2qti',['jquery', 'lodash'], function($, _){\n    'use strict';\n\n   /**\n    * Get the list of objects attributes to encode\n    * @param {Object} object\n    * @returns {Array}\n    */\n   var getAttributes = function getAttributes(object){\n        return _.omit(object, [\n           'qti-type',\n           'content',\n           'xmlBase',\n           'lang',\n           'label'\n        ]);\n   };\n\n   /**\n    * Encode object's properties to xml/html string attributes\n    * @param {Object} attributes\n    * @returns {string}\n    */\n   var attrToStr = function attrToStr(attributes){\n     return _.reduce(attributes, function(acc, value, key){\n         if(_.isNumber(value) || (_.isString(value) && !_.isEmpty(value)) ){\n             return acc + ' ' + key + '=\"'+ value + '\" ';\n         }\n         return acc;\n     }, '');\n   };\n\n   /**\n    * This encoder is used to transform DOM to JSON QTI and JSON QTI to DOM.\n    * It works now for the rubricBlocks components.\n    * @exports creator/encoders/dom2qti\n    */\n   var Dom2QtiEncoder = {\n\n       /**\n        * Encode an object to a dom string\n        * @param {Object} modelValue\n        * @returns {string}\n        */\n       encode : function(modelValue){\n           var self = this;\n\n           if(_.isArray(modelValue)){\n               return _.reduce(modelValue, function(result, value){\n                   return result + self.encode(value);\n               }, '');\n           } else if(_.isObject(modelValue) && modelValue['qti-type']){\n                if(modelValue['qti-type'] === 'textRun'){\n                    return modelValue.content;\n                }\n                var startTag = '<' + modelValue['qti-type'] + attrToStr(getAttributes(modelValue));\n                if(modelValue.content){\n                    return  startTag + '>' + self.encode(modelValue.content) + '</' + modelValue['qti-type'] + '>';\n                } else {\n                    return startTag + '/>';\n                }\n           }\n           return modelValue;\n       },\n\n       /**\n        * Decode a string that represents a DOM to a QTI formated object\n        * @param {string} nodeValue\n        * @returns {Array}\n        */\n       decode : function(nodeValue){\n           var self = this;\n           var $nodeValue = (nodeValue instanceof $) ? nodeValue : $(nodeValue);\n           var result = [];\n\n           _.forEach($nodeValue, function(elt){\n               var object;\n                if (elt.nodeType === 3) {\n                    if (!_.isEmpty($.trim(elt.nodeValue))) {\n                        result.push({\n                            'qti-type': 'textRun',\n                            'content': elt.nodeValue,\n                            \"xmlBase\": \"\"\n                        });\n                    }\n                } else if (elt.nodeType === 1){\n                    object = _.merge({\n                            'qti-type': elt.nodeName.toLowerCase(),\n                            'id' : '',\n                            'class' : '',\n                            'xmlBase' : '',\n                            'lang' : '',\n                            'label' : ''\n                        },\n                        _.transform(elt.attributes, function(acc, value) {\n                            if(value.nodeName){\n                                acc[value.nodeName] = value.nodeValue;\n                            }\n                        })\n                    );\n                    if (elt.childNodes.length > 0) {\n                        object.content = self.decode(elt.childNodes);\n                    }\n                    result.push(object);\n                }\n            });\n           return result;\n       }\n   };\n\n   return Dom2QtiEncoder;\n});\n\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/creator',[\n    'module',\n    'jquery',\n    'lodash',\n    'helpers',\n    'i18n',\n    'html5-history-api',\n    'ui/feedback',\n    'core/databindcontroller',\n    'taoQtiTest/controller/creator/views/item',\n    'taoQtiTest/controller/creator/views/test',\n    'taoQtiTest/controller/creator/views/testpart',\n    'taoQtiTest/controller/creator/views/section',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/encoders/dom2qti',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'core/validator/validators',\n    'core/promise'\n], function(\n    module,\n    $,\n    _,\n    helpers,\n    __,\n    history,\n    feedback,\n    DataBindController,\n    itemView, testView,\n    testPartView,\n    sectionView,\n    itemrefView,\n    Dom2QtiEncoder,\n    templates,\n    qtiTestHelper,\n    validators,\n    Promise\n    ){\n\n    'use strict';\n\n    /**\n     * Call the server to get the list of items\n     * @param {string} url\n     * @param {string} search - a posix pattern to filter items\n     * @returns {Promise}\n     */\n    var loadItems = function loadItems(url, search){\n        return new Promise( function(resolve, reject){\n            $.getJSON(url, {pattern : search, notempty : 'true'})\n                .done(resolve)\n                .fail(function(xhr){\n                    return reject(new Error(xhr.status + ' : ' + xhr.statusText));\n                });\n        });\n    };\n\n    /**\n     * Call the server to get the items categories\n     * @param {String} url - the endpoint\n     * @param {String[]} items - the list of items URIs\n     * @returns {Promise}\n     */\n    var getCategories = function getCategories(url, items){\n        return new Promise( function(resolve, reject){\n            if(items && items.length){\n                $.getJSON(url, { uris : items })\n                    .done(resolve)\n                    .fail(function(xhr){\n                        return reject(new Error(xhr.status + ' : ' + xhr.statusText));\n                    });\n            }\n        });\n    };\n\n    /**\n     * The test creator controller is the main entry point\n     * and orchestrates data retrieval and view/components loading.\n     * @exports creator/controller\n     */\n    var Controller = {\n\n        routes : {},\n\n        identifiers: [],\n\n         /**\n          * Start the controller, main entry method.\n          * @public\n          * @param {Object} options\n          * @param {Object} options.labels - the list of item's labels to give to the ItemView\n          * @param {Object} options.routes - action's urls\n          */\n        start : function(options){\n            var self = this;\n            var $container = $('#test-creator');\n            var $saver = $('#saver');\n            var binder, binderOptions;\n\n            self.identifiers = [];\n\n            options = _.merge(module.config(), options || {});\n            options.routes = options.routes || {};\n            options.labels = options.labels || {};\n\n\n            //back button\n            $('#authoringBack').on('click', function(e){\n                e.preventDefault();\n\n                if (history) {\n                    history.back();\n                }\n            });\n\n            //set up the ItemView, give it a configured loadItems ref\n            itemView(\n                _.partial(loadItems, options.routes.items),\n                _.partial(getCategories, options.routes.categories)\n            );\n\n            //Print data binder chandes for DEBUGGING ONLY\n            //$container.on('change.binder', function(e, model){\n                //if(e.namespace === 'binder'){\n                    //console.log(model);\n                //}\n            //});\n\n            //Data Binding options\n            binderOptions = _.merge(options.routes, {\n                filters : {\n                    'isItemRef' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentItemRef');\n                    },\n                    'isSection' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentSection');\n                    }\n                },\n                encoders : {\n                    'dom2qti' : Dom2QtiEncoder\n                },\n                templates : templates,\n                beforeSave : function(model){\n                    //ensure the qti-type is present\n                    qtiTestHelper.addMissingQtiType(model);\n\n                    //apply consolidation rules\n                    qtiTestHelper.consolidateModel(model);\n                    return true;\n                }\n            });\n\n            //set up the databinder\n            binder = DataBindController\n                .takeControl($container, binderOptions)\n                .get(function(model){\n\n                    //extract ids\n                    self.identifiers = qtiTestHelper.extractIdentifiers(model);\n\n                    //register validators\n                    validators.register('idFormat', qtiTestHelper.idFormatValidator());\n                    validators.register('testIdFormat', qtiTestHelper.testidFormatValidator());\n                    validators.register('testIdAvailable', qtiTestHelper.idAvailableValidator(self.identifiers), true);\n\n                    //once model is loaded, we set up the test view\n                    testView(model, {\n                        uri : options.uri,\n                        identifiers : self.identifiers,\n                        labels : options.labels\n                    });\n\n                    //listen for changes to update available actions\n                    testPartView.listenActionState();\n                    sectionView.listenActionState();\n                    itemrefView.listenActionState();\n                    itemrefView.resize();\n\n                    $(window)\n                      .off('resize.qti-test-creator')\n                      .on('resize.qti-test-creator', function(){\n                          itemrefView.resize();\n                      });\n                });\n\n            //the save button triggers binder's save action.\n            $saver.on('click', function(event){\n                event.preventDefault();\n\n                if(!$saver.hasClass('disabled')){\n                    $saver.attr('disabled', true).addClass('disabled');\n                    binder.save(function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n\n                        feedback().success(__('Test Saved'));\n\n                    }, function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n                    });\n                }\n            });\n        }\n    };\n\n    return Controller;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n\n/**\n * This module allows adding extra buttons in the action bar of the test runner\n *\n */\ndefine('taoQtiTest/testRunner/actionBarHook',[\n    'jquery',\n    'lodash',\n    'core/errorHandler',\n    'core/promise'\n], function ($, _, errorHandler, Promise) {\n\n    'use strict';\n\n    /**\n     * Events namespace\n     * @type {String}\n     * @private\n     */\n    var _ns = '.actionBarHook';\n\n    /**\n     * We need to access the root document to listen for some events\n     * @type {jQuery}\n     * @private\n     */\n    var $doc = $(document);\n\n    /**\n     * List of loaded and visible hooks\n     * @type {Object}\n     * @private\n     */\n    var tools = {};\n\n    /**\n     * Flag set to true when the item is loaded\n     * @type {Boolean}\n     * @private\n     */\n    var itemIsLoaded = false;\n\n    // catch the item loaded event\n    $doc.off(_ns).on('serviceloaded' + _ns, function() {\n        itemIsLoaded = true;\n        _.forEach(tools, function(tool) {\n            triggerItemLoaded(tool);\n        });\n    });\n\n    /**\n     * Check that the toolConfig is correct\n     *\n     * @param {Object} toolconfig\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Array} [toolconfig.items] - an optional list of menu items\n     * @returns {Boolean}\n     */\n    function isValidConfig(toolconfig) {\n        return !!(_.isObject(toolconfig) && toolconfig.hook);\n    }\n\n    /**\n     * Triggers the itemLoaded event inside the provided actionBar hook\n     * @param {Object} tool\n     */\n    function triggerItemLoaded(tool) {\n        if (tool && tool.itemLoaded) {\n            tool.itemLoaded();\n        }\n    }\n\n    /**\n     * Init a test runner button from its config\n     *\n     * @param {String} id\n     * @param {Object|String} toolconfig\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Array} [toolconfig.items] - an optional list of menu items\n     * @param {Object} testContext - the complete state of the test\n     * @param {Object} testRunner - the test runner instance\n     * @fires ready.actionBarHook when the hook has been initialized\n     * @returns {Promise}\n     */\n    function initQtiTool($toolsContainer, id, toolconfig, testContext, testRunner) {\n\n        // the tool is always initialized before the item is loaded, so we can safely false the flag\n        itemIsLoaded = false;\n        tools[id] = null;\n\n        if (_.isString(toolconfig)) {\n            toolconfig = {\n                hook: toolconfig\n            };\n        }\n\n        return new Promise(function(resolve) {\n            if (isValidConfig(toolconfig)) {\n\n                require([toolconfig.hook], function (hook) {\n\n                    var $button;\n                    var $existingBtn;\n\n                    if (isValidHook(hook)) {\n                        //init the control\n                        hook.init(id, toolconfig, testContext, testRunner);\n\n                        //if an instance of the tool is already attached, remove it:\n                        $existingBtn = $toolsContainer.children('[data-control=\"' + id + '\"]');\n                        if ($existingBtn.length) {\n                            hook.clear($existingBtn);\n                            $existingBtn.remove();\n                        }\n\n                        //check if the tool is to be available\n                        if (hook.isVisible()) {\n                            //keep access to the tool\n                            tools[id] = hook;\n\n                            // renders the button from the config\n                            $button = hook.render();\n\n                            //only attach the button to the dom when everything is ready\n                            _appendInOrder($toolsContainer, $button);\n\n                            //ready !\n                            $button.trigger('ready' + _ns, [hook]);\n\n                            //fires the itemLoaded event if the item has already been loaded\n                            if (itemIsLoaded) {\n                                triggerItemLoaded(hook);\n                            }\n                        }\n\n                        resolve(hook);\n                    } else {\n                        errorHandler.throw(_ns, 'invalid hook format');\n                        resolve(null);\n                    }\n\n                }, function (e) {\n                    errorHandler.throw(_ns, 'the hook amd module cannot be found');\n                    resolve(null);\n                });\n\n            } else {\n                errorHandler.throw(_ns, 'invalid tool config format');\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Append a dom element $button to a $container in a specific order\n     * The orders are provided by data-order attribute set to the $button\n     *\n     * @param {JQuery} $container\n     * @param {JQuery} $button\n     */\n    function _appendInOrder($container, $button) {\n\n        var $after, $before;\n        var order = $button.data('order');\n\n        if ('last' === order) {\n\n            $container.append($button);\n\n        } else if ('first' === order) {\n\n            $container.prepend($button);\n\n        } else {\n\n            order = _.parseInt(order);\n            if (!_.isNaN(order)) {\n\n                $container.children('.action').each(function () {\n\n                    var $btn = $(this),\n                        _order = $btn.data('order');\n\n                    if ('last' === _order) {\n\n                        $before = $btn;\n                        $after = null;\n\n                    } else if ('first' === _order) {\n\n                        $before = null;\n                        $after = $btn;\n\n                    } else {\n\n                        _order = _.parseInt(_order);\n\n                        if (_.isNaN(_order) || _order > order) {\n                            $before = $btn;\n                            $after = null;\n                            //stops here because $container children returns the dom elements in the dom order\n                            return false;\n                        } else if (_order === order) {\n                            $after = $btn;\n                        } else if (_order < order) {\n                            $after = $btn;\n                            $before = null;\n                        }\n\n                    }\n\n                });\n\n                if ($after) {\n                    $after.after($button);\n                } else if ($before) {\n                    $before.before($button);\n                } else {\n                    $container.append($button);\n                }\n\n            } else {\n                //unordered buttons are append at the end (including when order equals 0)\n                $container.append($button);\n            }\n        }\n    }\n\n    /**\n     * Check if the hook object is valid\n     *\n     * @param {Object} hook\n     * @param {Function} hook.init\n     * @param {Function} hook.clear\n     * @param {Function} hook.isVisible\n     * @returns {Boolean}\n     */\n    function isValidHook(hook) {\n        return (_.isObject(hook) && _(['init', 'render', 'clear', 'isVisible']).reduce(function (result, method) {\n            return result && _.isFunction(hook[method]);\n        }, true));\n    }\n\n    return {\n        isValid: isValidConfig,\n        initQtiTool: initQtiTool\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/actionBarTools',[\n    'jquery',\n    'lodash',\n    'core/eventifier',\n    'core/promise',\n    'taoQtiTest/testRunner/actionBarHook'\n], function ($, _, eventifier, Promise, actionBarHook) {\n    'use strict';\n\n    /**\n     * The list of registered actionBar tools\n     * @type {Object}\n     */\n    var registeredQtiTools;\n\n    /**\n     * The list of actionBar tools instances\n     * @type {Object}\n     */\n    var qtiTools;\n\n    /**\n     * Manages the actionBar tools\n     * @type {Object}\n     */\n    var actionBarTools = {\n        /**\n         * Registers the actionBar tools\n         * @param {Object} tools\n         */\n        register : function register(tools) {\n            var registerTools = tools || {};\n\n            /**\n             * @event actionBarTools#beforeregister\n             * @param {Object} tools\n             * @param {actionBarTools} this\n             */\n            this.trigger('beforeregister', registerTools, this);\n\n            registeredQtiTools = registerTools;\n\n            /**\n             * @event actionBarTools#afterregister\n             * @param {Object} tools\n             * @param {actionBarTools} this\n             */\n            this.trigger('afterregister', registerTools, this);\n        },\n\n        /**\n         * Gets the list of registered tools\n         * @returns {Object}\n         */\n        getRegisteredTools : function getRegisteredTools() {\n            return registeredQtiTools || {};\n        },\n\n        /**\n         * Gets a particular tool config\n         * @param {String} id\n         * @returns {Object}\n         */\n        getRegistered : function getRegistered(id) {\n            return registeredQtiTools && registeredQtiTools[id];\n        },\n\n        /**\n         * Checks if a particular tool is registered\n         * @param {String} id\n         * @returns {Boolean}\n         */\n        isRegistered : function isRegistered(id) {\n            return !!(registeredQtiTools && registeredQtiTools[id]);\n        },\n\n        /**\n         * Gets a particular tool\n         * @param {String} id\n         * @returns {Object}\n         */\n        get : function get(id) {\n            return qtiTools && qtiTools[id];\n        },\n\n        /**\n         * Gets the list of tools instances\n         * @returns {Array}\n         */\n        list : function list() {\n            return _.values(qtiTools || {});\n        },\n\n        /**\n         * Renders the actionBar\n         * @param {String|jQuery|HTMLElement} container - The container in which renders the tools\n         * @param {Object} testContext - The assessment test context\n         * @param {Object} testRunner - The assessment test runner\n         * @param {Function} [callback] - An optional callback fired when all tools have been rendered\n         */\n        render : function render(container, testContext, testRunner, callback) {\n            var self = this;\n            var $container = $(container);\n            var promises = [];\n\n            /**\n             * @event actionBarTools#beforerender\n             * @param {jQuery} $container\n             * @param {Object} testContext\n             * @param {Object} testRunner\n             * @param {actionBarTools} this\n             */\n            this.trigger('beforerender', $container, testContext, testRunner, this);\n\n            _.forIn(this.getRegisteredTools(), function(toolconfig, id){\n                promises.push(actionBarHook.initQtiTool($container, id, toolconfig, testContext, testRunner));\n            });\n\n            Promise.all(promises).then(function(values) {\n                var tools = [];\n                qtiTools = {};\n\n                _.forEach(values, function(tool) {\n                    if (tool) {\n                        tools.push(tool);\n                        qtiTools[tool.getId()] = tool;\n                    }\n                });\n\n                if (_.isFunction(callback)) {\n                    callback.call(self, tools, $container, testContext, testRunner, self);\n                }\n\n                /**\n                 * @event actionBarTools#afterrender\n                 * @param {Array} tools\n                 * @param {jQuery} $container\n                 * @param {Object} testContext\n                 * @param {Object} testRunner\n                 * @param {actionBarTools} this\n                 */\n                self.trigger('afterrender', tools, $container, testContext, testRunner, self);\n            });\n        }\n    };\n\n    return eventifier(actionBarTools);\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"        <aside class=\\\"test-sidebar test-sidebar-\";\n  if (helper = helpers.region) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.region); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" flex-container-navi qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n            <div class=\\\"qti-navigator-collapsible\\\">\\n                <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\n                <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n                <ul class=\\\"collapsible-panel plain\\\">\\n                    <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-filters\\\">\\n                <ul class=\\\"plain clearfix\\\">\\n                    <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                        <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"</span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                        <span class=\\\"icon-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                        <span class=\\\"icon-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <nav class=\\\"qti-navigator-tree\\\">\\n            </nav>\\n\\n            <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n                <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                <p class=\\\"qti-navigator-message\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                </p>\\n            </div>\\n        </aside>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            <span class=\\\"icon-up\\\"></span>\\n                            <span class=\\\"icon-down\\\"></span>\\n                        </span>\\n                        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.sections)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(29, program29, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                    </li>\\n                    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n                            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                        </ul>\\n                        \";\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                                    <span class=\\\"qti-navigator-counter\\\">\";\n  if (helper = helpers.answered) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.answered); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                </span>\\n                                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                                </ul>\\n                            </li>\\n                            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                                    <li class=\\\"qti-navigator-item\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                            <span class=\\\"qti-navigator-icon icon-\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\\n                                            <span class=\\\"qti-navigator-number\\\">\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                                        </span>\\n                                    </li>\\n                                    \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \" flagged\";\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  return \" answered\";\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  return \" viewed\";\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  return \" unseen\";\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  return \"flagged\";\n  }\n\nfunction program21(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program22(depth0,data) {\n  \n  \n  return \"answered\";\n  }\n\nfunction program24(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program25(depth0,data) {\n  \n  \n  return \"viewed\";\n  }\n\nfunction program27(depth0,data) {\n  \n  \n  return \"unseen\";\n  }\n\nfunction program29(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n                        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n                            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                            <p class=\\\"qti-navigator-message\\\">\\n                                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                            </p>\\n                            <p class=\\\"qti-navigator-actions\\\">\\n                                <button class=\\\"btn-info small\\\" data-id=\\\"\";\n  if (helper = helpers.itemId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.itemId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\n                                    <span class=\\\"icon-play r\\\"></span>\\n                                </button>\\n                            </p>\\n                        </div>\\n                        \";\n  return buffer;\n  }\n\n  buffer += \"                <ul class=\\\"qti-navigator-parts plain\\\">\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/testReview',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiTest/testRunner/tpl/navigator',\n    'tpl!taoQtiTest/testRunner/tpl/navigatorTree',\n    'util/capitalize'\n], function ($, _, __, navigatorTpl, navigatorTreeTpl, capitalize) {\n    'use strict';\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n        active : 'active',\n        collapsed : 'collapsed',\n        collapsible : 'collapsible',\n        hidden : 'hidden',\n        disabled : 'disabled',\n        flagged : 'flagged',\n        answered : 'answered',\n        viewed : 'viewed',\n        unseen : 'unseen',\n        icon : 'qti-navigator-icon',\n        scope : {\n            test : 'scope-test',\n            testPart : 'scope-test-part',\n            testSection : 'scope-test-section'\n        }\n    };\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n        component : '.qti-navigator',\n        filterBar : '.qti-navigator-filters',\n        tree : '.qti-navigator-tree',\n        collapseHandle : '.qti-navigator-collapsible',\n        linearState : '.qti-navigator-linear',\n        infoAnswered : '.qti-navigator-answered .qti-navigator-counter',\n        infoViewed : '.qti-navigator-viewed .qti-navigator-counter',\n        infoUnanswered : '.qti-navigator-unanswered .qti-navigator-counter',\n        infoFlagged : '.qti-navigator-flagged .qti-navigator-counter',\n        infoPanel : '.qti-navigator-info',\n        infoPanelLabels : '.qti-navigator-info > .qti-navigator-label',\n        parts : '.qti-navigator-part',\n        partLabels : '.qti-navigator-part > .qti-navigator-label',\n        sections : '.qti-navigator-section',\n        sectionLabels : '.qti-navigator-section > .qti-navigator-label',\n        items : '.qti-navigator-item',\n        itemLabels : '.qti-navigator-item > .qti-navigator-label',\n        itemIcons : '.qti-navigator-item > .qti-navigator-icon',\n        icons : '.qti-navigator-icon',\n        linearStart : '.qti-navigator-linear-part button',\n        counters : '.qti-navigator-counter',\n        actives : '.active',\n        collapsible : '.collapsible',\n        collapsiblePanels : '.collapsible-panel',\n        unseen : '.unseen',\n        answered : '.answered',\n        flagged : '.flagged',\n        notFlagged : ':not(.flagged)',\n        notAnswered : ':not(.answered)',\n        hidden : '.hidden'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n        all : \"\",\n        unanswered : _selectors.answered,\n        flagged : _selectors.notFlagged,\n        answered : _selectors.notAnswered,\n        filtered : _selectors.hidden\n    };\n\n    /**\n     * Maps of config options translated from the context object to the local options\n     * @type {Object}\n     * @private\n     */\n    var _optionsMap = {\n        'reviewScope' : 'reviewScope',\n        'reviewPreventsUnseen' : 'preventsUnseen',\n        'canCollapse' : 'canCollapse'\n    };\n\n    /**\n     * Maps the handled review scopes\n     * @type {Object}\n     * @private\n     */\n    var _reviewScopes = {\n        test : 'test',\n        testPart : 'testPart',\n        testSection : 'testSection'\n    };\n\n    /**\n     * Provides a test review manager\n     * @type {Object}\n     */\n    var testReview = {\n        /**\n         * Initializes the component\n         * @param {String|jQuery|HTMLElement} element The element on which install the component\n         * @param {Object} [options] A list of extra options\n         * @param {String} [options.region] The region on which put the component: left or right\n         * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\n         * the whole test, the current test part or the current test section)\n         * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n         * @returns {testReview}\n         */\n        init: function init(element, options) {\n            var initOptions = _.isObject(options) && options || {};\n            var putOnRight = 'right' === initOptions.region;\n            var insertMethod = putOnRight ? 'append' : 'prepend';\n\n            this.options = initOptions;\n            this.disabled = false;\n            this.hidden = !!initOptions.hidden;\n            this.currentFilter = 'all';\n\n            // clean the DOM if the init method is called after initialisation\n            if (this.$component) {\n                this.$component.remove();\n            }\n\n            // build the component structure and inject it into the DOM\n            this.$container = $(element);\n            insertMethod = this.$container[insertMethod];\n            if (insertMethod) {\n                insertMethod.call(this.$container, navigatorTpl({\n                    region: putOnRight ? 'right' : 'left',\n                    hidden: this.hidden\n                }));\n            } else {\n                throw new Error(\"Unable to inject the component structure into the DOM\");\n            }\n\n            // install the component behaviour\n            this._loadDOM();\n            this._initEvents();\n            this._updateDisplayOptions();\n\n            return this;\n        },\n\n        /**\n         * Links the component to the underlying DOM elements\n         * @private\n         */\n        _loadDOM: function() {\n            this.$component = this.$container.find(_selectors.component);\n\n            // access to info panel displaying counters\n            this.$infoAnswered = this.$component.find(_selectors.infoAnswered);\n            this.$infoViewed = this.$component.find(_selectors.infoViewed);\n            this.$infoUnanswered = this.$component.find(_selectors.infoUnanswered);\n            this.$infoFlagged = this.$component.find(_selectors.infoFlagged);\n\n            // access to filter switches\n            this.$filterBar = this.$component.find(_selectors.filterBar);\n            this.$filters = this.$filterBar.find('li');\n\n            // access to the tree of parts/sections/items\n            this.$tree = this.$component.find(_selectors.tree);\n\n            // access to the panel displayed when a linear part is reached\n            this.$linearState = this.$component.find(_selectors.linearState);\n        },\n\n        /**\n         * Installs the event handlers on the underlying DOM elements\n         * @private\n         */\n        _initEvents: function() {\n            var self = this;\n\n            // click on the collapse handle: collapse/expand the review panel\n            this.$component.on('click' + _selectors.component, _selectors.collapseHandle, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                self.$component.toggleClass(_cssCls.collapsed);\n                if (self.$component.hasClass(_cssCls.collapsed)) {\n                    self._openSelected();\n                }\n            });\n\n            // click on the info panel title: toggle the related panel\n            this.$component.on('click' + _selectors.component, _selectors.infoPanelLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.infoPanel);\n                self._togglePanel($panel, _selectors.infoPanel);\n            });\n\n            // click on a part title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.partLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.parts);\n                var open = self._togglePanel($panel, _selectors.parts);\n\n                if (open) {\n                    if ($panel.hasClass(_cssCls.active)) {\n                        self._openSelected();\n                    } else {\n                        self._openOnly($panel.find(_selectors.sections).first(), $panel);\n                    }\n                }\n            });\n\n            // click on a section title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.sectionLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.sections);\n\n                self._togglePanel($panel, _selectors.sections);\n            });\n\n            // click on an item: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.itemLabels, function(event) {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $item = $(this).closest(_selectors.items);\n                var $target;\n\n                if (!$item.hasClass(_cssCls.disabled)) {\n                    $target = $(event.target);\n                    if ($target.is(_selectors.icons) && !self.$component.hasClass(_cssCls.collapsed)) {\n                        if (!$item.hasClass(_cssCls.unseen)) {\n                            self._mark($item);\n                        }\n                    } else {\n                        self._select($item);\n                        self._jump($item);\n                    }\n                }\n            });\n\n            // click on the start button inside a linear part: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.linearStart, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n\n                if (!$btn.hasClass(_cssCls.disabled)) {\n                    $btn.addClass(_cssCls.disabled);\n                    self._jump($btn);\n                }\n            });\n\n            // click on a filter button\n            this.$filterBar.on('click' + _selectors.component, 'li', function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n                var mode = $btn.data('mode');\n\n                self.$filters.removeClass(_cssCls.active);\n                self.$component.removeClass(_cssCls.collapsed);\n                $btn.addClass(_cssCls.active);\n\n                self._filter(mode);\n            });\n        },\n\n        /**\n         * Filters the items by a criteria\n         * @param {String} criteria\n         * @private\n         */\n        _filter: function(criteria) {\n            var $items = this.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\n            var filter = _filterMap[criteria];\n            if (filter) {\n                $items.filter(filter).addClass(_cssCls.hidden);\n            }\n            this._updateSectionCounters(!!filter);\n            this.currentFilter = criteria;\n        },\n\n        /**\n         * Selects an item\n         * @param {String|jQuery} position The item's position\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _select: function(position, open) {\n            // find the item to select and extract its hierarchy\n            var selected = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            if (open) {\n                this._openOnly(hierarchy);\n            }\n\n            // select the item\n            this.$tree.find(_selectors.actives).removeClass(_cssCls.active);\n            hierarchy.add(selected).addClass(_cssCls.active);\n            return selected;\n        },\n\n        /**\n         * Opens the tree on the selected item only\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _openSelected: function() {\n            // find the selected item and extract its hierarchy\n            var selected = this.$tree.find(_selectors.items + _selectors.actives);\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            this._openOnly(hierarchy);\n\n            return selected;\n        },\n\n        /**\n         * Collapses the full tree and opens only the provided branch\n         * @param {jQuery} opened The element to be opened\n         * @param {jQuery} [root] The root element from which collapse the panels\n         * @private\n         */\n        _openOnly: function(opened, root) {\n            (root || this.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n            opened.removeClass(_cssCls.collapsed);\n        },\n\n        /**\n         * Toggles a panel\n         * @param {jQuery} panel The panel to toggle\n         * @param {String} [collapseSelector] Selector of panels to collapse\n         * @returns {Boolean} Returns `true` if the panel just expanded now\n         */\n        _togglePanel: function(panel, collapseSelector) {\n            var collapsed = panel.hasClass(_cssCls.collapsed);\n\n            if (collapseSelector) {\n                this.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n            }\n\n            if (collapsed) {\n                panel.removeClass(_cssCls.collapsed);\n            } else {\n                panel.addClass(_cssCls.collapsed);\n            }\n            return collapsed;\n        },\n\n        /**\n         * Sets the icon of a particular item\n         * @param {jQuery} $item\n         * @param {String} icon\n         * @private\n         */\n        _setItemIcon: function($item, icon) {\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\n        },\n\n        /**\n         * Sets the icon of a particular item according to its state\n         * @param {jQuery} $item\n         * @private\n         */\n        _adjustItemIcon: function($item) {\n            var icon = null;\n            var defaultIcon = _cssCls.unseen;\n            var iconCls = [\n                _cssCls.flagged,\n                _cssCls.answered,\n                _cssCls.viewed\n            ];\n\n            _.forEach(iconCls, function(cls) {\n                if ($item.hasClass(cls)) {\n                    icon = cls;\n                    return false;\n                }\n            });\n\n            this._setItemIcon($item, icon || defaultIcon);\n        },\n\n        /**\n         * Toggle the marked state of an item\n         * @param {jQuery} $item\n         * @param {Boolean} [flag]\n         * @private\n         */\n        _toggleFlag: function($item, flag) {\n            $item.toggleClass(_cssCls.flagged, flag);\n            this._adjustItemIcon($item);\n        },\n\n        /**\n         * Marks an item for later review\n         * @param {jQuery} $item\n         * @private\n         */\n        _mark: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n            var flag = !$item.hasClass(_cssCls.flagged);\n\n            this._toggleFlag($item);\n\n            /**\n             * A storage of the flag is required\n             * @event testReview#mark\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('mark', [flag, itemPosition, itemId]);\n        },\n\n        /**\n         * Jumps to an item\n         * @param {jQuery} $item\n         * @private\n         */\n        _jump: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n\n            /**\n             * A jump to a particular item is required\n             * @event testReview#jump\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('jump', [itemPosition, itemId]);\n        },\n\n        /**\n         * Updates the sections related items counters\n         * @param {Boolean} filtered\n         */\n        _updateSectionCounters: function(filtered) {\n            var self = this;\n            var filter = _filterMap[filtered ? 'filtered' : 'answered'];\n            this.$tree.find(_selectors.sections).each(function() {\n                var $section = $(this);\n                var $items = $section.find(_selectors.items);\n                var $filtered = $items.filter(filter);\n                var total = $items.length;\n                var nb = total - $filtered.length;\n                self._writeCount($section.find(_selectors.counters), nb, total);\n            });\n        },\n\n        /**\n         * Updates the display according to options\n         * @private\n         */\n        _updateDisplayOptions: function() {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test';\n            var scopeClass = _cssCls.scope[reviewScope];\n            var $root = this.$component;\n            _.forEach(_cssCls.scope, function(cls) {\n                $root.removeClass(cls);\n            });\n            if (scopeClass) {\n                $root.addClass(scopeClass);\n            }\n            $root.toggleClass(_cssCls.collapsible, this.options.canCollapse);\n        },\n\n        /**\n         * Updates the local options from the provided context\n         * @param {Object} testContext The progression context\n         * @private\n         */\n        _updateOptions: function(testContext) {\n            var options = this.options;\n            _.forEach(_optionsMap, function(optionKey, contextKey) {\n                if (undefined !== testContext[contextKey]) {\n                    options[optionKey] = testContext[contextKey];\n                }\n            });\n        },\n\n        /**\n         * Updates the info panel\n         */\n        _updateInfos: function() {\n            var progression = this.progression,\n                unanswered = Number(progression.total) - Number(progression.answered);\n\n            // update the info panel\n            this._writeCount(this.$infoAnswered, progression.answered, progression.total);\n            this._writeCount(this.$infoUnanswered, unanswered, progression.total);\n            this._writeCount(this.$infoViewed, progression.viewed, progression.total);\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\n        },\n\n        /**\n         * Updates a counter\n         * @param {jQuery} $place\n         * @param {Number} count\n         * @param {Number} total\n         * @private\n         */\n        _writeCount: function($place, count, total) {\n            $place.text(count + '/' + total);\n        },\n\n        /**\n         * Gets the progression stats for the whole test\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTest: function(testContext) {\n            return {\n                total : testContext.numberItems || 0,\n                answered : testContext.numberCompleted || 0,\n                viewed : testContext.numberPresented || 0,\n                flagged : testContext.numberFlagged || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test part\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestPart: function(testContext) {\n            return {\n                total : testContext.numberItemsPart || 0,\n                answered : testContext.numberCompletedPart || 0,\n                viewed : testContext.numberPresentedPart || 0,\n                flagged : testContext.numberFlaggedPart || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test section\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestSection: function(testContext) {\n            return {\n                total : testContext.numberItemsSection || 0,\n                answered : testContext.numberCompletedSection || 0,\n                viewed : testContext.numberPresentedSection || 0,\n                flagged : testContext.numberFlaggedSection || 0\n            };\n        },\n\n        /**\n         * Updates the navigation tre\n         * @param {Object} testContext The progression context\n         */\n        _updateTree: function(testContext) {\n            var navigatorMap = testContext.navigatorMap;\n            var reviewScope = this.options.reviewScope;\n            var reviewScopePart = reviewScope === 'testPart';\n            var reviewScopeSection = reviewScope === 'testSection';\n            var _partsFilter = function(part) {\n                if (reviewScopeSection && part.sections) {\n                    part.sections = _.filter(part.sections, _partsFilter);\n                }\n                return part.active;\n            };\n\n            // rebuild the tree\n            if (navigatorMap) {\n                if (reviewScopePart || reviewScopeSection) {\n                    // display only the current section\n                    navigatorMap = _.filter(navigatorMap, _partsFilter);\n                }\n\n                this.$filterBar.show();\n                this.$linearState.hide();\n                this.$tree.html(navigatorTreeTpl({\n                    parts: navigatorMap\n                }));\n\n                if (this.options.preventsUnseen) {\n                    // disables all unseen items to prevent the test taker has access to.\n                    this.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n                }\n            } else {\n                this.$filterBar.hide();\n                this.$linearState.show();\n                this.$tree.empty();\n            }\n\n            // apply again the current filter\n            this._filter(this.$filters.filter(_selectors.actives).data('mode'));\n        },\n\n        /**\n         * Set the marked state of an item\n         * @param {Number|String|jQuery} position\n         * @param {Boolean} flag\n         */\n        setItemFlag: function setItemFlag(position, flag) {\n            var $item = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var progression = this.progression;\n\n            // update the item flag\n            this._toggleFlag($item, flag);\n\n            // update the info panel\n            progression.flagged = this.$tree.find(_selectors.flagged).length;\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\n            this._filter(this.currentFilter);\n        },\n\n        /**\n         * Update the number of flagged items in the test context\n         * @param {Object} testContext The test context\n         * @param {Number} position The position of the flagged item\n         * @param {Boolean} flag The flag state\n         */\n        updateNumberFlagged: function(testContext, position, flag) {\n            var fields = ['numberFlagged'];\n            var currentPosition = testContext.itemPosition;\n            var currentFound = false, currentSection = null, currentPart = null;\n            var itemFound = false, itemSection = null, itemPart = null;\n\n            if (testContext.navigatorMap) {\n                // find the current item and the marked item inside the navigator map\n                // check if the marked item is in the current section\n                _.forEach(testContext.navigatorMap, function(part) {\n                    _.forEach(part && part.sections, function(section) {\n                        _.forEach(section && section.items, function(item) {\n                            if (item) {\n                                if (item.position === position) {\n                                    itemPart = part;\n                                    itemSection = section;\n                                    itemFound = true;\n                                }\n                                if (item.position === currentPosition) {\n                                    currentPart = part;\n                                    currentSection = section;\n                                    currentFound = true;\n\n                                }\n                                if (itemFound && currentFound) {\n                                    return false;\n                                }\n                            }\n                        });\n\n                        if (itemFound && currentFound) {\n                            return false;\n                        }\n                    });\n\n                    if (itemFound && currentFound) {\n                        return false;\n                    }\n                });\n\n                // select the context to update\n                if (itemFound && currentPart === itemPart) {\n                    fields.push('numberFlaggedPart');\n                }\n                if (itemFound && currentSection === itemSection) {\n                    fields.push('numberFlaggedSection');\n                }\n            } else {\n                // no navigator map, the current the marked item is in the current section\n                fields.push('numberFlaggedPart');\n                fields.push('numberFlaggedSection');\n            }\n\n            _.forEach(fields, function(field) {\n                if (field in testContext) {\n                    testContext[field] += flag ? 1 : -1;\n                }\n            });\n        },\n\n        /**\n         * Get progression\n         * @param {Object} testContext The progression context\n         * @returns {object} progression\n         */\n        getProgression: function getProgression(testContext) {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test',\n                progressInfoMethod = '_getProgressionOf' + capitalize(reviewScope),\n                getProgression = this[progressInfoMethod] || this._getProgressionOfTest,\n                progression = getProgression && getProgression(testContext) || {};\n\n            return progression;\n        },\n\n        /**\n         * Updates the review screen\n         * @param {Object} testContext The progression context\n         * @returns {testReview}\n         */\n        update: function update(testContext) {\n            this.progression = this.getProgression(testContext);\n            this._updateOptions(testContext);\n            this._updateInfos(testContext);\n            this._updateTree(testContext);\n            this._updateDisplayOptions(testContext);\n            return this;\n        },\n\n        /**\n         * Disables the component\n         * @returns {testReview}\n         */\n        disable: function disable() {\n            this.disabled = true;\n            this.$component.addClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Enables the component\n         * @returns {testReview}\n         */\n        enable: function enable() {\n            this.disabled = false;\n            this.$component.removeClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Hides the component\n         * @returns {testReview}\n         */\n        hide: function hide() {\n            this.disabled = true;\n            this.hidden = true;\n            this.$component.addClass(_cssCls.hidden);\n            return this;\n        },\n\n        /**\n         * Shows the component\n         * @returns {testReview}\n         */\n        show: function show() {\n            this.disabled = false;\n            this.hidden = false;\n            this.$component.removeClass(_cssCls.hidden);\n            return this;\n        },\n\n        /**\n         * Toggles the display state of the component\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n         * @returns {testReview}\n         */\n        toggle: function toggle(show) {\n            if (undefined === show) {\n                show = this.hidden;\n            }\n\n            if (show) {\n                this.show();\n            } else {\n                this.hide();\n            }\n\n            return this;\n        },\n\n        /**\n         * Install an event handler on the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        on: function on(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.on.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Uninstall an event handler from the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        off: function off(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.off.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @param {Array|Object} extraParameters\n         * @returns {testReview}\n         */\n        trigger : function trigger(eventName, extraParameters) {\n            var dom = this.$component;\n\n            if (undefined === extraParameters) {\n                extraParameters = [];\n            }\n            if (!_.isArray(extraParameters)) {\n                extraParameters = [extraParameters];\n            }\n\n            extraParameters.push(this);\n\n            if (dom) {\n                dom.trigger(eventName, extraParameters);\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * Builds an instance of testReview\n     * @param {String|jQuery|HTMLElement} element The element on which install the component\n     * @param {Object} [options] A list of extra options\n     * @param {String} [options.region] The region on which put the component: left or right\n     * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\n     * the whole test, the current test part or the current test section)\n     * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n     * @returns {testReview}\n     */\n    var testReviewFactory = function(element, options) {\n        var component = _.clone(testReview, true);\n        return component.init(element, options);\n    };\n\n    return testReviewFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/progressUpdater',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/progressbar'\n], function ($, _, __) {\n    'use strict';\n\n    /**\n     * Provides a versatile progress bar updater\n     * @type {{init: Function, update: Function}}\n     */\n    var progressUpdaters = {\n        /**\n         * Initializes the progress updater\n         *\n         * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n         * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n         * @returns {progressUpdaters}\n         */\n        init: function(progressBar, progressLabel) {\n            this.progressBar = $(progressBar).progressbar();\n            this.progressLabel = $(progressLabel);\n            return this;\n        },\n\n        /**\n         * Writes the progress label and update the progress by ratio\n         * @param {String} label\n         * @param {Number} ratio\n         * @returns {progressUpdaters}\n         */\n        write: function(label, ratio) {\n            this.progressLabel.text(label);\n            this.progressBar.progressbar('value', ratio);\n            return this;\n        },\n\n        /**\n         * Updates the progress bar\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        update: function(testContext) {\n            var progressIndicator = testContext.progressIndicator || 'percentage';\n            var progressIndicatorMethod = progressIndicator + 'Progression';\n            var getProgression = this[progressIndicatorMethod] || this.percentageProgression;\n            var progression = getProgression && getProgression(testContext) || {};\n\n            this.write(progression.label, progression.ratio);\n            return progression;\n        },\n\n        /**\n         * Updates the progress bar displaying the percentage\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        percentageProgression: function(testContext) {\n            var total = Math.max(1, testContext.numberItems);\n            var ratio = Math.floor(testContext.numberCompleted / total * 100);\n            return {\n                ratio : ratio,\n                label : ratio + '%'\n            };\n        },\n\n        /**\n         * Updates the progress bar displaying the position\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        positionProgression: function(testContext) {\n            var progressScope = testContext.progressIndicatorScope;\n            var progressScopeCounter = {\n                test : {\n                    total : 'numberItems',\n                    position : 'itemPosition'\n                },\n                testPart : {\n                    total : 'numberItemsPart',\n                    position : 'itemPositionPart'\n                },\n                testSection : {\n                    total : 'numberItemsSection',\n                    position : 'itemPositionSection'\n                }\n            };\n            var counter = progressScopeCounter[progressScope] || progressScopeCounter.test;\n            var total = Math.max(1, testContext[counter.total]);\n            var position = testContext[counter.position] + 1;\n            return {\n                ratio : Math.floor(position / total * 100),\n                label : __('Item %d of %d', position, total)\n            };\n        }\n    };\n\n    /**\n     * Builds an instance of progressUpdaters\n     * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n     * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n     * @returns {progressUpdaters}\n     */\n    var progressUpdaterFactory = function(progressBar, progressLabel) {\n        var updater = _.clone(progressUpdaters, true);\n        return updater.init(progressBar, progressLabel);\n    };\n\n    return progressUpdaterFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Metadata to be sent to the server. Will be saved in result storage as a trace variable.\n * Usage example:\n * <pre>\n * var testMetaData = testMetaDataFactory({\n *   testServiceCallId : this.itemServiceApi.serviceCallId\n * });\n *\n * testMetaData.setData({\n *   'TEST' : {\n *      'TEST_EXIT_CODE' : 'T'\n *   },\n *   'SECTION' : {\n *      'SECTION_EXIT_CODE' : 704\n *   }\n * });\n *\n * testMetaData.addData({'ITEM' : {\n *      'ITEM_START_TIME_CLIENT' : 1443596730143,\n *      'ITEM_END_TIME_CLIENT' : 1443596731301\n *    }\n * });\n * </pre>\n *\n * Data for each service call id will be stored in local storage to be able get data\n * after reloading the page or resuming the test session.\n *\n * To clear all data related to current test_call_id used <i>clearData</i> method.\n */\ndefine('taoQtiTest/testRunner/testMetaData',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * @param {Object} options\n     * @param {string} options.testServiceCallId - test call id.\n     */\n     var testMetaDataFactory = function testMetaDataFactory(options) {\n        var _testServiceCallId,\n            _storageKeyPrefix = 'testMetaData_',\n            _data = {};\n\n        if (!options || options.testServiceCallId === undefined) {\n            throw new TypeError(\"testServiceCallId option is required\");\n        }\n\n        var testMetaData = {\n            SECTION_EXIT_CODE : {\n                'COMPLETED_NORMALLY': 700,\n                'QUIT': 701,\n                'COMPLETE_TIMEOUT': 703,\n                'TIMEOUT': 704,\n                'FORCE_QUIT': 705,\n                'IN_PROGRESS': 706,\n                'ERROR': 300\n            },\n            TEST_EXIT_CODE : {\n                'COMPLETE': 'C',\n                'TERMINATED': 'T',\n                'INCOMPLETE': 'IC',\n                'INCOMPLETE_QUIT': 'IQ',\n                'INACTIVE': 'IA',\n                'CANDIDATE_DISAGREED_WITH_NDA': 'DA'\n            },\n            /**\n             * Return test call id.\n             * @returns {string}- Test call id\n             */\n            getTestServiceCallId : function getTestServiceCallId () {\n                return _testServiceCallId;\n            },\n\n            /**\n             * Set test call id.\n             * @param {string} value\n             */\n            setTestServiceCallId : function setTestServiceCallId (value) {\n                _testServiceCallId = value;\n            },\n\n            /**\n             * Set meta data. Current data object will be overwritten.\n             * @param {Object} data - metadata object\n             */\n            setData : function setData(data) {\n                _data = data;\n                setLocalStorageData(JSON.stringify(_data));\n            },\n\n            /**\n             * Add data.\n             * @param {Object} data - metadata object\n             * @param {Boolean} overwrite - whether the same data should be overwritten. Default - <i>false</i>\n             */\n            addData : function addData(data, overwrite) {\n                data = _.clone(data);\n                if (overwrite === undefined) {\n                    overwrite = false;\n                }\n\n                if (overwrite) {\n                    _.merge(_data, data);\n                } else {\n                    _data = _.merge(data, _data);\n                }\n                setLocalStorageData(JSON.stringify(_data));\n            },\n\n            /**\n             * Get the saved data.\n             * The cloned object will be returned to avoid unwanted affecting of the original data.\n             * @returns {Object} - metadata object.\n             */\n            getData : function getData() {\n                return _.clone(_data);\n            },\n\n            /**\n             * Clear all data saved in current object and in local storage related to current test call id.\n             * @returns {Object} - metadata object.\n             */\n            clearData : function clearData() {\n                _data = {};\n                window.localStorage.removeItem(testMetaData.getLocalStorageKey());\n            },\n\n            getLocalStorageKey : function getLocalStorageKey () {\n                return _storageKeyPrefix + _testServiceCallId;\n            }\n        };\n\n        /**\n         * Initialize test meta data manager\n         */\n        function init() {\n            _testServiceCallId = options.testServiceCallId;\n            testMetaData.setData(getLocalStorageData());\n        }\n\n        /**\n         * Set data to local storage\n         * @param {string} val - data to be stored.\n         */\n        function setLocalStorageData(val) {\n            var currentKey = testMetaData.getLocalStorageKey();\n            try {\n                window.localStorage.setItem(currentKey, val);\n            } catch(domException) {\n                if (domException.name === 'QuotaExceededError' ||\n                    domException.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    var removed = 0,\n                        i = window.localStorage.length,\n                        key;\n                    while (i--) {\n                        key  = localStorage.key(i);\n                        if (/^testMetaData_.*/.test(key) && key !== currentKey) {\n                            window.localStorage.removeItem(key);\n                            removed++;\n                        }\n                    }\n                    if (removed) {\n                        setLocalStorageData(val);\n                    } else {\n                        throw domException;\n                    }\n                } else {\n                    throw domException;\n                }\n            }\n        }\n\n        /**\n         * Get data from local storage stored for current call id\n         * @returns {*} saved data or empty object\n         */\n        function getLocalStorageData() {\n            var data = window.localStorage.getItem(testMetaData.getLocalStorageKey()),\n                result = JSON.parse(data) || {};\n\n            return result;\n        }\n\n        init();\n\n        return testMetaData;\n    };\n\n    return testMetaDataFactory;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('serviceApi/ServiceApi',['jquery', 'urlParser'], function($, UrlParser){\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    function ServiceApi(baseUrl, parameters, serviceCallId, stateStorage, userService, paused){\n        this.baseUrl = baseUrl;\n        this.parameters = parameters;\n        this.connected = false;\n\n        this.serviceCallId = serviceCallId;\n        this.state = stateStorage;\n        this.userService = userService;\n        this.hasBeenPaused = paused;\n    }\n\n    ServiceApi.SIG_SUCCESS = 0;\n    ServiceApi.SIG_ERROR = 1;\n\n    ServiceApi.prototype.loadInto = function(frame, connected){\n        var self = this;\n        var $frame = $(frame);\n        var callUrl = this.getCallUrl();\n        var isCORSAllowed = new UrlParser(callUrl).checkCORS();\n\n        $frame.on('load', function(e){\n             //if we are  in the same domain, we add a variable\n             //to the frame window, so the frame knows it can communicate\n             //with the parent\n            $(document).on('serviceready', function(){\n                self.connect(frame, function(){\n                    $(document).off('serviceready');\n                    if(typeof connected === 'function'){\n                        connected();\n                    }\n                });\n            });\n             if(isCORSAllowed === true){\n                 frame.contentWindow.__knownParent__ = true;\n             }\n         });\n\n        $frame.attr('src', callUrl);\n    };\n\n    ServiceApi.prototype.connect = function(frame, connected){\n        if(this.connected === false && frame.contentWindow){\n            //frame.contentWindow.serviceApi = this;\n            if (typeof(frame.contentWindow.onServiceApiReady) === \"function\") {\n                frame.contentWindow.onServiceApiReady(this);\n                this.connected = true;\n                if(typeof connected === 'function'){\n                    connected();\n                }\n            }\n        }\n    };\n\n    /**\n     * Get the service call URL\n     * @returns {String} the URI\n     */\n    ServiceApi.prototype.getCallUrl = function(){\n        var params = this.parameters || {};\n        params.serviceCallId = this.serviceCallId;\n        return this.baseUrl + '?' + $.param(params);\n    };\n\n    ServiceApi.prototype.getUserPropertyValues = function(property, callback){\n    \tthis.userService.get(property, callback);\n    };\n\n    //Context\n    ServiceApi.prototype.getServiceCallId = function(){\n        return this.serviceCallId;\n    };\n\n    //Context\n    ServiceApi.prototype.getState = function(){\n        return this.state.get();\n    };\n\n    ServiceApi.prototype.setState = function(state, callback){\n        return this.state.set(state, callback);\n    };\n\n    //Context\n    ServiceApi.prototype.getHasBeenPaused = function(){\n        return this.hasBeenPaused;\n    };\n\n    ServiceApi.prototype.setHasBeenPaused = function(paused){\n        this.hasBeenPaused = paused;\n    };\n\n    // Variables\n    ServiceApi.prototype.getParameter = function(identifier){\n        if (typeof(this.parameters[identifier]) !== \"undefined\") {\n            return this.parameters[identifier];\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Sets a callback on the finish action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onFinish = function(callback) {\n        this.onFinishCallback = callback;\n        return this;\n    };\n\n    /**\n     * Sets a callback on the kill action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onKill = function(callback) {\n        this.onKillCallback = callback;\n        return this;\n    };\n\n    /**\n     * Sets a callback on the exit action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onExit = function(callback) {\n        this.onExitCallback = callback;\n        return this;\n    };\n\n    /**\n     * @param {Function} callback - Function called if no dedicated callback is found\n     */\n    ServiceApi.prototype.kill = function(callback) {\n    \tif (typeof this.onKillCallback === 'function') {\n    \t\tthis.onKillCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n\n    /**\n     * Exits the flow\n     * @param {Function} callback - Function called if no dedicated callback is found\n     */\n    ServiceApi.prototype.exit = function(callback) {\n    \tif (typeof this.onExitCallback === 'function') {\n    \t\tthis.onExitCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n\n    /**\n     * Finishes the flow\n     * @param valueArray - return parameters of the service.\n     */\n    ServiceApi.prototype.finish = function(valueArray) {\n        //return execution to service caller\n        if (typeof this.onFinishCallback === 'function') {\n                this.onFinishCallback(valueArray);\n        }\n    };\n\n    return ServiceApi;\n\n});\n\n","define('serviceApi/UserInfoService',['jquery'], function($){\n    \n    function UserInfoService(requestUrl, data) {\n        this.data = data;\n        this.requestUrl = requestUrl;\n    }\n\n    UserInfoService.prototype.get = function(property, callback){\n        if (this.data.hasOwnProperty(property)) {\n            if (typeof callback === \"function\") {\n                    callback(this.data[property]);\n            }\n        } else {\n            $.ajax({\n                url : this.requestUrl,\n                data \t\t: {\n                    'property' : property\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : (function(service, callback) {return function(r) {\n            \t\tfor (key in r.data) {\n            \t\t\tservice.data[key] = r.data[key];\n            \t\t}\n                    if (typeof callback === \"function\") {\n                        callback(service.data[property]);\n                    }\n\n                }})(this, callback)\n                /*\t\n            \tfunction(r){\n                    if(r.success){\n                    \tconsole.log(this.data);\n                    \tthis.data[property] = r.values;\n                    \t//console.log(this.data);\n\t                    if (typeof callback === \"function\") {\n\t                        callback(this.data[property]);\n\t                    }\n                    }\n                }\n                */\n                \n                \n            });\n        }\n    };\n\n    return UserInfoService;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2013 (original work) Open Assessment Technologies SA ;\n */\ndefine('serviceApi/StateStorage',['jquery'], function($){\n    'use strict';\n    \n    function StateStorage(state, submitUrl) {\n        this.state = state;\n        this.submitUrl = submitUrl;\n    }\n\n    StateStorage.prototype.get = function(callback){\n        if (typeof callback === 'function') {\n                callback(this.state);\n        }\n        return this.state;\n    };\n\n    StateStorage.prototype.set = function(state, callback){\n\n        if (state === this.state) {\n            if (typeof callback === \"function\") {\n                    callback();\n            }\n        } else {\n            this.state = state;\n            $.ajax({\n                url : this.submitUrl,\n                data \t\t: {\n                    'state' : state\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : typeof callback === \"function\" ? callback : null\n            });\n        }\n    };\n\n    return StateStorage;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\ndefine('taoQtiTest/controller/runtime/testRunner',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'taoQtiTest/testRunner/actionBarTools',\n    'taoQtiTest/testRunner/testReview',\n    'taoQtiTest/testRunner/progressUpdater',\n    'taoQtiTest/testRunner/testMetaData',\n    'serviceApi/ServiceApi',\n    'serviceApi/UserInfoService',\n    'serviceApi/StateStorage',\n    'iframeNotifier',\n    'mathJax',\n    'ui/feedback',\n    'ui/deleter',\n    'moment',\n    'ui/modal',\n    'ui/progressbar'\n],\nfunction (\n    $,\n    _,\n    __,\n    module,\n    actionBarTools,\n    testReview,\n    progressUpdater,\n    testMetaDataFactory,\n    ServiceApi,\n    UserInfoService,\n    StateStorage,\n    iframeNotifier,\n    MathJax,\n    feedback,\n    deleter,\n    moment,\n    modal\n) {\n\n    'use strict';\n\n    var timerIds = [],\n        currentTimes = [],\n        lastDates = [],\n        timeDiffs = [],\n        waitingTime = 0,\n        $timers,\n        $controls,\n        timerIndex,\n        testMetaData,\n        sessionStateService,\n        $doc = $(document),\n        optionNextSection = 'x-tao-option-nextSection',\n        optionNextSectionWarning = 'x-tao-option-nextSectionWarning',\n        optionReviewScreen = 'x-tao-option-reviewScreen',\n        optionEndTestWarning = 'x-tao-option-endTestWarning',\n        TestRunner = {\n            // Constants\n            'TEST_STATE_INITIAL': 0,\n            'TEST_STATE_INTERACTING': 1,\n            'TEST_STATE_MODAL_FEEDBACK': 2,\n            'TEST_STATE_SUSPENDED': 3,\n            'TEST_STATE_CLOSED': 4,\n            'TEST_NAVIGATION_LINEAR': 0,\n            'TEST_NAVIGATION_NONLINEAR': 1,\n            'TEST_ITEM_STATE_INTERACTING': 1,\n\n            /**\n             * Prepare a transition to another item\n             * @param {Function} [callback]\n             */\n            beforeTransition: function (callback) {\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $controls.$itemFrame.hide();\n                $controls.$rubricBlocks.hide();\n                $controls.$timerWrapper.hide();\n\n                // Wait at least waitingTime ms for a better user experience.\n                if (typeof callback === 'function') {\n                    setTimeout(callback, waitingTime);\n                }\n            },\n\n            /**\n             * Complete a transition to another item\n             */\n            afterTransition: function () {\n                this.enableGui();\n\n                //ask the top window to stop the loader\n                iframeNotifier.parent('unloading');\n                testMetaData.addData({\n                    'ITEM' : {'ITEM_START_TIME_CLIENT' : Date.now() / 1000}\n                });\n            },\n\n            /**\n             * Jumps to a particular item in the test\n             * @param {Number} position The position of the item within the test\n             */\n            jump: function(position) {\n                var self = this,\n                    action = 'jump',\n                    params = {position: position};\n                this.disableGui();\n\n                if( this.isJumpOutOfSection(position)  && this.isCurrentItemActive() && this.isTimedSection() ){\n                    this.exitTimedSection(action, params);\n                } else {\n                    this.killItemSession(function() {\n                        self.actionCall(action, params);\n                    });\n                }\n            },\n\n            /**\n             * Push to server how long user seen that item before to track duration\n             * @param {Number} duration\n             */\n            keepItemTimed: function(duration){\n                if (duration) {\n                    var self = this,\n                        action = 'keepItemTimed',\n                        params = {duration: duration};\n                    self.actionCall(action, params);\n                }\n            },\n\n            /**\n             * Marks an item for later review\n             * @param {Boolean} flag The state of the flag\n             * @param {Number} position The position of the item within the test\n             */\n            markForReview: function(flag, position) {\n                var self = this;\n\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $.ajax({\n                    url: self.testContext.markForReviewUrl,\n                    cache: false,\n                    async: true,\n                    type: 'POST',\n                    dataType: 'json',\n                    data: {\n                        flag: flag,\n                        position: position\n                    },\n                    success: function(data) {\n                        // update the item flagged state\n                        if (self.testReview) {\n                            self.testReview.setItemFlag(position, flag);\n                            self.testReview.updateNumberFlagged(self.testContext, position, flag);\n                            if (self.testContext.itemPosition === position) {\n                                self.testContext.itemFlagged = flag;\n                            }\n                            self.updateTools(self.testContext);\n                        }\n\n                        // Enable buttons.\n                        self.enableGui();\n\n                        //ask the top window to stop the loader\n                        iframeNotifier.parent('unloading');\n                    }\n                });\n            },\n\n            /**\n             * Move to the next available item\n             */\n            moveForward: function () {\n                var self = this,\n                    action = 'moveForward';\n\n                function doExitSection() {\n                    if( self.isTimedSection() && !self.testContext.isTimeout){\n                        self.exitTimedSection(action);\n                    } else {\n                        self.exitSection(action);\n                    }\n                }\n\n                this.disableGui();\n\n                if( (( this.testContext.numberItemsSection - this.testContext.itemPositionSection - 1) == 0) && this.isCurrentItemActive()){\n                    if (this.shouldDisplayEndTestWarning()) {\n                        this.displayEndTestWarning(doExitSection);\n                        this.enableGui();\n                    } else {\n                        doExitSection();\n                    }\n\n                } else {\n                    this.killItemSession(function () {\n                        self.actionCall(action);\n                    });\n                }\n            },\n\n            /**\n             * Check if necessary to display an end test warning\n             */\n            shouldDisplayEndTestWarning: function(){\n                return (this.testContext.isLast === true && this.hasOption(optionEndTestWarning));\n            },\n\n            /**\n             * Warns upon exiting test\n             */\n            displayEndTestWarning: function(nextAction){\n                var options = {\n                    confirmLabel: __('OK'),\n                    cancelLabel: __('Cancel'),\n                    showItemCount: false\n                };\n\n                this.displayExitMessage(\n                    __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                    nextAction,\n                    options\n                );\n            },\n\n            /**\n             * Move to the previous available item\n             */\n            moveBackward: function () {\n                var self = this,\n                    action = 'moveBackward';\n\n                this.disableGui();\n\n                if( (this.testContext.itemPositionSection == 0) && this.isCurrentItemActive() && this.isTimedSection() ){\n                    this.exitTimedSection(action);\n                } else {\n                this.killItemSession(function () {\n                        self.actionCall(action);\n                    });\n                }\n            },\n\n            /**\n             * Checks if a position is out of the current section\n             * @param {Number} jumpPosition\n             * @returns {Boolean}\n             */\n            isJumpOutOfSection: function(jumpPosition){\n                var items = this.getCurrentSectionItems(),\n                    isJumpToOtherSection = true,\n                    isValidPosition = (jumpPosition >= 0) && ( jumpPosition < this.testContext.numberItems );\n\n                if( isValidPosition){\n                    for(var i in items ) {\n                        if (!items.hasOwnProperty(i)) {\n                            continue;\n                        }\n                        if( items[i].position == jumpPosition ){\n                            isJumpToOtherSection = false;\n                            break;\n                        }\n                    }\n                } else {\n                    isJumpToOtherSection = false;\n                }\n\n                return isJumpToOtherSection;\n            },\n\n            /**\n             * Exit from the current section. Set the exit code.de\n             * @param {String} action\n             * @param {Object} params\n             * @param {Number} [exitCode]\n             */\n            exitSection: function(action, params, exitCode){\n                var self = this;\n\n                testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : exitCode || testMetaData.SECTION_EXIT_CODE.COMPLETED_NORMALLY}});\n                self.killItemSession(function () {\n                    self.actionCall(action, params);\n                });\n            },\n\n            /**\n             * Tries to exit a timed section. Display a confirm message.\n             * @param {String} action\n             * @param {Object} params\n             */\n            exitTimedSection: function(action, params){\n                var self = this,\n                    qtiRunner = this.getQtiRunner(),\n                    doExitTimedSection = function() {\n                        if (qtiRunner) {\n                            qtiRunner.updateItemApi();\n                        }\n                        self.exitSection(action, params);\n                    };\n\n                // prevent duplicate warning in case of ending the test while exiting the timed section\n                if (action === 'moveForward' && this.shouldDisplayEndTestWarning()) {\n                    doExitTimedSection();\n                } else {\n                    this.displayExitMessage(\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\n                        doExitTimedSection,\n                        { scope: 'testSection' }\n                    );\n                }\n\n                this.enableGui();\n            },\n\n            /**\n             * Tries to leave the current section and go to the next\n             */\n            nextSection: function(){\n                var self = this;\n                var qtiRunner = this.getQtiRunner();\n                var doNextSection = function() {\n                    self.exitSection('nextSection', null, testMetaData.SECTION_EXIT_CODE.QUIT);\n                };\n\n                if (qtiRunner) {\n                    qtiRunner.updateItemApi();\n                }\n\n                if (this.hasOption(optionNextSectionWarning)) {\n                    this.displayExitMessage(\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\n                        doNextSection,\n                        { scope: 'testSection' }\n                    );\n                } else {\n                    doNextSection();\n                }\n\n                this.enableGui();\n            },\n\n            /**\n             * Gets the current progression within a particular scope\n             * @param {String} [scope]\n             * @returns {Object}\n             */\n            getProgression: function(scope) {\n                var scopeSuffixMap = {\n                    test : '',\n                    testPart : 'Part',\n                    testSection : 'Section'\n                };\n                var scopeSuffix = scope && scopeSuffixMap[scope] || '';\n\n                return {\n                    total : this.testContext['numberItems' + scopeSuffix] || 0,\n                    answered : this.testContext['numberCompleted' + scopeSuffix] || 0,\n                    viewed : this.testContext['numberPresented' + scopeSuffix] || 0,\n                    flagged : this.testContext['numberFlagged' + scopeSuffix] || 0\n                };\n            },\n\n            /**\n             * Displays an exit message for a particular scope\n             * @param {String} message\n             * @param {Function} [action]\n             * @param {Object} [options]\n             * @param {String} [options.scope]\n             * @param {String} [options.confirmLabel] - label of confirm button\n             * @param {String} [options.cancelLabel] - label of cancel button\n             * @param {Boolean} [options.showItemCount] - display the number of unanswered / flagged items in modal\n             * @returns {jQuery} Returns the message box\n             */\n            displayExitMessage: function(message, action, options) {\n                var self = this,\n                    options = options || {},\n                    scope = options.scope,\n                    confirmLabel = options.confirmLabel || __('Yes'),\n                    cancelLabel = options.cancelLabel || __('No'),\n                    showItemCount = typeof options.showItemCount !== 'undefined' ? options.showItemCount : true;\n\n                var $confirmBox = $('.exit-modal-feedback');\n                var progression = this.getProgression(scope);\n                var unansweredCount = (progression.total - progression.answered);\n                var flaggedCount = progression.flagged;\n\n                if (showItemCount) {\n                    if (unansweredCount && this.isCurrentItemAnswered()) {\n                        unansweredCount--;\n                    }\n\n                    if (flaggedCount && unansweredCount) {\n                        message = __('You have %s unanswered question(s) and have %s item(s) marked for review.',\n                                unansweredCount.toString(),\n                                flaggedCount.toString()\n                            ) + ' ' + message;\n                    } else {\n                        if (flaggedCount) {\n                            message = __('You have %s item(s) marked for review.', flaggedCount.toString()) + ' ' + message;\n                        }\n\n                        if (unansweredCount) {\n                            message = __('You have %s unanswered question(s).', unansweredCount.toString()) + ' ' + message;\n                        }\n                    }\n                }\n\n                $confirmBox.find('.message').html(message);\n                $confirmBox.find('.js-exit-confirm').html(confirmLabel);\n                $confirmBox.find('.js-exit-cancel').html(cancelLabel);\n                $confirmBox.modal({ width: 500 });\n\n                $confirmBox.find('.js-exit-cancel, .modal-close').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                });\n\n                $confirmBox.find('.js-exit-confirm').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                    if (_.isFunction(action)) {\n                        action.call(self);\n                    }\n                });\n\n                return $confirmBox;\n            },\n\n            /**\n             * Kill current item section and execute callback function given as first parameter.\n             * Item end execution time will be stored in metadata object to be sent to the server.\n             * @param {function} callback\n             */\n            killItemSession : function (callback) {\n                testMetaData.addData({\n                    'ITEM' : {\n                        'ITEM_END_TIME_CLIENT' : Date.now() / 1000,\n                        'ITEM_TIMEZONE' : moment().utcOffset(moment().utcOffset()).format('Z')\n                    }\n                });\n                if (typeof callback !== 'function') {\n                    callback = _.noop;\n                }\n                this.itemServiceApi.kill(callback);\n            },\n\n            /**\n             * Checks if the current item is active\n             * @returns {Boolean}\n             */\n            isCurrentItemActive: function(){\n                return (this.testContext.itemSessionState !=4);\n            },\n\n            /**\n             * Tells is the current item has been answered or not\n             * The item is considered answered when at least one response has been set to not empty {base : null}\n             *\n             * @returns {Boolean}\n             */\n            isCurrentItemAnswered: function(){\n                var answered = false;\n                _.each(this.getCurrentItemState(), function(state){\n                    if(state && _.isObject(state.response) && state.response.base !== null){\n                        answered = true;//at least one response is not null so consider the item answered\n                        return false;\n                    }\n                });\n                return answered;\n            },\n\n            /**\n             * Checks if a particular option is enabled for the current item\n             * @param {String} option\n             * @returns {Boolean}\n             */\n            hasOption: function(option) {\n                return _.indexOf(this.testContext.categories, option) >= 0;\n            },\n\n            /**\n             * Gets access to the qtiRunner instance\n             * @returns {Object}\n             */\n            getQtiRunner: function(){\n                var itemFrame = document.getElementById('qti-item');\n                var itemWindow = itemFrame && itemFrame.contentWindow;\n                var itemContainerFrame = itemWindow && itemWindow.document.getElementById('item-container');\n                var itemContainerWindow = itemContainerFrame && itemContainerFrame.contentWindow;\n                return itemContainerWindow && itemContainerWindow.qtiRunner;\n            },\n\n            /**\n             * Checks if the current section is timed\n             * @returns {Boolean}\n             */\n            isTimedSection: function(){\n                var timeConstraints = this.testContext.timeConstraints,\n                    isTimedSection = false;\n                for( var index in timeConstraints ){\n                    if(timeConstraints.hasOwnProperty(index) &&\n                        timeConstraints[index].qtiClassName === 'assessmentSection' ){\n                        isTimedSection = true;\n                    }\n                }\n\n                return isTimedSection;\n            },\n\n            /**\n             * Gets the list of items owned by the current section\n             * @returns {Array}\n             */\n            getCurrentSectionItems: function(){\n                var partId  = this.testContext.testPartId,\n                    navMap  = this.testContext.navigatorMap,\n                    sectionItems;\n\n                for( var partIndex in navMap ){\n                    if( !navMap.hasOwnProperty(partIndex)){\n                        continue;\n                    }\n                    if( navMap[partIndex].id !== partId ){\n                        continue;\n                    }\n\n                    for(var sectionIndex in navMap[partIndex].sections){\n                        if( !navMap[partIndex].sections.hasOwnProperty(sectionIndex)){\n                            continue;\n                        }\n                        if( navMap[partIndex].sections[sectionIndex].active === true ){\n                            sectionItems = navMap[partIndex].sections[sectionIndex].items;\n                            break;\n                        }\n                    }\n                }\n\n                return sectionItems;\n            },\n\n            /**\n             * Skips the current item\n             */\n            skip: function () {\n                var self = this,\n                    doSkip = function() {\n                        this.disableGui();\n                        self.actionCall('skip');\n                    };\n\n                if (this.shouldDisplayEndTestWarning()) {\n                    this.displayEndTestWarning(doSkip);\n                } else {\n                    doSkip();\n                }\n            },\n\n            /**\n             * Handles the timeout state\n             */\n            timeout: function () {\n                var self = this;\n                this.disableGui();\n                this.testContext.isTimeout = true;\n                this.updateTimer();\n\n                this.killItemSession(function () {\n                    var confirmBox = $('.timeout-modal-feedback'),\n                        testContext = self.testContext,\n                        confirmBtn = confirmBox.find('.js-timeout-confirm, .modal-close');\n\n                    if (testContext.numberCompletedSection === testContext.numberItemsSection) {\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.COMPLETE_TIMEOUT}});\n                    } else {\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.TIMEOUT}});\n                    }\n\n                    self.enableGui();\n                    confirmBox.modal({width: 500});\n                    confirmBtn.off('click').on('click', function () {\n                        confirmBox.modal('close');\n                        self.actionCall('timeout');\n                    });\n                });\n            },\n\n            /**\n             * Sets the assessment test context object\n             * @param {Object} testContext\n             */\n            setTestContext: function(testContext) {\n                this.testContext = testContext;\n                this.itemServiceApi = eval(testContext.itemServiceApiCall);\n                this.itemServiceApi.setHasBeenPaused(testContext.hasBeenPaused);\n            },\n\n\n            /**\n             * Handles Metadata initialization\n             */\n            initMetadata: function (){\n                testMetaData = testMetaDataFactory({\n                    testServiceCallId: this.itemServiceApi.serviceCallId\n                });\n            },\n\n            /**\n             * Retrieve service responsible for broken session tracking\n             * @returns {*}\n             */\n            getSessionStateService: function () {\n                if (!sessionStateService) {\n                    sessionStateService = this.testContext.sessionStateService({accuracy: 1000});\n                }\n                return sessionStateService;\n            },\n\n            /**\n             * Updates the GUI\n             * @param {Object} testContext\n             */\n            update: function (testContext) {\n                var self = this;\n                $controls.$itemFrame.remove();\n\n                var $runner = $('#runner');\n                $runner.css('height', 'auto');\n\n                this.getSessionStateService().restart();\n\n                this.setTestContext(testContext);\n                this.updateContext();\n                this.updateProgress();\n                this.updateNavigation();\n                this.updateTestReview();\n                this.updateInformation();\n                this.updateRubrics();\n                this.updateTools(testContext);\n                this.updateTimer();\n                this.updateExitButton();\n                this.resetCurrentItemState();\n                this.initMetadata();\n\n                $controls.$itemFrame = $('<iframe id=\"qti-item\" frameborder=\"0\" scrollbars=\"no\"/>');\n                $controls.$itemFrame.appendTo($controls.$contentBox);\n\n                if (this.testContext.itemSessionState === this.TEST_ITEM_STATE_INTERACTING && self.testContext.isTimeout === false) {\n                    $doc.off('.testRunner').on('serviceloaded.testRunner', function () {\n                        self.afterTransition();\n                        self.adjustFrame();\n                        $controls.$itemFrame.css({visibility: 'visible'});\n                    });\n\n                    // Inject API into the frame.\n                    this.itemServiceApi.loadInto($controls.$itemFrame[0], function () {\n                        // We now rely on the 'serviceloaded' event.\n                    });\n                }\n                else {\n                    // e.g. no more attempts or timeout! Simply consider the transition is finished,\n                    // but do not load the item.\n                    self.afterTransition();\n                }\n            },\n\n            /**\n             * Displays feedback on the current state of the test\n             */\n            updateInformation: function () {\n\n                if (this.testContext.isTimeout === true) {\n                    feedback().error(__('Time limit reached for item \"%s\".', this.testContext.itemIdentifier));\n                }\n                else if (this.testContext.itemSessionState !== this.TEST_ITEM_STATE_INTERACTING) {\n                    feedback().error(__('No more attempts allowed for item \"%s\".', this.testContext.itemIdentifier));\n                }\n            },\n\n            /**\n             * Updates the displayed tools\n             * @param {Object} testContext\n             */\n            updateTools: function updateTools(testContext) {\n                var showSkip = false;\n                var showSkipEnd = false;\n                var showNextSection = !!testContext.nextSection && (this.hasOption(optionNextSection) || this.hasOption(optionNextSectionWarning));\n\n                if (this.testContext.allowSkipping === true) {\n                    if (this.testContext.isLast === false) {\n                        showSkip = true;\n                    } else {\n                        showSkipEnd = true;\n                    }\n                }\n\n                $controls.$skip.toggle(showSkip);\n                $controls.$skipEnd.toggle(showSkipEnd);\n                $controls.$nextSection.toggle(showNextSection);\n\n                actionBarTools.render('.tools-box-list', testContext, TestRunner);\n            },\n\n            /**\n             * Displays a timer\n             * @param {Object} cst\n             * @returns {*|jQuery|HTMLElement}\n             */\n            createTimer: function(cst) {\n                var $timer = $('<div>', {'class': 'qti-timer qti-timer__type-' + cst.qtiClassName }),\n                    $label = $('<div>', {'class': 'qti-timer_label truncate', text: cst.label }),\n                    $time  = $('<div>', {'class': 'qti-timer_time', text: this.formatTime(cst.seconds) });\n\n                $timer.append($label);\n                $timer.append($time);\n                return $timer;\n            },\n\n            /**\n             * Updates the timers\n             */\n            updateTimer: function () {\n                var self = this;\n                var hasTimers;\n                $controls.$timerWrapper.empty();\n\n                for (var i = 0; i < timerIds.length; i++) {\n                    clearTimeout(timerIds[i]);\n                }\n\n                timerIds = [];\n                currentTimes = [];\n                lastDates = [];\n                timeDiffs = [];\n\n                if (self.testContext.isTimeout === false &&\n                    self.testContext.itemSessionState === self.TEST_ITEM_STATE_INTERACTING) {\n\n                    hasTimers = !!this.testContext.timeConstraints.length;\n                    $controls.$topActionBar.toggleClass('has-timers', hasTimers);\n\n                    if (hasTimers) {\n\n                        // Insert QTI Timers container.\n                        // self.formatTime(cst.seconds)\n                        for (i = 0; i < this.testContext.timeConstraints.length; i++) {\n\n                            var cst = this.testContext.timeConstraints[i];\n\n                            if (cst.allowLateSubmission === false) {\n\n                                // Set up a timer for this constraint\n                                $controls.$timerWrapper.append(self.createTimer(cst));\n\n                                // Set up a timer and update it with setInterval.\n                                currentTimes[i] = cst.seconds;\n                                lastDates[i] = new Date();\n                                timeDiffs[i] = 0;\n                                timerIndex = i;\n\n                                if (self.testContext.timerWarning && self.testContext.timerWarning[cst.qtiClassName]) {\n                                    cst.warnings = {};\n                                    _(self.testContext.timerWarning[cst.qtiClassName]).forEach(function (value, key) {\n                                        if (_.contains(['info', 'warning', 'danger'], value)) {\n                                            cst.warnings[key] = {\n                                                type: value,\n                                                showed: cst.seconds <= key,\n                                                point: parseInt(key, 10)\n                                            };\n                                        }\n                                    });\n                                    var closestPreviousWarning = _.find(cst.warnings, { showed: true });\n                                    if (!_.isEmpty(closestPreviousWarning) && closestPreviousWarning.point) {\n                                        cst.warnings[closestPreviousWarning.point].showed = false;\n                                    }\n                                }\n\n                                (function (timerIndex, cst) {\n                                    timerIds[timerIndex] = setInterval(function () {\n\n                                        timeDiffs[timerIndex] += (new Date()).getTime() - lastDates[timerIndex].getTime();\n\n                                        if (timeDiffs[timerIndex] >= 1000) {\n                                            var seconds = timeDiffs[timerIndex] / 1000;\n                                            currentTimes[timerIndex] -= seconds;\n                                            timeDiffs[timerIndex] = 0;\n                                        }\n\n                                        $timers.eq(timerIndex)\n                                            .html(self.formatTime(Math.round(currentTimes[timerIndex])));\n\n                                        if (currentTimes[timerIndex] <= 0) {\n                                            // The timer expired...\n                                            currentTimes[timerIndex] = 0;\n                                            clearInterval(timerIds[timerIndex]);\n\n                                            // Hide item to prevent any further interaction with the candidate.\n                                            $controls.$itemFrame.hide();\n                                            self.timeout();\n                                        } else {\n                                            lastDates[timerIndex] = new Date();\n                                        }\n\n                                        var warning = _.findLast(cst.warnings, { showed: false });\n\n                                        if (!_.isEmpty(warning) && _.isFinite(warning.point) && currentTimes[timerIndex] <= warning.point) {\n                                            self.timeWarning(cst, warning);\n                                        }\n\n                                    }, 1000);\n                                }(timerIndex, cst));\n                            }\n                        }\n\n                        $timers = $controls.$timerWrapper.find('.qti-timer .qti-timer_time');\n                        $controls.$timerWrapper.show();\n                    }\n                }\n            },\n\n            /**\n             * Mark appropriate timer by warning colors and show feedback message\n             *\n             * @param {object} cst - Time constraint\n             * @param {integer} cst.warningTime - Warning time in seconds.\n             * @param {integer} cst.qtiClassName - Class name of qti instance for which the timer is set (assessmentItemRef | assessmentSection | testPart | assessmentTest).\n             * @param {integer} cst.seconds - Initial timer value.\n             * @param {object} warning - Current actual warning\n             * @param {integer} warning.point - Warning time point in seconds, when show message\n             * @param {boolean} warning.showed - boolean flag for mark already showed warnings\n             * @param {string} warning.type - type of warning (from config), can be info, warning or error\n             *\n             * @returns {undefined}\n             */\n            timeWarning: function (cst, warning) {\n                var message = '',\n                    remaining,\n                    $timer = $controls.$timerWrapper.find('.qti-timer__type-' + cst.qtiClassName),\n                    $time = $timer.find('.qti-timer_time');\n\n                $time.removeClass('txt-info txt-warning txt-danger').addClass('txt-' + warning.type);\n\n                remaining = moment.duration(warning.point, \"seconds\").humanize();\n\n                switch (cst.qtiClassName) {\n                    case 'assessmentItemRef':\n                        message = __(\"Warning – You have %s remaining to complete this item.\", remaining);\n                        break;\n                    case 'assessmentSection':\n                        message = __(\"Warning – You have %s remaining to complete this section.\", remaining);\n                        break;\n                    case 'testPart':\n                        message = __(\"Warning – You have %s remaining to complete this test part.\", remaining);\n                        break;\n                    case 'assessmentTest':\n                        message = __(\"Warning – You have %s remaining to complete the test.\", remaining);\n                        break;\n                }\n\n                feedback()[warning.type](message);\n\n                cst.warnings[warning.point].showed = true;\n            },\n\n            /**\n             * Displays or hides the rubric block\n             */\n            updateRubrics: function () {\n                $controls.$rubricBlocks.remove();\n\n                if (this.testContext.rubrics.length > 0) {\n\n                    $controls.$rubricBlocks = $('<div id=\"qti-rubrics\"/>');\n\n                    for (var i = 0; i < this.testContext.rubrics.length; i++) {\n                        $controls.$rubricBlocks.append(this.testContext.rubrics[i]);\n                    }\n\n                    // modify the <a> tags in order to be sure it\n                    // opens in another window.\n                    $controls.$rubricBlocks.find('a').bind('click keypress', function () {\n                        window.open(this.href);\n                        return false;\n                    });\n\n                    $controls.$rubricBlocks.prependTo($controls.$contentBox);\n\n                    if (MathJax) {\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $controls.$rubricBlocks[0]);\n                    }\n\n                }\n            },\n\n            /**\n             * Updates the list of navigation buttons (previous, next, skip, etc.)\n             */\n            updateNavigation: function () {\n                $controls.$exit.show();\n\n                if(this.testContext.isLast === true) {\n                    $controls.$moveForward.hide();\n                    $controls.$moveEnd.show();\n                }\n                else {\n                    $controls.$moveForward.show();\n                    $controls.$moveEnd.hide();\n                }\n                if (this.testContext.navigationMode === this.TEST_NAVIGATION_LINEAR) {\n                    // LINEAR\n                    $controls.$moveBackward.hide();\n                }\n                else {\n                    // NONLINEAR\n                    $controls.$controls.show();\n                    if(this.testContext.canMoveBackward === true) {\n                        $controls.$moveBackward.show();\n                    }\n                    else {\n                        $controls.$moveBackward.hide();\n                    }\n                }\n            },\n\n            /**\n             * Updates the test taker review screen\n             */\n            updateTestReview: function() {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                if (this.testReview) {\n                    this.testReview.toggle(considerProgress && this.hasOption(optionReviewScreen));\n                    this.testReview.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the progress bar\n             */\n            updateProgress: function () {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                $controls.$progressBox.css('visibility', considerProgress ? 'visible' : 'hidden');\n\n                if (considerProgress) {\n                    this.progressUpdater.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the test informations\n             */\n            updateContext: function () {\n\n                $controls.$title.text(this.testContext.testTitle);\n\n                // Visibility of section?\n                var sectionText = (this.testContext.isDeepestSectionVisible === true) ? (' - ' + this.testContext.sectionTitle) : '';\n\n                $controls.$position.text(sectionText);\n                $controls.$titleGroup.show();\n            },\n\n            /**\n             * Displays the right exit button\n             */\n            updateExitButton : function(){\n\n                $controls.$logout.toggleClass('hidden', !this.testContext.logoutButton);\n                $controls.$exit.toggleClass('hidden', !this.testContext.exitButton);\n            },\n\n            /**\n             * Ensures the frame has the right size\n             */\n            adjustFrame: function () {\n                var rubricHeight = $controls.$rubricBlocks.outerHeight(true) || 0;\n                var frameContentHeight;\n                var finalHeight = $(window).innerHeight() - $controls.$topActionBar.outerHeight() - $controls.$bottomActionBar.outerHeight();\n                var itemFrame = $controls.$itemFrame.get(0);\n                $controls.$contentBox.height(finalHeight);\n                if($controls.$sideBars.length){\n                    $controls.$sideBars.each(function() {\n                        var $sideBar = $(this);\n                        $sideBar.height(finalHeight - $sideBar.outerHeight() + $sideBar.height());\n                    });\n                }\n\n                if(itemFrame && itemFrame.contentWindow){\n                    frameContentHeight = $controls.$itemFrame.contents().outerHeight(true);\n\n                    if (frameContentHeight < finalHeight) {\n                        if (rubricHeight) {\n                            frameContentHeight = Math.max(frameContentHeight, finalHeight - rubricHeight);\n                        } else {\n                            frameContentHeight = finalHeight;\n                        }\n                    }\n                    if (itemFrame.contentWindow.$) {\n                        itemFrame.contentWindow.$('body').trigger('setheight', [frameContentHeight]);\n                    }\n                    $controls.$itemFrame.height(frameContentHeight);\n                }\n            },\n\n            /**\n             * Locks the GUI\n             */\n            disableGui: function () {\n                $controls.$naviButtons.addClass('disabled');\n                if (this.testReview) {\n                    this.testReview.disable();\n                }\n            },\n\n            /**\n             * Unlocks the GUI\n             */\n            enableGui: function () {\n                $controls.$naviButtons.removeClass('disabled');\n                if (this.testReview) {\n                    this.testReview.enable();\n                }\n            },\n\n            /**\n             * Hides the GUI\n             */\n            hideGui: function () {\n                $controls.$naviButtons.addClass('hidden');\n                if (this.testReview) {\n                    this.testReview.hide();\n                }\n            },\n\n            /**\n             * Shows the GUI\n             */\n            showGui: function () {\n                $controls.$naviButtons.removeClass('hidden');\n                if (this.testReview) {\n                    this.testReview.show();\n                }\n            },\n\n            /**\n             * Formats a timer\n             * @param {Number} totalSeconds\n             * @returns {String}\n             */\n            formatTime: function (totalSeconds) {\n                var sec_num = totalSeconds;\n                var hours = Math.floor(sec_num / 3600);\n                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n                var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n                if (hours < 10) {\n                    hours = \"0\" + hours;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n\n                var time = hours + ':' + minutes + ':' + seconds;\n\n                return time;\n            },\n\n            /**\n             * Processes an error\n             * @param {Object} error\n             */\n            processError : function processError(error) {\n                var self = this;\n\n                // keep disabled\n                this.hideGui();\n                this.beforeTransition();\n\n                // ask the parent to display a message\n                iframeNotifier.parent('messagealert', {\n                    message : error.message,\n                    action : function() {\n                        if (testMetaData) {\n                            testMetaData.clearData();\n                        }\n                        if (error.state === self.TEST_STATE_CLOSED) {\n                            // test is closed, finish it\n                            self.serviceApi.finish();\n                        } else {\n                            // test is still open, just exit to the index\n                            self.serviceApi.exit();\n                        }\n                    }\n                });\n            },\n\n            /**\n             * Call action specified in testContext. A postfix <i>Url</i> will be added to the action name.\n             * To specify actions see {@link https://github.com/oat-sa/extension-tao-testqti/blob/master/helpers/class.TestRunnerUtils.php}\n             * @param {String} action - Action name\n             * @param {Object} [extraParams] - Additional parameters to be sent to the server\n             * @returns {undefined}\n             */\n            actionCall: function (action, extraParams) {\n                var self = this,\n                    params = {metaData: testMetaData ? testMetaData.getData() : {}};\n\n                if (extraParams) {\n                    params = _.assign(params, extraParams);\n                }\n                this.beforeTransition(function () {\n                    $.ajax({\n                        url: self.testContext[action + 'Url'],\n                        cache: false,\n                        data: params,\n                        async: true,\n                        dataType: 'json',\n                        success: function (testContext) {\n                            testMetaData.clearData();\n\n                            if (!testContext.success) {\n                                self.processError(testContext);\n                            }\n                            else if (testContext.state === self.TEST_STATE_CLOSED) {\n                                self.serviceApi.finish();\n                            }\n                            else {\n                                self.update(testContext);\n                            }\n                        }\n                    });\n                });\n            },\n\n            /**\n             * Exit from test (after confirmation). All answered questions will be submitted.\n             *\n             * @returns {undefined}\n             */\n            exit: function () {\n                var self = this;\n                testMetaData.addData({\n                    \"TEST\" : {\"TEST_EXIT_CODE\" : testMetaData.TEST_EXIT_CODE.INCOMPLETE},\n                    \"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.QUIT}\n                });\n                this.displayExitMessage(\n                    __('Are you sure you want to end the test?'),\n                    function() {\n                    self.killItemSession(function () {\n                        self.actionCall('endTestSession');\n                        testMetaData.clearData();\n                    });\n                    },\n                    { scope: this.testReview ? this.testContext.reviewScope : null }\n                );\n            },\n\n            /**\n             * Set the state of the current item in the test runner\n             *\n             * @param {string} id\n             * @param {object} state\n             */\n            setCurrentItemState : function(id, state){\n                if(id){\n                    this.currentItemState[id] = state;\n                }\n            },\n\n            /**\n             * Reset the state of the current item in the test runner\n             */\n            resetCurrentItemState : function(){\n                this.currentItemState = {};\n            },\n\n            /**\n             * Get the state of the current item as stored in the test runner\n             * @returns {Object}\n             */\n            getCurrentItemState : function(){\n                return this.currentItemState;\n            }\n        };\n\n        var config = module.config();\n        if (config) {\n            actionBarTools.register(config.qtiTools);\n        }\n\n        return {\n            start: function (testContext) {\n\n                $controls = {\n                    // navigation\n                    $moveForward: $('[data-control=\"move-forward\"]'),\n                    $moveEnd: $('[data-control=\"move-end\"]'),\n                    $moveBackward: $('[data-control=\"move-backward\"]'),\n                    $nextSection: $('[data-control=\"next-section\"]'),\n                    $skip: $('[data-control=\"skip\"]'),\n                    $skipEnd: $('[data-control=\"skip-end\"]'),\n                    $exit: $(window.parent.document).find('[data-control=\"exit\"]'),\n                    $logout: $(window.parent.document).find('[data-control=\"logout\"]'),\n                    $naviButtons: $('.bottom-action-bar .action'),\n                    $skipButtons: $('.navi-box .skip'),\n                    $forwardButtons: $('.navi-box .forward'),\n\n                    // progress bar\n                    $progressBar: $('[data-control=\"progress-bar\"]'),\n                    $progressLabel: $('[data-control=\"progress-label\"]'),\n                    $progressBox: $('.progress-box'),\n\n                    // title\n                    $title:  $('[data-control=\"qti-test-title\"]'),\n                    $position:  $('[data-control=\"qti-test-position\"]'),\n\n                    // timers\n                    $timerWrapper:  $('[data-control=\"qti-timers\"]'),\n\n                    // other zones\n                    $contentPanel: $('.content-panel'),\n                    $controls: $('.qti-controls'),\n                    $itemFrame: $('#qti-item'),\n                    $rubricBlocks: $('#qti-rubrics'),\n                    $contentBox: $('#qti-content'),\n                    $sideBars: $('.test-sidebar'),\n                    $topActionBar: $('.horizontal-action-bar.top-action-bar'),\n                    $bottomActionBar: $('.horizontal-action-bar.bottom-action-bar')\n                };\n\n                // title\n                $controls.$titleGroup = $controls.$title.add($controls.$position);\n\n                $doc.ajaxError(function (event, jqxhr) {\n                    if (jqxhr.status === 403) {\n                        iframeNotifier.parent('serviceforbidden');\n                    }\n                });\n\n                window.onServiceApiReady = function onServiceApiReady(serviceApi) {\n                    TestRunner.serviceApi = serviceApi;\n\n                    if (!testContext.success) {\n                        TestRunner.processError(testContext);\n                    }\n\n                    // If the assessment test session is in CLOSED state,\n                    // we give the control to the delivery engine by calling finish.\n                    else if (testContext.state === TestRunner.TEST_STATE_CLOSED) {\n                        serviceApi.finish();\n                        testMetaData.clearData();\n                    }\n                    else {\n\n                        if (TestRunner.getSessionStateService().getDuration()) {\n                            TestRunner.setTestContext(testContext);\n                            TestRunner.initMetadata();\n\n                            TestRunner.keepItemTimed(TestRunner.getSessionStateService().getDuration());\n                            TestRunner.getSessionStateService().restart();\n                        } else {\n                            TestRunner.update(testContext);\n                        }\n                    }\n                };\n\n                TestRunner.beforeTransition();\n                TestRunner.testContext = testContext;\n\n                $controls.$skipButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.skip();\n                    }\n                });\n\n                $controls.$forwardButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveForward();\n                    }\n                });\n\n                $controls.$moveBackward.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveBackward();\n                    }\n                });\n\n                $controls.$nextSection.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.nextSection();\n                    }\n                });\n\n                $controls.$exit.click(function (e) {\n                    e.preventDefault();\n                    TestRunner.exit();\n                });\n\n                $(window).on('resize', _.throttle(function () {\n                    TestRunner.adjustFrame();\n                    $controls.$titleGroup.show();\n                }, 250));\n\n                $doc.on('loading', function () {\n                    iframeNotifier.parent('loading');\n                });\n\n\n                $doc.on('unloading', function () {\n                    iframeNotifier.parent('unloading');\n                });\n\n                TestRunner.progressUpdater = progressUpdater($controls.$progressBar, $controls.$progressLabel);\n\n                if (testContext.reviewScreen) {\n                    TestRunner.testReview = testReview($controls.$contentPanel, {\n                        region: testContext.reviewRegion || 'left',\n                        hidden: !TestRunner.hasOption(optionReviewScreen),\n                        reviewScope: testContext.reviewScope,\n                        preventsUnseen: !!testContext.reviewPreventsUnseen,\n                        canCollapse: !!testContext.reviewCanCollapse\n                    }).on('jump', function(event, position) {\n                        TestRunner.jump(position);\n                    }).on('mark', function(event, flag, position) {\n                        TestRunner.markForReview(flag, position);\n                    });\n                    $controls.$sideBars = $('.test-sidebar');\n                }\n\n                TestRunner.updateProgress();\n                TestRunner.updateTestReview();\n\n                iframeNotifier.parent('serviceready');\n\n\n                TestRunner.adjustFrame();\n\n                $controls.$topActionBar.add($controls.$bottomActionBar).animate({ opacity: 1 }, 600);\n\n                deleter($('#feedback-box'));\n                modal($('body'));\n\n                //listen to state change in the current item\n                $(document).on('responsechange', function(e, responseId, response){\n                    if(responseId && response){\n                        TestRunner.setCurrentItemState(responseId, {response:response});\n                    }\n                }).on('stateready', function(e, id, state){\n                    if(id && state){\n                        TestRunner.setCurrentItemState(id, state);\n                    }\n                }).on('heightchange', function(e, height) {\n                    $controls.$itemFrame.height(height);\n                });\n\n            }\n        };\n    });\n\n"]}