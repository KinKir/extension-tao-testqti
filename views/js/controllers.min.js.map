{"version":3,"sources":["routes.js","creator/helpers/baseType.js","creator/helpers/cardinality.js","creator/helpers/outcomeValidator.js","creator/helpers/qtiElement.js","creator/helpers/outcome.js","creator/helpers/category.js","creator/modelOverseer.js","creator/templates/testpart!tpl","creator/templates/section!tpl","creator/templates/rubricblock!tpl","creator/templates/itemref!tpl","creator/templates/item!tpl","creator/templates/outcomes!tpl","tpl!taoQtiTest/controller/creator/templates/test-props","tpl!taoQtiTest/controller/creator/templates/testpart-props","tpl!taoQtiTest/controller/creator/templates/section-props","tpl!taoQtiTest/controller/creator/templates/itemref-props","tpl!taoQtiTest/controller/creator/templates/itemref-props-weight","tpl!taoQtiTest/controller/creator/templates/rubricblock-props","creator/templates/index.js","creator/views/item.js","creator/views/property.js","creator/views/actions.js","creator/helpers/sectionCategory.js","creator/helpers/qtiTest.js","creator/views/itemref.js","creator/encoders/dom2qti.js","creator/helpers/ckConfigurator.js","creator/views/rubricblock.js","creator/helpers/sectionBlueprints.js","creator/views/section.js","creator/views/testpart.js","creator/views/test.js","creator/helpers/processingRule.js","creator/helpers/scoring.js","creator/creator.js","../testRunner/actionBarHook.js","../testRunner/actionBarTools.js","../testRunner/tpl/navigator!tpl","../testRunner/tpl/navigatorTree!tpl","../testRunner/testReview.js","../testRunner/progressUpdater.js","../testRunner/testMetaData.js","../../serviceApi/ServiceApi.js","../../serviceApi/UserInfoService.js","../../serviceApi/StateStorage.js","runtime/testRunner.js"],"names":["define","Creator","css","actions","index","_","baseTypeEnum","IDENTIFIER","BOOLEAN","INTEGER","FLOAT","STRING","POINT","PAIR","DIRECTED_PAIR","DURATION","FILE","URI","INT_OR_IDENTIFIER","COORDS","ANY","SAME","baseTypeHelper","asArray","getValid","type","defaultType","isFinite","getNameByConstant","getConstantByName","isUndefined","getValue","value","isString","toLowerCase","parseInt","parseFloat","isNaN","name","String","trim","constant","operator","assign","cardinalityEnum","SINGLE","MULTIPLE","ORDERED","RECORD","cardinalityHelper","cardinality","defaultCardinality","validateIdentifier","identifier","identifierValidator","test","validateOutcome","outcome","checkIdentifier","allowedTypes","validOutcome","isPlainObject","validIdentifier","isArray","indexOf","validateOutcomes","outcomes","valid","forEach","outcomeValidator","forceArray","qtiElementHelper","create","properties","element","qti-type","TypeError","find","collection","checkType","qtiElement","types","found","lookupElement","tree","path","nodeName","key","steps","split","nodeNames","len","length","i","partial","has","lookupProperty","result","propertyName","pop","outcomeHelper","getProcessingRuleExpression","outcomeRule","getProcessingRuleProperty","getOutcomeIdentifier","isObject","getOutcomeDeclarations","testModel","outcomeDeclarations","getOutcomeProcessingRules","rules","outcomeProcessing","outcomeRules","eachOutcomeDeclarations","cb","eachOutcomeProcessingRules","eachOutcomeProcessingRuleExpressions","browseExpressions","processingRule","expression","expressions","listOutcomes","isFunction","push","removeOutcomes","check","declarations","indexBy","remove","createOutcome","views","interpretation","longInterpretation","normalMaximum","normalMinimum","masteryValue","baseType","addOutcomeProcessing","addOutcome","replaceOutcomes","concat","isCategoryOption","category","eachCategories","testParts","testPart","assessmentSections","assessmentSection","sectionParts","itemRef","categories","listCategories","keys","listOptions","options","eventifier","statifier","categoryHelper","modelOverseerFactory","model","config","modelOverseer","getModel","setModel","newModel","trigger","this","getConfig","getOutcomesList","map","declaration","getOutcomesNames","getCategories","getOptions","hb","template","Handlebars","depth0","helpers","partials","data","compilerInfo","merge","stack1","helper","buffer","functionType","escapeExpression","call","hash","helperMissing","title","__","href","label","program1","uri","parent","inverse","self","noop","fn","program","program2","each","program4","modes","program5","selected","program3","description","scoring","hasBlueprint","orderIndex","feedback","section","rubricBlock","item","testProps","testPartProps","sectionProps","itemRefProps","itemRefPropsWeight","rubricBlockProps","testpart","itemref","rubricblock","itemrefweight","$","templates","itemTemplate","itemView","loadItems","setUpLiveSearch","timeout","liveSearch","pattern","$search","val","clearTimeout","setTimeout","getItems","keyup","siblings","click","update","items","disableSelection","$itemBox","empty","append","enableSelection","$panel","selectable","filter","event","ui","addClass","unselected","removeClass","stop","then","pluck","DataBinder","propView","tmplName","propValidation","$view","on","e","isValid","namespace","$togglers","groupValidator","$container","open","databinder","binderOptions","children","hide","appendTo","startDomComponent","bind","getView","isOpen","onOpen","stopPropagation","onClose","destroy","toggle","not","show","propertyView","preventDefault","$elt","hasClass","disabledClass","blur","activeClass","btnOnClass","move","$actionContainer","containerClass","elementClass","$element","parents","$elements","is","fadeOut","insertBefore","fadeIn","insertAfter","movable","actionContainerElt","$moveUp","$moveDown","removable","$delete","disable","enable","errorHandler","isValidSectionModel","setCategories","oldCategories","removed","difference","all","propagated","addCategories","removeCategories","compact","arrays","values","union","apply","intersection","sort","_ns","getTaoOptionCategories","qtiTestHelper","extractIdentifiers","obj","identifiers","flatten","getIdentifier","qtiType","lockedIdentifiers","suggestion","glue","contains","idFormatValidator","qtiIdPattern","message","validate","callback","testidFormatValidator","qtiTestIdPattern","idAvailableValidator","original","filterQtiType","addMissingQtiType","parentType","isNumber","replace","consolidateModel","ordering","undefined","shuffle","part","rubricBlocks","content","validateModel","feedbackBlock","outcomeIdentifier","Error","sectionCategory","weightTpl","setUp","refModel","$itemRef","propHandler","removePropHandler","categoriesProperty","weightsProperty","initCategories","$select","select2","width","tags","multiple","tokenSeparators","formatNoMatches","maximumInputLength","$weightList","defaultData","weights","resize","listenActionState","document","$parent","$target","target","throttle","$refs","first","$actions","innerWidth","outerWidth","getAttributes","object","omit","attrToStr","attributes","reduce","acc","isEmpty","normalizeNodeName","normalized","toLocaleLowerCase","normalizedNodes","feedbackblock","outcomeidentifier","showhide","encode","modelValue","startTag","decode","nodeValue","$nodeValue","elt","nodeType","xmlBase","id","class","lang","transform","childNodes","ckConfigurator","mathJax","editor","toolbarType","underline","hider","dialogAlert","namespaceHelper","ckeditor","Dom2QtiEncoder","filterPlugin","plugin","ckConfig","plugins","reject","join","extraPlugins","rubricModel","$rubricBlock","bindEvent","$el","eventName","namespaceAll","uid","off","ensureWrap","html","charAt","editorToModel","rubric","wrapper","$rubricBlockContent","modelToEditor","updateFeedback","activated","matchValue","changeFeedback","$feedbackOutcomeLine","$feedbackMatchLine","changeHandler","changedModel","updateOutcomes","text","$feedbackOutcome","minimumResultsForSearch","$feedbackActivated","removeAttr","rbViews","$propContainer","syncRubricBlockContent","debounce","uniqueId","before","feedbackOutcome","changedRubricBlock","inline","setBlueprint","blueprint","getBlueprint","getUrl","ajax","url","dataType","fail","itemRefView","rubricBlockView","sectionBlueprint","sectionModel","$section","$title","$selectionSwitcher","$selectionSelect","$selectionWithRep","switchSelection","prop","incrementer","selection","blueprintProperty","itemRefs","labels","acceptItemRefs","$selected","$items","Array","prototype","slice","arguments","$placeholder","$placeholders","defaultItemData","itemSessionControl","maxAttempts","clone","$item","itemCategories","itemData","defaults","end","addItemRef","attr","itemRefModel","$refList","eq","addRubricBlock","adder","templateData","$li","initBlueprint","routes","blueprintByTestSection","success","blueprintsById","delay","method","params","results","minimumInputLength","allowClear","placeholder","$sections","sectionView","partModel","$testPart","$identifier","sections","addSection","sectionIndex","$testParts","testPartView","testView","changeScoring","noOptions","newScoringState","JSON","stringify","$cutScoreLine","$categoryScoreLine","$weightIdentifierLine","$descriptions","scoringState","$generate","addTestPart","testPartIndex","navigationMode","submissionMode","added","unaryOperator","processingRuleHelper","minOperands","maxOperands","addTypeAndCardinality","binaryOperator","left","right","acceptedCardinalities","acceptedBaseTypes","includeCategories","excludeCategories","addSectionIdentifier","sectionIdentifier","addWeightIdentifier","weightIdentifier","validateOutcomeList","setExpression","addExpression","setOutcomeValue","gte","lte","divide","sum","terms","testVariables","variableIdentifier","outcomeMaximum","numberPresented","baseValue","variable","match","isNull","outcomeCondition","outcomeIf","outcomeElse","outcomeElseIfs","instruction","format","addTotalScoreOutcomes","weight","scoreIdentifier","addMaxScoreOutcomes","addCutScoreOutcomes","countIdentifier","cutScore","addFeedbackScoreOutcomes","passed","notPassed","formatCategoryOutcome","toUpperCase","belongToRecipe","recipe","onlyCategories","signature","weighted","matchRecipe","outcomeRecipe","matchRecipeOutcome","outcomeMatch","categoryIdentifier","categoryWeighted","categoryFeedback","include","outcomesRecipes","signatures","getSignatures","signatureMatch","getRecipes","descriptors","getOutcomesRecipe","mode","processingRecipe","listScoringModes","handleCategories","categoryScore","hasCategoryOutcome","categoryOutcomes","outcomeDeclaration","getCutScore","uniq","defaultCutScore","Math","max","getWeightIdentifier","getOutcomeProcessing","included","processing","diff","count","size","detectScoring","processingModes","defaultScoreIdentifier","removeScoring","scoringOutcomes","getOutcomes","none","custom","total","cut","clean","writer","feedbackOk","feedbackFailed","outcomesWriters","descriptor","totalModeOutcomes","whichOutcome","categoryOutcome","categoryOutcomeIdentifier","categoryScoreIdentifier","categoryCountIdentifier","scoringHelper","init","generate","recipes","module","history","DataBindController","itemrefView","validators","Promise","search","resolve","getJSON","notempty","done","xhr","status","statusText","uris","Controller","start","binder","$saver","back","filters","isItemRef","isSection","encoders","dom2qti","beforeSave","err","error","takeControl","get","register","window","save","isValidConfig","toolconfig","hook","triggerItemLoaded","tool","itemLoaded","initQtiTool","$toolsContainer","testContext","testRunner","itemIsLoaded","tools","require","$button","$existingBtn","isValidHook","clear","isVisible","render","_appendInOrder","$after","$before","order","prepend","$btn","_order","after","$doc","actionBarHook","registeredQtiTools","qtiTools","actionBarTools","registerTools","getRegisteredTools","getRegistered","isRegistered","list","container","promises","forIn","getId","region","hidden","active","program29","program6","program7","answered","program8","program9","flagged","program11","program13","viewed","program17","program15","position","program21","program19","program24","program22","program27","program25","itemId","parts","navigatorTpl","navigatorTreeTpl","capitalize","_cssCls","collapsed","collapsible","disabled","unseen","icon","scope","testSection","_selectors","component","filterBar","collapseHandle","linearState","infoAnswered","infoViewed","infoUnanswered","infoFlagged","infoPanel","infoPanelLabels","partLabels","sectionLabels","itemLabels","itemIcons","icons","linearStart","counters","actives","collapsiblePanels","notFlagged","notAnswered","_filterMap","unanswered","filtered","_optionsMap","reviewScope","reviewPreventsUnseen","canCollapse","_reviewScopes","testReview","initOptions","putOnRight","insertMethod","currentFilter","$component","_loadDOM","_initEvents","_updateDisplayOptions","$infoAnswered","$infoViewed","$infoUnanswered","$infoFlagged","$filterBar","$filters","$tree","$linearState","toggleClass","_openSelected","closest","_togglePanel","_openOnly","_mark","_select","_jump","_filter","criteria","_updateSectionCounters","jquery","hierarchy","parentsUntil","add","opened","root","panel","collapseSelector","_setItemIcon","_adjustItemIcon","defaultIcon","iconCls","cls","_toggleFlag","flag","itemPosition","$filtered","nb","_writeCount","scopeClass","$root","_updateOptions","optionKey","contextKey","_updateInfos","progression","Number","$place","_getProgressionOfTest","numberItems","numberCompleted","numberFlagged","_getProgressionOfTestPart","numberItemsPart","numberCompletedPart","numberPresentedPart","numberFlaggedPart","_getProgressionOfTestSection","numberItemsSection","numberCompletedSection","numberPresentedSection","numberFlaggedSection","_updateTree","navigatorMap","reviewScopePart","reviewScopeSection","_partsFilter","preventsUnseen","setItemFlag","updateNumberFlagged","fields","currentPosition","currentFound","currentSection","currentPart","itemFound","itemSection","itemPart","field","getProgression","progressInfoMethod","dom","extraParameters","testReviewFactory","progressUpdaters","progressBar","progressLabel","progressbar","write","ratio","progressIndicator","progressIndicatorMethod","percentageProgression","floor","positionProgression","progressScope","progressIndicatorScope","progressScopeCounter","counter","progressUpdaterFactory","updater","testMetaDataFactory","_testServiceCallId","testServiceCallId","testMetaData","setData","getLocalStorageData","setLocalStorageData","currentKey","getLocalStorageKey","localStorage","setItem","domException","removeItem","getItem","parse","_storageKeyPrefix","_data","SECTION_EXIT_CODE","COMPLETED_NORMALLY","QUIT","COMPLETE_TIMEOUT","TIMEOUT","FORCE_QUIT","IN_PROGRESS","ERROR","TEST_EXIT_CODE","COMPLETE","TERMINATED","INCOMPLETE","INCOMPLETE_QUIT","INACTIVE","CANDIDATE_DISAGREED_WITH_NDA","getTestServiceCallId","setTestServiceCallId","addData","overwrite","getData","clearData","UrlParser","ServiceApi","baseUrl","parameters","serviceCallId","stateStorage","userService","paused","connected","state","hasBeenPaused","SIG_SUCCESS","SIG_ERROR","loadInto","frame","$frame","callUrl","getCallUrl","isCORSAllowed","checkCORS","connect","contentWindow","__knownParent__","onServiceApiReady","param","getUserPropertyValues","property","getServiceCallId","getState","setState","set","getHasBeenPaused","setHasBeenPaused","getParameter","onFinish","onFinishCallback","onKill","onKillCallback","onExit","onExitCallback","kill","exit","finish","valueArray","UserInfoService","requestUrl","hasOwnProperty","service","r","StateStorage","submitUrl","progressUpdater","iframeNotifier","MathJax","deleter","moment","modal","timerIds","currentTimes","lastDates","timeDiffs","waitingTime","$timers","$controls","timerIndex","sessionStateService","optionNextSection","optionNextSectionWarning","optionReviewScreen","optionEndTestWarning","optionNoExitTimedSectionWarning","TestRunner","TEST_STATE_INITIAL","TEST_STATE_INTERACTING","TEST_STATE_MODAL_FEEDBACK","TEST_STATE_SUSPENDED","TEST_STATE_CLOSED","TEST_NAVIGATION_LINEAR","TEST_NAVIGATION_NONLINEAR","TEST_ITEM_STATE_INTERACTING","beforeTransition","disableGui","$itemFrame","$rubricBlocks","$timerWrapper","afterTransition","enableGui","ITEM","ITEM_START_TIME_CLIENT","Date","now","jump","action","isJumpOutOfSection","isCurrentItemActive","isTimedSection","exitTimedSection","killItemSession","actionCall","keepItemTimed","duration","markForReview","markForReviewUrl","cache","async","itemFlagged","updateTools","moveForward","doExitSection","isTimeout","exitSection","itemPositionSection","shouldDisplayEndTestWarning","displayEndTestWarning","isLast","hasOption","nextAction","confirmLabel","cancelLabel","showItemCount","displayExitMessage","moveBackward","jumpPosition","getCurrentSectionItems","isJumpToOtherSection","isValidPosition","exitCode","SECTION","qtiRunner","getQtiRunner","doExitTimedSection","updateItemApi","keepTimerUpToTimeout","nextSection","doNextSection","scopeSuffixMap","scopeSuffix","$confirmBox","unansweredCount","flaggedCount","isCurrentItemAnswered","toString","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","itemServiceApi","itemSessionState","getCurrentItemState","response","base","option","itemFrame","getElementById","itemWindow","itemContainerFrame","itemContainerWindow","timeConstraints","qtiClassName","sectionItems","partId","testPartId","navMap","partIndex","skip","doSkip","updateTimer","confirmBox","confirmBtn","setTestContext","eval","itemServiceApiCall","initMetadata","getSessionStateService","accuracy","$runner","restart","updateContext","updateProgress","updateNavigation","updateTestReview","updateInformation","updateRubrics","updateExitButton","resetCurrentItemState","$contentBox","adjustFrame","visibility","itemIdentifier","showSkip","showSkipEnd","showNextSection","allowSkipping","$skip","$skipEnd","$nextSection","createTimer","cst","$timer","$label","$time","formatTime","seconds","hasTimers","$topActionBar","allowLateSubmission","timerWarning","warnings","showed","point","closestPreviousWarning","setInterval","getTime","round","clearInterval","warning","findLast","timeWarning","remaining","humanize","rubrics","prependTo","Hub","Queue","$exit","$moveForward","$moveEnd","$moveBackward","canMoveBackward","considerProgress","$progressBox","testTitle","sectionText","isDeepestSectionVisible","sectionTitle","$position","$titleGroup","$logout","logoutButton","exitButton","frameContentHeight","rubricHeight","outerHeight","finalHeight","innerHeight","$bottomActionBar","height","$sideBars","$sideBar","contents","$naviButtons","hideGui","showGui","totalSeconds","sec_num","hours","minutes","time","processError","serviceApi","extraParams","metaData","TEST","setCurrentItemState","currentItemState","$skipButtons","$forwardButtons","$progressBar","$progressLabel","$contentPanel","ajaxError","jqxhr","getDuration","reviewScreen","reviewRegion","reviewCanCollapse","animate","opacity","responseId"],"mappings":"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A0R,WAAA4C,UAAA/C,oBACA3N,YAAA9F,YAAA8F,YACA+E,iBAAA7K,YAAA+F,qBACAC,cAAAhG,YAAAugB,oBACAh+B,GAAA,OAAA,SAAAb,MAAAshB,UACA4Q,WAAAoB,KAAAhS,YACAzgB,GAAA,OAAA,SAAAb,MAAAknB,KAAA5F,UACA4Q,WAAA8B,cAAA9M,KAAA5F,YAEAoQ,UAAAuL,UAAA5+B,EAAA,kBAGA6zB,WAAA0G,iBACA1G,WAAA4G,mBAEA/H,eAAAz0B,OAAA,gBAGA41B,WAAAkH,cAEA1H,UAAA4I,cAAA/T,IAAAmL,UAAAqL,kBAAA+B,SAAAC,QAAA,GAAA,KAEA9N,QAAA5yB,EAAA,kBACA8yB,MAAA9yB,EAAA,SAGAA,EAAA0K,UAAAlI,GAAA,iBAAA,SAAAC,EAAAk+B,WAAAjI;A9C7jCA,A8C8jCAiI,YAAAjI,UACA7E,WAAA+L,oBAAAe,YAAAjI,SAAAA,aAEAl2B,GAAA,aAAA,SAAAC,EAAAmK,GAAAmjB,OACAnjB,IAAAmjB,OACA8D,WAAA+L,oBAAAhzB,GAAAmjB,SAEAvtB,GAAA,eAAA,SAAAC,EAAAk8B,QACAtL,UAAAmB,WAAAmK,OAAAA;A9CrkzMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpvJA,ADwJA;ACvpSA,ADqSA;ACpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClhCA,ADiCA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA,ADiDA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA,ADiCA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACljgHA;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA,ADoEA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtghMA,ADiMA;AChrrrfpLA,ADqLA;ACphMA,ADiMA;AChrgzBA,AD8zBA;AC7zvPA,ADwPA;ACvjzxNA,ADyNA;ACxphNA,ADiNA;AChhDA,ADiDA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtfile":"taoQtiTest/controller/routes.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoQtiTest/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Creator': {\n            'css': 'creator', \n            'actions': {\n                'index' : 'controller/creator/creator'\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * The BaseType enumeration (port of \\qtism\\common\\enums\\BaseType).\n *\n * From IMS QTI:\n *\n * A base-type is simply a description of a set of atomic values (atomic to this specification).\n * Note that several of the baseTypes used to define the runtime data model have identical\n * definitions to those of the basic data types used to define the values for attributes\n * in the specification itself. The use of an enumeration to define the set of baseTypes\n * used in the runtime model, as opposed to the use of classes with similar names, is\n * designed to help distinguish between these two distinct levels of modelling.\n *\n * @author Jérôme Bogaerts <jerome@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/baseType',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * The list of QTI base types\n     * @type {Object}\n     */\n    var baseTypeEnum = {\n        /**\n         * From IMS QTI:\n         *\n         * The set of identifier values is the same as the set of values\n         * defined by the identifier class.\n         *\n         * @type {Number}\n         */\n        IDENTIFIER: 0,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of boolean values is the same as the set of values defined\n         * by the boolean class.\n         *\n         * @type {Number}\n         */\n        BOOLEAN: 1,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of integer values is the same as the set of values defined\n         * by the integer class.\n         *\n         * @type {Number}\n         */\n        INTEGER: 2,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of float values is the same as the set of values defined by the\n         * float class.\n         *\n         * @type {Number}\n         */\n        FLOAT: 3,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of string values is the same as the set of values defined by the\n         * string class.\n         *\n         * @type {Number}\n         */\n        STRING: 4,\n\n        /**\n         * From IMS QTI:\n         *\n         * A point value represents an integer tuple corresponding to a graphic point.\n         * The two integers correspond to the horizontal (x-axis) and vertical (y-axis)\n         * positions respectively. The up/down and left/right senses of the axes are\n         * context dependent.\n         *\n         * @type {Number}\n         */\n        POINT: 5,\n\n        /**\n         * From IMS QTI:\n         *\n         * A pair value represents a pair of identifiers corresponding to an association\n         * between two objects. The association is undirected so (A,B) and (B,A) are equivalent.\n         *\n         * @type {Number}\n         */\n        PAIR: 6,\n\n        /**\n         * From IMS QTI:\n         *\n         * A directedPair value represents a pair of identifiers corresponding to a directed\n         * association between two objects. The two identifiers correspond to the source\n         * and destination objects.\n         *\n         * @type {Number}\n         */\n        DIRECTED_PAIR: 7,\n\n        /**\n         * From IMS QTI:\n         *\n         * A duration value specifies a distance (in time) between two time points.\n         * In other words, a time period as defined by [ISO8601], but represented as\n         * a single float that records time in seconds. Durations may have a fractional\n         * part. Durations are represented using the xsd:double datatype rather than\n         * xsd:dateTime for convenience and backward compatibility.\n         *\n         * @type {Number}\n         */\n        DURATION: 8,\n\n        /**\n         * From IMS QTI:\n         *\n         * A file value is any sequence of octets (bytes) qualified by a content-type and an\n         * optional filename given to the file (for example, by the candidate when uploading\n         * it as part of an interaction). The content type of the file is one of the MIME\n         * types defined by [RFC2045].\n         *\n         * @type {Number}\n         */\n        FILE: 9,\n\n        /**\n         * From IMS QTI:\n         *\n         * A URI value is a Uniform Resource Identifier as defined by [URI].\n         *\n         * @type {Number}\n         */\n        URI: 10,\n\n        /**\n         * From IMS QTI:\n         *\n         * An intOrIdentifier value is the union of the integer baseType and\n         * the identifier baseType.\n         *\n         * @type {Number}\n         */\n        INT_OR_IDENTIFIER: 11,\n\n        /**\n         * In qtism, we consider an extra 'coords' baseType.\n         *\n         * @type {Number}\n         */\n        COORDS: 12,\n\n        /**\n         * Express that the operands can have any BaseType from the BaseType enumeration and\n         * can be different.\n         *\n         * @type {Number}\n         */\n        ANY: 12,\n\n        /**\n         * Express that all the operands must have the same\n         * baseType.\n         *\n         * @type {Number}\n         */\n        SAME: 13\n    };\n\n    var baseTypeHelper = _({\n        /**\n         * Gets the the list of QTI base types\n         * @returns {Object}\n         */\n        asArray: function asArray() {\n            return baseTypeEnum;\n        },\n\n        /**\n         * Gets a valid type or the default\n         * @param {String|Number} type\n         * @param {String|Number} [defaultType]\n         * @returns {*}\n         */\n        getValid: function getValid(type, defaultType) {\n            if (_.isFinite(type)) {\n                if (!baseTypeHelper.getNameByConstant(type)) {\n                    type = false;\n                }\n            } else {\n                type = baseTypeHelper.getConstantByName(type);\n            }\n\n            if (false === type) {\n                if (!_.isUndefined(defaultType) && defaultType !== -1) {\n                    type = baseTypeHelper.getValid(defaultType, -1);\n                } else {\n                    type = -1;\n                }\n            }\n\n            return type;\n        },\n\n        /**\n         * Adjusts a value with respect to the type\n         * @param {String|Number} type\n         * @param {*} value\n         * @returns {*}\n         */\n        getValue: function getValue(type, value) {\n            if (_.isString(type)) {\n                type = baseTypeHelper.getConstantByName(type);\n            }\n\n            switch (type) {\n                case baseTypeEnum.URI:\n                case baseTypeEnum.STRING:\n                case baseTypeEnum.IDENTIFIER:\n                    return value + '';\n\n                case baseTypeEnum.BOOLEAN:\n                    if (_.isString(value)) {\n                        switch (value.toLowerCase()) {\n                            case 'true':\n                                return true;\n                            case 'false':\n                                return false;\n                        }\n                    }\n                    return !!value;\n\n                case baseTypeEnum.INTEGER:\n                    return parseInt(value, 10) || 0;\n\n                case baseTypeEnum.FLOAT:\n                    return parseFloat(value) || 0;\n\n                case baseTypeEnum.INT_OR_IDENTIFIER:\n                    if (!_.isNaN(parseInt(value, 10))) {\n                        return parseInt(value, 10) || 0;\n                    } else {\n                        return '' + value;\n                    }\n            }\n\n            return value;\n        },\n\n        /**\n         * Get a constant value from the BaseType enumeration by baseType name.\n         *\n         * * 'identifier' -> baseTypes.IDENTIFIER\n         * * 'boolean' -> baseTypes.BOOLEAN\n         * * 'integer' -> baseTypes.INTEGER\n         * * 'float' -> baseTypes.FLOAT\n         * * 'string' -> baseTypes.STRING\n         * * 'point' -> baseTypes.POINT\n         * * 'pair' -> baseTypes.PAIR\n         * * 'directedPair' -> baseTypes.DIRECTED_PAIR\n         * * 'duration' -> baseTypes.DURATION\n         * * 'file' -> baseTypes.FILE\n         * * 'uri' -> baseTypes.URI\n         * * 'intOrIdentifier' -> baseTypes.INT_OR_IDENTIFIER\n         * * extra 'coords' -> baseTypes.COORDS\n         *\n         * @param {String} name The baseType name.\n         * @return {Number|Boolean} The related enumeration value or `false` if the name could not be resolved.\n         */\n        getConstantByName: function getConstantByName(name) {\n            switch (String(name).trim().toLowerCase()) {\n                case 'identifier':\n                    return baseTypeEnum.IDENTIFIER;\n\n                case 'boolean':\n                    return baseTypeEnum.BOOLEAN;\n\n                case 'integer':\n                    return baseTypeEnum.INTEGER;\n\n                case 'float':\n                    return baseTypeEnum.FLOAT;\n\n                case 'string':\n                    return baseTypeEnum.STRING;\n\n                case 'point':\n                    return baseTypeEnum.POINT;\n\n                case 'pair':\n                    return baseTypeEnum.PAIR;\n\n                case 'directedpair':\n                    return baseTypeEnum.DIRECTED_PAIR;\n\n                case 'duration':\n                    return baseTypeEnum.DURATION;\n\n                case 'file':\n                    return baseTypeEnum.FILE;\n\n                case 'uri':\n                    return baseTypeEnum.URI;\n\n                case 'intoridentifier':\n                    return baseTypeEnum.INT_OR_IDENTIFIER;\n\n                case 'coords':\n                    return baseTypeEnum.COORDS;\n\n                case 'any':\n                    return baseTypeEnum.ANY;\n\n                case 'same':\n                    return baseTypeEnum.SAME;\n\n                default:\n                    return false;\n            }\n        },\n\n        /**\n         * Get the QTI name of a BaseType.\n         *\n         * @param {Number} constant A constant value from the BaseType enumeration.\n         * @param {Boolean} [operator] A flag that allow to switch between operator an value types to prevent duplicate name issue\n         * @return {String|Boolean} The QTI name or false if not match.\n         */\n        getNameByConstant: function getNameByConstant(constant, operator) {\n            switch (constant) {\n                case baseTypeEnum.IDENTIFIER:\n                    return 'identifier';\n\n                case baseTypeEnum.BOOLEAN:\n                    return 'boolean';\n\n                case baseTypeEnum.INTEGER:\n                    return 'integer';\n\n                case baseTypeEnum.FLOAT:\n                    return 'float';\n\n                case baseTypeEnum.STRING:\n                    return 'string';\n\n                case baseTypeEnum.POINT:\n                    return 'point';\n\n                case baseTypeEnum.PAIR:\n                    return 'pair';\n\n                case baseTypeEnum.DIRECTED_PAIR:\n                    return 'directedPair';\n\n                case baseTypeEnum.DURATION:\n                    return 'duration';\n\n                case baseTypeEnum.FILE:\n                    return 'file';\n\n                case baseTypeEnum.URI:\n                    return 'uri';\n\n                case baseTypeEnum.INT_OR_IDENTIFIER:\n                    return 'intOrIdentifier';\n\n                case baseTypeEnum.COORDS:\n                case baseTypeEnum.ANY:\n                    if (operator) {\n                        return 'any';\n                    } else {\n                        return 'coords';\n                    }\n\n                case baseTypeEnum.SAME:\n                    return 'same';\n\n                default:\n                    return false;\n            }\n        }\n    }).assign(baseTypeEnum).value();\n\n    return baseTypeHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * The Cardinality enumeration (port of \\qtism\\common\\enums\\Cardinality).\n *\n * From IMS QTI:\n *\n * An expression or itemVariable can either be single-valued or multi-valued. A multi-valued\n * expression (or variable) is called a container. A container contains a list of values,\n * this list may be empty in which case it is treated as NULL. All the values in a multiple\n * or ordered container are drawn from the same value set, however, containers may contain\n * multiple occurrences of the same value. In other words, [A,B,B,C] is an acceptable value\n * for a container. A container with cardinality multiple and value [A,B,C] is equivalent\n * to a similar one with value [C,B,A] whereas these two values would be considered distinct\n * for containers with cardinality ordered. When used as the value of a response variable\n * this distinction is typified by the difference between selecting choices in a multi-response\n * multi-choice task and ranking choices in an order objects task. In the language of [ISO11404]\n * a container with multiple cardinality is a \"bag-type\", a container with ordered cardinality\n * is a \"sequence-type\" and a container with record cardinality is a \"record-type\".\n *\n * The record container type is a special container that contains a set of independent values\n * each identified by its own identifier and having its own base-type. This specification\n * does not make use of the record type directly however it is provided to enable\n * customInteractions to manipulate more complex responses and customOperators to\n * return more complex values, in addition to the use for detailed information about\n * numeric responses described in the stringInteraction abstract class.\n *\n * @author Jérôme Bogaerts <jerome@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/cardinality',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * The list of QTI cardinalities\n     * @type {Object}\n     */\n    var cardinalityEnum = {\n        /**\n         * Single term cardinality\n         *\n         * @type {Number}\n         */\n        SINGLE: 0,\n\n        /**\n         * Multiple terms cardinality\n         *\n         * @type {Number}\n         */\n        MULTIPLE: 1,\n\n        /**\n         * Ordered terms cardinality\n         *\n         * @type {Number}\n         */\n        ORDERED: 2,\n\n        /**\n         * Record term cardinality\n         *\n         * @type {Number}\n         */\n        RECORD: 3,\n\n        /**\n         * Express that all the expressions involved in an operator have\n         * the same cardinality.\n         *\n         * @type {Number}\n         */\n        SAME: 4,\n\n        /**\n         * Express that all the expressions involved in an operator may\n         * have any cardinality.\n         *\n         * @type {Number}\n         */\n        ANY: 5\n    };\n\n    var cardinalityHelper = _({\n        /**\n         * Gets the the list of QTI cardinalities\n         * @returns {Object}\n         */\n        asArray: function asArray() {\n            return cardinalityEnum;\n        },\n\n        /**\n         * Gets a valid cardinality or the default\n         * @param {String|Number} cardinality\n         * @param {String|Number} [defaultCardinality]\n         * @returns {*}\n         */\n        getValid: function getValid(cardinality, defaultCardinality) {\n            if (_.isFinite(cardinality)) {\n                if (!cardinalityHelper.getNameByConstant(cardinality)) {\n                    cardinality = false;\n                }\n            } else {\n                cardinality = cardinalityHelper.getConstantByName(cardinality);\n            }\n\n            if (false === cardinality) {\n                if (!_.isUndefined(defaultCardinality) && defaultCardinality !== cardinalityEnum.SINGLE) {\n                    cardinality = cardinalityHelper.getValid(defaultCardinality, cardinalityEnum.SINGLE);\n                } else {\n                    cardinality = cardinalityEnum.SINGLE;\n                }\n            }\n\n            return cardinality;\n        },\n\n        /**\n         * Get a constant value from its name.\n         *\n         * @param {String} name The name of the constant, as per QTI spec.\n         * @return {Number|Boolean} The constant value or `false` if not found.\n         */\n        getConstantByName: function getConstantByName(name) {\n            switch (String(name).trim().toLowerCase()) {\n                case 'single':\n                    return cardinalityEnum.SINGLE;\n\n                case 'multiple':\n                    return cardinalityEnum.MULTIPLE;\n\n                case 'ordered':\n                    return cardinalityEnum.ORDERED;\n\n                case 'record':\n                    return cardinalityEnum.RECORD;\n\n                case 'same':\n                    return cardinalityEnum.SAME;\n\n                case 'any':\n                    return cardinalityEnum.ANY;\n\n                default:\n                    return false;\n            }\n        },\n\n        /**\n         * Get the name of a constant from its value.\n         *\n         * @param {Number} constant The constant value to search the name for.\n         * @return {String|Boolean} The name of the constant or false if not found.\n         */\n        getNameByConstant: function getNameByConstant(constant) {\n            switch (constant) {\n                case cardinalityEnum.SINGLE:\n                    return 'single';\n\n                case cardinalityEnum.MULTIPLE:\n                    return 'multiple';\n\n                case cardinalityEnum.ORDERED:\n                    return 'ordered';\n\n                case cardinalityEnum.RECORD:\n                    return 'record';\n\n                case cardinalityEnum.SAME:\n                    return 'same';\n\n                case cardinalityEnum.ANY:\n                    return 'any';\n\n                default:\n                    return false;\n            }\n        }\n    }).assign(cardinalityEnum).value();\n\n    return cardinalityHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/outcomeValidator',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * The RegEx that validates outcome identifiers\n     * @type {RegExp}\n     */\n    var identifierValidator = /^[a-zA-Z_][a-zA-Z0-9_\\.-]*$/;\n\n    /**\n     * Checks the validity of an identifier\n     * @param {String} identifier\n     * @returns {Boolean}\n     */\n    function validateIdentifier(identifier) {\n        return !!(identifier && _.isString(identifier) && identifierValidator.test(identifier));\n    }\n\n    /**\n     * Checks if an object is a valid outcome\n     * @param {Object} outcome\n     * @param {Boolean} [checkIdentifier]\n     * @param {String||String[]} [allowedTypes]\n     * @returns {Boolean}\n     */\n    function validateOutcome(outcome, checkIdentifier, allowedTypes) {\n        var validOutcome = _.isPlainObject(outcome) && validateIdentifier(outcome['qti-type']);\n        var validIdentifier = !checkIdentifier || (outcome && validateIdentifier(outcome.identifier));\n\n        if (allowedTypes) {\n            allowedTypes = !_.isArray(allowedTypes) ? [allowedTypes] : allowedTypes;\n            validOutcome =  validOutcome && _.indexOf(allowedTypes, outcome['qti-type']) >= 0;\n        }\n\n        return !!(validOutcome && validIdentifier);\n    }\n\n    /**\n     * Checks if an array contains valid outcomes\n     * @param {Array} outcomes\n     * @param {Boolean} [checkIdentifier]\n     * @param {String||String[]} [allowedTypes]\n     * @returns {Boolean}\n     */\n    function validateOutcomes(outcomes, checkIdentifier, allowedTypes) {\n        var valid = _.isArray(outcomes);\n        _.forEach(outcomes, function(outcome) {\n            if (!validateOutcome(outcome, checkIdentifier, allowedTypes)) {\n                valid = false;\n                return false;\n            }\n        });\n        return valid;\n    }\n\n    return {\n        validateIdentifier: validateIdentifier,\n        validateOutcomes: validateOutcomes,\n        validateOutcome: validateOutcome\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiElement',[\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/outcomeValidator'\n], function (_, outcomeValidator) {\n    'use strict';\n\n    var qtiElementHelper = {\n        /**\n         * Creates a QTI element\n         * @param {String} type - The QTI type of the element to create\n         * @param {String|Object} [identifier] - An optional identifier, or a list of properties\n         * @param {Object} [properties] - A list of additional properties\n         * @returns {Object}\n         * @throws {TypeError} if the type or the identifier is not valid\n         */\n        create: function create(type, identifier, properties) {\n            var element = {\n                'qti-type': type\n            };\n\n            if (!outcomeValidator.validateIdentifier(type)) {\n                throw new TypeError('You must provide a valid QTI type!');\n            }\n\n            if (_.isPlainObject(identifier)) {\n                properties = identifier;\n                identifier = null;\n            }\n\n            if (identifier) {\n                if (!outcomeValidator.validateIdentifier(identifier)) {\n                    throw new TypeError('You must provide a valid identifier!');\n                }\n                element.identifier = identifier;\n            }\n\n            return _.assign(element, properties || {});\n        },\n\n        /**\n         * Finds a QTI element in a collection, by its type.\n         * The collection may also be a single object.\n         * @param {Array|Object} collection\n         * @param {Array|String} type\n         * @returns {Object}\n         */\n        find: function find(collection, type) {\n            var found = null;\n            var types = forceArray(type);\n\n            function checkType(qtiElement) {\n                if (types.indexOf(qtiElement['qti-type']) >= 0) {\n                    found = qtiElement;\n                    return false;\n                }\n            }\n\n            if (_.isArray(collection)) {\n                _.forEach(collection, checkType);\n            } else if (collection) {\n                checkType(collection);\n            }\n\n            return found;\n        },\n\n        /**\n         * Finds an element from a tree.\n         * The path to the element is based on QTI types.\n         * @param {Object} tree - The root of the tree from which get the property\n         * @param {String|String[]} path - The path to the element, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue\"\n         * @param {String|String[]} nodeName - The name of the nodes that may contain subtrees\n         * @returns {*}\n         */\n        lookupElement: function lookupElement(tree, path, nodeName) {\n            var steps = _.isArray(path) ? path : path.split('.');\n            var nodeNames = forceArray(nodeName);\n            var len = steps.length;\n            var i = 0;\n            var key;\n\n            while (tree && i < len) {\n                tree = qtiElementHelper.find(tree, steps[i++]);\n                if (tree && i < len) {\n                    key = _.find(nodeNames, _.partial(_.has, tree));\n                    tree = key && tree[key];\n                }\n            }\n\n            return tree || null;\n        },\n\n        /**\n         * Finds a property from a tree.\n         * The path to the property is based on QTI types.\n         * @param {Object} tree - The root of the tree from which get the property\n         * @param {String|String[]} path - The path to the property, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue.value\"\n         * @param {String|String[]} nodeName - The name of the nodes that may contain subtrees\n         * @returns {*}\n         */\n        lookupProperty: function lookupProperty(tree, path, nodeName) {\n            var result = null;\n            var steps = _.isArray(path) ? path : path.split('.');\n            var propertyName = steps.pop();\n            var element = qtiElementHelper.lookupElement(tree, steps, nodeName);\n\n            if (element && element[propertyName]) {\n                result = element[propertyName];\n            }\n\n            return result;\n        }\n    };\n\n    /**\n     * Ensures a value is an array\n     * @param {*} value\n     * @returns {Array}\n     */\n    function forceArray(value) {\n        if (!value) {\n            value = [];\n        }\n        if (!_.isArray(value)) {\n            value = [value];\n        }\n        return value;\n    }\n\n    return qtiElementHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Basic helper that is intended to manage outcomes inside a test model.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/outcome',[\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/outcomeValidator',\n    'taoQtiTest/controller/creator/helpers/qtiElement',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/cardinality'\n], function (_, outcomeValidator, qtiElementHelper, baseTypeHelper, cardinalityHelper) {\n    'use strict';\n\n    var outcomeHelper = {\n        /**\n         * Gets a property from an outcome rule expression.\n         * The path to the property is based on QTI types.\n         * @param {Object} outcomeRule - The outcome rule from which get the property\n         * @param {String|String[]} path - The path to the property, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue\"\n         * @returns {*}\n         */\n        getProcessingRuleExpression: function getProcessingRuleExpression(outcomeRule, path) {\n            return qtiElementHelper.lookupElement(outcomeRule, path, ['expression', 'expressions']);\n        },\n\n        /**\n         * Gets a property from an outcome rule expression.\n         * The path to the property is based on QTI types.\n         * @param {Object} outcomeRule - The outcome rule from which get the property\n         * @param {String|String[]} path - The path to the property, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue.value\"\n         * @returns {*}\n         */\n        getProcessingRuleProperty: function getProcessingRuleProperty(outcomeRule, path) {\n            return qtiElementHelper.lookupProperty(outcomeRule, path, ['expression', 'expressions']);\n        },\n\n        /**\n         * Gets the identifier of an outcome\n         * @param {Object|String} outcome\n         * @returns {String}\n         */\n        getOutcomeIdentifier: function getOutcomeIdentifier(outcome) {\n            return String(_.isObject(outcome) ? outcome.identifier : outcome);\n        },\n\n        /**\n         * Gets the list of outcome declarations\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        getOutcomeDeclarations: function getOutcomeDeclarations(testModel) {\n            var outcomes = testModel && testModel.outcomeDeclarations;\n            return outcomes || [];\n        },\n\n        /**\n         * Gets the list of outcome processing rules\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        getOutcomeProcessingRules: function getOutcomeProcessingRules(testModel) {\n            var rules = testModel && testModel.outcomeProcessing && testModel.outcomeProcessing.outcomeRules;\n            return rules || [];\n        },\n\n        /**\n         * Applies a function on each outcome declarations\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachOutcomeDeclarations: function eachOutcomeDeclarations(testModel, cb) {\n            _.forEach(outcomeHelper.getOutcomeDeclarations(testModel), cb);\n        },\n\n        /**\n         * Applies a function on each outcome processing rules. Does not take care of sub-expressions.\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachOutcomeProcessingRules: function eachOutcomeProcessingRules(testModel, cb) {\n            _.forEach(outcomeHelper.getOutcomeProcessingRules(testModel), cb);\n        },\n\n        /**\n         * Applies a function on each outcome processing rules, take care of each sub expression.\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachOutcomeProcessingRuleExpressions: function eachOutcomeProcessingRuleExpressions(testModel, cb) {\n            function browseExpressions(processingRule) {\n                if (_.isArray(processingRule)) {\n                    _.forEach(processingRule, browseExpressions);\n                } else if (processingRule) {\n                    cb(processingRule);\n\n                    if (processingRule.expression) {\n                        browseExpressions(processingRule.expression);\n                    } else if (processingRule.expressions) {\n                        browseExpressions(processingRule.expressions);\n                    }\n                }\n            }\n\n            browseExpressions(outcomeHelper.getOutcomeProcessingRules(testModel));\n        },\n\n        /**\n         * Lists all outcomes identifiers. An optional callback allows to filter the list\n         * @param {Object} testModel\n         * @param {Function} [cb]\n         * @returns {Array}\n         */\n        listOutcomes: function listOutcomes(testModel, cb) {\n            var outcomes = [];\n            if (!_.isFunction(cb)) {\n                cb = null;\n            }\n            outcomeHelper.eachOutcomeDeclarations(testModel, function (outcome) {\n                if (!cb || cb(outcome)) {\n                    outcomes.push(outcomeHelper.getOutcomeIdentifier(outcome));\n                }\n            });\n            return outcomes;\n        },\n\n        /**\n         * Removes the specified outcomes from the provided test model\n         * @param {Object} testModel - The test model to clean up\n         * @param {Function|String[]} outcomes - The list of outcomes identifiers to remove,\n         *                                       or a callback that will match each outcome to remove\n         */\n        removeOutcomes: function removeOutcomes(testModel, outcomes) {\n            var declarations = outcomeHelper.getOutcomeDeclarations(testModel);\n            var rules = outcomeHelper.getOutcomeProcessingRules(testModel);\n            var check;\n\n            if (_.isFunction(outcomes)) {\n                check = outcomes;\n            } else {\n                outcomes = _.indexBy(_.isArray(outcomes) ? outcomes : [outcomes], function (outcome) {\n                    return outcome;\n                });\n\n                check = function checkIdentifier(outcome) {\n                    return !!outcomes[outcomeHelper.getOutcomeIdentifier(outcome)];\n                };\n            }\n\n            if (declarations) {\n                _.remove(declarations, check);\n            }\n\n            if (rules) {\n                _.remove(rules, check);\n            }\n        },\n\n        /**\n         * Creates an outcome declaration\n         * @param {String} identifier\n         * @param {String|Number|Boolean} [type] - The data type of the outcome, FLOAT by default\n         * @param {Number} [cardinality] - The variable cardinality, default 0\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         */\n        createOutcome: function createOutcome(identifier, type, cardinality) {\n\n            if (!outcomeValidator.validateIdentifier(identifier)) {\n                throw new TypeError('You must provide a valid identifier!');\n            }\n\n            return qtiElementHelper.create('outcomeDeclaration', identifier, {\n                views: [],\n                interpretation: '',\n                longInterpretation: '',\n                normalMaximum: false,\n                normalMinimum: false,\n                masteryValue: false,\n                cardinality: cardinalityHelper.getValid(cardinality, cardinalityHelper.SINGLE),\n                baseType: baseTypeHelper.getValid(type, baseTypeHelper.FLOAT)\n            });\n        },\n\n        /**\n         * Adds a processing rule into the test model\n         *\n         * @param {Object} testModel\n         * @param {Object} processingRule\n         * @returns {Object}\n         * @throws {TypeError} if the processing rule is not valid\n         */\n        addOutcomeProcessing: function createOutcomeProcessing(testModel, processingRule) {\n            var outcomeProcessing = testModel.outcomeProcessing;\n\n            if (!outcomeValidator.validateOutcome(processingRule)) {\n                throw new TypeError('You must provide a valid outcome processing rule!');\n            }\n\n            if (!outcomeProcessing) {\n                outcomeProcessing = qtiElementHelper.create('outcomeProcessing', {\n                    outcomeRules: []\n                });\n                testModel.outcomeProcessing = outcomeProcessing;\n            } else if (!outcomeProcessing.outcomeRules) {\n                outcomeProcessing.outcomeRules = [];\n            }\n\n            outcomeProcessing.outcomeRules.push(processingRule);\n            return processingRule;\n        },\n\n        /**\n         * Creates an outcome and adds it to the declarations\n         * @param {Object} testModel\n         * @param {Object} outcome - The outcome to add\n         * @param {Object} [processingRule] - The processing rule attached to the outcome\n         * @returns {Object}\n         * @throws {TypeError} if one of the outcome or the processing rule is not valid\n         */\n        addOutcome: function addOutcome(testModel, outcome, processingRule) {\n            var declarations = testModel.outcomeDeclarations;\n\n            if (!outcomeValidator.validateOutcome(outcome, true, 'outcomeDeclaration')) {\n                throw new TypeError('You must provide a valid outcome!');\n            }\n\n            if (processingRule) {\n                if (!outcomeValidator.validateOutcome(processingRule) || processingRule.identifier !== outcome.identifier) {\n                    throw new TypeError('You must provide a valid outcome processing rule!');\n                }\n\n                outcomeHelper.addOutcomeProcessing(testModel, processingRule);\n            }\n\n            if (!declarations) {\n                declarations = [];\n                testModel.outcomeDeclarations = declarations;\n            }\n\n            declarations.push(outcome);\n            return outcome;\n        },\n\n        /**\n         * Replaces the outcomes in a test model\n         * @param {Object} testModel\n         * @param {Object} outcomes\n         * @throws {TypeError} if one of the outcomes or the processing rules are not valid\n         */\n        replaceOutcomes: function replaceOutcomes(testModel, outcomes) {\n            if (_.isPlainObject(outcomes)) {\n                if (_.isArray(outcomes.outcomeDeclarations)) {\n                    if (!outcomeValidator.validateOutcomes(outcomes.outcomeDeclarations, true, 'outcomeDeclaration')) {\n                        throw new TypeError('You must provide valid outcomes!');\n                    }\n\n                    testModel.outcomeDeclarations = [].concat(outcomes.outcomeDeclarations);\n                }\n                if (outcomes.outcomeProcessing && _.isArray(outcomes.outcomeProcessing.outcomeRules)) {\n                    if (!outcomeValidator.validateOutcomes(outcomes.outcomeProcessing.outcomeRules)) {\n                        throw new TypeError('You must provide valid processing rules!');\n                    }\n\n                    if (!testModel.outcomeProcessing) {\n                        testModel.outcomeProcessing = qtiElementHelper.create('outcomeProcessing');\n                    }\n                    testModel.outcomeProcessing.outcomeRules = [].concat(outcomes.outcomeProcessing.outcomeRules);\n                }\n            }\n        }\n    };\n\n    return outcomeHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Helper that provides a way to browse all categories attached to a test model at the item level.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/category',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * Checks if a category is an option\n     *\n     * @param {String} category\n     * @returns {Boolean}\n     */\n    function isCategoryOption(category) {\n        return category && category.indexOf('x-tao-') === 0;\n    }\n\n    /**\n     * Calls a function for each category in the test model\n     * @param {Object} testModel\n     * @param {Function} cb\n     */\n    function eachCategories(testModel, cb) {\n        _.forEach(testModel.testParts, function (testPart) {\n            _.forEach(testPart.assessmentSections, function (assessmentSection) {\n                _.forEach(assessmentSection.sectionParts, function (itemRef) {\n                    _.forEach(itemRef.categories, function(category) {\n                        cb(category, itemRef);\n                    });\n                });\n            });\n        });\n    }\n\n    return {\n        /**\n         * Calls a function for each category in the test model\n         * @function eachCategories\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachCategories: eachCategories,\n\n        /**\n         * Gets the list of categories assigned to the items.\n         * Discards special purpose categories like 'x-tao-...'\n         *\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        listCategories: function listCategories(testModel) {\n            var categories = {};\n            eachCategories(testModel, function(category) {\n                if (!isCategoryOption(category)) {\n                    categories[category] = true;\n                }\n            });\n            return _.keys(categories);\n        },\n\n        /**\n         * Gets the list of options assigned to the items (special purpose categories like 'x-tao-...').\n         *\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        listOptions: function listOptions(testModel) {\n            var options = {};\n            eachCategories(testModel, function(category) {\n                if (isCategoryOption(category)) {\n                    options[category] = true;\n                }\n            });\n            return _.keys(options);\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/modelOverseer',[\n    'lodash',\n    'core/eventifier',\n    'core/statifier',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/cardinality',\n    'taoQtiTest/controller/creator/helpers/outcome',\n    'taoQtiTest/controller/creator/helpers/category'\n], function (_, eventifier, statifier, baseTypeHelper, cardinalityHelper, outcomeHelper, categoryHelper) {\n    'use strict';\n\n    /**\n     * Wraps the test model in a manager, provides API to handle events and states\n     * @param {Object} model\n     * @param {Object} [config]\n     * @returns {Object}\n     */\n    function modelOverseerFactory(model, config) {\n        var modelOverseer = {\n            /**\n             * Gets the nested model\n             * @returns {Object}\n             */\n            getModel: function getModel() {\n                return model;\n            },\n\n            /**\n             * Sets the nested model\n             *\n             * @param {Object} newModel\n             * @returns {modelOverseer}\n             * @fires setmodel\n             */\n            setModel: function setModel(newModel) {\n                model = newModel;\n\n                /**\n                 * @event modelOverseer#setmodel\n                 * @param {String} model\n                 */\n                modelOverseer.trigger('setmodel', model);\n                return this;\n            },\n\n            /**\n             * Gets the config set\n             * @returns {Object}\n             */\n            getConfig: function getConfig() {\n                return config;\n            },\n\n            /**\n             * Gets the list of defined outcomes for the nested model. A descriptor is built for each outcomes:\n             * {\n             *      name: {String},\n             *      type: {String},\n             *      cardinality: {String}\n             * }\n             * @returns {Object[]}\n             */\n            getOutcomesList: function getOutcomesList() {\n                return _.map(outcomeHelper.getOutcomeDeclarations(model), function(declaration) {\n                    return {\n                        name: declaration.identifier,\n                        type: baseTypeHelper.getNameByConstant(declaration.baseType),\n                        cardinality: cardinalityHelper.getNameByConstant(declaration.cardinality)\n                    };\n                });\n            },\n\n            /**\n             * Gets the names of the defined outcomes for the nested model\n             * @returns {Array}\n             */\n            getOutcomesNames: function getOutcomesNames() {\n                return _.map(outcomeHelper.getOutcomeDeclarations(model), function(declaration) {\n                    return declaration.identifier;\n                });\n            },\n\n            /**\n             * Gets the list of defined categories for the nested model\n             * @returns {Array}\n             */\n            getCategories: function getCategories() {\n                return categoryHelper.listCategories(model);\n            },\n\n            /**\n             * Gets the list of defined options for the nested model\n             * @returns {Array}\n             */\n            getOptions: function getOptions() {\n                return categoryHelper.listOptions(model);\n            }\n        };\n\n        config = _.isPlainObject(config) ? config : _.assign({}, config);\n\n        return statifier(eventifier(modelOverseer));\n    }\n\n    return modelOverseerFactory;\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart clearfix\\\">\\n\\n   <h1><span data-bind=\\\"identifier\\\">\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\"> \\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"Test Part Properties\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"Move Up\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"Move Down\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span> \\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"Remove Test Part\\\" data-delete=\\\"#\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>  \\n                        <!--<span class=\\\"tlb-bar\\\">-->\\n                            <!--<span class=\\\"tlb-start\\\"></span>-->\\n                            <!--<span class=\\\"tlb-text-button-box\\\">-->\\n                                <!--<a class=\\\"tlb-text-button-off section-adder\\\">-->\\n                                    <!--<span class=\\\"icon-add\\\"></span>-->\\n                                    <!--<span class=\\\"tlb-text\\\">New Section</span>-->\\n                                <!--</a>-->\\n                            <!--</span>-->\\n                            <!--<span class=\\\"tlb-end\\\"></span>-->\\n                        <!--</span>-->\\n                    </span>   \\n                </div>\\n            </div>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"toggler opened\\\" data-toggle=\\\"#testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\n    </h1>\\n    <div id=\\\"testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-content\\\">\\n        \\n       <!-- assessmentTest/testPart/assessmentSections -->\\n       <div class=\\\"sections\\\" data-bind-each=\\\"assessmentSections\\\" data-bind-tmpl=\\\"section\\\" data-bind-filter=\\\"isSection\\\"></div>\\n\\n        <button class=\\\"btn-info small section-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>New section\\n        </button>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section\\\">\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <h2><span data-bind=\\\"title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\">\\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off rub-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Manage Rubric Blocks\", options)))\n    + \"\\\" data-toggle=\\\"#rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" ><span class=\\\"icon-rubric\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section Properties\", options) : helperMissing.call(depth0, \"__\", \"Section Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Section\", options) : helperMissing.call(depth0, \"__\", \"Remove Section\", options)))\n    + \"\\\" data-delete=\\\":parent .section\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </h2>\\n\\n    <div id=\\\"rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"rublocks clearfix toggled\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Rubric Blocks\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"rubricblocks decimal\\\" data-bind-each=\\\"rubricBlocks\\\" data-bind-tmpl=\\\"rubricblock\\\"></ol>\\n        <button class=\\\"btn-info small rublock-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"New Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"New Rubric Block\", options)))\n    + \"\\n        </button>\\n    </div>\\n    <div class=\\\"itemrefs-wrapper\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items\", options) : helperMissing.call(depth0, \"__\", \"Items\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"itemrefs decimal clearfix\\\" data-bind-each=\\\"sectionParts\\\" data-bind-tmpl=\\\"itemref\\\" data-bind-filter=\\\"isItemRef\\\" data-msg=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\\"></ol>\\n        <div class=\\\"itemref-placeholder\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"rubricblock\\\">\\n    <div class=\\\"actions\\\">\\n       <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block Properties\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Remove Rubric Block\", options)))\n    + \"\\\" data-delete=\\\":parent .rubricblock\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"rubricblock-content\\\" contenteditable></div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<li id='\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-uri='\";\n  if (helper = helpers.href) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.href); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='itemref'>\\n    <span class='title truncate'>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <div class=\\\"actions\\\"> \\n        <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Reference Properties\", options) : helperMissing.call(depth0, \"__\", \"Item Reference Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span> \\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Item Reference\", options) : helperMissing.call(depth0, \"__\", \"Remove Item Reference\", options)))\n    + \"\\\" data-delete=\\\":parent .itemref\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>  \\n                </span>   \\n            </div>\\n        </div>\\n    </div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n     <li data-uri='\";\n  if (helper = helpers.uri) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.uri); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-categories='\";\n  if (helper = helpers.categories) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.categories); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='truncate'>\\n        \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parent), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n     </li>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class='flag truncate' title=\\\"\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/outcomes', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-6 line\\\">\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"col-3 line\\\">\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"col-3 line\\\">\";\n  if (helper = helpers.cardinality) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cardinality); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-12 line\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"There is not outcomes!\", options) : helperMissing.call(depth0, \"__\", \"There is not outcomes!\", options)))\n    + \"</div>\\n    </div>\\n\";\n  return buffer;\n  }\n\n  buffer += \"    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-6 header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</div>\\n        <div class=\\\"col-3 header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Type\", options) : helperMissing.call(depth0, \"__\", \"Type\", options)))\n    + \"</div>\\n        <div class=\\\"col-3 header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cardinality\", options) : helperMissing.call(depth0, \"__\", \"Cardinality\", options)))\n    + \"</div>\\n    </div>\\n\";\n  stack1 = helpers['if'].call(depth0, depth0, {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/test-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n    <div class=\\\"test-scoring toggled\\\">\\n\\n<!-- assessmentTest/scoring/outcomeProcessing -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-outcome-processing\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Outcome processing\", options) : helperMissing.call(depth0, \"__\", \"Outcome processing\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <select name=\\\"test-outcome-processing\\\" class=\\\"select2\\\" data-bind=\\\"scoring.outcomeProcessing\\\" data-bind-encoder=\\\"string\\\" data-has-search=\\\"false\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.modes), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </select>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select the way the responses of your test should be processed\", options) : helperMissing.call(depth0, \"__\", \"Select the way the responses of your test should be processed\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/categoryScore -->\\n        <div class=\\\"grid-row test-category-score\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-category-score\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Category score\", options) : helperMissing.call(depth0, \"__\", \"Category score\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-category-score\\\" value=\\\"true\\\" data-bind=\\\"scoring.categoryScore\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Also compute the score per categories\", options) : helperMissing.call(depth0, \"__\", \"Also compute the score per categories\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/cutScore -->\\n        <div class=\\\"grid-row test-cut-score\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-cut-score\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cut score\", options) : helperMissing.call(depth0, \"__\", \"Cut score\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"test-cut-score\\\" value=\\\"0\\\" data-bind=\\\"scoring.cutScore\\\" data-bind-encoder=\\\"float\\\" data-validate=\\\"$numeric;\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the cut score associated to the test\", options) : helperMissing.call(depth0, \"__\", \"Set the cut score associated to the test\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/weightIdentifier -->\\n        <div class=\\\"grid-row test-weight-identifier\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-weight-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Weight\", options) : helperMissing.call(depth0, \"__\", \"Weight\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"test-weight-identifier\\\" data-bind=\\\"scoring.weightIdentifier\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_][a-zA-Z0-9_\\\\.-]*)?$);\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the weight identifier used to process the score\", options) : helperMissing.call(depth0, \"__\", \"Set the weight identifier used to process the score\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/description -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-12\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.modes), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </div>\\n        </div>\\n    </div>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <option value=\\\"\";\n  if (helper = helpers.key) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.key); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n                \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                <div class=\\\"feedback-info test-outcome-processing-description\\\" data-key=\\\"\";\n  if (helper = helpers.key) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.key); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                    <span class=\\\"icon-info\\\"></span>\\n                    \";\n  if (helper = helpers.description) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.description); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                </div>\\n                \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"test-props props clearfix\\\">\\n\\n    <!-- test properties -->\\n    <h3 data-bind=\\\"title\\\"></h3>\\n\\n<!-- assessmentTest/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The principle identifier of the test.\", options) : helperMissing.call(depth0, \"__\", \"The principle identifier of the test.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test title.\", options) : helperMissing.call(depth0, \"__\", \"The test title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"test-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for the all test.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for the all test.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-scoring\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scoring\", options) : helperMissing.call(depth0, \"__\", \"Scoring\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/scoring -->\\n\";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.scoring), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-outcome-declarations\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Outcome declarations\", options) : helperMissing.call(depth0, \"__\", \"Outcome declarations\", options)))\n    + \"</h4>\\n\\n    <!-- assessmentTest/outcomeDeclarations -->\\n    <div class=\\\"test-outcome-declarations panel toggled\\\">\\n        <div class=\\\"grid-row test-outcomes-generate\\\">\\n            <div class=\\\"col-12 align-right\\\">\\n                <button class=\\\"btn-info small\\\" data-action=\\\"generate-outcomes\\\"><span class=\\\"icon icon-reset\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Regenerate\", options) : helperMissing.call(depth0, \"__\", \"Regenerate\", options)))\n    + \"</button>\\n            </div>\\n        </div>\\n        <div class=\\\"outcome-declarations\\\"></div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"testpart-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n    <form autocomplete=\\\"off\\\">\\n\\n<!-- assessmentTest/testPart/identifier -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"testpart-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"testpart-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test part identifier.\", options) : helperMissing.call(depth0, \"__\", \"The test part identifier.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/navigationMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n               \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"navigationMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Linear\", options) : helperMissing.call(depth0, \"__\", \"Linear\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Non Linear\", options) : helperMissing.call(depth0, \"__\", \"Non Linear\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options) : helperMissing.call(depth0, \"__\", \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/submissionMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Submission\", options) : helperMissing.call(depth0, \"__\", \"Submission\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"submissionMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Individual\", options) : helperMissing.call(depth0, \"__\", \"Individual\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Simultaneous\", options) : helperMissing.call(depth0, \"__\", \"Simultaneous\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options) : helperMissing.call(depth0, \"__\", \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl -->\\n        <div class=\\\"testpart-item-session-control toggled\\\">\\n\\n<!-- assessmentTest/testPart/itemSessionControl/maxAttempts -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input name=\\\"testpart-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/showFeedback -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowComment -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-comment\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowSkipping -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\"   />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/timeLimits/minTime -->\\n        <div class=\\\"testpart-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/testPart/timeLimits/maxTime -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this test part.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this test part.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/timeLimits/allowLateSubmission -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-blueprint\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Associate Blueprint\", options) : helperMissing.call(depth0, \"__\", \"Associate Blueprint\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-blueprint\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Associate a blueprint to a section allow you to validate this section against the specified blueprint.\", options) : helperMissing.call(depth0, \"__\", \"Associate a blueprint to a section allow you to validate this section against the specified blueprint.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div id=\\\"section-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the section.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The section title.\", options) : helperMissing.call(depth0, \"__\", \"The section title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/visible -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-visible\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Visible\", options) : helperMissing.call(depth0, \"__\", \"Visible\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-visible\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"visible\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"A visible section is one that is identifiable by the candidate.\", options) : helperMissing.call(depth0, \"__\", \"A visible section is one that is identifiable by the candidate.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/keepTogether -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-keep-together\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keep Together\", options) : helperMissing.call(depth0, \"__\", \"Keep Together\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-keep-together\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"keepTogether\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options) : helperMissing.call(depth0, \"__\", \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasBlueprint), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    <!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-category\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options) : helperMissing.call(depth0, \"__\", \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Selection\", options) : helperMissing.call(depth0, \"__\", \"Selection\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection -->\\n    <div class=\\\"section-selection toggled\\\">\\n\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-enable-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enable selection\", options) : helperMissing.call(depth0, \"__\", \"Enable selection\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-enable-selection\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/select -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-select\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select\", options) : helperMissing.call(depth0, \"__\", \"Select\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-select\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"0\\\" data-bind=\\\"selection.select\\\"  data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The number of child elements to be selected.\", options) : helperMissing.call(depth0, \"__\", \"The number of child elements to be selected.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/withReplacement -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-with-replacement\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With Replacement\", options) : helperMissing.call(depth0, \"__\", \"With Replacement\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-with-replacement\\\" value=\\\"true\\\" data-bind=\\\"selection.withReplacement\\\"  data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"When selecting child elements each element is normally eligible for selection once only.\", options) : helperMissing.call(depth0, \"__\", \"When selecting child elements each element is normally eligible for selection once only.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-ordering\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Ordering\", options) : helperMissing.call(depth0, \"__\", \"Ordering\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/ordering -->\\n    <div class=\\\"section-ordering toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/ordering/shuffle -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-shuffle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Shuffle\", options) : helperMissing.call(depth0, \"__\", \"Shuffle\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-shuffle\\\" value=\\\"true\\\" data-bind=\\\"ordering.shuffle\\\"  data-bind-encoder=\\\"boolean\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options) : helperMissing.call(depth0, \"__\", \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl -->\\n    <div class=\\\"section-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"section-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this section.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this section.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"itemref-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"itemref-props props clearfix\\\">\\n\\n    <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the item reference.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the item reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/href -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-href\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reference\", options) : helperMissing.call(depth0, \"__\", \"Reference\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-href\\\" data-bind=\\\"href\\\" readonly=\\\"readonly\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The reference.\", options) : helperMissing.call(depth0, \"__\", \"The reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-category\\\" data-bind=\\\"categories\\\" data-bind-encoder=\\\"str2array\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items can optionally be assigned to one or more categories.\", options) : helperMissing.call(depth0, \"__\", \"Items can optionally be assigned to one or more categories.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/required -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-required\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required\", options) : helperMissing.call(depth0, \"__\", \"Required\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-required\\\" value=\\\"true\\\" data-bind=\\\"required\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If required it must appear (at least once) in the selection.\", options) : helperMissing.call(depth0, \"__\", \"If required it must appear (at least once) in the selection.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/fixed -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-fixed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Fixed\", options) : helperMissing.call(depth0, \"__\", \"Fixed\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-fixed\\\" value=\\\"true\\\" data-bind=\\\"fixed\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Not shuffled, the position remains fixed.\", options) : helperMissing.call(depth0, \"__\", \"Not shuffled, the position remains fixed.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-weights\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Weights\", options) : helperMissing.call(depth0, \"__\", \"Weights\", options)))\n    + \"</h4>\\n\\n    <div class=\\\"itemref-weights toggled\\\">\\n        <div class=\\\"grid-row \\\">\\n            <div class=\\\"col-9\\\">\\n                <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</strong>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n                <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Value\", options) : helperMissing.call(depth0, \"__\", \"Value\", options)))\n    + \"</strong>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the contribution of an individual item score to the overall test score.\", options) : helperMissing.call(depth0, \"__\", \"Controls the contribution of an individual item score to the overall test score.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/weights -->\\n        <div data-bind-each=\\\"weights\\\" data-bind-tmpl=\\\"itemrefweight\\\"></div>\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-12\\\">\\n                <a class=\\\"itemref-weight-add\\\"><span class=\\\"icon-add\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"add a new weight\", options) : helperMissing.call(depth0, \"__\", \"add a new weight\", options)))\n    + \"</a>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl -->\\n    <div class=\\\"itemref-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"itemref-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"itemref-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this item.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this item.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props-weight', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"grid-row itemref-weight\\\">\\n    <div class=\\\"col-9\\\">\\n        <input data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" type=\\\"text\\\" value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n        <input data-bind=\\\"value\\\" data-validate=\\\"$notEmpty; $numeric;\\\" type=\\\"text\\\" value=\\\"\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-bind-encoder=\\\"float\\\" />\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <a class=\\\"itemref-weight-remove\\\" data-delete=\\\":parent .itemref-weight\\\">\\n            <span class=\\\"icon-bin\\\"></span>\\n        </a>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"rubric-feedback toggled\\\">\\n\\n        <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback/activated -->\\n        <div class=\\\"grid-row rubric-feedback-activated\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"activated\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Activated\", options) : helperMissing.call(depth0, \"__\", \"Activated\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"activated\\\" value=\\\"true\\\" data-bind=\\\"feedback.activated\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the rubric block as a feedback block\", options) : helperMissing.call(depth0, \"__\", \"Set the rubric block as a feedback block\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback/outcome -->\\n        <div class=\\\"grid-row rubric-feedback-outcome\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"feedback-outcome\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Outcome\", options) : helperMissing.call(depth0, \"__\", \"Outcome\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"feedback-outcome\\\" data-bind=\\\"feedback.outcome\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_][a-zA-Z0-9_\\\\.-]*)?$);\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set outcome identifier the feedback block is related to\", options) : helperMissing.call(depth0, \"__\", \"Set outcome identifier the feedback block is related to\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback/matchValue -->\\n        <div class=\\\"grid-row rubric-feedback-match-value\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"feedback-match-value\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Match value\", options) : helperMissing.call(depth0, \"__\", \"Match value\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"feedback-match-value\\\" data-bind=\\\"feedback.matchValue\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_][a-zA-Z0-9_\\\\.-]*)?$);\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the value of the outcome that will activate the feedback block\", options) : helperMissing.call(depth0, \"__\", \"Set the value of the outcome that will activate the feedback block\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"rubricblock-props props clearfix\\\">\\n\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block\", options)))\n    + \": \";\n  if (helper = helpers.orderIndex) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.orderIndex); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/views -->\\n    <!--\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Views\", options) : helperMissing.call(depth0, \"__\", \"Views\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <select name=\\\"view\\\" multiple=\\\"multiple\\\" data-bind=\\\"views\\\">\\n                <option value=\\\"author\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Author\", options) : helperMissing.call(depth0, \"__\", \"Author\", options)))\n    + \"</option>\\n                <option value=\\\"candidate\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Candidate\", options) : helperMissing.call(depth0, \"__\", \"Candidate\", options)))\n    + \"</option>\\n                <option value=\\\"proctor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proctor\", options) : helperMissing.call(depth0, \"__\", \"Proctor\", options)))\n    + \"</option>\\n                <option value=\\\"scorer\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scorer\", options) : helperMissing.call(depth0, \"__\", \"Scorer\", options)))\n    + \"</option>\\n                <option value=\\\"testConstructor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test constructor\", options) : helperMissing.call(depth0, \"__\", \"Test constructor\", options)))\n    + \"</option>\\n                <option value=\\\"tutor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Tutor\", options) : helperMissing.call(depth0, \"__\", \"Tutor\", options)))\n    + \"</option>\\n            </select>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Who can view the rubric block during the delivery.\", options) : helperMissing.call(depth0, \"__\", \"Who can view the rubric block during the delivery.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    -->\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/class -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"class\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Class\", options) : helperMissing.call(depth0, \"__\", \"Class\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"class\\\" data-bind=\\\"class\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_\\\\s][a-zA-Z0-9_\\\\s-]*)?$);\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the XHTML-QTI class of the rubric block.\", options) : helperMissing.call(depth0, \"__\", \"Set the XHTML-QTI class of the rubric block.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/id -->\\n    <!--\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"id\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"id\\\" data-bind=\\\"id\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_\\\\s][a-zA-Z0-9_\\\\s-]*)?$);\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the XHTML-QTI identifier of the rubric block.\", options) : helperMissing.call(depth0, \"__\", \"Set the XHTML-QTI identifier of the rubric block.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    -->\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .rubric-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Feedback block\", options) : helperMissing.call(depth0, \"__\", \"Feedback block\", options)))\n    + \"</h4>\\n\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback -->\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.feedback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","define('taoQtiTest/controller/creator/templates/index',[\n    'tpl!taoQtiTest/controller/creator/templates/testpart',\n    'tpl!taoQtiTest/controller/creator/templates/section',\n    'tpl!taoQtiTest/controller/creator/templates/rubricblock',\n    'tpl!taoQtiTest/controller/creator/templates/itemref',\n    'tpl!taoQtiTest/controller/creator/templates/item',\n    'tpl!taoQtiTest/controller/creator/templates/outcomes',\n    'tpl!taoQtiTest/controller/creator/templates/test-props',\n    'tpl!taoQtiTest/controller/creator/templates/testpart-props',\n    'tpl!taoQtiTest/controller/creator/templates/section-props',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props-weight',\n    'tpl!taoQtiTest/controller/creator/templates/rubricblock-props'\n],\nfunction(\n    testPart,\n    section,\n    rubricBlock,\n    itemRef,\n    item,\n    outcomes,\n    testProps,\n    testPartProps,\n    sectionProps,\n    itemRefProps,\n    itemRefPropsWeight,\n    rubricBlockProps\n){\n    'use strict';\n\n    /**\n     * Expose all the templates used by the test creator\n     * @exports taoQtiTest/controller/creator/templates/index\n     */\n    return {\n        'testpart'      : testPart,\n        'section'       : section,\n        'itemref'       : itemRef,\n        'item'          : item,\n        'rubricblock'   : rubricBlock,\n        'outcomes'      : outcomes,\n        'properties'    : {\n            'test'      : testProps,\n            'testpart'  : testPartProps,\n            'section'   : sectionProps,\n            'itemref'   : itemRefProps,\n            'itemrefweight': itemRefPropsWeight,\n            'rubricblock'   : rubricBlockProps\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/item',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/templates/index'\n], function($, _, templates){\n    'use strict';\n\n    var itemTemplate = templates.item;\n\n\n\n   /**\n     * The ItemView setup items related components\n     * @exports taoQtiTest/controller/creator/views/item\n     * @param {Function} loadItems - the function used to get items from the server\n     * @param {Function} getCategories - the function used to get items' categories\n     */\n    var itemView =  function(loadItems, getCategories){\n\n        var $panel     = $('.test-creator-items .item-selection');\n        var $search    = $('#item-filter');\n        var $itemBox   = $('.item-box', $panel);\n\n        var getItems = function getItems(pattern){\n            return loadItems(pattern).then(function(items){\n                if(!items || !items.length){\n                    return update();\n                }\n                return getCategories(_.pluck(items, 'uri')).then(function(categories){\n                    update(_.map(items, function(item){\n                        item.categories = _.isArray(categories[item.uri]) ? categories[item.uri] : [];\n                        return item;\n                    }));\n                });\n            });\n        };\n\n        getItems().then(setUpLiveSearch);\n\n        /**\n         * Set up the search behavior: once 3 chars are enters into the field,\n         * we load the items that matches the given search pattern.\n         * @private\n         */\n        function setUpLiveSearch (){\n            var timeout;\n\n            var liveSearch = function(){\n                var pattern = $search.val();\n                if(pattern.length > 1 || pattern.length === 0){\n                    clearTimeout(timeout);\n                    timeout = setTimeout(function(){\n                        getItems(pattern);\n                    }, 300);\n                }\n            };\n\n            //trigger the search on keyp and on the magnifer button click\n            $search.keyup(liveSearch)\n                     .siblings('.ctrl').click(liveSearch);\n        }\n\n        /**\n         * Update the items list\n         * @private\n         * @param {Array} items - the new items\n         */\n        function update (items){\n            disableSelection();\n            $itemBox.empty().append(itemTemplate(items));\n            enableSelection();\n        }\n\n        /**\n         * Disable the selectable component\n         * @private\n         * @param {Array} items - the new items\n         */\n        function disableSelection (){\n            if($panel.data('selectable')){\n                $panel.selectable('disable');\n            }\n        }\n\n        /**\n         * Enable to select items to be added to sections\n         * using the jquery-ui selectable.\n         * @private\n         */\n        function enableSelection (){\n\n            if($panel.data('selectable')){\n                $panel.selectable('enable');\n            } else {\n                $panel.selectable({\n                    filter: 'li',\n                    selected: function( event, ui ) {\n                        $(ui.selected).addClass('selected');\n                    },\n                    unselected: function( event, ui ) {\n                        $(ui.unselected).removeClass('selected');\n                    },\n                    stop: function(){\n                        $(this).trigger('itemselect.creator', $('.selected'));\n                    }\n                });\n            }\n        }\n    };\n\n    return itemView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/property',[\n    'jquery',\n    'ui',\n    'core/databinder',\n    'taoQtiTest/controller/creator/templates/index'\n],\nfunction($, ui, DataBinder, templates){\n    'use strict';\n\n    /**\n     * @callback PropertyViewCallback\n     * @param {propertyView} propertyView - the view object\n     */\n\n    /**\n     * The PropertyView setup the property panel component\n     *\n     * @exports taoQtiTest/controller/creator/views/property\n     */\n    var propView = function propView(tmplName, model){\n        var $container = $('.test-creator-props');\n        var template = templates.properties[tmplName];\n        var $view;\n\n        /**\n         * Opens the view for the 1st time\n         */\n        var open = function propOpen(){\n            var databinder,\n                binderOptions = {\n                    templates: templates.properties\n                };\n            $container.children('.props').hide().trigger('propclose.propview');\n            $view = $(template(model)).appendTo($container).filter('.props');\n\n            //start listening for DOM compoenents inside the view\n            ui.startDomComponent($view);\n\n            //start the data binding\n            databinder = new DataBinder($view, model, binderOptions);\n            databinder.bind();\n\n            propValidation();\n\n            $view.trigger('propopen.propview');\n        };\n\n       /**\n        * Get the view container element\n        * @returns {jQueryElement}\n        */\n        var getView = function propGetView(){\n            return $view;\n        };\n\n       /**\n        * Check wheter the view is displayed\n        * @returns {boolean} true id opened\n        */\n        var isOpen = function propIsOpen(){\n            return $view.css('display') !== 'none';\n        };\n\n       /**\n        * Bind a callback on view open\n        * @param {PropertyViewCallback} cb\n        */\n        var onOpen = function propOnOpen(cb){\n            $view.on('propopen.propview', function(e){\n                e.stopPropagation();\n                cb();\n            });\n        };\n\n\n        /**\n         * Bind a callback on view close\n         * @param {PropertyViewCallback} cb\n         */\n        var onClose = function propOnClose(cb){\n            $view.on('propclose.propview', function(e){\n                e.stopPropagation();\n                cb();\n            });\n        };\n\n        /**\n         * Removes the property view\n         */\n        var destroy = function propDestroy(){\n            $view.remove();\n        };\n\n        /**\n         * Toggles the property view display\n         */\n        var toggle = function propToggle(){\n            $container.children('.props').not($view).hide().trigger('propclose.propview');\n            if(isOpen()){\n                $view.hide().trigger('propclose.propview');\n            } else {\n                $view.show().trigger('propopen.propview');\n            }\n        };\n\n       /**\n        * Set up the validation on the property view\n        * @private\n        */\n        function propValidation() {\n            $view.on('validated.group', function(e, isValid){\n                if(e.namespace === 'group'){\n                    var $togglers = $('#test-creator .property-toggler, #saver');\n                    if(isValid === true){\n                        $togglers.removeClass('disabled');\n                    } else {\n                        $togglers.addClass('disabled');\n                    }\n                }\n            });\n            $view.groupValidator();\n         }\n\n        return {\n            open : open,\n            getView : getView,\n            isOpen : isOpen,\n            onOpen : onOpen,\n            onClose : onClose,\n            destroy : destroy,\n            toggle : toggle\n        };\n    };\n\n   return propView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/actions',[\n'jquery',\n'taoQtiTest/controller/creator/views/property'],\nfunction($, propertyView){\n    'use strict';\n\n    var disabledClass = 'disabled';\n    var activeClass = 'active';\n    var btnOnClass = 'tlb-button-on';\n\n    /**\n     * Set up the property view for an element\n     * @param {jQueryElement} $container - that contains the property opener\n     * @param {String} template - the name of the template to give to the propertyView\n     * @param {Object} model - the model to bind\n     * @param {PropertyViewCallback} cb - execute at view setup phase\n     */\n    function properties ($container, template, model, cb) {\n        var propView = null;\n        $container.find('.property-toggler').on('click', function(e){\n            e.preventDefault();\n            var $elt = $(this);\n            if(!$(this).hasClass(disabledClass)){\n\n                $elt.blur(); //to remove the focus\n\n                if(propView === null){\n\n                    $container.addClass(activeClass);\n                    $elt.addClass(btnOnClass);\n\n                    propView = propertyView(template, model);\n                    propView.open();\n\n                    propView.onOpen(function(){\n                        $container.addClass(activeClass);\n                        $elt.addClass(btnOnClass);\n                    });\n                    propView.onClose(function(){\n                        $container.removeClass(activeClass);\n                        $elt.removeClass(btnOnClass);\n                    });\n\n                    if(typeof cb === 'function'){\n                        cb(propView);\n                    }\n                } else {\n                    propView.toggle();\n                }\n            }\n        });\n    }\n\n\n    /**\n     * Enable to move an element\n     * @param {jQueryElement} $actionContainer - where the mover is\n     * @param {String} containerClass - the cssClass of the element container\n     * @param {String} elementClass - the cssClass to identify elements\n     */\n    function move ($actionContainer, containerClass, elementClass) {\n        var $element = $actionContainer.parents('.' + elementClass);\n        var $container = $element.parents('.' + containerClass );\n\n        //move up an element\n        $('.move-up', $actionContainer).click(function(e){\n            var $elements, index;\n\n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            index = $elements.index($element);\n            if (index > 0) {\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertBefore($('.' + elementClass + ' :eq(' + (index - 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n\n        //move down an element\n        $('.move-down', $actionContainer).click(function(e){\n            var $elements, index;\n\n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            index = $elements.index($element);\n            if (index < ($elements.length - 1) && $elements.length > 1) {\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertAfter($('.' + elementClass + ' :eq(' + (index + 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n    }\n\n    /**\n     * Update the movable state of an element\n     * @param {jQueryElement} $container - the movable elements (scopped)\n     * @param {String} elementClass - the cssClass to identify elements\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function movable ($container, elementClass, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n\n            var index = $container.index($elt);\n            var $moveUp = $('.move-up', $actionContainer);\n            var $moveDown = $('.move-down', $actionContainer);\n\n            //only one test part, no moving\n            if( $container.length === 1 ){\n                $moveUp.addClass(disabledClass);\n                $moveDown.addClass(disabledClass);\n\n            //testpart is the first, only moving down\n            } else if(index === 0) {\n                $moveUp.addClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n\n            //testpart is the lasst, only moving up\n            } else if ( index >= ($container.length - 1) ) {\n                $moveDown.addClass(disabledClass);\n                $moveUp.removeClass(disabledClass);\n\n            //or enable moving top/bottom\n            } else {\n                $moveUp.removeClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n            }\n         });\n    }\n\n    /**\n     * Update the removable state of an element\n     * @param {jQueryElement} $container - that contains the removable action\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function removable ($container, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n            var $delete = $('[data-delete]', $actionContainer);\n\n            if($container.length <= 1){\n                $delete.addClass(disabledClass);\n            } else {\n                $delete.removeClass(disabledClass);\n            }\n        });\n    }\n\n    /**\n     * Disable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function disable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').addClass(disabledClass);\n    }\n\n    /**\n     * Enable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function enable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').removeClass(disabledClass);\n    }\n\n    /**\n     * The actions gives you shared behavior for some actions.\n     *\n     * @exports taoQtiTest/controller/creator/views/actions\n     */\n    return {\n        properties  : properties,\n        move        : move,\n        removable   : removable,\n        movable     : movable,\n        disable     : disable,\n        enable      : enable\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiTest/controller/creator/helpers/sectionCategory',[\n    'lodash',\n    'i18n',\n    'core/errorHandler'\n], function (_, __, errorHandler){\n\n    'use strict';\n\n    var _ns = '.sectionCategory';\n\n    /**\n     * Check if the given object is a valid assessmentSection model object\n     *\n     * @param {object} model\n     * @returns {boolean}\n     */\n    function isValidSectionModel(model){\n        return (_.isObject(model) && model['qti-type'] === 'assessmentSection' && _.isArray(model.sectionParts));\n    }\n\n    /**\n     * Set an array of categories to the section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function setCategories(model, categories){\n\n        var oldCategories = getCategories(model);\n\n        //the categories that are no longer in the new list of categories should be removed\n        var removed = _.difference(oldCategories.all, categories);\n\n        //the categories that are not in the old categories collection should be added to the children\n        var propagated = _.difference(categories, oldCategories.all);\n\n        //process the modification\n        addCategories(model, propagated);\n        removeCategories(model, removed);\n    }\n\n    /**\n     * Get the categories assign to the section model, infered by its interal itemRefs\n     *\n     * @param {object} model\n     * @returns {object}\n     */\n    function getCategories(model){\n\n        if(isValidSectionModel(model)){\n            var categories = _.map(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    return _.compact(itemRef.categories);\n                }\n            });\n            //array of categories\n            var arrays = _.values(categories);\n            var union = _.union.apply(null, arrays);\n\n            //categories that are common to all itemRef\n            var propagated = _.intersection.apply(null, arrays);\n\n            //the categories that are only partially covered on the section level : complementary of \"propagated\"\n            var partial = _.difference(union, propagated);\n\n            return {\n                all : union.sort(),\n                propagated : propagated.sort(),\n                partial : partial.sort()\n            };\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Add an array of categories to a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function addCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef'){\n                    if(!_.isArray(itemRef.categories)){\n                        itemRef.categories = [];\n                    }\n                    itemRef.categories = _.union(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Remove an array of categories from a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function removeCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    itemRef.categories = _.difference(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Give the list of tao pre-defined test option categories\n     * Useful to have this list somewhere in the code.\n     *\n     * @returns {array}\n     */\n    function getTaoOptionCategories(){\n        return [\n            {\n                name : 'x-tao-option-endTestWarning',\n                description : __('displays a warning before the user finishes the test')\n            },\n            {\n                name : 'x-tao-option-nextPartWarning',\n                description : __('displays a warning before the user finishes the part')\n            },\n            {\n                name : 'x-tao-option-nextSectionWarning',\n                description : __('displays a next section button that warns the user that they will not be able to return to the section')\n            },\n            {\n                name : 'x-tao-option-nextSection',\n                description : __('displays a next section button')\n            },\n            {\n                name : 'x-tao-option-unansweredWarning',\n                description : __('displays a warning before the user finishes the part, only if there are unanswered/marked for review items')\n            },\n            {\n                name : 'x-tao-option-noExitTimedSectionWarning',\n                description : __('disable the warning automatically displayed upon exiting a timed section')\n            },\n            {\n                name : 'x-tao-option-exit',\n                description : __('displays an exit button')\n            },\n            {\n                name : 'x-tao-option-markReview',\n                description : __('displays a mark for review button. This option requires requires the x-tao-option-reviewScreen option')\n            },\n            {\n                name : 'x-tao-option-reviewScreen',\n                description : __('displays the review screen / navigator')\n            },\n            {\n                name : 'x-tao-option-calculator',\n                description : __('enable calculator')\n            },\n            {\n                name : 'x-tao-option-answerMasking',\n                description : __('enable answer masking tool')\n            },\n            {\n                name : 'x-tao-option-areaMasking',\n                description : __('enable area masking tool')\n            },\n            {\n                name : 'x-tao-option-highlighter',\n                description : __('enable highlighter tool')\n            },\n            {\n                name : 'x-tao-option-line-reader',\n                description : __('enable line reader tool')\n            },\n            {\n                name : 'x-tao-option-magnifier',\n                description : __('enable magnifier tool')\n            },\n            {\n                name : 'x-tao-option-eliminator',\n                description : __('enable answer eliminator tool')\n            },\n            {\n                name : 'x-tao-itemusage-informational',\n                description : __('describe the item as informational')\n            }\n        ];\n    }\n\n    return {\n        isValidSectionModel : isValidSectionModel,\n        setCategories : setCategories,\n        getCategories : getCategories,\n        addCategories : addCategories,\n        removeCategories : removeCategories,\n        getTaoOptionCategories : getTaoOptionCategories\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiTest',[\n    'lodash',\n    'i18n',\n    'taoQtiTest/controller/creator/helpers/outcome',\n    'taoQtiTest/controller/creator/helpers/qtiElement'\n], function(_, __, outcomeHelper, qtiElementHelper){\n    'use strict';\n\n    /**\n     * Utils to manage the QTI Test model\n     * @exports taoQtiTest/controller/creator/qtiTestHelper\n     */\n    var qtiTestHelper = {\n\n        /**\n         * Extract qti identifiers from a model\n         * @param {Object} obj - the model to extract id from\n         * @returns {Array} the extracted identifiers\n         */\n        extractIdentifiers : function extractIdentifiers(obj){\n            var self = this;\n            var identifiers = [];\n            if(_.has(obj, 'identifier')){\n                identifiers = identifiers.concat(obj.identifier.toLowerCase());\n            }\n            _.flatten(_.forEach(obj, function(value) {\n                identifiers = identifiers.concat(typeof value === \"object\" ? self.extractIdentifiers(value) : []);\n            }), true);\n            return identifiers;\n        },\n\n        /**\n         * Get a valid and avialable qti identifier\n         * @param {String} qtiType - the type of element you want an id for\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {String} the identifier\n         */\n        getIdentifier : function getIdentifier(qtiType, lockedIdentifiers){\n            var index = 1;\n            var suggestion;\n            var glue =  '-';\n\n            do {\n                suggestion = qtiType +  glue + (index++);\n            } while(_.contains(lockedIdentifiers, suggestion.toLowerCase()));\n\n            lockedIdentifiers.push(suggestion.toLowerCase());\n\n            return suggestion;\n        },\n\n        /**\n         * Gives you a validator that check QTI id format\n         * @returns {Object} the validator\n         */\n        idFormatValidator : function idFormatValidator(){\n            var qtiIdPattern = /^[_a-zA-Z]{1}[a-zA-Z0-9\\-._]{0,31}$/i;\n            return {\n                name : 'idFormat',\n                message : __('is not a valid identifier (alphanum, underscore, dash and dots)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Gives you a validator that check QTI id format of the test (it is different from the others...)\n         * @returns {Object} the validator\n         */\n        testidFormatValidator : function testidFormatValidator(){\n            var qtiTestIdPattern = /^\\S+$/;\n            return {\n                name : 'testIdFormat',\n                message : __('is not a valid identifier (everything except spaces)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiTestIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Gives you a validator that check if a QTI id is available\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {Object} the validator\n         */\n        idAvailableValidator : function idAvailableValidator(lockedIdentifiers){\n            return {\n                name : 'testIdAvailable',\n                message : __('is already used in the test.'),\n                validate : function(value, callback, options){\n                    if(typeof callback === 'function'){\n                        callback(!_.contains(_.values(lockedIdentifiers), value.toLowerCase()) || (options.original && value === options.original));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Does the value contains the type type\n         * @param {Object} value\n         * @param {string} type\n         * @returns {boolean}\n         */\n        filterQtiType : function filterQtiType (value, type){\n            return value['qti-type'] && value['qti-type'] === type;\n        },\n\n        /**\n         * Add the 'qti-type' properties to object that miss it, using the parent key name\n         * @param {Object|Array} collection\n         * @param {string} parentType\n         */\n        addMissingQtiType : function addMissingQtiType(collection, parentType) {\n            var self = this;\n            _.forEach(collection, function(value, key) {\n                if (_.isObject(value) && !_.isArray(value) && !_.has(value, 'qti-type')) {\n                    if (_.isNumber(key)) {\n                        if (parentType) {\n                            value['qti-type'] = parentType;\n                        }\n                    } else {\n                        value['qti-type'] = key;\n                    }\n                }\n                if (_.isArray(value)) {\n                    self.addMissingQtiType(value, key.replace(/s$/, ''));\n                } else if (_.isObject(value)) {\n                    self.addMissingQtiType(value);\n                }\n            });\n        },\n\n        /**\n         * Applies consolidation rules to the model\n         * @param {Object} model\n         * @returns {Object}\n         */\n        consolidateModel : function consolidateModel(model){\n            if(model && model.testParts && _.isArray(model.testParts)){\n\n                _.forEach(model.testParts, function(testPart) {\n\n                    if(testPart.assessmentSections && _.isArray(testPart.assessmentSections)){\n\n                        _.forEach(testPart.assessmentSections, function(assessmentSection) {\n\n                            //remove ordering is shuffle is false\n                            if(assessmentSection.ordering &&\n                                assessmentSection.ordering.shuffle !== undefined && assessmentSection.ordering.shuffle === false){\n                                delete assessmentSection.ordering;\n                            }\n\n                            // clean categories (QTI identifier can't be empty string)\n                            if(assessmentSection.sectionParts && _.isArray(assessmentSection.sectionParts)) {\n                                _.forEach(assessmentSection.sectionParts, function(part) {\n                                    if(part.categories && _.isArray(part.categories) && (part.categories.length === 0 || part.categories[0].length === 0)) {\n                                        part.categories = [];\n                                    }\n                                });\n                            }\n\n                            if(assessmentSection.rubricBlocks && _.isArray(assessmentSection.rubricBlocks)) {\n\n                                //remove rubrick blocks if empty\n                                if (assessmentSection.rubricBlocks.length === 0 ||\n                                    (assessmentSection.rubricBlocks.length === 1 && assessmentSection.rubricBlocks[0].content.length === 0) ) {\n\n                                    delete assessmentSection.rubricBlocks;\n                                }\n                                //ensure the view attribute is present\n                                else if(assessmentSection.rubricBlocks.length > 0){\n                                    _.forEach(assessmentSection.rubricBlocks, function(rubricBlock){\n                                        rubricBlock.views = ['candidate'];\n                                        //change once views are supported\n                                        //if(rubricBlock && rubricBlock.content && (!rubricBlock.views || (_.isArray(rubricBlock.views) && rubricBlock.views.length === 0))){\n                                        //rubricBlock.views = ['candidate'];\n                                        //}\n                                    });\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n            return model;\n        },\n\n        /**\n         * Validates the provided model\n         * @param {Object} model\n         * @throws {Error} if the model is not valid\n         */\n        validateModel: function validateModel(model) {\n            var outcomes = _.indexBy(outcomeHelper.listOutcomes(model));\n\n            _.forEach(model.testParts, function (testPart) {\n                _.forEach(testPart.assessmentSections, function (assessmentSection) {\n                    _.forEach(assessmentSection.rubricBlocks, function (rubricBlock) {\n                        var feedbackBlock = qtiElementHelper.lookupElement(rubricBlock, 'rubricBlock.div.feedbackBlock', 'content');\n                        if (feedbackBlock && !outcomes[feedbackBlock.outcomeIdentifier]) {\n                            throw new Error(__('The outcome \"%s\" does not exist, but it is referenced by a feedback block!', feedbackBlock.outcomeIdentifier));\n                        }\n                    });\n                });\n            });\n        }\n    };\n\n    return  qtiTestHelper;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/itemref',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/helpers/sectionCategory',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props-weight'\n],\nfunction(\n    $,\n    _,\n    __,\n    actions,\n    sectionCategory,\n    qtiTestHelper,\n    weightTpl\n){\n    'use strict';\n\n    /**\n     * We need to resize the itemref in case of long labels\n     */\n    var resize = _.throttle(function resize(){\n        var $refs = $('.itemrefs').first();\n        var $actions = $('.itemref .actions').first();\n        var width = $refs.innerWidth() - $actions.outerWidth();\n        $('.itemref > .title').width(width);\n    }, 100);\n\n    /**\n     * Set up an item ref: init action behaviors. Called for each one.\n     *\n     * @param {modelOverseer} modelOverseer - the test model overseer. Should also provide some config entries\n     * @param {Object} refModel - the data model to bind to the item ref\n     * @param {jQueryElement} $itemRef - the itemRef element to set up\n     */\n    function setUp (modelOverseer, refModel, $itemRef){\n\n        var $actionContainer = $('.actions', $itemRef);\n\n        actions.properties($actionContainer, 'itemref', refModel, propHandler);\n        actions.move($actionContainer, 'itemrefs', 'itemref');\n\n        resize();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            categoriesProperty(propView.getView());\n            weightsProperty(propView);\n\n            $itemRef.parents('.testpart').on('delete', removePropHandler);\n            $itemRef.parents('.section').on('delete', removePropHandler);\n            $itemRef.on('delete', removePropHandler);\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         */\n        function categoriesProperty($view){\n            var $select = $view.find('[name=itemref-category]');\n            $select.select2({\n                width: '100%',\n                tags : _.pluck(sectionCategory.getTaoOptionCategories(), 'name'),\n                multiple : true,\n                tokenSeparators: [\",\", \" \", \";\"],\n                formatNoMatches : function(){\n                    return __('Enter a category');\n                },\n                maximumInputLength : 32\n            }).on('change', function(e){\n                /**\n                 * @event modelOverseer#category-change\n                 * @param {Array} categories\n                 */\n                modelOverseer.trigger('category-change', e.val);\n            });\n\n            initCategories();\n            $view.on('propopen.propview', function(){\n                initCategories();\n            });\n\n            /**\n             * save the categories into the model\n             * @private\n             */\n            function initCategories(){\n                $select.select2('val', refModel.categories);\n            }\n        }\n\n\n        /**\n         * Setup the weights properties\n         */\n        function weightsProperty(propView) {\n            var $view = propView.getView(),\n                $weightList = $view.find('[data-bind-each=\"weights\"]');\n\n            $view.find('.itemref-weight-add').on('click', function(e) {\n                var defaultData = {\n                    value: 1,\n                    identifier: (refModel.weights.length === 0)\n                        ? 'WEIGHT'\n                        : qtiTestHelper.getIdentifier('WEIGHT', qtiTestHelper.extractIdentifiers(refModel))\n                };\n                e.preventDefault();\n\n                $weightList.append(weightTpl(defaultData));\n                $weightList.trigger('add.internalbinder'); // trigger model update\n\n                $view.groupValidator();\n            });\n        }\n    }\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    function listenActionState (){\n\n        $('.itemrefs').each(function(){\n            actions.movable($('.itemref', $(this)), 'itemref', '.actions');\n        });\n\n        $(document)\n            .on('delete', function(e){\n                var $parent;\n                var $target = $(e.target);\n                if($target.hasClass('itemref')){\n                    $parent = $target.parents('.itemrefs');\n                    actions.disable($parent.find('.itemref'), '.actions');\n                }\n            })\n            .on('add change undo.deleter deleted.deleter', '.itemrefs',  function(e){\n                var $parent;\n                var $target = $(e.target);\n                if($target.hasClass('itemref') || $target.hasClass('itemrefs')){\n                    $parent = $('.itemref', $target.hasClass('itemrefs') ? $target : $target.parents('.itemrefs'));\n                    actions.enable($parent, '.actions');\n                    actions.movable($parent, 'itemref', '.actions');\n                }\n            });\n    }\n\n    /**\n     * The itemrefView setup itemref related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/itemref\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState,\n        resize : resize\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/encoders/dom2qti',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/qtiElement'\n], function ($, _, qtiElementHelper) {\n    'use strict';\n\n    /**\n     * A mapping of QTI-XML node names in order to keep the camel case form\n     * @type {Object}\n     */\n    var normalizedNodes = {\n        feedbackblock: 'feedbackBlock',\n        outcomeidentifier: 'outcomeIdentifier',\n        showhide: 'showHide'\n    };\n\n    /**\n     * Get the list of objects attributes to encode\n     * @param {Object} object\n     * @returns {Array}\n     */\n    function getAttributes(object) {\n        return _.omit(object, [\n            'qti-type',\n            'content',\n            'xmlBase',\n            'lang',\n            'label'\n        ]);\n    }\n\n    /**\n     * Encode object's properties to xml/html string attributes\n     * @param {Object} attributes\n     * @returns {String}\n     */\n    function attrToStr(attributes) {\n        return _.reduce(attributes, function (acc, value, key) {\n            if (_.isNumber(value) || (_.isString(value) && !_.isEmpty(value))) {\n                return acc + ' ' + key + '=\"' + value + '\" ';\n            }\n            return acc;\n        }, '');\n    }\n\n    /**\n     * Ensures the nodeName has a normalized form:\n     * - standard HTML tags are in lower case\n     * - QTI-XML tags are in the right form\n     * @param {String} nodeName\n     * @returns {String}\n     */\n    function normalizeNodeName(nodeName) {\n        var normalized = nodeName.toLocaleLowerCase();\n        return normalizedNodes[normalized] || normalized;\n    }\n\n    /**\n     * This encoder is used to transform DOM to JSON QTI and JSON QTI to DOM.\n     * It works now for the rubricBlocks components.\n     * @exports creator/encoders/dom2qti\n     */\n    return {\n\n        /**\n         * Encode an object to a dom string\n         * @param {Object} modelValue\n         * @returns {String}\n         */\n        encode: function (modelValue) {\n            var self = this;\n\n            if (_.isArray(modelValue)) {\n                return _.reduce(modelValue, function (result, value) {\n                    return result + self.encode(value);\n                }, '');\n            } else if (_.isObject(modelValue) && modelValue['qti-type']) {\n                if (modelValue['qti-type'] === 'textRun') {\n                    return modelValue.content;\n                }\n                var startTag = '<' + modelValue['qti-type'] + attrToStr(getAttributes(modelValue));\n                if (modelValue.content) {\n                    return startTag + '>' + self.encode(modelValue.content) + '</' + modelValue['qti-type'] + '>';\n                } else {\n                    return startTag + '/>';\n                }\n            }\n            return '' + modelValue;\n        },\n\n        /**\n         * Decode a string that represents a DOM to a QTI formatted object\n         * @param {String} nodeValue\n         * @returns {Array}\n         */\n        decode: function (nodeValue) {\n            var self = this;\n            var $nodeValue = (nodeValue instanceof $) ? nodeValue : $(nodeValue);\n            var result = [];\n\n            _.forEach($nodeValue, function (elt) {\n                var object;\n                if (elt.nodeType === 3) {\n                    if (!_.isEmpty($.trim(elt.nodeValue))) {\n                        result.push(qtiElementHelper.create('textRun', {\n                            'content': elt.nodeValue,\n                            'xmlBase': ''\n                        }));\n                    }\n                } else if (elt.nodeType === 1) {\n                    object = _.merge(qtiElementHelper.create(normalizeNodeName(elt.nodeName), {\n                        'id': '',\n                        'class': '',\n                        'xmlBase': '',\n                        'lang': '',\n                        'label': ''\n                    }),\n                    _.transform(elt.attributes, function (acc, value) {\n                        if (value.nodeName) {\n                            acc[normalizeNodeName(value.nodeName)] = value.nodeValue;\n                        }\n                    }));\n                    if (elt.childNodes.length > 0) {\n                        object.content = self.decode(elt.childNodes);\n                    }\n                    result.push(object);\n                }\n            });\n            return result;\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator', 'mathJax'], function(ckConfigurator, mathJax) {\n    'use strict';\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options){\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator.getConfig(editor, toolbarType, options);\n    };\n\n    return {\n        getConfig : getConfig\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/rubricblock',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/dialog/alert',\n    'util/namespace',\n    'taoQtiTest/controller/creator/views/actions',\n    'helpers',\n    'ckeditor',\n    'taoQtiTest/controller/creator/encoders/dom2qti',\n    'taoQtiTest/controller/creator/helpers/ckConfigurator',\n    'taoQtiTest/controller/creator/helpers/qtiElement'\n], function ($, _, __, hider, dialogAlert, namespaceHelper, actions, helpers, ckeditor, Dom2QtiEncoder, ckConfigurator, qtiElementHelper) { // qtiClasses, creatorRenderer, XmlRenderer, simpleParser){\n    'use strict';\n\n    //compute ckeditor config only once\n    var ckConfig = ckConfigurator.getConfig(ckeditor, 'qtiBlock');\n\n    function filterPlugin(plugin) {\n        return _.contains(['taoqtiimage', 'taoqtimedia', 'taoqtimaths', 'taoqtiinclude'], plugin);\n    }\n\n    ckConfig.plugins = _.reject(ckConfig.plugins.split(','), filterPlugin).join(',');\n    ckConfig.extraPlugins = _.reject(ckConfig.extraPlugins.split(','), filterPlugin).join(',');\n\n    /**\n     * The rubriclockView setup RB related components and behavior\n     *\n     * @exports taoQtiTest/controller/creator/views/rubricblock\n     */\n    return {\n        /**\n         * Set up a rubric block: init action behaviors. Called for each one.\n         *\n         * @param {modelOverseer} modelOverseer - the test model overseer. Should also provide some config entries\n         * @param {Object} rubricModel - the rubric block data\n         * @param {jQueryElement} $rubricBlock - the rubric block to set up\n         */\n        setUp: function setUp(modelOverseer, rubricModel, $rubricBlock) {\n            //we need to synchronize the ck elt with an hidden elt that has data-binding\n            var $rubricBlockContent = $('.rubricblock-content', $rubricBlock);\n            var syncRubricBlockContent = _.debounce(editorToModel, 100);\n            var editor;\n\n            /**\n             * Bind a listener only related to this rubric.\n             * @param {jQuery} $el\n             * @param {String} eventName\n             * @param {Function} cb\n             * @returns {jQuery}\n             */\n            function bindEvent($el, eventName, cb) {\n                eventName = namespaceHelper.namespaceAll(eventName, rubricModel.uid);\n                return $el.off(eventName).on(eventName, cb);\n            }\n\n            /**\n             * Ensures an html content is wrapped by a container tag.\n             * @param {String} html\n             * @returns {String}\n             */\n            function ensureWrap(html) {\n                html = (html || '').trim();\n                if (html.charAt(0) !== '<' || html.charAt(html.length - 1) !== '>') {\n                    html = '<div>' + html + '</div>';\n                }\n                if ($(html).length > 1) {\n                    html = '<div>' + html + '</div>';\n                }\n                return html;\n            }\n\n            /**\n             * Forwards the editor content into the model\n             */\n            function editorToModel() {\n                var rubric = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock', 'content');\n                var wrapper = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content');\n                var content = Dom2QtiEncoder.decode(ensureWrap($rubricBlockContent.html()));\n\n                if (wrapper) {\n                    wrapper.content = content;\n                } else {\n                    rubric.content = content;\n                }\n            }\n\n            /**\n             * Forwards the model content into the editor\n             */\n            function modelToEditor() {\n                var rubric = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock', 'content');\n                var wrapper = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content');\n                var content = wrapper ? wrapper.content : rubric.content;\n                var html = ensureWrap(Dom2QtiEncoder.encode(content));\n                $rubricBlockContent.html(html);\n            }\n\n            /**\n             * Wrap/unwrap the rubric block in a feedback according to the user selection\n             * @param {Object} feedback\n             * @returns {Boolean}\n             */\n            function updateFeedback(feedback) {\n                var activated = feedback && feedback.activated;\n                var wrapper = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content');\n\n                if (activated) {\n                    // wrap the actual content into a feedbackBlock if needed\n                    if (!wrapper) {\n                        rubricModel.content = [qtiElementHelper.create('div', {\n                            content: [qtiElementHelper.create('feedbackBlock', {\n                                outcomeIdentifier: feedback.outcome,\n                                identifier: feedback.matchValue,\n                                content: rubricModel.content\n                            })]\n                        })];\n                    } else {\n                        wrapper.outcomeIdentifier = feedback.outcome;\n                        wrapper.identifier = feedback.matchValue;\n                    }\n                    modelToEditor();\n                } else {\n                    // remove the feedbackBlock wrapper, just keep the actual content\n                    if (wrapper) {\n                        rubricModel.content = wrapper.content;\n                        modelToEditor();\n                    }\n                }\n\n                return activated;\n            }\n\n            /**\n             * Perform some binding once the property view is created\n             * @private\n             * @param {propView} propView - the view object\n             */\n            function propHandler(propView) {\n                var $view = propView.getView();\n                var $feedbackOutcomeLine = $('.rubric-feedback-outcome', $view);\n                var $feedbackMatchLine = $('.rubric-feedback-match-value', $view);\n                var $feedbackOutcome = $('[name=feedback-outcome]', $view);\n                var $feedbackActivated = $('[name=activated]', $view);\n\n                // toggle the feedback panel\n                function changeFeedback(activated) {\n                    hider.toggle($feedbackOutcomeLine, activated);\n                    hider.toggle($feedbackMatchLine, activated);\n                }\n\n                // should be called when the properties panel is removed\n                function removePropHandler() {\n                    rubricModel.feedback = {};\n                    if (propView !== null) {\n                        propView.destroy();\n                    }\n                }\n\n                // take care of changes in the properties view\n                function changeHandler(e, changedModel) {\n                    if (e.namespace === 'binder' && changedModel['qti-type'] === 'rubricBlock') {\n                        changeFeedback(updateFeedback(changedModel.feedback));\n                    }\n                }\n\n                // update the list of outcomes the feedback can target\n                function updateOutcomes() {\n                    var activated = rubricModel.feedback && rubricModel.feedback.activated;\n                    // build the list of outcomes in a way select2 can understand\n                    var outcomes = _.map(modelOverseer.getOutcomesNames(), function(name) {\n                        return {\n                            id: name,\n                            text: name\n                        };\n                    });\n\n                    // create/update the select field\n                    $feedbackOutcome.select2({\n                        minimumResultsForSearch: -1,\n                        width: '100%',\n                        data: outcomes\n                    });\n\n                    // update the UI to reflect the data\n                    if (!activated) {\n                        $feedbackActivated.removeAttr('checked');\n                    }\n                    changeFeedback(activated);\n                }\n\n                $('[name=type]', $view).select2({\n                    minimumResultsForSearch: -1,\n                    width: '100%'\n                });\n\n                $view.on('change.binder', changeHandler);\n                bindEvent($rubricBlock.parents('.testpart'), 'delete', removePropHandler);\n                bindEvent($rubricBlock.parents('.section'), 'delete', removePropHandler);\n                bindEvent($rubricBlock, 'delete', removePropHandler);\n                bindEvent($rubricBlock, 'outcome-removed', function() {\n                    $feedbackOutcome.val('');\n                    updateOutcomes();\n                });\n                bindEvent($rubricBlock, 'outcome-updated', function() {\n                    updateFeedback(rubricModel.feedback);\n                    updateOutcomes();\n                });\n\n                changeFeedback(rubricModel.feedback);\n                updateOutcomes();\n                rbViews($view);\n            }\n\n            /**\n             * Set up the views select box\n             * @private\n             * @param {jQueryElement} $propContainer - the element container\n             */\n            function rbViews($propContainer) {\n                var $select = $('[name=view]', $propContainer);\n\n                bindEvent($select.select2({'width': '100%'}), \"select2-removed\", function () {\n                    if ($select.select2('val').length === 0) {\n                        $select.select2('val', [1]);\n                    }\n                });\n\n                if ($select.select2('val').length === 0) {\n                    $select.select2('val', [1]);\n                }\n            }\n\n            rubricModel.orderIndex = rubricModel.index + 1;\n            rubricModel.uid = _.uniqueId('rb');\n            rubricModel.feedback = {\n                activated: !!qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content'),\n                outcome: qtiElementHelper.lookupProperty(rubricModel, 'rubricBlock.div.feedbackBlock.outcomeIdentifier', 'content'),\n                matchValue: qtiElementHelper.lookupProperty(rubricModel, 'rubricBlock.div.feedbackBlock.identifier', 'content')\n            };\n\n            modelOverseer\n                .before('scoring-write.' + rubricModel.uid, function() {\n                    var feedbackOutcome = rubricModel.feedback && rubricModel.feedback.outcome;\n                    if (feedbackOutcome && _.indexOf(modelOverseer.getOutcomesNames(), feedbackOutcome) < 0) {\n                        // the targeted outcome has been removed, so remove the feedback\n                        modelOverseer.changedRubricBlock = (modelOverseer.changedRubricBlock || 0) + 1;\n                        rubricModel.feedback.activated = false;\n                        rubricModel.feedback.outcome = '';\n                        updateFeedback(rubricModel.feedback);\n                        $rubricBlock.trigger('outcome-removed');\n                    } else {\n                        // the tageted outcome is still here, just notify the properties panel to update the list\n                        $rubricBlock.trigger('outcome-updated');\n                    }\n                })\n                .on('scoring-write.' + rubricModel.uid, function() {\n                    // will notify the user of any removed feedbacks\n                    if (modelOverseer.changedRubricBlock) {\n                        /** @todo: provide a way to cancel changes */\n                        dialogAlert(__('Some rubric blocks have been updated to reflect the changes in the list of outcomes.'));\n                        modelOverseer.changedRubricBlock = 0;\n                    }\n                });\n\n            actions.properties($rubricBlock, 'rubricblock', rubricModel, propHandler);\n\n            modelToEditor();\n\n            editor = ckeditor.inline($rubricBlockContent[0], ckConfig);\n            editor.on('change', function () {\n                syncRubricBlockContent();\n            });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiTest/controller/creator/helpers/sectionBlueprints',[\n    'lodash',\n    'i18n',\n    'core/errorHandler'\n], function (_, __, errorHandler){\n\n    'use strict';\n\n    var _ns = '.sectionBlueprint';\n\n\n    /**\n     * Set an array of categories to the section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {string} blueprint\n     * @returns {undefined}\n     */\n    function setBlueprint(model, blueprint){\n        model.blueprint = blueprint;\n    }\n\n    /**\n     * Get the categories assign to the section model, infered by its interal itemRefs\n     *\n     * @param {string} getUrl\n     * @param {object} model\n     * @returns {object}\n     */\n    function getBlueprint(getUrl, model){\n\n        return $.ajax({\n            url: getUrl,\n            type: 'GET',\n            data: {\n                section: model.identifier\n            },\n            dataType: 'json'\n\n        })\n        .fail(function () {\n            errorHandler.throw(_ns, 'invalid tool config format');\n        });\n\n    }\n\n    return {\n        setBlueprint : setBlueprint,\n        getBlueprint : getBlueprint\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/section',[\n    'jquery',\n    'lodash',\n    'uri',\n    'i18n',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/views/rubricblock',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'taoQtiTest/controller/creator/helpers/sectionCategory',\n    'taoQtiTest/controller/creator/helpers/sectionBlueprints'\n],\nfunction($, _, uri, __, actions, itemRefView, rubricBlockView, templates, qtiTestHelper, sectionCategory, sectionBlueprint){\n    'use strict';\n\n    /**\n     * Set up a section: init action behaviors. Called for each section.\n     *\n     * @param {modelOverseer} modelOverseer - the test model overseer. Should also provide some config entries\n     * @param {Object} sectionModel - the data model to bind to the test section\n     * @param {jQueryElement} $section - the section to set up\n     */\n    function setUp (modelOverseer, sectionModel, $section){\n\n        var $actionContainer = $('h2', $section);\n        var config = modelOverseer.getConfig();\n\n        if(!_.isEmpty(config.routes.blueprintsById)){\n            sectionModel.hasBlueprint = true;\n        }\n        actions.properties($actionContainer, 'section', sectionModel, propHandler);\n        actions.move($actionContainer, 'sections', 'section');\n        itemRefs();\n        acceptItemRefs();\n        rubricBlocks();\n        addRubricBlock();\n\n        //trigger for the case the section is added an a selection is ongoing\n\n        /**\n         * Perform some binding once the property view is create\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $title;\n            var $view = propView.getView();\n\n            //enable/disable selection\n            var $selectionSwitcher = $('[name=section-enable-selection]', $view);\n            var $selectionSelect = $('[name=section-select]', $view);\n            var $selectionWithRep = $('[name=section-with-replacement]', $view);\n\n            var switchSelection = function switchSelection(){\n                if($selectionSwitcher.prop('checked') === true){\n                    $selectionSelect.incrementer('enable');\n                    $selectionWithRep.removeClass('disabled');\n                } else {\n                    $selectionSelect.incrementer('disable');\n                    $selectionWithRep.addClass('disabled');\n                }\n            };\n            $selectionSwitcher.on('change', switchSelection);\n            $selectionSwitcher.on('change', function updateModel(){\n                if(!$selectionSwitcher.prop('checked')){\n                    $selectionSelect.val(0);\n                    $selectionWithRep.prop('checked', false);\n                    delete sectionModel.selection;\n                }\n            });\n\n            $selectionSwitcher.prop('checked', !!sectionModel.selection).trigger('change');\n\n            //listen for databinder change to update the test part title\n            $title =  $('[data-bind=title]', $section);\n            $view.on('change.binder', function(e){\n                if(e.namespace === 'binder' && sectionModel['qti-type'] === 'assessmentSection'){\n                    $title.text(sectionModel.title);\n                }\n            });\n\n            $section.parents('.testpart').on('deleted.deleter', removePropHandler);\n            $section.on('deleted.deleter', removePropHandler);\n\n            //section level category configuration\n            categoriesProperty($view);\n\n            if(typeof sectionModel.hasBlueprint !== 'undefined'){\n                blueprintProperty($view);\n            }\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the item refs that already belongs to the section\n         * @private\n         */\n        function itemRefs(){\n\n            if(!sectionModel.sectionParts){\n                sectionModel.sectionParts = [];\n            }\n            $('.itemref', $section).each(function(){\n                var $itemRef = $(this);\n                var index = $itemRef.data('bind-index');\n                if(!sectionModel.sectionParts[index]){\n                    sectionModel.sectionParts[index] = {};\n                }\n\n                itemRefView.setUp(modelOverseer, sectionModel.sectionParts[index], $itemRef);\n                $itemRef.find('.title').text(\n                    config.labels[uri.encode($itemRef.data('uri'))]\n                );\n            });\n        }\n\n        /**\n         * Make the section to accept the selected items\n         * @private\n         * @fires modelOverseer#item-add\n         */\n        function acceptItemRefs(){\n            var $selected;\n            var $items     = $('.test-creator-items');\n\n            //the item selector trigger a select event\n            $items.on('itemselect.creator', function(){\n                var selection = Array.prototype.slice.call(arguments, 1);\n                var $placeholder = $('.itemref-placeholder', $section);\n                var $placeholders = $('.itemref-placeholder');\n\n                if(selection.length > 0){\n                    $placeholder.show().off('click').on('click', function(){\n\n                        //prepare the item data\n                        var categories,\n                            defaultItemData = {};\n\n                        if(sectionModel.itemSessionControl && !_.isUndefined(sectionModel.itemSessionControl.maxAttempts)){\n\n                            //for a matter of consistency, the itemRef will \"inherit\" the itemSessionControl configuration from its parent section\n                            defaultItemData.itemSessionControl = _.clone(sectionModel.itemSessionControl);\n                        }\n\n                        //the itemRef should also \"inherit\" the categories set at the item level\n                        categories = sectionCategory.getCategories(sectionModel);\n                        defaultItemData.categories = _.clone(categories.propagated);\n\n                        _.forEach(selection, function(item){\n                            var $item = $(item);\n                            var itemCategories = $item.data('categories');\n                            var itemData = _.defaults({\n                                href        : uri.decode($item.data('uri')),\n                                label       : $.trim($item.clone().children().remove().end().text()),\n                                'qti-type'  : 'assessmentItemRef'\n                            }, defaultItemData);\n                            if(!_.isEmpty(itemCategories)){\n                                itemData.categories = _.merge( itemData.categories, itemCategories.trim().split(',') );\n                            }\n\n                            addItemRef($('.itemrefs', $section), null, itemData);\n                        });\n\n                        //reset the current selection\n                        $('.ui-selected', $items).removeClass('ui-selected').removeClass('selected');\n                        $placeholders.hide().off('click');\n                    });\n                } else {\n                    $placeholders.hide().off('click');\n                }\n            });\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n                .off('add.binder', '#' + $section.attr('id') + ' .itemrefs')\n                .on('add.binder', '#' + $section.attr('id') + ' .itemrefs', function(e, $itemRef){\n                    var index, itemRefModel;\n                    if(e.namespace === 'binder' && $itemRef.hasClass('itemref')){\n                        index = $itemRef.data('bind-index');\n                        itemRefModel = sectionModel.sectionParts[index];\n\n                        //initialize the new item ref\n                        itemRefView.setUp(modelOverseer, itemRefModel, $itemRef);\n\n                        /**\n                         * @event modelOverseer#item-add\n                         * @param {Object} itemRefModel\n                         */\n                        modelOverseer.trigger('item-add', itemRefModel);\n                    }\n                });\n\n            //on set up, if there is a selection ongoing, we trigger the event\n            $selected = $('.selected', $items);\n            if($selected.length > 0){\n                $items.trigger('itemselect.creator', $selected);\n            }\n        }\n\n        /**\n         * Add a new item ref to the section\n         * @param {jQueryElement} $refList - the element to add the item to\n         * @param {Number} [index] - the position of the item to add\n         * @param {Object} [itemData] - the data to bind to the new item ref\n         */\n        function addItemRef($refList, index, itemData){\n            var $itemRef;\n            var $items = $refList.children('li');\n            index = index || $items.length;\n            itemData.identifier = qtiTestHelper.getIdentifier('item', config.identifiers);\n            itemData.index = index + 1;\n            $itemRef = $(templates.itemref(itemData));\n            if(index > 0){\n                $itemRef.insertAfter($items.eq(index - 1));\n            } else {\n                $itemRef.appendTo($refList);\n            }\n            $refList.trigger('add', [$itemRef, itemData]);\n        }\n\n\n        /**\n         * Set up the rubric blocks that already belongs to the section\n         * @private\n         */\n        function rubricBlocks () {\n            if(!sectionModel.rubricBlocks){\n                sectionModel.rubricBlocks = [];\n            }\n            $('.rubricblock', $section).each(function(){\n                var $rubricBlock = $(this);\n                var index = $rubricBlock.data('bind-index');\n                if(!sectionModel.rubricBlocks[index]){\n                    sectionModel.rubricBlocks[index] = {};\n                }\n\n                rubricBlockView.setUp(modelOverseer, sectionModel.rubricBlocks[index], $rubricBlock);\n            });\n\n            //opens the rubric blocks section if they are there.\n            if(sectionModel.rubricBlocks.length > 0){\n                $('.rub-toggler', $section).trigger('click');\n            }\n        }\n\n        /**\n         * Enable to add new rubric block\n         * @private\n         * @fires modelOverseer#rubric-add\n         */\n        function addRubricBlock () {\n\n            $('.rublock-adder', $section).adder({\n                target: $('.rubricblocks', $section),\n                content : templates.rubricblock,\n                templateData : function(cb){\n                    cb({\n                        'qti-type' : 'rubricBlock',\n                        index  : $('.rubricblock', $section).length,\n                        content : [],\n                        views : [1]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document).on('add.binder', '#' + $section.attr('id') + ' .rubricblocks', function(e, $rubricBlock){\n                var index, rubricModel;\n                if(e.namespace === 'binder' && $rubricBlock.hasClass('rubricblock')){\n                    index = $rubricBlock.data('bind-index');\n                    rubricModel = sectionModel.rubricBlocks[index];\n\n                    $('.rubricblock-binding', $rubricBlock).html('<p>&nbsp;</p>');\n                    rubricBlockView.setUp(modelOverseer, rubricModel, $rubricBlock);\n\n                    /**\n                     * @event modelOverseer#rubric-add\n                     * @param {Object} rubricModel\n                     */\n                    modelOverseer.trigger('rubric-add', rubricModel);\n                }\n            });\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         * @fires modelOverseer#category-change\n         */\n        function categoriesProperty($view){\n            var $select = $('[name=section-category]', $view);\n            $select.select2({\n                width: '100%',\n                tags : _.pluck(sectionCategory.getTaoOptionCategories(), 'name'),\n                multiple : true,\n                tokenSeparators: [\",\", \" \", \";\"],\n                formatNoMatches : function(){\n                    return __('Enter a category');\n                },\n                maximumInputLength : 32\n            }).on('change', function(e){\n                setCategories(e.val);\n            });\n\n            initCategories();\n            $view.on('propopen.propview', function(){\n                initCategories();\n            });\n\n            /**\n             * Start the categories editing\n             * @private\n             */\n            function initCategories(){\n\n                var categories = sectionCategory.getCategories(sectionModel);\n\n                //set categories found in the model in the select2 input\n                $select.select2('val', categories.all);\n\n                //color partial categories\n                $select.siblings('.select2-container').find('.select2-search-choice').each(function(){\n                    var $li = $(this);\n                    var content = $li.find('div').text();\n                    if(_.indexOf(categories.partial, content) >= 0){\n                        $li.addClass('partial');\n                    }\n                });\n            }\n\n            /**\n             * save the categories into the model\n             * @private\n             */\n            function setCategories(categories){\n                sectionCategory.setCategories(sectionModel, categories);\n\n                /**\n                 * @event modelOverseer#category-change\n                 * @param {Array} categories\n                 */\n                modelOverseer.trigger('category-change', categories);\n            }\n\n        }\n\n        /**\n         * Set up the Blueprint property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         */\n        function blueprintProperty($view){\n            var $select = $('[name=section-blueprint]', $view);\n            $select.select2({\n                ajax:{\n                    url: config.routes.blueprintsById,\n                    dataType: 'json',\n                    delay: 350,\n                    method: 'POST',\n                    data: function (params) {\n                        return {\n                            identifier: params // search term\n                        };\n                    },\n                    results: function (data) {\n                        return data;\n                    }\n                },\n                minimumInputLength: 3,\n                width: '100%',\n                multiple : false,\n                allowClear: true,\n                placeholder: __('Select a blueprint'),\n                formatNoMatches : function(){\n                    return __('Enter a blueprint');\n                },\n                maximumInputLength : 32\n            }).on('change', function(e){\n                setBlueprint(e.val);\n            });\n\n            initBlueprint();\n            $view.on('propopen.propview', function(){\n                initBlueprint();\n            });\n\n            /**\n             * Start the blueprint editing\n             * @private\n             */\n            function initBlueprint(){\n\n                if(typeof sectionModel.blueprint === 'undefined'){\n                    sectionBlueprint\n                        .getBlueprint(config.routes.blueprintByTestSection, sectionModel)\n                        .success(function(data){\n                            if(!_.isEmpty(data)){\n                                if(sectionModel.blueprint !== \"\"){\n                                    sectionModel.blueprint = data.uri;\n                                    $select.select2('data', {id: data.uri, text: data.text});\n                                    $select.trigger('change');\n                                }\n                            }\n                        });\n                }\n            }\n\n            /**\n             * save the categories into the model\n             * @private\n             */\n            function setBlueprint(blueprint){\n                sectionBlueprint.setBlueprint(sectionModel, blueprint);\n            }\n\n        }\n    }\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    function listenActionState (){\n\n        var $sections;\n\n        $('.sections').each(function(){\n            $sections = $('.section', $(this));\n\n            actions.removable($sections, 'h2');\n            actions.movable($sections, 'section', 'h2');\n        });\n\n        $(document)\n            .on('delete', function(e){\n                var $parent;\n                var $target = $(e.target);\n                if($target.hasClass('section')){\n                    $parent = $target.parents('.sections');\n                    actions.disable($parent.find('.section'), 'h2');\n                }\n            })\n            .on('add change undo.deleter deleted.deleter', function(e){\n                var $target = $(e.target);\n                if($target.hasClass('section') || $target.hasClass('sections')){\n                    $sections = $('.section', $target.hasClass('sections') ? $target : $target.parents('.sections'));\n                    actions.removable($sections, 'h2');\n                    actions.movable($sections, 'section', 'h2');\n                }\n            })\n            .on('open.toggler', '.rub-toggler', function(e){\n                if(e.namespace === 'toggler'){\n                    $(this).parents('h2').addClass('active');\n                }\n            })\n            .on('close.toggler', '.rub-toggler', function(e){\n                if(e.namespace === 'toggler'){\n                    $(this).parents('h2').removeClass('active');\n                }\n            });\n    }\n\n    /**\n     * The sectionView setup section related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/section\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/testpart',[\n    'jquery', 'lodash',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/section',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest'],\nfunction($, _, actions, sectionView, templates, qtiTestHelper){\n    'use strict';\n\n    /**\n     * Set up a test part: init action behaviors. Called for each test part.\n     *\n     * @param {modelOverseer} modelOverseer - the test model overseer. Should also provide some config entries\n     * @param {Object} partModel - the data model to bind to the test part\n     * @param {jQueryElement} $testPart - the testpart container to set up\n     */\n    function setUp (modelOverseer, partModel, $testPart){\n        var $actionContainer = $('h1', $testPart);\n        var config = modelOverseer.getConfig();\n\n        //run setup methods\n        actions.properties($actionContainer, 'testpart', partModel, propHandler);\n        actions.move($actionContainer, 'testparts', 'testpart');\n        sections();\n        addSection();\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n            var $identifier =  $('[data-bind=identifier]', $testPart);\n            $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'testPart'){\n                    $identifier.text(model.identifier);\n                }\n            });\n\n            //destroy it when it's testpart is removed\n            $testPart.on('delete', function(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            });\n        }\n\n        /**\n         * Set up sections that already belongs to the test part\n         * @private\n         */\n        function sections(){\n            if(!partModel.assessmentSections){\n                partModel.assessmentSections = [];\n            }\n            $('.section', $testPart).each(function(){\n                var $section = $(this);\n                var index = $section.data('bind-index');\n                if(!partModel.assessmentSections[index]){\n                    partModel.assessmentSections[index] = {};\n                }\n\n                sectionView.setUp(modelOverseer, partModel.assessmentSections[index], $section);\n            });\n        }\n\n        /**\n         * Enable to add new sections\n         * @private\n         * @fires modelOverseer#section-add\n         */\n        function addSection(){\n            $('.section-adder', $testPart).adder({\n                target: $('.sections', $testPart),\n                content : templates.section,\n                templateData : function(cb){\n\n                    //create a new section model object to be bound to the template\n                    var sectionIndex = $('.section', $testPart).length;\n                    cb({\n                        'qti-type' : 'assessmentSection',\n                        identifier : qtiTestHelper.getIdentifier('assessmentSection',  config.identifiers),\n                        title : 'Section ' + (sectionIndex + 1),\n                        index : 0,\n                        sectionParts : []\n                    });\n                }\n            });\n\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n                .off('add.binder', '#' + $testPart.attr('id') + ' .sections')\n                .on ('add.binder', '#' + $testPart.attr('id') + ' .sections', function(e, $section){\n                    var index, sectionModel;\n                    if(e.namespace === 'binder' && $section.hasClass('section')){\n                        index = $section.data('bind-index');\n                        sectionModel = partModel.assessmentSections[index];\n\n                        //initialize the new test part\n                        sectionView.setUp(modelOverseer, sectionModel, $section);\n\n                        /**\n                         * @event modelOverseer#section-add\n                         * @param {Object} sectionModel\n                         */\n                        modelOverseer.trigger('section-add', sectionModel);\n                    }\n                });\n        }\n    }\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    function listenActionState (){\n\n        var $testParts = $('.testpart');\n\n        actions.removable($testParts, 'h1');\n        actions.movable($testParts, 'testpart', 'h1');\n\n        $('.testparts')\n            .on('delete', function(e){\n                var $target = $(e.target);\n                if($target.hasClass('testpart')){\n                    actions.disable($('.testpart'), 'h1');\n                }\n            })\n            .on('add change undo.deleter deleted.deleter', function(e){\n                var $target = $(e.target);\n\n                if($target.hasClass('testpart') || $target.hasClass('testparts')){\n\n                    //refresh\n                    $testParts = $('.testpart');\n\n                    //check state\n                    actions.removable($testParts, 'h1');\n                    actions.movable($testParts, 'testpart', 'h1');\n                }\n            });\n    }\n\n    /**\n     * The testPartView setup testpart related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/testpart\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/test',[\n    'jquery', 'lodash', 'i18n', 'ui/hider', 'ui/feedback',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/testpart',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest'\n],\nfunction($, _, __, hider, feedback, actions, testPartView, templates, qtiTestHelper){\n    'use strict';\n\n    /**\n     * The TestView setup test related components and behavior\n     *\n     * @exports taoQtiTest/controller/creator/views/test\n     * @param {modelOverseer} modelOverseer - the test model overseer. Should also provide some config entries\n     */\n    function testView (modelOverseer) {\n        var testModel = modelOverseer.getModel();\n        var config = modelOverseer.getConfig();\n\n        actions.properties($('.test-creator-test > h1'), 'test', testModel, propHandler);\n        testParts();\n        addTestPart();\n\n        /**\n         * set up the existing test part views\n         * @private\n         */\n        function testParts () {\n            if(!testModel.testParts){\n                testModel.testParts = [];\n            }\n            $('.testpart').each(function(){\n                var $testPart = $(this);\n                var index = $testPart.data('bind-index');\n                if(!testModel.testParts[index]){\n                    testModel.testParts[index] = {};\n                }\n\n                testPartView.setUp(modelOverseer, testModel.testParts[index], $testPart);\n            });\n        }\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         * @fires modelOverseer#scoring-change\n         */\n        function propHandler(propView) {\n\n            var $view = propView.getView();\n            var $categoryScoreLine = $('.test-category-score', $view);\n            var $cutScoreLine = $('.test-cut-score', $view);\n            var $weightIdentifierLine = $('.test-weight-identifier', $view);\n            var $descriptions = $('.test-outcome-processing-description', $view);\n            var $generate = $('[data-action=\"generate-outcomes\"]', $view);\n            var $title = $('.test-creator-test > h1 [data-bind=title]');\n            var scoringState = JSON.stringify(testModel.scoring);\n\n            function changeScoring(scoring) {\n                var noOptions = !!scoring && ['none', 'custom'].indexOf(scoring.outcomeProcessing) === -1;\n                var newScoringState = JSON.stringify(scoring);\n\n                hider.toggle($cutScoreLine, !!scoring && scoring.outcomeProcessing === 'cut');\n                hider.toggle($categoryScoreLine, noOptions);\n                hider.toggle($weightIdentifierLine, noOptions);\n                hider.hide($descriptions);\n                hider.show($descriptions.filter('[data-key=\"' + scoring.outcomeProcessing + '\"]'));\n\n                if (scoringState !== newScoringState) {\n                    /**\n                     * @event modelOverseer#scoring-change\n                     * @param {Object} testModel\n                     */\n                    modelOverseer.trigger('scoring-change', testModel);\n                }\n                scoringState = newScoringState;\n            }\n\n            function updateOutcomes() {\n                var $panel = $('.outcome-declarations', $view);\n\n                $panel.html(templates.outcomes(modelOverseer.getOutcomesList()));\n            }\n\n            $('[name=test-outcome-processing]', $view).select2({\n                minimumResultsForSearch: -1,\n                width: '100%'\n            });\n\n            $generate.on('click', function() {\n                $generate.addClass('disabled').attr('disabled', true);\n                modelOverseer\n                    .on('scoring-write.regenerate', function() {\n                        modelOverseer.off('scoring-write.regenerate');\n                        feedback().success(__('The outcomes have been regenerated!')).on('destroy', function() {\n                            $generate.removeClass('disabled').removeAttr('disabled');\n                        });\n                    })\n                    .trigger('scoring-change');\n            });\n\n            $view.on('change.binder', function (e, model) {\n                if (e.namespace === 'binder' && model['qti-type'] === 'assessmentTest') {\n                    changeScoring(model.scoring);\n\n                    //update the test part title when the databinder has changed it\n                    $title.text(model.title);\n                }\n            });\n\n            modelOverseer.on('scoring-write', updateOutcomes);\n\n            changeScoring(testModel.scoring);\n            updateOutcomes();\n        }\n\n        /**\n         * Enable to add new test parts\n         * @private\n         * @fires modelOverseer#part-add\n         */\n        function addTestPart () {\n\n            $('.testpart-adder').adder({\n                target: $('.testparts'),\n                content : templates.testpart,\n                templateData : function(cb){\n\n                    //create an new testPart model object to be bound to the template\n                    var testPartIndex = $('.testpart').length;\n                    cb({\n                        'qti-type' : 'testPart',\n                        identifier : qtiTestHelper.getIdentifier('testPart', config.identifiers),\n                        index  : testPartIndex,\n                        navigationMode : 0,\n                        submissionMode : 0,\n                        assessmentSections : [{\n                            'qti-type' : 'assessmentSection',\n                            identifier : qtiTestHelper.getIdentifier('assessmentSection',  config.identifiers),\n                            title : 'Section 1',\n                            index : 0,\n                            sectionParts : []\n                        }]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n                .off('add.binder', '.testparts')\n                .on ('add.binder', '.testparts', function(e, $testPart, added){\n                    var partModel;\n                    if(e.namespace === 'binder' && $testPart.hasClass('testpart')){\n                        partModel = testModel.testParts[added.index];\n\n                        //initialize the new test part\n                        testPartView.setUp(modelOverseer, partModel, $testPart);\n\n                        /**\n                         * @event modelOverseer#part-add\n                         * @param {Object} partModel\n                         */\n                        modelOverseer.trigger('part-add', partModel);\n                    }\n                });\n        }\n    }\n\n    return testView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Basic helper that is intended to generate outcomes processing rules for a test model.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/processingRule',[\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/outcomeValidator',\n    'taoQtiTest/controller/creator/helpers/qtiElement',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/cardinality'\n], function (_, outcomeValidator, qtiElementHelper, baseTypeHelper, cardinalityHelper) {\n    'use strict';\n\n    var processingRuleHelper = {\n        /**\n         * Creates a basic processing rule\n         * @param {String} type\n         * @param {String} [identifier]\n         * @param {Array|Object} [expression]\n         * @returns {Object}\n         * @throws {TypeError} if the type is empty or is not a string\n         * @throws {TypeError} if the identifier is not valid\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        create: function create(type, identifier, expression) {\n            var processingRule = qtiElementHelper.create(type, identifier && validateIdentifier(identifier));\n\n            if (expression) {\n                processingRuleHelper.setExpression(processingRule, expression);\n            }\n\n            return processingRule;\n        },\n\n        /**\n         * Sets an expression to a processing rule\n         * @param {Object} processingRule\n         * @param {Object|Array} expression\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        setExpression: function setExpression(processingRule, expression) {\n            if (processingRule) {\n                if (_.isArray(expression)) {\n                    if (processingRule.expression) {\n                        processingRule.expression = null;\n                    }\n                    processingRule.expressions = validateOutcomeList(expression);\n                } else {\n                    if (processingRule.expressions) {\n                        processingRule.expressions = null;\n                    }\n                    if (expression) {\n                        processingRule.expression = validateOutcome(expression);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Adds an expression to a processing rule\n         * @param {Object} processingRule\n         * @param {Object|Array} expression\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        addExpression: function addExpression(processingRule, expression) {\n            if (processingRule && expression) {\n                if (processingRule.expression) {\n                    processingRule.expressions = forceArray(processingRule.expression);\n                    processingRule.expression = null;\n                }\n\n                if (_.isArray(expression)) {\n                    processingRule.expressions = forceArray(processingRule.expressions).concat(validateOutcomeList(expression));\n                } else {\n                    if (processingRule.expressions) {\n                        processingRule.expressions.push(expression);\n                    } else {\n                        processingRule.expression = validateOutcome(expression);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Creates a `setOutcomeValue` rule\n         * @param {String} identifier\n         * @param {Object|Array} [expression]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        setOutcomeValue: function setOutcomeValue(identifier, expression) {\n            return processingRuleHelper.create('setOutcomeValue',  validateIdentifier(identifier), expression);\n        },\n\n        /**\n         * Creates a `gte` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        gte: function gte(left, right) {\n            return binaryOperator('gte', left, right);\n        },\n\n        /**\n         * Creates a `lte` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        lte: function lte(left, right) {\n            return binaryOperator('lte', left, right);\n        },\n\n        /**\n         * Creates a `divide` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        divide: function divide(left, right) {\n            return binaryOperator('divide', left, right);\n        },\n\n        /**\n         * Creates a `sum` rule\n         * @param {Object|Array} terms\n         * @returns {Object}\n         * @throws {TypeError} if the terms are not valid QTI elements\n         */\n        sum: function sum(terms) {\n            var processingRule = processingRuleHelper.create('sum', null, forceArray(terms));\n\n            processingRule.minOperands = 1;\n            processingRule.maxOperands = -1;\n            processingRule.acceptedCardinalities = [cardinalityHelper.SINGLE, cardinalityHelper.MULTIPLE, cardinalityHelper.ORDERED];\n            processingRule.acceptedBaseTypes = [baseTypeHelper.INTEGER, baseTypeHelper.FLOAT];\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `testVariables` rule\n         * @param {String} identifier\n         * @param {String|Number} [type]\n         * @param {String} weightIdentifier\n         * @param {String|String[]} [includeCategories]\n         * @param {String|String[]} [excludeCategories]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         */\n        testVariables: function testVariables(identifier, type, weightIdentifier, includeCategories, excludeCategories) {\n            var processingRule = processingRuleHelper.create('testVariables');\n\n            processingRule.variableIdentifier = validateIdentifier(identifier);\n            processingRule.baseType = baseTypeHelper.getValid(type);\n            addWeightIdentifier(processingRule, weightIdentifier);\n            addSectionIdentifier(processingRule, '');\n            addCategories(processingRule, includeCategories, excludeCategories);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `outcomeMaximum` rule\n         * @param {String} identifier\n         * @param {String} weightIdentifier\n         * @param {String|String[]} [includeCategories]\n         * @param {String|String[]} [excludeCategories]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         */\n        outcomeMaximum: function outcomeMaximum(identifier, weightIdentifier, includeCategories, excludeCategories) {\n            var processingRule = processingRuleHelper.create('outcomeMaximum');\n\n            processingRule.outcomeIdentifier = validateIdentifier(identifier);\n\n            addWeightIdentifier(processingRule, weightIdentifier);\n            addSectionIdentifier(processingRule, '');\n            addCategories(processingRule, includeCategories, excludeCategories);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `numberPresented` rule\n         * @param {String|String[]} [includeCategories]\n         * @param {String|String[]} [excludeCategories]\n         * @returns {Object}\n         */\n        numberPresented: function numberPresented(includeCategories, excludeCategories) {\n            var processingRule = processingRuleHelper.create('numberPresented');\n\n            addSectionIdentifier(processingRule, '');\n            addCategories(processingRule, includeCategories, excludeCategories);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `baseValue` rule\n         * @param {*} [value]\n         * @param {String|Number} [type]\n         * @returns {Object}\n         */\n        baseValue: function baseValue(value, type) {\n            var processingRule = processingRuleHelper.create('baseValue');\n\n            processingRule.baseType = baseTypeHelper.getValid(type, baseTypeHelper.FLOAT);\n            processingRule.value = baseTypeHelper.getValue(processingRule.baseType, value);\n\n            return processingRule;\n        },\n\n        /**\n         ** Creates a `variable` rule\n         * @param {String} identifier\n         * @param {String} [weightIdentifier]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is not valid\n         * @throws {TypeError} if the weight identifier is not valid\n         */\n        variable: function variable(identifier, weightIdentifier) {\n            var processingRule = processingRuleHelper.create('variable', validateIdentifier(identifier));\n\n            addWeightIdentifier(processingRule, weightIdentifier);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `match` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        match: function match(left, right) {\n            return binaryOperator('match', left, right, cardinalityHelper.SAME, cardinalityHelper.SAME);\n        },\n\n        /**\n         * Creates a `isNull` rule\n         * @param {Object|Array} expression - the operand\n         * @returns {Object}\n         * @throws {TypeError} if the operand is not valid QTI element\n         */\n        isNull: function isNull(expression) {\n            return unaryOperator('isNull', expression, baseTypeHelper.ANY, cardinalityHelper.ANY);\n        },\n\n        /**\n         * Creates a `outcomeCondition` rule\n         * @param {Object} outcomeIf\n         * @param {Object} outcomeElse\n         * @returns {Object}\n         * @throws {TypeError} if the outcomeIf and outcomeElse operands are not valid QTI elements\n         */\n        outcomeCondition: function outcomeCondition(outcomeIf, outcomeElse) {\n            var processingRule = processingRuleHelper.create('outcomeCondition');\n\n            if (!outcomeValidator.validateOutcome(outcomeIf, false, 'outcomeIf')) {\n                throw new TypeError('You must provide a valid outcomeIf element!');\n            }\n\n            if (outcomeElse && !outcomeValidator.validateOutcome(outcomeElse, false, 'outcomeElse')) {\n                throw new TypeError('You must provide a valid outcomeElse element!');\n            }\n\n            processingRule.outcomeIf = outcomeIf;\n            processingRule.outcomeElseIfs = [];\n\n            if (outcomeElse) {\n                processingRule.outcomeElse = outcomeElse;\n            }\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `outcomeIf` rule\n         * @param {Object} expression\n         * @param {Object|Object[]} instruction\n         * @returns {Object}\n         * @throws {TypeError} if the expression and instruction operands are not valid QTI elements\n         */\n        outcomeIf: function outcomeIf(expression, instruction) {\n            var processingRule = processingRuleHelper.create('outcomeIf');\n\n            if (!_.isArray(instruction)) {\n                instruction = [instruction];\n            }\n\n            processingRule.expression = validateOutcome(expression);\n            processingRule.outcomeRules = validateOutcomeList(instruction);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `outcomeElse` rule\n         * @param {Object|Object[]} instruction\n         * @returns {Object}\n         * @throws {TypeError} if the instruction is not a valid QTI element\n         */\n        outcomeElse: function outcomeElse(instruction) {\n            var processingRule = processingRuleHelper.create('outcomeElse');\n\n            if (!_.isArray(instruction)) {\n                instruction = [instruction];\n            }\n\n            processingRule.outcomeRules = validateOutcomeList(instruction);\n\n            return processingRule;\n        }\n\n    };\n\n    /**\n     * Creates a unary operator rule\n     * @param {String} type - The rule type\n     * @param {Object|Array} expression - The operand\n     * @param {Number|Array} [baseType] - The accepted base type\n     * @param {Number|Array} [cardinality] - The accepted cardinality\n     * @returns {Object}\n     * @throws {TypeError} if the type is empty or is not a string\n     * @throws {TypeError} if the operand is not valid QTI element\n     */\n    function unaryOperator(type, expression, baseType, cardinality) {\n        var processingRule = processingRuleHelper.create(type, null, [expression]);\n\n        processingRule.minOperands = 1;\n        processingRule.maxOperands = 1;\n\n        addTypeAndCardinality(processingRule, baseType, cardinality);\n\n        return processingRule;\n    }\n\n    /**\n     * Creates a binary operator rule\n     * @param {String} type - The rule type\n     * @param {Object|Array} left - The left operand\n     * @param {Object|Array} right - The right operand\n     * @param {Number|Array} [baseType] - The accepted base type\n     * @param {Number|Array} [cardinality] - The accepted cardinality\n     * @returns {Object}\n     * @throws {TypeError} if the type is empty or is not a string\n     * @throws {TypeError} if the left and right operands are not valid QTI elements\n     */\n    function binaryOperator(type, left, right, baseType, cardinality) {\n        var processingRule = processingRuleHelper.create(type, null, [left, right]);\n\n        processingRule.minOperands = 2;\n        processingRule.maxOperands = 2;\n\n        addTypeAndCardinality(processingRule, baseType, cardinality);\n\n        return processingRule;\n    }\n\n    /**\n     * Appends the base type and the cardinality on a processing rule\n     * @param {Object} processingRule\n     * @param {Number|Array} [baseType] - The accepted base type\n     * @param {Number|Array} [cardinality] - The accepted cardinality\n     * @returns {Object}\n     */\n    function addTypeAndCardinality(processingRule, baseType, cardinality) {\n        if (_.isUndefined(baseType)) {\n            baseType = [baseTypeHelper.INTEGER, baseTypeHelper.FLOAT];\n        }\n\n        if (_.isUndefined(cardinality)) {\n            cardinality = [cardinalityHelper.SINGLE];\n        }\n\n        processingRule.acceptedCardinalities = forceArray(cardinality);\n        processingRule.acceptedBaseTypes = forceArray(baseType);\n\n        return processingRule;\n    }\n\n    /**\n     * Extends a processing rule with categories\n     * @param {Object} processingRule\n     * @param {Array|String} [includeCategories]\n     * @param {Array|String} [excludeCategories]\n     * @returns {Object}\n     */\n    function addCategories(processingRule, includeCategories, excludeCategories) {\n        processingRule.includeCategories = forceArray(includeCategories);\n        processingRule.excludeCategories = forceArray(excludeCategories);\n\n        return processingRule;\n    }\n\n    /**\n     * Appends the section identifier on a processing rule\n     * @param {Object} processingRule\n     * @param {String} [sectionIdentifier]\n     * @returns {Object}\n     * @throws {TypeError} if the weight identifier is not valid\n     */\n    function addSectionIdentifier(processingRule, sectionIdentifier) {\n        if (sectionIdentifier) {\n            if (!outcomeValidator.validateIdentifier(sectionIdentifier)) {\n                throw new TypeError('You must provide a valid weight identifier!');\n            }\n            processingRule.sectionIdentifier = sectionIdentifier;\n        } else {\n            processingRule.sectionIdentifier = '';\n        }\n\n        return processingRule;\n    }\n\n    /**\n     * Appends the weight identifier on a processing rule\n     * @param {Object} processingRule\n     * @param {String} [weightIdentifier]\n     * @returns {Object}\n     * @throws {TypeError} if the weight identifier is not valid\n     */\n    function addWeightIdentifier(processingRule, weightIdentifier) {\n        if (weightIdentifier) {\n            if (!outcomeValidator.validateIdentifier(weightIdentifier)) {\n                throw new TypeError('You must provide a valid weight identifier!');\n            }\n            processingRule.weightIdentifier = weightIdentifier;\n        } else {\n            processingRule.weightIdentifier = '';\n        }\n\n        return processingRule;\n    }\n\n    /**\n     * Validates an identifier\n     * @param {String} identifier\n     * @returns {String}\n     * @throws {TypeError} if the identifier is not valid\n     */\n    function validateIdentifier(identifier) {\n        if (!outcomeValidator.validateIdentifier(identifier)) {\n            throw new TypeError('You must provide a valid identifier!');\n        }\n        return identifier;\n    }\n\n    /**\n     * Validates an outcome\n     * @param {Object} outcome\n     * @returns {Object}\n     * @throws {TypeError} if the outcome is not valid\n     */\n    function validateOutcome(outcome) {\n        if (!outcomeValidator.validateOutcome(outcome)) {\n            throw new TypeError('You must provide a valid QTI element!');\n        }\n        return outcome;\n    }\n\n    /**\n     * Validates a list of outcomes\n     * @param {Array} outcomes\n     * @returns {Array}\n     * @throws {TypeError} if an outcome is not valid\n     */\n    function validateOutcomeList(outcomes) {\n        if (!outcomeValidator.validateOutcomes(outcomes)) {\n            throw new TypeError('You must provide a valid list of QTI elements!');\n        }\n        return outcomes;\n    }\n\n    /**\n     * Ensures a value is an array\n     * @param {*} value\n     * @returns {Array}\n     */\n    function forceArray(value) {\n        if (!value) {\n            value = [];\n        }\n        if (!_.isArray(value)) {\n            value = [value];\n        }\n        return value;\n    }\n\n    return processingRuleHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Basic helper that is intended to manage the score processing declaration in a test model.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/scoring',[\n    'lodash',\n    'i18n',\n    'core/format',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/outcome',\n    'taoQtiTest/controller/creator/helpers/processingRule'\n], function (_, __, format, baseTypeHelper, outcomeHelper, processingRuleHelper) {\n    'use strict';\n\n    /**\n     * The default cut score\n     * @todo Move this to a config file\n     * @type {Number}\n     */\n    var defaultCutScore = 0.5;\n\n    /**\n     * The name of the variable containing the score\n     * @type {String}\n     */\n    var defaultScoreIdentifier = 'SCORE';\n\n    /**\n     * The list of supported processing modes, indexed by mode identifier\n     * @type {Object}\n     */\n    var processingModes = {\n        none: {\n            key: 'none',\n            label: __('None'),\n            description: __('No outcome processing. Erase the existing rules, if any.')\n        },\n        custom: {\n            key: 'custom',\n            label: __('Custom'),\n            description: __('Custom outcome processing. No changes will be made to the existing rules.')\n        },\n        total: {\n            key: 'total',\n            label: __('Total score'),\n            description: __('The score will be processed for the entire test. A sum of all SCORE outcomes will be computed, the result will take place in the SCORE_TOTAL outcome.')\n                         + ' ' +\n                         __('If the category option is set, the score will also be processed per categories, and each results will take place in the SCORE_xxx outcome, where xxx is the name of the category.')\n        },\n        cut: {\n            key: 'cut',\n            label: __('Cut score'),\n            description: __('The score will be processed for the entire test. A sum of all SCORE outcomes will be computed, the result will be compared to the cut score, then the PASS_TOTAL outcome will be set accordingly.')\n                         + ' ' +\n                         __('If the category option is set, the score will also be processed per categories, and each results will take place in the PASS_xxx outcome, where xxx is the name of the category.')\n        }\n    };\n\n    /**\n     * The list of recipes to generate the outcomes\n     * @type {Object}\n     */\n    var outcomesRecipes = {\n        none: {\n            key: 'none',\n            clean: true\n        },\n        custom: {\n            key: 'custom',\n            clean: false\n        },\n        total: {\n            key: 'total',\n            signature: /^SCORE_([a-zA-Z][a-zA-Z0-9_\\.-]*)$/,\n            outcomes: [{\n                writer: 'total',\n                identifier: 'SCORE_TOTAL',\n                weighted: 'SCORE_TOTAL_WEIGHTED',\n                categoryIdentifier: 'SCORE_CATEGORY_%s',\n                categoryWeighted: 'SCORE_CATEGORY_WEIGHTED_%s'\n            }, {\n                writer: 'max',\n                identifier: 'SCORE_TOTAL_MAX',\n                weighted: 'SCORE_TOTAL_MAX_WEIGHTED',\n                categoryIdentifier: 'SCORE_CATEGORY_MAX_%s',\n                categoryWeighted: 'SCORE_CATEGORY_WEIGHTED_MAX_%s'\n            }],\n            clean: true\n        },\n        cut: {\n            key: 'cut',\n            include: 'total',\n            signature: /^PASS_([a-zA-Z][a-zA-Z0-9_\\.-]*)$/,\n            outcomes: [{\n                writer: 'cut',\n                identifier: 'PASS_ALL',\n                feedback: 'PASS_ALL_RENDERING',\n                feedbackOk: \"passed\",\n                feedbackFailed: \"not_passed\",\n                categoryIdentifier: 'PASS_CATEGORY_%s',\n                categoryFeedback: 'PASS_CATEGORY_%s_RENDERING'\n            }],\n            clean: true\n        }\n    };\n\n    /**\n     * List of writers that provide the outcomes for each score processing mode.\n     * @type {Object}\n     */\n    var outcomesWriters = {\n        /**\n         * Generates the outcomes that compute the \"Total score\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         * @param {Array} [categories]\n         */\n        total: function writerTotal(descriptor, scoring, outcomes, categories) {\n            // create the outcome and the rule that process the overall score\n            addTotalScoreOutcomes(outcomes, scoring, descriptor.identifier, false);\n            if (descriptor.weighted && scoring.weightIdentifier) {\n                addTotalScoreOutcomes(outcomes, scoring, descriptor.weighted, true);\n            }\n\n            // create an outcome per categories\n            if (descriptor.categoryIdentifier && categories) {\n                _.forEach(categories, function (category) {\n                    addTotalScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryIdentifier), false, category);\n                    if (descriptor.categoryWeighted && scoring.weightIdentifier) {\n                        addTotalScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryWeighted), true, category);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Generates the outcomes that compute the \"Max score\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         * @param {Array} [categories]\n         */\n        max: function writerMax(descriptor, scoring, outcomes, categories) {\n            // create the outcome and the rule that process the maximum overall score\n            addMaxScoreOutcomes(outcomes, scoring, descriptor.identifier, false);\n            if (descriptor.weighted && scoring.weightIdentifier) {\n                addMaxScoreOutcomes(outcomes, scoring, descriptor.weighted, true);\n            }\n\n            // create an outcome per categories\n            if (descriptor.categoryIdentifier && categories) {\n                _.forEach(categories, function (category) {\n                    addMaxScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryIdentifier), false, category);\n                    if (descriptor.categoryWeighted && scoring.weightIdentifier) {\n                        addMaxScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryWeighted), true, category);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Generates the outcomes that compute the \"Cut score\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         * @param {Array} [categories]\n         */\n        cut: function writerCut(descriptor, scoring, outcomes, categories) {\n            var cutScore = scoring.cutScore;\n            var totalModeOutcomes = outcomesRecipes.total.outcomes;\n            var total = _.find(totalModeOutcomes, {writer: 'total'});\n            var max = _.find(totalModeOutcomes, {writer: 'max'});\n            var whichOutcome = scoring.weightIdentifier ? 'weighted' : 'identifier';\n            var scoreIdentifier = total[whichOutcome];\n            var countIdentifier = max[whichOutcome];\n\n            // create the outcome and the rule that process the overall score\n            addCutScoreOutcomes(outcomes, descriptor.identifier, scoreIdentifier, countIdentifier, cutScore);\n\n            // create the outcome and the rule that process the score feedback\n            if (descriptor.feedback) {\n                addFeedbackScoreOutcomes(\n                    outcomes,\n                    descriptor.feedback,\n                    descriptor.identifier,\n                    descriptor.feedbackOk,\n                    descriptor.feedbackFailed\n                );\n            }\n\n            // create an outcome per category\n            if (descriptor.categoryIdentifier && categories) {\n                _.forEach(categories, function (category) {\n                    var categoryOutcome = scoring.weightIdentifier ? 'categoryWeighted' : 'categoryIdentifier';\n                    var categoryOutcomeIdentifier = formatCategoryOutcome(category, descriptor.categoryIdentifier);\n                    var categoryScoreIdentifier = formatCategoryOutcome(category, total[categoryOutcome]);\n                    var categoryCountIdentifier = formatCategoryOutcome(category, max[categoryOutcome]);\n\n                    addCutScoreOutcomes(outcomes, categoryOutcomeIdentifier, categoryScoreIdentifier, categoryCountIdentifier, cutScore);\n\n                    if (descriptor.categoryFeedback) {\n                        addFeedbackScoreOutcomes(\n                            outcomes,\n                            formatCategoryOutcome(category, descriptor.categoryFeedback),\n                            categoryOutcomeIdentifier,\n                            descriptor.feedbackOk,\n                            descriptor.feedbackFailed\n                        );\n                    }\n                });\n            }\n\n            return outcomes;\n        }\n    };\n\n    var scoringHelper = {\n        /**\n         * Checks the test model against outcome processing mode.\n         * Initializes the scoring property accordingly.\n         *\n         * @param {modelOverseer} modelOverseer\n         * @throws {TypeError} if the modelOverseer is invalid\n         * @fires modelOverseer#scoring-init\n         * @fires modelOverseer#scoring-generate\n         * @fires modelOverseer#scoring-write\n         */\n        init: function init(modelOverseer) {\n            var model;\n\n            if (!modelOverseer || !_.isFunction(modelOverseer.getModel)) {\n                throw new TypeError(\"You must provide a valid modelOverseer\");\n            }\n\n            model = modelOverseer.getModel();\n\n            // detect the score processing mode and build the descriptor used to manage the UI\n            model.scoring = detectScoring(modelOverseer);\n\n            modelOverseer\n                .on('scoring-change category-change delete', function () {\n                    /**\n                     * Regenerates the outcomes on any significant changes.\n                     * After the outcomes have been generated a write is needed to actually apply the data.\n                     * Other component can listen to this event and eventually prevent the write to happen.\n                     * @event modelOverseer#scoring-generate\n                     * @param {Object} outcomes\n                     */\n                    modelOverseer.trigger('scoring-generate', scoringHelper.generate(modelOverseer));\n                })\n                .on('scoring-generate', function (outcomes) {\n                    outcomeHelper.replaceOutcomes(model, outcomes);\n\n                    /**\n                     * The generated outcome have just been applied on the model.\n                     * @event modelOverseer#scoring-write\n                     * @param {Object} testModel\n                     */\n                    modelOverseer.trigger('scoring-write', model);\n                })\n\n                /**\n                 * @event modelOverseer#scoring-init\n                 * @param {Object} testModel\n                 */\n                .trigger('scoring-init', model);\n        },\n\n        /**\n         * If the processing mode has been set, generates the outcomes that define the scoring.\n         *\n         * @param {modelOverseer} modelOverseer\n         * @returns {Object}\n         * @throws {TypeError} if the modelOverseer is invalid or the processing mode is unknown\n         */\n        generate: function generate(modelOverseer) {\n            var model, scoring, outcomes, outcomeRecipe, recipes, categories;\n\n            if (!modelOverseer || !_.isFunction(modelOverseer.getModel)) {\n                throw new TypeError(\"You must provide a valid modelOverseer\");\n            }\n\n            model = modelOverseer.getModel();\n            scoring = model.scoring;\n            outcomes = getOutcomes(model);\n\n            // write the score processing mode by generating the outcomes variables, but only if the mode has been set\n            if (scoring) {\n                outcomeRecipe = outcomesRecipes[scoring.outcomeProcessing];\n                if (outcomeRecipe) {\n\n                    if (outcomeRecipe.clean) {\n                        // erase the existing rules, they will be replaced by those that are defined here\n                        removeScoring(outcomes);\n                    }\n\n                    // get the recipes that define the outcomes, include sub-recipes if any\n                    recipes = getRecipes(outcomeRecipe);\n\n                    // only get the categories if requested\n                    if (handleCategories(modelOverseer)) {\n                        categories = modelOverseer.getCategories();\n                    }\n\n                    // will generate outcomes based of the defined recipe\n                    _.forEach(recipes, function(recipe) {\n                        var writer = outcomesWriters[recipe.writer];\n                        writer(recipe, scoring, outcomes, categories);\n                    });\n\n                } else {\n                    throw new Error('Unknown score processing mode: ' + scoring.outcomeProcessing);\n                }\n            }\n\n            return outcomes;\n        }\n    };\n\n    /**\n     * Creates an outcome and the rule that process the total score\n     *\n     * @param {Object} model\n     * @param {Object} scoring\n     * @param {String} identifier\n     * @param {Boolean} [weight]\n     * @param {String} [category]\n     */\n    function addTotalScoreOutcomes(model, scoring, identifier, weight, category) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.FLOAT);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.sum(\n                processingRuleHelper.testVariables(scoring.scoreIdentifier, -1, weight && scoring.weightIdentifier, category)\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the maximum score\n     *\n     * @param {Object} model\n     * @param {Object} scoring\n     * @param {String} identifier\n     * @param {Boolean} [weight]\n     * @param {String} [category]\n     */\n    function addMaxScoreOutcomes(model, scoring, identifier, weight, category) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.FLOAT);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.sum(\n                processingRuleHelper.outcomeMaximum(scoring.scoreIdentifier, weight && scoring.weightIdentifier, category)\n            )\n        );\n        var outcomeCondition = processingRuleHelper.outcomeCondition(\n            processingRuleHelper.outcomeIf(\n                processingRuleHelper.isNull(\n                    processingRuleHelper.variable(identifier)\n                ),\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.numberPresented(category)\n                )\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n        outcomeHelper.addOutcomeProcessing(model, outcomeCondition);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the cut score\n     *\n     * @param {Object} model\n     * @param {String} identifier\n     * @param {String} scoreIdentifier\n     * @param {String} countIdentifier\n     * @param {String|Number} cutScore\n     */\n    function addCutScoreOutcomes(model, identifier, scoreIdentifier, countIdentifier, cutScore) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.BOOLEAN);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.gte(\n                processingRuleHelper.divide(\n                    processingRuleHelper.variable(scoreIdentifier),\n                    processingRuleHelper.variable(countIdentifier)\n                ),\n                processingRuleHelper.baseValue(cutScore, baseTypeHelper.FLOAT)\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the score feedback\n     *\n     * @param {Object} model\n     * @param {String} identifier\n     * @param {String} variable\n     * @param {String} passed\n     * @param {String} notPassed\n     */\n    function addFeedbackScoreOutcomes(model, identifier, variable, passed, notPassed) {\n        var type = baseTypeHelper.IDENTIFIER;\n        var outcome = outcomeHelper.createOutcome(identifier, type);\n        var processingRule = processingRuleHelper.outcomeCondition(\n            processingRuleHelper.outcomeIf(\n                processingRuleHelper.match(\n                    processingRuleHelper.variable(variable),\n                    processingRuleHelper.baseValue(true, baseTypeHelper.BOOLEAN)\n                ),\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.baseValue(passed, type)\n                )\n            ),\n            processingRuleHelper.outcomeElse(\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.baseValue(notPassed, type)\n                )\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome);\n        outcomeHelper.addOutcomeProcessing(model, processingRule);\n    }\n\n    /**\n     * Formats the identifier of a category outcome\n     * @param {String} category\n     * @param {String} template\n     * @returns {String}\n     */\n    function formatCategoryOutcome(category, template) {\n        return format(template, category.toUpperCase());\n    }\n\n    /**\n     * Checks whether an identifier belongs to a particular recipe\n     * @param {String} identifier\n     * @param {Object} recipe\n     * @param {Boolean} [onlyCategories]\n     * @returns {Boolean}\n     */\n    function belongToRecipe(identifier, recipe, onlyCategories) {\n        var match = false;\n        if (recipe.signature && recipe.signature.test(identifier)) {\n            match = true;\n            if (onlyCategories) {\n                _.forEach(recipe.outcomes, function(outcome) {\n                    if (outcome.identifier === identifier ||\n                        (outcome.weighted && outcome.weighted === identifier) ||\n                        (outcome.feedback && outcome.feedback === identifier)) {\n                        match = false;\n                        return false;\n                    }\n                });\n            }\n        }\n        return match;\n    }\n\n    /**\n     * Checks if all the outcomes are related to the recipe\n     * @param {Object} outcomeRecipe\n     * @param {Array} outcomes\n     * @param {Array} categories\n     * @returns {Boolean}\n     */\n    function matchRecipe(outcomeRecipe, outcomes, categories) {\n        var signatures = getSignatures(outcomeRecipe);\n        var match = true;\n\n        // check the outcomes definitions against the provided identifier\n        function matchRecipeOutcome(recipe, identifier) {\n            var outcomeMatch = false;\n\n            // first level, the signature must match\n            if (recipe.signature && recipe.signature.test(identifier)) {\n                _.forEach(recipe.outcomes, function(outcome) {\n                    // second level, the main identifier must match\n                    if (outcome.identifier !== identifier &&\n                        (!outcome.weighted || (outcome.weighted && outcome.weighted !== identifier)) &&\n                        (!outcome.feedback || (outcome.feedback && outcome.feedback !== identifier))) {\n\n                        if (categories) {\n                            // third level, a category must match\n                            _.forEach(categories, function(category) {\n                                if (outcome.categoryIdentifier &&\n                                    identifier === formatCategoryOutcome(category, outcome.categoryIdentifier)) {\n                                    outcomeMatch = true;\n                                } else if (outcome.categoryWeighted &&\n                                    identifier === formatCategoryOutcome(category, outcome.categoryWeighted)) {\n                                    outcomeMatch = true;\n                                } else if (outcome.categoryFeedback &&\n                                    identifier === formatCategoryOutcome(category, outcome.categoryFeedback)) {\n                                    outcomeMatch = true;\n                                }\n                                // found something?\n                                if (outcomeMatch) {\n                                    return false;\n                                }\n                            });\n                        }\n                    } else {\n                        outcomeMatch = true;\n                    }\n\n                    // found something?\n                    if (outcomeMatch) {\n                        return false;\n                    }\n                });\n            }\n\n            if (!outcomeMatch && recipe.include) {\n                outcomeMatch = matchRecipeOutcome(outcomesRecipes[recipe.include], identifier);\n            }\n\n            return outcomeMatch;\n        }\n\n        // only check the outcomes that are related to the scoring mode\n        _.forEach(outcomes, function(identifier) {\n            var signatureMatch = false;\n            _.forEach(signatures, function(signature) {\n                if (signature.test(identifier)) {\n                    signatureMatch = true;\n                    return false;\n                }\n            });\n\n            if (signatureMatch) {\n                match = matchRecipeOutcome(outcomeRecipe, identifier);\n\n                if (!match) {\n                    return false;\n                }\n            }\n        });\n\n        return match;\n    }\n\n    /**\n     * Gets all the outcomes signatures related to a scoring mode\n     * @param {Object} recipe\n     * @returns {Array}\n     */\n    function getSignatures(recipe) {\n        var signatures = [];\n\n        // list the signatures for each processing mode, taking care of includes\n        while(recipe) {\n            if (recipe.signature) {\n                signatures.push(recipe.signature);\n            }\n            recipe = recipe.include && outcomesRecipes[recipe.include];\n        }\n\n        return signatures;\n    }\n\n    /**\n     * Gets all the outcomes recipes related to a scoring mode\n     * @param {Object} recipe\n     * @returns {Array}\n     */\n    function getRecipes(recipe) {\n        var descriptors = [];\n\n        // get the recipes that define the outcomes, include sub-recipes if any\n        while(recipe) {\n            if (recipe.outcomes) {\n                descriptors = [].concat(recipe.outcomes, descriptors);\n            }\n            recipe = recipe.include && outcomesRecipes[recipe.include];\n        }\n\n        return descriptors;\n    }\n\n    /**\n     * Checks if an outcome is related to the outcomes recipe,\n     * then returns the recipe descriptor.\n     * @param {Object|String} outcome\n     * @returns {Object}\n     */\n    function getOutcomesRecipe(outcome) {\n        var identifier = outcomeHelper.getOutcomeIdentifier(outcome);\n        var mode = null;\n        _.forEach(outcomesRecipes, function (processingRecipe) {\n            if (belongToRecipe(identifier, processingRecipe)) {\n                mode = processingRecipe;\n                return false;\n            }\n        });\n        return mode;\n    }\n\n    /**\n     * Gets the score processing modes from a list of outcomes\n     * @param {Array} outcomes\n     * @returns {Array}\n     */\n    function listScoringModes(outcomes) {\n        var modes = {};\n        _.forEach(outcomes, function (outcome) {\n            var recipe = getOutcomesRecipe(outcome);\n            if (recipe) {\n                modes[recipe.key] = true;\n            }\n        });\n        return _.keys(modes);\n    }\n\n    /**\n     * Checks whether the categories have to be taken into account\n     * @param {modelOverseer} modelOverseer\n     * @returns {Boolean}\n     */\n    function handleCategories(modelOverseer) {\n        var model = modelOverseer.getModel();\n        return !!(model.scoring && model.scoring.categoryScore);\n    }\n\n    /**\n     * Checks if the test model contains outcomes for categories\n     * @param {Object} model\n     * @returns {Boolean}\n     */\n    function hasCategoryOutcome(model) {\n        var categoryOutcomes = false;\n        _.forEach(outcomeHelper.getOutcomeDeclarations(model), function (outcomeDeclaration) {\n            var identifier = outcomeHelper.getOutcomeIdentifier(outcomeDeclaration);\n            _.forEach(outcomesRecipes, function (processingRecipe) {\n                if (belongToRecipe(identifier, processingRecipe, true)) {\n                    categoryOutcomes = true;\n                    return false;\n                }\n            });\n        });\n        return categoryOutcomes;\n    }\n\n    /**\n     * Gets the defined cut score from the outcome rules\n     * @param {Object} model\n     * @returns {Number}\n     */\n    function getCutScore(model) {\n        var values = _(outcomeHelper.getOutcomeProcessingRules(model)).map(function (outcome) {\n            return outcomeHelper.getProcessingRuleProperty(outcome, 'setOutcomeValue.gte.baseValue.value');\n        }).compact().uniq().value();\n        if (_.isEmpty(values)) {\n            values = [defaultCutScore];\n        }\n        return Math.max(0, _.max(values));\n    }\n\n    /**\n     * Gets the defined weight identifier from the outcome rules\n     * @param {Object} model\n     * @returns {String}\n     */\n    function getWeightIdentifier(model) {\n        var values = [];\n        outcomeHelper.eachOutcomeProcessingRuleExpressions(model, function (processingRule) {\n            if (processingRule['qti-type'] === 'testVariables' && processingRule.weightIdentifier) {\n                values.push(processingRule.weightIdentifier);\n            }\n        });\n        values = _(values).compact().uniq().value();\n\n        return values.length ? values[0] : '';\n    }\n\n    /**\n     * Detects the outcome processing mode for the scoring\n     * @param {modelOverseer} modelOverseer\n     * @returns {String}\n     */\n    function getOutcomeProcessing(modelOverseer) {\n        var model = modelOverseer.getModel();\n        var outcomeDeclarations = outcomeHelper.getOutcomeDeclarations(model);\n        var outcomeRules = outcomeHelper.getOutcomeProcessingRules(model);\n\n        // walk through each outcome declaration, and tries to identify the score processing mode\n        var declarations = listScoringModes(outcomeDeclarations);\n        var processing = listScoringModes(outcomeRules);\n        var diff = _.difference(declarations, processing);\n        var count = _.size(declarations);\n        var included;\n\n        // default fallback, applied when several modes are detected at the same time\n        var outcomeProcessing = 'custom';\n\n        // set the score processing mode with respect to the found outcomes\n        if (count === _.size(processing)) {\n            if (!count) {\n                // no mode detected, set the mode to none\n                outcomeProcessing = 'none';\n            } else if (_.isEmpty(diff)) {\n                if (count > 1) {\n                    // several modes detected, try to reduce the list by detecting includes\n                    included = [];\n                    _.forEach(declarations, function(mode) {\n                        if (outcomesRecipes[mode] && outcomesRecipes[mode].include) {\n                            included.push(outcomesRecipes[mode].include);\n                        }\n                    });\n                    processing = _.difference(processing, included);\n                    count = _.size(processing);\n                }\n\n                if (count === 1) {\n                    // single mode detected, keep the last got key\n                    outcomeProcessing = processing[0];\n\n                    // check if all outcomes are strictly related to the detected mode\n                    if (!matchRecipe(outcomesRecipes[outcomeProcessing], modelOverseer.getOutcomesNames(), modelOverseer.getCategories())) {\n                        outcomeProcessing = 'custom';\n                    }\n                }\n            }\n        }\n\n        return outcomeProcessing;\n    }\n\n    /**\n     * Detects the score processing mode and builds the descriptor used to manage the UI.\n     * @param {modelOverseer} modelOverseer\n     * @returns {Object}\n     */\n    function detectScoring(modelOverseer) {\n        var model = modelOverseer.getModel();\n        return {\n            modes: processingModes,\n            scoreIdentifier: defaultScoreIdentifier,\n            weightIdentifier: getWeightIdentifier(model),\n            cutScore: getCutScore(model),\n            categoryScore: hasCategoryOutcome(model),\n            outcomeProcessing: getOutcomeProcessing(modelOverseer)\n        };\n    }\n\n    /**\n     * Removes all scoring outcomes\n     * @param {Object} model\n     */\n    function removeScoring(model) {\n        var scoringOutcomes = _.indexBy(outcomeHelper.listOutcomes(model, getOutcomesRecipe), function (outcome) {\n            return outcome;\n        });\n\n        outcomeHelper.removeOutcomes(model, function(outcome) {\n            var match = false;\n\n            function browseExpressions(processingRule) {\n                if (_.isArray(processingRule)) {\n                    _.forEach(processingRule, browseExpressions);\n                } else if (processingRule) {\n                    if (scoringOutcomes[outcomeHelper.getOutcomeIdentifier(processingRule)]) {\n                        match = true;\n                    }\n\n                    if (!match && processingRule.expression) {\n                        browseExpressions(processingRule.expression);\n                    }\n                    if (!match && processingRule.expressions) {\n                        browseExpressions(processingRule.expressions);\n                    }\n                    if (!match && processingRule.outcomeRules) {\n                        browseExpressions(processingRule.outcomeRules);\n                    }\n                    if (!match && processingRule.outcomeIf) {\n                        browseExpressions(processingRule.outcomeIf);\n                    }\n                    if (!match && processingRule.outcomeElse) {\n                        browseExpressions(processingRule.outcomeElse);\n                    }\n                }\n            }\n\n            if (outcome['qti-type'] === 'outcomeCondition') {\n                browseExpressions(outcome);\n            } else {\n                match = !!scoringOutcomes[outcomeHelper.getOutcomeIdentifier(outcome)];\n            }\n            return match;\n        });\n    }\n\n    /**\n     * Gets a copy of the list of outcomes, provides the same structure as the model\n     * @param {Object} model\n     * @returns {Object}\n     */\n    function getOutcomes(model) {\n        return {\n            outcomeDeclarations: [].concat(outcomeHelper.getOutcomeDeclarations(model)),\n            outcomeProcessing: {\n                outcomeRules: [].concat(outcomeHelper.getOutcomeProcessingRules(model))\n            }\n        };\n    }\n\n    return scoringHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/creator',[\n    'module',\n    'jquery',\n    'lodash',\n    'helpers',\n    'i18n',\n    'html5-history-api',\n    'ui/feedback',\n    'core/databindcontroller',\n    'taoQtiTest/controller/creator/modelOverseer',\n    'taoQtiTest/controller/creator/views/item',\n    'taoQtiTest/controller/creator/views/test',\n    'taoQtiTest/controller/creator/views/testpart',\n    'taoQtiTest/controller/creator/views/section',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/encoders/dom2qti',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'taoQtiTest/controller/creator/helpers/scoring',\n    'core/validator/validators',\n    'core/promise'\n], function(\n    module,\n    $,\n    _,\n    helpers,\n    __,\n    history,\n    feedback,\n    DataBindController,\n    modelOverseerFactory,\n    itemView, testView,\n    testPartView,\n    sectionView,\n    itemrefView,\n    Dom2QtiEncoder,\n    templates,\n    qtiTestHelper,\n    scoringHelper,\n    validators,\n    Promise\n    ){\n\n    'use strict';\n\n    /**\n     * Call the server to get the list of items\n     * @param {string} url\n     * @param {string} search - a posix pattern to filter items\n     * @returns {Promise}\n     */\n    var loadItems = function loadItems(url, search){\n        return new Promise( function(resolve, reject){\n            $.getJSON(url, {pattern : search, notempty : 'true'})\n                .done(resolve)\n                .fail(function(xhr){\n                    return reject(new Error(xhr.status + ' : ' + xhr.statusText));\n                });\n        });\n    };\n\n    /**\n     * Call the server to get the items categories\n     * @param {String} url - the endpoint\n     * @param {String[]} items - the list of items URIs\n     * @returns {Promise}\n     */\n    var getCategories = function getCategories(url, items){\n        return new Promise( function(resolve, reject){\n            if(items && items.length){\n                $.getJSON(url, { uris : items })\n                    .done(resolve)\n                    .fail(function(xhr){\n                        return reject(new Error(xhr.status + ' : ' + xhr.statusText));\n                    });\n            }\n        });\n    };\n\n    /**\n     * The test creator controller is the main entry point\n     * and orchestrates data retrieval and view/components loading.\n     * @exports creator/controller\n     */\n    var Controller = {\n\n        routes : {},\n\n        identifiers: [],\n\n         /**\n          * Start the controller, main entry method.\n          * @public\n          * @param {Object} options\n          * @param {Object} options.labels - the list of item's labels to give to the ItemView\n          * @param {Object} options.routes - action's urls\n          */\n        start : function(options){\n            var self = this;\n            var $container = $('#test-creator');\n            var $saver = $('#saver');\n            var binder, binderOptions, modelOverseer;\n\n            self.identifiers = [];\n\n            options = _.merge(module.config(), options || {});\n            options.routes = options.routes || {};\n            options.labels = options.labels || {};\n\n\n            //back button\n            $('#authoringBack').on('click', function(e){\n                e.preventDefault();\n\n                if (history) {\n                    history.back();\n                }\n            });\n\n            //set up the ItemView, give it a configured loadItems ref\n            itemView(\n                _.partial(loadItems, options.routes.items),\n                _.partial(getCategories, options.routes.categories)\n            );\n\n            // forwards some binder events to the model overseer\n            $container.on('change.binder delete.binder', function (e, model) {\n                if (e.namespace === 'binder' && model) {\n                    modelOverseer.trigger(e.type, model);\n                }\n            });\n\n            //Data Binding options\n            binderOptions = _.merge(options.routes, {\n                filters : {\n                    'isItemRef' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentItemRef');\n                    },\n                    'isSection' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentSection');\n                    }\n                },\n                encoders : {\n                    'dom2qti' : Dom2QtiEncoder\n                },\n                templates : templates,\n                beforeSave : function(model){\n                    //ensure the qti-type is present\n                    qtiTestHelper.addMissingQtiType(model);\n\n                    //apply consolidation rules\n                    qtiTestHelper.consolidateModel(model);\n\n                    //validate the model\n                    try {\n                        qtiTestHelper.validateModel(model);\n                    } catch(err) {\n                        $saver.attr('disabled', false).removeClass('disabled');\n                        feedback().error(__('The test has not been saved.') + ' ' + err);\n                        return false;\n                    }\n                    return true;\n                }\n            });\n\n            //set up the databinder\n            binder = DataBindController\n                .takeControl($container, binderOptions)\n                .get(function(model){\n                    //extract ids\n                    self.identifiers = qtiTestHelper.extractIdentifiers(model);\n\n                    // the model must be wrapped in order to share more (events, internal states, and more)\n                    modelOverseer = modelOverseerFactory(model, {\n                        uri : options.uri,\n                        identifiers : self.identifiers,\n                        labels : options.labels,\n                        routes : options.routes\n                    });\n\n                    //detect the scoring mode\n                    scoringHelper.init(modelOverseer);\n\n                    //register validators\n                    validators.register('idFormat', qtiTestHelper.idFormatValidator());\n                    validators.register('testIdFormat', qtiTestHelper.testidFormatValidator());\n                    validators.register('testIdAvailable', qtiTestHelper.idAvailableValidator(self.identifiers), true);\n\n                    //once model is loaded, we set up the test view\n                    testView(modelOverseer);\n\n                    //listen for changes to update available actions\n                    testPartView.listenActionState();\n                    sectionView.listenActionState();\n                    itemrefView.listenActionState();\n                    itemrefView.resize();\n\n                    $(window)\n                        .off('resize.qti-test-creator')\n                        .on('resize.qti-test-creator', function(){\n                            itemrefView.resize();\n                        });\n                });\n\n            //the save button triggers binder's save action.\n            $saver.on('click', function(event){\n                event.preventDefault();\n\n                if(!$saver.hasClass('disabled')){\n                    $saver.attr('disabled', true).addClass('disabled');\n                    binder.save(function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n\n                        feedback().success(__('Test Saved'));\n\n                    }, function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n                    });\n                }\n            });\n        }\n    };\n\n    return Controller;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n\n/**\n * This module allows adding extra buttons in the action bar of the test runner\n *\n */\ndefine('taoQtiTest/testRunner/actionBarHook',[\n    'jquery',\n    'lodash',\n    'core/errorHandler',\n    'core/promise'\n], function ($, _, errorHandler, Promise) {\n\n    'use strict';\n\n    /**\n     * Events namespace\n     * @type {String}\n     * @private\n     */\n    var _ns = '.actionBarHook';\n\n    /**\n     * We need to access the root document to listen for some events\n     * @type {jQuery}\n     * @private\n     */\n    var $doc = $(document);\n\n    /**\n     * List of loaded and visible hooks\n     * @type {Object}\n     * @private\n     */\n    var tools = {};\n\n    /**\n     * Flag set to true when the item is loaded\n     * @type {Boolean}\n     * @private\n     */\n    var itemIsLoaded = false;\n\n    // catch the item loaded event\n    $doc.off(_ns).on('serviceloaded' + _ns, function() {\n        itemIsLoaded = true;\n        _.forEach(tools, function(tool) {\n            triggerItemLoaded(tool);\n        });\n    });\n\n    /**\n     * Check that the toolConfig is correct\n     *\n     * @param {Object} toolconfig\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Array} [toolconfig.items] - an optional list of menu items\n     * @returns {Boolean}\n     */\n    function isValidConfig(toolconfig) {\n        return !!(_.isObject(toolconfig) && toolconfig.hook);\n    }\n\n    /**\n     * Triggers the itemLoaded event inside the provided actionBar hook\n     * @param {Object} tool\n     */\n    function triggerItemLoaded(tool) {\n        if (tool && tool.itemLoaded) {\n            tool.itemLoaded();\n        }\n    }\n\n    /**\n     * Init a test runner button from its config\n     *\n     * @param {String} id\n     * @param {Object|String} toolconfig\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Array} [toolconfig.items] - an optional list of menu items\n     * @param {Object} testContext - the complete state of the test\n     * @param {Object} testRunner - the test runner instance\n     * @fires ready.actionBarHook when the hook has been initialized\n     * @returns {Promise}\n     */\n    function initQtiTool($toolsContainer, id, toolconfig, testContext, testRunner) {\n\n        // the tool is always initialized before the item is loaded, so we can safely false the flag\n        itemIsLoaded = false;\n        tools[id] = null;\n\n        if (_.isString(toolconfig)) {\n            toolconfig = {\n                hook: toolconfig\n            };\n        }\n\n        return new Promise(function(resolve) {\n            if (isValidConfig(toolconfig)) {\n\n                require([toolconfig.hook], function (hook) {\n\n                    var $button;\n                    var $existingBtn;\n\n                    if (isValidHook(hook)) {\n                        //init the control\n                        hook.init(id, toolconfig, testContext, testRunner);\n\n                        //if an instance of the tool is already attached, remove it:\n                        $existingBtn = $toolsContainer.children('[data-control=\"' + id + '\"]');\n                        if ($existingBtn.length) {\n                            hook.clear($existingBtn);\n                            $existingBtn.remove();\n                        }\n\n                        //check if the tool is to be available\n                        if (hook.isVisible()) {\n                            //keep access to the tool\n                            tools[id] = hook;\n\n                            // renders the button from the config\n                            $button = hook.render();\n\n                            //only attach the button to the dom when everything is ready\n                            _appendInOrder($toolsContainer, $button);\n\n                            //ready !\n                            $button.trigger('ready' + _ns, [hook]);\n\n                            //fires the itemLoaded event if the item has already been loaded\n                            if (itemIsLoaded) {\n                                triggerItemLoaded(hook);\n                            }\n                        }\n\n                        resolve(hook);\n                    } else {\n                        errorHandler.throw(_ns, 'invalid hook format');\n                        resolve(null);\n                    }\n\n                }, function (e) {\n                    errorHandler.throw(_ns, 'the hook amd module cannot be found');\n                    resolve(null);\n                });\n\n            } else {\n                errorHandler.throw(_ns, 'invalid tool config format');\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Append a dom element $button to a $container in a specific order\n     * The orders are provided by data-order attribute set to the $button\n     *\n     * @param {JQuery} $container\n     * @param {JQuery} $button\n     */\n    function _appendInOrder($container, $button) {\n\n        var $after, $before;\n        var order = $button.data('order');\n\n        if ('last' === order) {\n\n            $container.append($button);\n\n        } else if ('first' === order) {\n\n            $container.prepend($button);\n\n        } else {\n\n            order = _.parseInt(order);\n            if (!_.isNaN(order)) {\n\n                $container.children('.action').each(function () {\n\n                    var $btn = $(this),\n                        _order = $btn.data('order');\n\n                    if ('last' === _order) {\n\n                        $before = $btn;\n                        $after = null;\n\n                    } else if ('first' === _order) {\n\n                        $before = null;\n                        $after = $btn;\n\n                    } else {\n\n                        _order = _.parseInt(_order);\n\n                        if (_.isNaN(_order) || _order > order) {\n                            $before = $btn;\n                            $after = null;\n                            //stops here because $container children returns the dom elements in the dom order\n                            return false;\n                        } else if (_order === order) {\n                            $after = $btn;\n                        } else if (_order < order) {\n                            $after = $btn;\n                            $before = null;\n                        }\n\n                    }\n\n                });\n\n                if ($after) {\n                    $after.after($button);\n                } else if ($before) {\n                    $before.before($button);\n                } else {\n                    $container.append($button);\n                }\n\n            } else {\n                //unordered buttons are append at the end (including when order equals 0)\n                $container.append($button);\n            }\n        }\n    }\n\n    /**\n     * Check if the hook object is valid\n     *\n     * @param {Object} hook\n     * @param {Function} hook.init\n     * @param {Function} hook.clear\n     * @param {Function} hook.isVisible\n     * @returns {Boolean}\n     */\n    function isValidHook(hook) {\n        return (_.isObject(hook) && _(['init', 'render', 'clear', 'isVisible']).reduce(function (result, method) {\n            return result && _.isFunction(hook[method]);\n        }, true));\n    }\n\n    return {\n        isValid: isValidConfig,\n        initQtiTool: initQtiTool\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/actionBarTools',[\n    'jquery',\n    'lodash',\n    'core/eventifier',\n    'core/promise',\n    'taoQtiTest/testRunner/actionBarHook'\n], function ($, _, eventifier, Promise, actionBarHook) {\n    'use strict';\n\n    /**\n     * The list of registered actionBar tools\n     * @type {Object}\n     */\n    var registeredQtiTools;\n\n    /**\n     * The list of actionBar tools instances\n     * @type {Object}\n     */\n    var qtiTools;\n\n    /**\n     * Manages the actionBar tools\n     * @type {Object}\n     */\n    var actionBarTools = {\n        /**\n         * Registers the actionBar tools\n         * @param {Object} tools\n         */\n        register : function register(tools) {\n            var registerTools = tools || {};\n\n            /**\n             * @event actionBarTools#beforeregister\n             * @param {Object} tools\n             * @param {actionBarTools} this\n             */\n            this.trigger('beforeregister', registerTools, this);\n\n            registeredQtiTools = registerTools;\n\n            /**\n             * @event actionBarTools#afterregister\n             * @param {Object} tools\n             * @param {actionBarTools} this\n             */\n            this.trigger('afterregister', registerTools, this);\n        },\n\n        /**\n         * Gets the list of registered tools\n         * @returns {Object}\n         */\n        getRegisteredTools : function getRegisteredTools() {\n            return registeredQtiTools || {};\n        },\n\n        /**\n         * Gets a particular tool config\n         * @param {String} id\n         * @returns {Object}\n         */\n        getRegistered : function getRegistered(id) {\n            return registeredQtiTools && registeredQtiTools[id];\n        },\n\n        /**\n         * Checks if a particular tool is registered\n         * @param {String} id\n         * @returns {Boolean}\n         */\n        isRegistered : function isRegistered(id) {\n            return !!(registeredQtiTools && registeredQtiTools[id]);\n        },\n\n        /**\n         * Gets a particular tool\n         * @param {String} id\n         * @returns {Object}\n         */\n        get : function get(id) {\n            return qtiTools && qtiTools[id];\n        },\n\n        /**\n         * Gets the list of tools instances\n         * @returns {Array}\n         */\n        list : function list() {\n            return _.values(qtiTools || {});\n        },\n\n        /**\n         * Renders the actionBar\n         * @param {String|jQuery|HTMLElement} container - The container in which renders the tools\n         * @param {Object} testContext - The assessment test context\n         * @param {Object} testRunner - The assessment test runner\n         * @param {Function} [callback] - An optional callback fired when all tools have been rendered\n         */\n        render : function render(container, testContext, testRunner, callback) {\n            var self = this;\n            var $container = $(container);\n            var promises = [];\n\n            /**\n             * @event actionBarTools#beforerender\n             * @param {jQuery} $container\n             * @param {Object} testContext\n             * @param {Object} testRunner\n             * @param {actionBarTools} this\n             */\n            this.trigger('beforerender', $container, testContext, testRunner, this);\n\n            _.forIn(this.getRegisteredTools(), function(toolconfig, id){\n                promises.push(actionBarHook.initQtiTool($container, id, toolconfig, testContext, testRunner));\n            });\n\n            Promise.all(promises).then(function(values) {\n                var tools = [];\n                qtiTools = {};\n\n                _.forEach(values, function(tool) {\n                    if (tool) {\n                        tools.push(tool);\n                        qtiTools[tool.getId()] = tool;\n                    }\n                });\n\n                if (_.isFunction(callback)) {\n                    callback.call(self, tools, $container, testContext, testRunner, self);\n                }\n\n                /**\n                 * @event actionBarTools#afterrender\n                 * @param {Array} tools\n                 * @param {jQuery} $container\n                 * @param {Object} testContext\n                 * @param {Object} testRunner\n                 * @param {actionBarTools} this\n                 */\n                self.trigger('afterrender', tools, $container, testContext, testRunner, self);\n            });\n        }\n    };\n\n    return eventifier(actionBarTools);\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"        <aside class=\\\"test-sidebar test-sidebar-\";\n  if (helper = helpers.region) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.region); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" flex-container-navi qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n            <div class=\\\"qti-navigator-collapsible\\\">\\n                <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\n                <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n                <ul class=\\\"collapsible-panel plain\\\">\\n                    <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-filters\\\">\\n                <ul class=\\\"plain clearfix\\\">\\n                    <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                        <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"</span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                        <span class=\\\"icon-unanswered qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                        <span class=\\\"icon-flagged qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <nav class=\\\"qti-navigator-tree\\\">\\n            </nav>\\n\\n            <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n                <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                <p class=\\\"qti-navigator-message\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                </p>\\n            </div>\\n        </aside>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            <span class=\\\"icon-up\\\"></span>\\n                            <span class=\\\"icon-down\\\"></span>\\n                        </span>\\n                        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.sections)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(29, program29, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                    </li>\\n                    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n                            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                        </ul>\\n                        \";\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                                    <span class=\\\"qti-navigator-counter\\\">\";\n  if (helper = helpers.answered) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.answered); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                </span>\\n                                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                                </ul>\\n                            </li>\\n                            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                                    <li class=\\\"qti-navigator-item\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                            <span class=\\\"qti-navigator-icon icon-\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\\n                                            <span class=\\\"qti-navigator-number\\\">\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                                        </span>\\n                                    </li>\\n                                    \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \" flagged\";\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  return \" answered\";\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  return \" viewed\";\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  return \" unseen\";\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  return \"flagged\";\n  }\n\nfunction program21(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program22(depth0,data) {\n  \n  \n  return \"answered\";\n  }\n\nfunction program24(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program25(depth0,data) {\n  \n  \n  return \"viewed\";\n  }\n\nfunction program27(depth0,data) {\n  \n  \n  return \"unseen\";\n  }\n\nfunction program29(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n                        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n                            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                            <p class=\\\"qti-navigator-message\\\">\\n                                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                            </p>\\n                            <p class=\\\"qti-navigator-actions\\\">\\n                                <button class=\\\"btn-info small\\\" data-id=\\\"\";\n  if (helper = helpers.itemId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.itemId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\n                                    <span class=\\\"icon-play r\\\"></span>\\n                                </button>\\n                            </p>\\n                        </div>\\n                        \";\n  return buffer;\n  }\n\n  buffer += \"                <ul class=\\\"qti-navigator-parts plain\\\">\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/testReview',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiTest/testRunner/tpl/navigator',\n    'tpl!taoQtiTest/testRunner/tpl/navigatorTree',\n    'util/capitalize'\n], function ($, _, __, navigatorTpl, navigatorTreeTpl, capitalize) {\n    'use strict';\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n        active : 'active',\n        collapsed : 'collapsed',\n        collapsible : 'collapsible',\n        hidden : 'hidden',\n        disabled : 'disabled',\n        flagged : 'flagged',\n        answered : 'answered',\n        viewed : 'viewed',\n        unseen : 'unseen',\n        icon : 'qti-navigator-icon',\n        scope : {\n            test : 'scope-test',\n            testPart : 'scope-test-part',\n            testSection : 'scope-test-section'\n        }\n    };\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n        component : '.qti-navigator',\n        filterBar : '.qti-navigator-filters',\n        tree : '.qti-navigator-tree',\n        collapseHandle : '.qti-navigator-collapsible',\n        linearState : '.qti-navigator-linear',\n        infoAnswered : '.qti-navigator-answered .qti-navigator-counter',\n        infoViewed : '.qti-navigator-viewed .qti-navigator-counter',\n        infoUnanswered : '.qti-navigator-unanswered .qti-navigator-counter',\n        infoFlagged : '.qti-navigator-flagged .qti-navigator-counter',\n        infoPanel : '.qti-navigator-info',\n        infoPanelLabels : '.qti-navigator-info > .qti-navigator-label',\n        parts : '.qti-navigator-part',\n        partLabels : '.qti-navigator-part > .qti-navigator-label',\n        sections : '.qti-navigator-section',\n        sectionLabels : '.qti-navigator-section > .qti-navigator-label',\n        items : '.qti-navigator-item',\n        itemLabels : '.qti-navigator-item > .qti-navigator-label',\n        itemIcons : '.qti-navigator-item > .qti-navigator-icon',\n        icons : '.qti-navigator-icon',\n        linearStart : '.qti-navigator-linear-part button',\n        counters : '.qti-navigator-counter',\n        actives : '.active',\n        collapsible : '.collapsible',\n        collapsiblePanels : '.collapsible-panel',\n        unseen : '.unseen',\n        answered : '.answered',\n        flagged : '.flagged',\n        notFlagged : ':not(.flagged)',\n        notAnswered : ':not(.answered)',\n        hidden : '.hidden'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n        all : \"\",\n        unanswered : _selectors.answered,\n        flagged : _selectors.notFlagged,\n        answered : _selectors.notAnswered,\n        filtered : _selectors.hidden\n    };\n\n    /**\n     * Maps of config options translated from the context object to the local options\n     * @type {Object}\n     * @private\n     */\n    var _optionsMap = {\n        'reviewScope' : 'reviewScope',\n        'reviewPreventsUnseen' : 'preventsUnseen',\n        'canCollapse' : 'canCollapse'\n    };\n\n    /**\n     * Maps the handled review scopes\n     * @type {Object}\n     * @private\n     */\n    var _reviewScopes = {\n        test : 'test',\n        testPart : 'testPart',\n        testSection : 'testSection'\n    };\n\n    /**\n     * Provides a test review manager\n     * @type {Object}\n     */\n    var testReview = {\n        /**\n         * Initializes the component\n         * @param {String|jQuery|HTMLElement} element The element on which install the component\n         * @param {Object} [options] A list of extra options\n         * @param {String} [options.region] The region on which put the component: left or right\n         * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\n         * the whole test, the current test part or the current test section)\n         * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n         * @returns {testReview}\n         */\n        init: function init(element, options) {\n            var initOptions = _.isObject(options) && options || {};\n            var putOnRight = 'right' === initOptions.region;\n            var insertMethod = putOnRight ? 'append' : 'prepend';\n\n            this.options = initOptions;\n            this.disabled = false;\n            this.hidden = !!initOptions.hidden;\n            this.currentFilter = 'all';\n\n            // clean the DOM if the init method is called after initialisation\n            if (this.$component) {\n                this.$component.remove();\n            }\n\n            // build the component structure and inject it into the DOM\n            this.$container = $(element);\n            insertMethod = this.$container[insertMethod];\n            if (insertMethod) {\n                insertMethod.call(this.$container, navigatorTpl({\n                    region: putOnRight ? 'right' : 'left',\n                    hidden: this.hidden\n                }));\n            } else {\n                throw new Error(\"Unable to inject the component structure into the DOM\");\n            }\n\n            // install the component behaviour\n            this._loadDOM();\n            this._initEvents();\n            this._updateDisplayOptions();\n\n            return this;\n        },\n\n        /**\n         * Links the component to the underlying DOM elements\n         * @private\n         */\n        _loadDOM: function() {\n            this.$component = this.$container.find(_selectors.component);\n\n            // access to info panel displaying counters\n            this.$infoAnswered = this.$component.find(_selectors.infoAnswered);\n            this.$infoViewed = this.$component.find(_selectors.infoViewed);\n            this.$infoUnanswered = this.$component.find(_selectors.infoUnanswered);\n            this.$infoFlagged = this.$component.find(_selectors.infoFlagged);\n\n            // access to filter switches\n            this.$filterBar = this.$component.find(_selectors.filterBar);\n            this.$filters = this.$filterBar.find('li');\n\n            // access to the tree of parts/sections/items\n            this.$tree = this.$component.find(_selectors.tree);\n\n            // access to the panel displayed when a linear part is reached\n            this.$linearState = this.$component.find(_selectors.linearState);\n        },\n\n        /**\n         * Installs the event handlers on the underlying DOM elements\n         * @private\n         */\n        _initEvents: function() {\n            var self = this;\n\n            // click on the collapse handle: collapse/expand the review panel\n            this.$component.on('click' + _selectors.component, _selectors.collapseHandle, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                self.$component.toggleClass(_cssCls.collapsed);\n                if (self.$component.hasClass(_cssCls.collapsed)) {\n                    self._openSelected();\n                }\n            });\n\n            // click on the info panel title: toggle the related panel\n            this.$component.on('click' + _selectors.component, _selectors.infoPanelLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.infoPanel);\n                self._togglePanel($panel, _selectors.infoPanel);\n            });\n\n            // click on a part title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.partLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.parts);\n                var open = self._togglePanel($panel, _selectors.parts);\n\n                if (open) {\n                    if ($panel.hasClass(_cssCls.active)) {\n                        self._openSelected();\n                    } else {\n                        self._openOnly($panel.find(_selectors.sections).first(), $panel);\n                    }\n                }\n            });\n\n            // click on a section title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.sectionLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.sections);\n\n                self._togglePanel($panel, _selectors.sections);\n            });\n\n            // click on an item: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.itemLabels, function(event) {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $item = $(this).closest(_selectors.items);\n                var $target;\n\n                if (!$item.hasClass(_cssCls.disabled)) {\n                    $target = $(event.target);\n                    if ($target.is(_selectors.icons) && !self.$component.hasClass(_cssCls.collapsed)) {\n                        if (!$item.hasClass(_cssCls.unseen)) {\n                            self._mark($item);\n                        }\n                    } else {\n                        self._select($item);\n                        self._jump($item);\n                    }\n                }\n            });\n\n            // click on the start button inside a linear part: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.linearStart, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n\n                if (!$btn.hasClass(_cssCls.disabled)) {\n                    $btn.addClass(_cssCls.disabled);\n                    self._jump($btn);\n                }\n            });\n\n            // click on a filter button\n            this.$filterBar.on('click' + _selectors.component, 'li', function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n                var mode = $btn.data('mode');\n\n                self.$filters.removeClass(_cssCls.active);\n                self.$component.removeClass(_cssCls.collapsed);\n                $btn.addClass(_cssCls.active);\n\n                self._filter(mode);\n            });\n        },\n\n        /**\n         * Filters the items by a criteria\n         * @param {String} criteria\n         * @private\n         */\n        _filter: function(criteria) {\n            var $items = this.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\n            var filter = _filterMap[criteria];\n            if (filter) {\n                $items.filter(filter).addClass(_cssCls.hidden);\n            }\n            this._updateSectionCounters(!!filter);\n            this.currentFilter = criteria;\n        },\n\n        /**\n         * Selects an item\n         * @param {String|jQuery} position The item's position\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _select: function(position, open) {\n            // find the item to select and extract its hierarchy\n            var selected = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            if (open) {\n                this._openOnly(hierarchy);\n            }\n\n            // select the item\n            this.$tree.find(_selectors.actives).removeClass(_cssCls.active);\n            hierarchy.add(selected).addClass(_cssCls.active);\n            return selected;\n        },\n\n        /**\n         * Opens the tree on the selected item only\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _openSelected: function() {\n            // find the selected item and extract its hierarchy\n            var selected = this.$tree.find(_selectors.items + _selectors.actives);\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            this._openOnly(hierarchy);\n\n            return selected;\n        },\n\n        /**\n         * Collapses the full tree and opens only the provided branch\n         * @param {jQuery} opened The element to be opened\n         * @param {jQuery} [root] The root element from which collapse the panels\n         * @private\n         */\n        _openOnly: function(opened, root) {\n            (root || this.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n            opened.removeClass(_cssCls.collapsed);\n        },\n\n        /**\n         * Toggles a panel\n         * @param {jQuery} panel The panel to toggle\n         * @param {String} [collapseSelector] Selector of panels to collapse\n         * @returns {Boolean} Returns `true` if the panel just expanded now\n         */\n        _togglePanel: function(panel, collapseSelector) {\n            var collapsed = panel.hasClass(_cssCls.collapsed);\n\n            if (collapseSelector) {\n                this.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n            }\n\n            if (collapsed) {\n                panel.removeClass(_cssCls.collapsed);\n            } else {\n                panel.addClass(_cssCls.collapsed);\n            }\n            return collapsed;\n        },\n\n        /**\n         * Sets the icon of a particular item\n         * @param {jQuery} $item\n         * @param {String} icon\n         * @private\n         */\n        _setItemIcon: function($item, icon) {\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\n        },\n\n        /**\n         * Sets the icon of a particular item according to its state\n         * @param {jQuery} $item\n         * @private\n         */\n        _adjustItemIcon: function($item) {\n            var icon = null;\n            var defaultIcon = _cssCls.unseen;\n            var iconCls = [\n                _cssCls.flagged,\n                _cssCls.answered,\n                _cssCls.viewed\n            ];\n\n            _.forEach(iconCls, function(cls) {\n                if ($item.hasClass(cls)) {\n                    icon = cls;\n                    return false;\n                }\n            });\n\n            this._setItemIcon($item, icon || defaultIcon);\n        },\n\n        /**\n         * Toggle the marked state of an item\n         * @param {jQuery} $item\n         * @param {Boolean} [flag]\n         * @private\n         */\n        _toggleFlag: function($item, flag) {\n            $item.toggleClass(_cssCls.flagged, flag);\n            this._adjustItemIcon($item);\n        },\n\n        /**\n         * Marks an item for later review\n         * @param {jQuery} $item\n         * @private\n         */\n        _mark: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n            var flag = !$item.hasClass(_cssCls.flagged);\n\n            this._toggleFlag($item);\n\n            /**\n             * A storage of the flag is required\n             * @event testReview#mark\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('mark', [flag, itemPosition, itemId]);\n        },\n\n        /**\n         * Jumps to an item\n         * @param {jQuery} $item\n         * @private\n         */\n        _jump: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n\n            /**\n             * A jump to a particular item is required\n             * @event testReview#jump\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('jump', [itemPosition, itemId]);\n        },\n\n        /**\n         * Updates the sections related items counters\n         * @param {Boolean} filtered\n         */\n        _updateSectionCounters: function(filtered) {\n            var self = this;\n            var filter = _filterMap[filtered ? 'filtered' : 'answered'];\n            this.$tree.find(_selectors.sections).each(function() {\n                var $section = $(this);\n                var $items = $section.find(_selectors.items);\n                var $filtered = $items.filter(filter);\n                var total = $items.length;\n                var nb = total - $filtered.length;\n                self._writeCount($section.find(_selectors.counters), nb, total);\n            });\n        },\n\n        /**\n         * Updates the display according to options\n         * @private\n         */\n        _updateDisplayOptions: function() {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test';\n            var scopeClass = _cssCls.scope[reviewScope];\n            var $root = this.$component;\n            _.forEach(_cssCls.scope, function(cls) {\n                $root.removeClass(cls);\n            });\n            if (scopeClass) {\n                $root.addClass(scopeClass);\n            }\n            $root.toggleClass(_cssCls.collapsible, this.options.canCollapse);\n        },\n\n        /**\n         * Updates the local options from the provided context\n         * @param {Object} testContext The progression context\n         * @private\n         */\n        _updateOptions: function(testContext) {\n            var options = this.options;\n            _.forEach(_optionsMap, function(optionKey, contextKey) {\n                if (undefined !== testContext[contextKey]) {\n                    options[optionKey] = testContext[contextKey];\n                }\n            });\n        },\n\n        /**\n         * Updates the info panel\n         */\n        _updateInfos: function() {\n            var progression = this.progression,\n                unanswered = Number(progression.total) - Number(progression.answered);\n\n            // update the info panel\n            this._writeCount(this.$infoAnswered, progression.answered, progression.total);\n            this._writeCount(this.$infoUnanswered, unanswered, progression.total);\n            this._writeCount(this.$infoViewed, progression.viewed, progression.total);\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\n        },\n\n        /**\n         * Updates a counter\n         * @param {jQuery} $place\n         * @param {Number} count\n         * @param {Number} total\n         * @private\n         */\n        _writeCount: function($place, count, total) {\n            $place.text(count + '/' + total);\n        },\n\n        /**\n         * Gets the progression stats for the whole test\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTest: function(testContext) {\n            return {\n                total : testContext.numberItems || 0,\n                answered : testContext.numberCompleted || 0,\n                viewed : testContext.numberPresented || 0,\n                flagged : testContext.numberFlagged || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test part\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestPart: function(testContext) {\n            return {\n                total : testContext.numberItemsPart || 0,\n                answered : testContext.numberCompletedPart || 0,\n                viewed : testContext.numberPresentedPart || 0,\n                flagged : testContext.numberFlaggedPart || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test section\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestSection: function(testContext) {\n            return {\n                total : testContext.numberItemsSection || 0,\n                answered : testContext.numberCompletedSection || 0,\n                viewed : testContext.numberPresentedSection || 0,\n                flagged : testContext.numberFlaggedSection || 0\n            };\n        },\n\n        /**\n         * Updates the navigation tre\n         * @param {Object} testContext The progression context\n         */\n        _updateTree: function(testContext) {\n            var navigatorMap = testContext.navigatorMap;\n            var reviewScope = this.options.reviewScope;\n            var reviewScopePart = reviewScope === 'testPart';\n            var reviewScopeSection = reviewScope === 'testSection';\n            var _partsFilter = function(part) {\n                if (reviewScopeSection && part.sections) {\n                    part.sections = _.filter(part.sections, _partsFilter);\n                }\n                return part.active;\n            };\n\n            // rebuild the tree\n            if (navigatorMap) {\n                if (reviewScopePart || reviewScopeSection) {\n                    // display only the current section\n                    navigatorMap = _.filter(navigatorMap, _partsFilter);\n                }\n\n                this.$filterBar.show();\n                this.$linearState.hide();\n                this.$tree.html(navigatorTreeTpl({\n                    parts: navigatorMap\n                }));\n\n                if (this.options.preventsUnseen) {\n                    // disables all unseen items to prevent the test taker has access to.\n                    this.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n                }\n            } else {\n                this.$filterBar.hide();\n                this.$linearState.show();\n                this.$tree.empty();\n            }\n\n            // apply again the current filter\n            this._filter(this.$filters.filter(_selectors.actives).data('mode'));\n        },\n\n        /**\n         * Set the marked state of an item\n         * @param {Number|String|jQuery} position\n         * @param {Boolean} flag\n         */\n        setItemFlag: function setItemFlag(position, flag) {\n            var $item = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var progression = this.progression;\n\n            // update the item flag\n            this._toggleFlag($item, flag);\n\n            // update the info panel\n            progression.flagged = this.$tree.find(_selectors.flagged).length;\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\n            this._filter(this.currentFilter);\n        },\n\n        /**\n         * Update the number of flagged items in the test context\n         * @param {Object} testContext The test context\n         * @param {Number} position The position of the flagged item\n         * @param {Boolean} flag The flag state\n         */\n        updateNumberFlagged: function(testContext, position, flag) {\n            var fields = ['numberFlagged'];\n            var currentPosition = testContext.itemPosition;\n            var currentFound = false, currentSection = null, currentPart = null;\n            var itemFound = false, itemSection = null, itemPart = null;\n\n            if (testContext.navigatorMap) {\n                // find the current item and the marked item inside the navigator map\n                // check if the marked item is in the current section\n                _.forEach(testContext.navigatorMap, function(part) {\n                    _.forEach(part && part.sections, function(section) {\n                        _.forEach(section && section.items, function(item) {\n                            if (item) {\n                                if (item.position === position) {\n                                    itemPart = part;\n                                    itemSection = section;\n                                    itemFound = true;\n                                }\n                                if (item.position === currentPosition) {\n                                    currentPart = part;\n                                    currentSection = section;\n                                    currentFound = true;\n\n                                }\n                                if (itemFound && currentFound) {\n                                    return false;\n                                }\n                            }\n                        });\n\n                        if (itemFound && currentFound) {\n                            return false;\n                        }\n                    });\n\n                    if (itemFound && currentFound) {\n                        return false;\n                    }\n                });\n\n                // select the context to update\n                if (itemFound && currentPart === itemPart) {\n                    fields.push('numberFlaggedPart');\n                }\n                if (itemFound && currentSection === itemSection) {\n                    fields.push('numberFlaggedSection');\n                }\n            } else {\n                // no navigator map, the current the marked item is in the current section\n                fields.push('numberFlaggedPart');\n                fields.push('numberFlaggedSection');\n            }\n\n            _.forEach(fields, function(field) {\n                if (field in testContext) {\n                    testContext[field] += flag ? 1 : -1;\n                }\n            });\n        },\n\n        /**\n         * Get progression\n         * @param {Object} testContext The progression context\n         * @returns {object} progression\n         */\n        getProgression: function getProgression(testContext) {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test',\n                progressInfoMethod = '_getProgressionOf' + capitalize(reviewScope),\n                getProgression = this[progressInfoMethod] || this._getProgressionOfTest,\n                progression = getProgression && getProgression(testContext) || {};\n\n            return progression;\n        },\n\n        /**\n         * Updates the review screen\n         * @param {Object} testContext The progression context\n         * @returns {testReview}\n         */\n        update: function update(testContext) {\n            this.progression = this.getProgression(testContext);\n            this._updateOptions(testContext);\n            this._updateInfos(testContext);\n            this._updateTree(testContext);\n            this._updateDisplayOptions(testContext);\n            return this;\n        },\n\n        /**\n         * Disables the component\n         * @returns {testReview}\n         */\n        disable: function disable() {\n            this.disabled = true;\n            this.$component.addClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Enables the component\n         * @returns {testReview}\n         */\n        enable: function enable() {\n            this.disabled = false;\n            this.$component.removeClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Hides the component\n         * @returns {testReview}\n         */\n        hide: function hide() {\n            this.disabled = true;\n            this.hidden = true;\n            this.$component.addClass(_cssCls.hidden);\n            return this;\n        },\n\n        /**\n         * Shows the component\n         * @returns {testReview}\n         */\n        show: function show() {\n            this.disabled = false;\n            this.hidden = false;\n            this.$component.removeClass(_cssCls.hidden);\n            return this;\n        },\n\n        /**\n         * Toggles the display state of the component\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n         * @returns {testReview}\n         */\n        toggle: function toggle(show) {\n            if (undefined === show) {\n                show = this.hidden;\n            }\n\n            if (show) {\n                this.show();\n            } else {\n                this.hide();\n            }\n\n            return this;\n        },\n\n        /**\n         * Install an event handler on the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        on: function on(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.on.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Uninstall an event handler from the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        off: function off(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.off.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @param {Array|Object} extraParameters\n         * @returns {testReview}\n         */\n        trigger : function trigger(eventName, extraParameters) {\n            var dom = this.$component;\n\n            if (undefined === extraParameters) {\n                extraParameters = [];\n            }\n            if (!_.isArray(extraParameters)) {\n                extraParameters = [extraParameters];\n            }\n\n            extraParameters.push(this);\n\n            if (dom) {\n                dom.trigger(eventName, extraParameters);\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * Builds an instance of testReview\n     * @param {String|jQuery|HTMLElement} element The element on which install the component\n     * @param {Object} [options] A list of extra options\n     * @param {String} [options.region] The region on which put the component: left or right\n     * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\n     * the whole test, the current test part or the current test section)\n     * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n     * @returns {testReview}\n     */\n    var testReviewFactory = function(element, options) {\n        var component = _.clone(testReview, true);\n        return component.init(element, options);\n    };\n\n    return testReviewFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/progressUpdater',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/progressbar'\n], function ($, _, __) {\n    'use strict';\n\n    /**\n     * Provides a versatile progress bar updater\n     * @type {{init: Function, update: Function}}\n     */\n    var progressUpdaters = {\n        /**\n         * Initializes the progress updater\n         *\n         * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n         * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n         * @returns {progressUpdaters}\n         */\n        init: function(progressBar, progressLabel) {\n            this.progressBar = $(progressBar).progressbar();\n            this.progressLabel = $(progressLabel);\n            return this;\n        },\n\n        /**\n         * Writes the progress label and update the progress by ratio\n         * @param {String} label\n         * @param {Number} ratio\n         * @returns {progressUpdaters}\n         */\n        write: function(label, ratio) {\n            this.progressLabel.text(label);\n            this.progressBar.progressbar('value', ratio);\n            return this;\n        },\n\n        /**\n         * Updates the progress bar\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        update: function(testContext) {\n            var progressIndicator = testContext.progressIndicator || 'percentage';\n            var progressIndicatorMethod = progressIndicator + 'Progression';\n            var getProgression = this[progressIndicatorMethod] || this.percentageProgression;\n            var progression = getProgression && getProgression(testContext) || {};\n\n            this.write(progression.label, progression.ratio);\n            return progression;\n        },\n\n        /**\n         * Updates the progress bar displaying the percentage\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        percentageProgression: function(testContext) {\n            var total = Math.max(1, testContext.numberItems);\n            var ratio = Math.floor(testContext.numberCompleted / total * 100);\n            return {\n                ratio : ratio,\n                label : ratio + '%'\n            };\n        },\n\n        /**\n         * Updates the progress bar displaying the position\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        positionProgression: function(testContext) {\n            var progressScope = testContext.progressIndicatorScope;\n            var progressScopeCounter = {\n                test : {\n                    total : 'numberItems',\n                    position : 'itemPosition'\n                },\n                testPart : {\n                    total : 'numberItemsPart',\n                    position : 'itemPositionPart'\n                },\n                testSection : {\n                    total : 'numberItemsSection',\n                    position : 'itemPositionSection'\n                }\n            };\n            var counter = progressScopeCounter[progressScope] || progressScopeCounter.test;\n            var total = Math.max(1, testContext[counter.total]);\n            var position = testContext[counter.position] + 1;\n            return {\n                ratio : Math.floor(position / total * 100),\n                label : __('Item %d of %d', position, total)\n            };\n        }\n    };\n\n    /**\n     * Builds an instance of progressUpdaters\n     * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n     * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n     * @returns {progressUpdaters}\n     */\n    var progressUpdaterFactory = function(progressBar, progressLabel) {\n        var updater = _.clone(progressUpdaters, true);\n        return updater.init(progressBar, progressLabel);\n    };\n\n    return progressUpdaterFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Metadata to be sent to the server. Will be saved in result storage as a trace variable.\n * Usage example:\n * <pre>\n * var testMetaData = testMetaDataFactory({\n *   testServiceCallId : this.itemServiceApi.serviceCallId\n * });\n *\n * testMetaData.setData({\n *   'TEST' : {\n *      'TEST_EXIT_CODE' : 'T'\n *   },\n *   'SECTION' : {\n *      'SECTION_EXIT_CODE' : 704\n *   }\n * });\n *\n * testMetaData.addData({'ITEM' : {\n *      'ITEM_START_TIME_CLIENT' : 1443596730143,\n *      'ITEM_END_TIME_CLIENT' : 1443596731301\n *    }\n * });\n * </pre>\n *\n * Data for each service call id will be stored in local storage to be able get data\n * after reloading the page or resuming the test session.\n *\n * To clear all data related to current test_call_id used <i>clearData</i> method.\n */\ndefine('taoQtiTest/testRunner/testMetaData',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * @param {Object} options\n     * @param {string} options.testServiceCallId - test call id.\n     */\n     var testMetaDataFactory = function testMetaDataFactory(options) {\n        var _testServiceCallId,\n            _storageKeyPrefix = 'testMetaData_',\n            _data = {};\n\n        if (!options || options.testServiceCallId === undefined) {\n            throw new TypeError(\"testServiceCallId option is required\");\n        }\n\n        var testMetaData = {\n            SECTION_EXIT_CODE : {\n                'COMPLETED_NORMALLY': 700,\n                'QUIT': 701,\n                'COMPLETE_TIMEOUT': 703,\n                'TIMEOUT': 704,\n                'FORCE_QUIT': 705,\n                'IN_PROGRESS': 706,\n                'ERROR': 300\n            },\n            TEST_EXIT_CODE : {\n                'COMPLETE': 'C',\n                'TERMINATED': 'T',\n                'INCOMPLETE': 'IC',\n                'INCOMPLETE_QUIT': 'IQ',\n                'INACTIVE': 'IA',\n                'CANDIDATE_DISAGREED_WITH_NDA': 'DA'\n            },\n            /**\n             * Return test call id.\n             * @returns {string}- Test call id\n             */\n            getTestServiceCallId : function getTestServiceCallId () {\n                return _testServiceCallId;\n            },\n\n            /**\n             * Set test call id.\n             * @param {string} value\n             */\n            setTestServiceCallId : function setTestServiceCallId (value) {\n                _testServiceCallId = value;\n            },\n\n            /**\n             * Set meta data. Current data object will be overwritten.\n             * @param {Object} data - metadata object\n             */\n            setData : function setData(data) {\n                _data = data;\n                setLocalStorageData(JSON.stringify(_data));\n            },\n\n            /**\n             * Add data.\n             * @param {Object} data - metadata object\n             * @param {Boolean} overwrite - whether the same data should be overwritten. Default - <i>false</i>\n             */\n            addData : function addData(data, overwrite) {\n                data = _.clone(data);\n                if (overwrite === undefined) {\n                    overwrite = false;\n                }\n\n                if (overwrite) {\n                    _.merge(_data, data);\n                } else {\n                    _data = _.merge(data, _data);\n                }\n                setLocalStorageData(JSON.stringify(_data));\n            },\n\n            /**\n             * Get the saved data.\n             * The cloned object will be returned to avoid unwanted affecting of the original data.\n             * @returns {Object} - metadata object.\n             */\n            getData : function getData() {\n                return _.clone(_data);\n            },\n\n            /**\n             * Clear all data saved in current object and in local storage related to current test call id.\n             * @returns {Object} - metadata object.\n             */\n            clearData : function clearData() {\n                _data = {};\n                window.localStorage.removeItem(testMetaData.getLocalStorageKey());\n            },\n\n            getLocalStorageKey : function getLocalStorageKey () {\n                return _storageKeyPrefix + _testServiceCallId;\n            }\n        };\n\n        /**\n         * Initialize test meta data manager\n         */\n        function init() {\n            _testServiceCallId = options.testServiceCallId;\n            testMetaData.setData(getLocalStorageData());\n        }\n\n        /**\n         * Set data to local storage\n         * @param {string} val - data to be stored.\n         */\n        function setLocalStorageData(val) {\n            var currentKey = testMetaData.getLocalStorageKey();\n            try {\n                window.localStorage.setItem(currentKey, val);\n            } catch(domException) {\n                if (domException.name === 'QuotaExceededError' ||\n                    domException.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    var removed = 0,\n                        i = window.localStorage.length,\n                        key;\n                    while (i--) {\n                        key  = localStorage.key(i);\n                        if (/^testMetaData_.*/.test(key) && key !== currentKey) {\n                            window.localStorage.removeItem(key);\n                            removed++;\n                        }\n                    }\n                    if (removed) {\n                        setLocalStorageData(val);\n                    } else {\n                        throw domException;\n                    }\n                } else {\n                    throw domException;\n                }\n            }\n        }\n\n        /**\n         * Get data from local storage stored for current call id\n         * @returns {*} saved data or empty object\n         */\n        function getLocalStorageData() {\n            var data = window.localStorage.getItem(testMetaData.getLocalStorageKey()),\n                result = JSON.parse(data) || {};\n\n            return result;\n        }\n\n        init();\n\n        return testMetaData;\n    };\n\n    return testMetaDataFactory;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('serviceApi/ServiceApi',['jquery', 'urlParser'], function($, UrlParser){\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    function ServiceApi(baseUrl, parameters, serviceCallId, stateStorage, userService, paused){\n        this.baseUrl = baseUrl;\n        this.parameters = parameters;\n        this.connected = false;\n\n        this.serviceCallId = serviceCallId;\n        this.state = stateStorage;\n        this.userService = userService;\n        this.hasBeenPaused = paused;\n    }\n\n    ServiceApi.SIG_SUCCESS = 0;\n    ServiceApi.SIG_ERROR = 1;\n\n    ServiceApi.prototype.loadInto = function(frame, connected){\n        var self = this;\n        var $frame = $(frame);\n        var callUrl = this.getCallUrl();\n        var isCORSAllowed = new UrlParser(callUrl).checkCORS();\n\n        $frame.on('load', function(e){\n             //if we are  in the same domain, we add a variable\n             //to the frame window, so the frame knows it can communicate\n             //with the parent\n            $(document).on('serviceready', function(){\n                self.connect(frame, function(){\n                    $(document).off('serviceready');\n                    if(typeof connected === 'function'){\n                        connected();\n                    }\n                });\n            });\n             if(isCORSAllowed === true){\n                 frame.contentWindow.__knownParent__ = true;\n             }\n         });\n\n        $frame.attr('src', callUrl);\n    };\n\n    ServiceApi.prototype.connect = function(frame, connected){\n        if(this.connected === false && frame.contentWindow){\n            //frame.contentWindow.serviceApi = this;\n            if (typeof(frame.contentWindow.onServiceApiReady) === \"function\") {\n                frame.contentWindow.onServiceApiReady(this);\n                this.connected = true;\n                if(typeof connected === 'function'){\n                    connected();\n                }\n            }\n        }\n    };\n\n    /**\n     * Get the service call URL\n     * @returns {String} the URI\n     */\n    ServiceApi.prototype.getCallUrl = function(){\n        var params = this.parameters || {};\n        params.serviceCallId = this.serviceCallId;\n        return this.baseUrl + '?' + $.param(params);\n    };\n\n    ServiceApi.prototype.getUserPropertyValues = function(property, callback){\n    \tthis.userService.get(property, callback);\n    };\n\n    //Context\n    ServiceApi.prototype.getServiceCallId = function(){\n        return this.serviceCallId;\n    };\n\n    //Context\n    ServiceApi.prototype.getState = function(){\n        return this.state.get();\n    };\n\n    ServiceApi.prototype.setState = function(state, callback){\n        return this.state.set(state, callback);\n    };\n\n    //Context\n    ServiceApi.prototype.getHasBeenPaused = function(){\n        return this.hasBeenPaused;\n    };\n\n    ServiceApi.prototype.setHasBeenPaused = function(paused){\n        this.hasBeenPaused = paused;\n    };\n\n    // Variables\n    ServiceApi.prototype.getParameter = function(identifier){\n        if (typeof(this.parameters[identifier]) !== \"undefined\") {\n            return this.parameters[identifier];\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Sets a callback on the finish action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onFinish = function(callback) {\n        this.onFinishCallback = callback;\n        return this;\n    };\n\n    /**\n     * Sets a callback on the kill action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onKill = function(callback) {\n        this.onKillCallback = callback;\n        return this;\n    };\n\n    /**\n     * Sets a callback on the exit action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onExit = function(callback) {\n        this.onExitCallback = callback;\n        return this;\n    };\n\n    /**\n     * @param {Function} callback - Function called if no dedicated callback is found\n     */\n    ServiceApi.prototype.kill = function(callback) {\n    \tif (typeof this.onKillCallback === 'function') {\n    \t\tthis.onKillCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n\n    /**\n     * Exits the flow\n     * @param {Function} callback - Function called if no dedicated callback is found\n     */\n    ServiceApi.prototype.exit = function(callback) {\n    \tif (typeof this.onExitCallback === 'function') {\n    \t\tthis.onExitCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n\n    /**\n     * Finishes the flow\n     * @param valueArray - return parameters of the service.\n     */\n    ServiceApi.prototype.finish = function(valueArray) {\n        //return execution to service caller\n        if (typeof this.onFinishCallback === 'function') {\n                this.onFinishCallback(valueArray);\n        }\n    };\n\n    return ServiceApi;\n\n});\n\n","define('serviceApi/UserInfoService',['jquery'], function($){\n    \n    function UserInfoService(requestUrl, data) {\n        this.data = data;\n        this.requestUrl = requestUrl;\n    }\n\n    UserInfoService.prototype.get = function(property, callback){\n        if (this.data.hasOwnProperty(property)) {\n            if (typeof callback === \"function\") {\n                    callback(this.data[property]);\n            }\n        } else {\n            $.ajax({\n                url : this.requestUrl,\n                data \t\t: {\n                    'property' : property\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : (function(service, callback) {return function(r) {\n            \t\tfor (key in r.data) {\n            \t\t\tservice.data[key] = r.data[key];\n            \t\t}\n                    if (typeof callback === \"function\") {\n                        callback(service.data[property]);\n                    }\n\n                }})(this, callback)\n                /*\t\n            \tfunction(r){\n                    if(r.success){\n                    \tconsole.log(this.data);\n                    \tthis.data[property] = r.values;\n                    \t//console.log(this.data);\n\t                    if (typeof callback === \"function\") {\n\t                        callback(this.data[property]);\n\t                    }\n                    }\n                }\n                */\n                \n                \n            });\n        }\n    };\n\n    return UserInfoService;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2013 (original work) Open Assessment Technologies SA ;\n */\ndefine('serviceApi/StateStorage',['jquery'], function($){\n    'use strict';\n    \n    function StateStorage(state, submitUrl) {\n        this.state = state;\n        this.submitUrl = submitUrl;\n    }\n\n    StateStorage.prototype.get = function(callback){\n        if (typeof callback === 'function') {\n                callback(this.state);\n        }\n        return this.state;\n    };\n\n    StateStorage.prototype.set = function(state, callback){\n\n        if (state === this.state) {\n            if (typeof callback === \"function\") {\n                    callback();\n            }\n        } else {\n            this.state = state;\n            $.ajax({\n                url : this.submitUrl,\n                data \t\t: {\n                    'state' : state\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : typeof callback === \"function\" ? callback : null\n            });\n        }\n    };\n\n    return StateStorage;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\ndefine('taoQtiTest/controller/runtime/testRunner',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'taoQtiTest/testRunner/actionBarTools',\n    'taoQtiTest/testRunner/testReview',\n    'taoQtiTest/testRunner/progressUpdater',\n    'taoQtiTest/testRunner/testMetaData',\n    'serviceApi/ServiceApi',\n    'serviceApi/UserInfoService',\n    'serviceApi/StateStorage',\n    'iframeNotifier',\n    'mathJax',\n    'ui/feedback',\n    'ui/deleter',\n    'moment',\n    'ui/modal',\n    'ui/progressbar'\n],\nfunction (\n    $,\n    _,\n    __,\n    module,\n    actionBarTools,\n    testReview,\n    progressUpdater,\n    testMetaDataFactory,\n    ServiceApi,\n    UserInfoService,\n    StateStorage,\n    iframeNotifier,\n    MathJax,\n    feedback,\n    deleter,\n    moment,\n    modal\n) {\n\n    'use strict';\n\n    var timerIds = [],\n        currentTimes = [],\n        lastDates = [],\n        timeDiffs = [],\n        waitingTime = 0,\n        $timers,\n        $controls,\n        timerIndex,\n        testMetaData,\n        sessionStateService,\n        $doc = $(document),\n        optionNextSection = 'x-tao-option-nextSection',\n        optionNextSectionWarning = 'x-tao-option-nextSectionWarning',\n        optionReviewScreen = 'x-tao-option-reviewScreen',\n        optionEndTestWarning = 'x-tao-option-endTestWarning',\n        optionNoExitTimedSectionWarning = 'x-tao-option-noExitTimedSectionWarning',\n        TestRunner = {\n            // Constants\n            'TEST_STATE_INITIAL': 0,\n            'TEST_STATE_INTERACTING': 1,\n            'TEST_STATE_MODAL_FEEDBACK': 2,\n            'TEST_STATE_SUSPENDED': 3,\n            'TEST_STATE_CLOSED': 4,\n            'TEST_NAVIGATION_LINEAR': 0,\n            'TEST_NAVIGATION_NONLINEAR': 1,\n            'TEST_ITEM_STATE_INTERACTING': 1,\n\n            /**\n             * Prepare a transition to another item\n             * @param {Function} [callback]\n             */\n            beforeTransition: function (callback) {\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $controls.$itemFrame.hide();\n                $controls.$rubricBlocks.hide();\n                $controls.$timerWrapper.hide();\n\n                // Wait at least waitingTime ms for a better user experience.\n                if (typeof callback === 'function') {\n                    setTimeout(callback, waitingTime);\n                }\n            },\n\n            /**\n             * Complete a transition to another item\n             */\n            afterTransition: function () {\n                this.enableGui();\n\n                //ask the top window to stop the loader\n                iframeNotifier.parent('unloading');\n                testMetaData.addData({\n                    'ITEM' : {'ITEM_START_TIME_CLIENT' : Date.now() / 1000}\n                });\n            },\n\n            /**\n             * Jumps to a particular item in the test\n             * @param {Number} position The position of the item within the test\n             */\n            jump: function(position) {\n                var self = this,\n                    action = 'jump',\n                    params = {position: position};\n                this.disableGui();\n\n                if( this.isJumpOutOfSection(position)  && this.isCurrentItemActive() && this.isTimedSection() ){\n                    this.exitTimedSection(action, params);\n                } else {\n                    this.killItemSession(function() {\n                        self.actionCall(action, params);\n                    });\n                }\n            },\n\n            /**\n             * Push to server how long user seen that item before to track duration\n             * @param {Number} duration\n             */\n            keepItemTimed: function(duration){\n                if (duration) {\n                    var self = this,\n                        action = 'keepItemTimed',\n                        params = {duration: duration};\n                    self.actionCall(action, params);\n                }\n            },\n\n            /**\n             * Marks an item for later review\n             * @param {Boolean} flag The state of the flag\n             * @param {Number} position The position of the item within the test\n             */\n            markForReview: function(flag, position) {\n                var self = this;\n\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $.ajax({\n                    url: self.testContext.markForReviewUrl,\n                    cache: false,\n                    async: true,\n                    type: 'POST',\n                    dataType: 'json',\n                    data: {\n                        flag: flag,\n                        position: position\n                    },\n                    success: function(data) {\n                        // update the item flagged state\n                        if (self.testReview) {\n                            self.testReview.setItemFlag(position, flag);\n                            self.testReview.updateNumberFlagged(self.testContext, position, flag);\n                            if (self.testContext.itemPosition === position) {\n                                self.testContext.itemFlagged = flag;\n                            }\n                            self.updateTools(self.testContext);\n                        }\n\n                        // Enable buttons.\n                        self.enableGui();\n\n                        //ask the top window to stop the loader\n                        iframeNotifier.parent('unloading');\n                    }\n                });\n            },\n\n            /**\n             * Move to the next available item\n             */\n            moveForward: function () {\n                var self = this,\n                    action = 'moveForward';\n\n                function doExitSection() {\n                    if( self.isTimedSection() && !self.testContext.isTimeout){\n                        self.exitTimedSection(action);\n                    } else {\n                        self.exitSection(action);\n                    }\n                }\n\n                this.disableGui();\n\n                if( (( this.testContext.numberItemsSection - this.testContext.itemPositionSection - 1) == 0) && this.isCurrentItemActive()){\n                    if (this.shouldDisplayEndTestWarning()) {\n                        this.displayEndTestWarning(doExitSection);\n                        this.enableGui();\n                    } else {\n                        doExitSection();\n                    }\n\n                } else {\n                    this.killItemSession(function () {\n                        self.actionCall(action);\n                    });\n                }\n            },\n\n            /**\n             * Check if necessary to display an end test warning\n             */\n            shouldDisplayEndTestWarning: function(){\n                return (this.testContext.isLast === true && this.hasOption(optionEndTestWarning));\n            },\n\n            /**\n             * Warns upon exiting test\n             */\n            displayEndTestWarning: function(nextAction){\n                var options = {\n                    confirmLabel: __('OK'),\n                    cancelLabel: __('Cancel'),\n                    showItemCount: false\n                };\n\n                this.displayExitMessage(\n                    __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                    nextAction,\n                    options\n                );\n            },\n\n            /**\n             * Move to the previous available item\n             */\n            moveBackward: function () {\n                var self = this,\n                    action = 'moveBackward';\n\n                this.disableGui();\n\n                if( (this.testContext.itemPositionSection == 0) && this.isCurrentItemActive() && this.isTimedSection() ){\n                    this.exitTimedSection(action);\n                } else {\n                this.killItemSession(function () {\n                        self.actionCall(action);\n                    });\n                }\n            },\n\n            /**\n             * Checks if a position is out of the current section\n             * @param {Number} jumpPosition\n             * @returns {Boolean}\n             */\n            isJumpOutOfSection: function(jumpPosition){\n                var items = this.getCurrentSectionItems(),\n                    isJumpToOtherSection = true,\n                    isValidPosition = (jumpPosition >= 0) && ( jumpPosition < this.testContext.numberItems );\n\n                if( isValidPosition){\n                    for(var i in items ) {\n                        if (!items.hasOwnProperty(i)) {\n                            continue;\n                        }\n                        if( items[i].position == jumpPosition ){\n                            isJumpToOtherSection = false;\n                            break;\n                        }\n                    }\n                } else {\n                    isJumpToOtherSection = false;\n                }\n\n                return isJumpToOtherSection;\n            },\n\n            /**\n             * Exit from the current section. Set the exit code.de\n             * @param {String} action\n             * @param {Object} params\n             * @param {Number} [exitCode]\n             */\n            exitSection: function(action, params, exitCode){\n                var self = this;\n\n                testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : exitCode || testMetaData.SECTION_EXIT_CODE.COMPLETED_NORMALLY}});\n                self.killItemSession(function () {\n                    self.actionCall(action, params);\n                });\n            },\n\n            /**\n             * Tries to exit a timed section. Display a confirm message.\n             * @param {String} action\n             * @param {Object} params\n             */\n            exitTimedSection: function(action, params){\n                var self = this,\n                    qtiRunner = this.getQtiRunner(),\n                    doExitTimedSection = function() {\n                        if (qtiRunner) {\n                            qtiRunner.updateItemApi();\n                        }\n                        self.exitSection(action, params);\n                    };\n\n                if ((action === 'moveForward' && this.shouldDisplayEndTestWarning())    // prevent duplicate warning\n                    || this.hasOption(optionNoExitTimedSectionWarning)                  // check if warning is disabled\n                    || this.testContext.keepTimerUpToTimeout                            // no need to display the message as we may be able to go back\n                ) {\n                    doExitTimedSection();\n                } else {\n                    this.displayExitMessage(\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\n                        doExitTimedSection,\n                        { scope: 'testSection' }\n                    );\n                }\n\n                this.enableGui();\n            },\n\n            /**\n             * Tries to leave the current section and go to the next\n             */\n            nextSection: function(){\n                var self = this;\n                var qtiRunner = this.getQtiRunner();\n                var doNextSection = function() {\n                    self.exitSection('nextSection', null, testMetaData.SECTION_EXIT_CODE.QUIT);\n                };\n\n                if (qtiRunner) {\n                    qtiRunner.updateItemApi();\n                }\n\n                if (this.hasOption(optionNextSectionWarning)) {\n                    this.displayExitMessage(\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\n                        doNextSection,\n                        { scope: 'testSection' }\n                    );\n                } else {\n                    doNextSection();\n                }\n\n                this.enableGui();\n            },\n\n            /**\n             * Gets the current progression within a particular scope\n             * @param {String} [scope]\n             * @returns {Object}\n             */\n            getProgression: function(scope) {\n                var scopeSuffixMap = {\n                    test : '',\n                    testPart : 'Part',\n                    testSection : 'Section'\n                };\n                var scopeSuffix = scope && scopeSuffixMap[scope] || '';\n\n                return {\n                    total : this.testContext['numberItems' + scopeSuffix] || 0,\n                    answered : this.testContext['numberCompleted' + scopeSuffix] || 0,\n                    viewed : this.testContext['numberPresented' + scopeSuffix] || 0,\n                    flagged : this.testContext['numberFlagged' + scopeSuffix] || 0\n                };\n            },\n\n            /**\n             * Displays an exit message for a particular scope\n             * @param {String} message\n             * @param {Function} [action]\n             * @param {Object} [options]\n             * @param {String} [options.scope]\n             * @param {String} [options.confirmLabel] - label of confirm button\n             * @param {String} [options.cancelLabel] - label of cancel button\n             * @param {Boolean} [options.showItemCount] - display the number of unanswered / flagged items in modal\n             * @returns {jQuery} Returns the message box\n             */\n            displayExitMessage: function(message, action, options) {\n                var self = this,\n                    options = options || {},\n                    scope = options.scope,\n                    confirmLabel = options.confirmLabel || __('Yes'),\n                    cancelLabel = options.cancelLabel || __('No'),\n                    showItemCount = typeof options.showItemCount !== 'undefined' ? options.showItemCount : true;\n\n                var $confirmBox = $('.exit-modal-feedback');\n                var progression = this.getProgression(scope);\n                var unansweredCount = (progression.total - progression.answered);\n                var flaggedCount = progression.flagged;\n\n                if (showItemCount) {\n                    if (unansweredCount && this.isCurrentItemAnswered()) {\n                        unansweredCount--;\n                    }\n\n                    if (flaggedCount && unansweredCount) {\n                        message = __('You have %s unanswered question(s) and have %s item(s) marked for review.',\n                                unansweredCount.toString(),\n                                flaggedCount.toString()\n                            ) + ' ' + message;\n                    } else {\n                        if (flaggedCount) {\n                            message = __('You have %s item(s) marked for review.', flaggedCount.toString()) + ' ' + message;\n                        }\n\n                        if (unansweredCount) {\n                            message = __('You have %s unanswered question(s).', unansweredCount.toString()) + ' ' + message;\n                        }\n                    }\n                }\n\n                $confirmBox.find('.message').html(message);\n                $confirmBox.find('.js-exit-confirm').html(confirmLabel);\n                $confirmBox.find('.js-exit-cancel').html(cancelLabel);\n                $confirmBox.modal({ width: 500 });\n\n                $confirmBox.find('.js-exit-cancel, .modal-close').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                });\n\n                $confirmBox.find('.js-exit-confirm').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                    if (_.isFunction(action)) {\n                        action.call(self);\n                    }\n                });\n\n                return $confirmBox;\n            },\n\n            /**\n             * Kill current item section and execute callback function given as first parameter.\n             * Item end execution time will be stored in metadata object to be sent to the server.\n             * @param {function} callback\n             */\n            killItemSession : function (callback) {\n                testMetaData.addData({\n                    'ITEM' : {\n                        'ITEM_END_TIME_CLIENT' : Date.now() / 1000,\n                        'ITEM_TIMEZONE' : moment().utcOffset(moment().utcOffset()).format('Z')\n                    }\n                });\n                if (typeof callback !== 'function') {\n                    callback = _.noop;\n                }\n                this.itemServiceApi.kill(callback);\n            },\n\n            /**\n             * Checks if the current item is active\n             * @returns {Boolean}\n             */\n            isCurrentItemActive: function(){\n                return (this.testContext.itemSessionState !=4);\n            },\n\n            /**\n             * Tells is the current item has been answered or not\n             * The item is considered answered when at least one response has been set to not empty {base : null}\n             *\n             * @returns {Boolean}\n             */\n            isCurrentItemAnswered: function(){\n                var answered = false;\n                _.each(this.getCurrentItemState(), function(state){\n                    if(state && _.isObject(state.response) && state.response.base !== null){\n                        answered = true;//at least one response is not null so consider the item answered\n                        return false;\n                    }\n                });\n                return answered;\n            },\n\n            /**\n             * Checks if a particular option is enabled for the current item\n             * @param {String} option\n             * @returns {Boolean}\n             */\n            hasOption: function(option) {\n                return _.indexOf(this.testContext.categories, option) >= 0;\n            },\n\n            /**\n             * Gets access to the qtiRunner instance\n             * @returns {Object}\n             */\n            getQtiRunner: function(){\n                var itemFrame = document.getElementById('qti-item');\n                var itemWindow = itemFrame && itemFrame.contentWindow;\n                var itemContainerFrame = itemWindow && itemWindow.document.getElementById('item-container');\n                var itemContainerWindow = itemContainerFrame && itemContainerFrame.contentWindow;\n                return itemContainerWindow && itemContainerWindow.qtiRunner;\n            },\n\n            /**\n             * Checks if the current section is timed\n             * @returns {Boolean}\n             */\n            isTimedSection: function(){\n                var timeConstraints = this.testContext.timeConstraints,\n                    isTimedSection = false;\n                for( var index in timeConstraints ){\n                    if(timeConstraints.hasOwnProperty(index) &&\n                        timeConstraints[index].qtiClassName === 'assessmentSection' ){\n                        isTimedSection = true;\n                    }\n                }\n\n                return isTimedSection;\n            },\n\n            /**\n             * Gets the list of items owned by the current section\n             * @returns {Array}\n             */\n            getCurrentSectionItems: function(){\n                var partId  = this.testContext.testPartId,\n                    navMap  = this.testContext.navigatorMap,\n                    sectionItems;\n\n                for( var partIndex in navMap ){\n                    if( !navMap.hasOwnProperty(partIndex)){\n                        continue;\n                    }\n                    if( navMap[partIndex].id !== partId ){\n                        continue;\n                    }\n\n                    for(var sectionIndex in navMap[partIndex].sections){\n                        if( !navMap[partIndex].sections.hasOwnProperty(sectionIndex)){\n                            continue;\n                        }\n                        if( navMap[partIndex].sections[sectionIndex].active === true ){\n                            sectionItems = navMap[partIndex].sections[sectionIndex].items;\n                            break;\n                        }\n                    }\n                }\n\n                return sectionItems;\n            },\n\n            /**\n             * Skips the current item\n             */\n            skip: function () {\n                var self = this,\n                    doSkip = function() {\n                        self.disableGui();\n                        self.actionCall('skip');\n                    };\n\n                if (this.shouldDisplayEndTestWarning()) {\n                    this.displayEndTestWarning(doSkip);\n                } else {\n                    doSkip();\n                }\n            },\n\n            /**\n             * Handles the timeout state\n             */\n            timeout: function () {\n                var self = this;\n                this.disableGui();\n                this.testContext.isTimeout = true;\n                this.updateTimer();\n\n                this.killItemSession(function () {\n                    var confirmBox = $('.timeout-modal-feedback'),\n                        testContext = self.testContext,\n                        confirmBtn = confirmBox.find('.js-timeout-confirm, .modal-close');\n\n                    if (testContext.numberCompletedSection === testContext.numberItemsSection) {\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.COMPLETE_TIMEOUT}});\n                    } else {\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.TIMEOUT}});\n                    }\n\n                    self.enableGui();\n                    confirmBox.modal({width: 500});\n                    confirmBtn.off('click').on('click', function () {\n                        confirmBox.modal('close');\n                        self.actionCall('timeout');\n                    });\n                });\n            },\n\n            /**\n             * Sets the assessment test context object\n             * @param {Object} testContext\n             */\n            setTestContext: function(testContext) {\n                this.testContext = testContext;\n                this.itemServiceApi = eval(testContext.itemServiceApiCall);\n                this.itemServiceApi.setHasBeenPaused(testContext.hasBeenPaused);\n            },\n\n\n            /**\n             * Handles Metadata initialization\n             */\n            initMetadata: function (){\n                testMetaData = testMetaDataFactory({\n                    testServiceCallId: this.itemServiceApi.serviceCallId\n                });\n            },\n\n            /**\n             * Retrieve service responsible for broken session tracking\n             * @returns {*}\n             */\n            getSessionStateService: function () {\n                if (!sessionStateService) {\n                    sessionStateService = this.testContext.sessionStateService({accuracy: 1000});\n                }\n                return sessionStateService;\n            },\n\n            /**\n             * Updates the GUI\n             * @param {Object} testContext\n             */\n            update: function (testContext) {\n                var self = this;\n                $controls.$itemFrame.remove();\n\n                var $runner = $('#runner');\n                $runner.css('height', 'auto');\n\n                this.getSessionStateService().restart();\n\n                this.setTestContext(testContext);\n                this.updateContext();\n                this.updateProgress();\n                this.updateNavigation();\n                this.updateTestReview();\n                this.updateInformation();\n                this.updateRubrics();\n                this.updateTools(testContext);\n                this.updateTimer();\n                this.updateExitButton();\n                this.resetCurrentItemState();\n                this.initMetadata();\n\n                $controls.$itemFrame = $('<iframe id=\"qti-item\" frameborder=\"0\" scrollbars=\"no\"/>');\n                $controls.$itemFrame.appendTo($controls.$contentBox);\n\n                if (this.testContext.itemSessionState === this.TEST_ITEM_STATE_INTERACTING && self.testContext.isTimeout === false) {\n                    $doc.off('.testRunner').on('serviceloaded.testRunner', function () {\n                        self.afterTransition();\n                        self.adjustFrame();\n                        $controls.$itemFrame.css({visibility: 'visible'});\n                    });\n\n                    // Inject API into the frame.\n                    this.itemServiceApi.loadInto($controls.$itemFrame[0], function () {\n                        // We now rely on the 'serviceloaded' event.\n                    });\n                }\n                else {\n                    // e.g. no more attempts or timeout! Simply consider the transition is finished,\n                    // but do not load the item.\n                    self.afterTransition();\n                }\n            },\n\n            /**\n             * Displays feedback on the current state of the test\n             */\n            updateInformation: function () {\n\n                if (this.testContext.isTimeout === true) {\n                    feedback().error(__('Time limit reached for item \"%s\".', this.testContext.itemIdentifier));\n                }\n                else if (this.testContext.itemSessionState !== this.TEST_ITEM_STATE_INTERACTING) {\n                    feedback().error(__('No more attempts allowed for item \"%s\".', this.testContext.itemIdentifier));\n                }\n            },\n\n            /**\n             * Updates the displayed tools\n             * @param {Object} testContext\n             */\n            updateTools: function updateTools(testContext) {\n                var showSkip = false;\n                var showSkipEnd = false;\n                var showNextSection = !!testContext.nextSection && (this.hasOption(optionNextSection) || this.hasOption(optionNextSectionWarning));\n\n                if (this.testContext.allowSkipping === true) {\n                    if (this.testContext.isLast === false) {\n                        showSkip = true;\n                    } else {\n                        showSkipEnd = true;\n                    }\n                }\n\n                $controls.$skip.toggle(showSkip);\n                $controls.$skipEnd.toggle(showSkipEnd);\n                $controls.$nextSection.toggle(showNextSection);\n\n                actionBarTools.render('.tools-box-list', testContext, TestRunner);\n            },\n\n            /**\n             * Displays a timer\n             * @param {Object} cst\n             * @returns {*|jQuery|HTMLElement}\n             */\n            createTimer: function(cst) {\n                var $timer = $('<div>', {'class': 'qti-timer qti-timer__type-' + cst.qtiClassName }),\n                    $label = $('<div>', {'class': 'qti-timer_label truncate', text: cst.label }),\n                    $time  = $('<div>', {'class': 'qti-timer_time', text: this.formatTime(cst.seconds) });\n\n                $timer.append($label);\n                $timer.append($time);\n                return $timer;\n            },\n\n            /**\n             * Updates the timers\n             */\n            updateTimer: function () {\n                var self = this;\n                var hasTimers;\n                $controls.$timerWrapper.empty();\n\n                for (var i = 0; i < timerIds.length; i++) {\n                    clearTimeout(timerIds[i]);\n                }\n\n                timerIds = [];\n                currentTimes = [];\n                lastDates = [];\n                timeDiffs = [];\n\n                if (self.testContext.isTimeout === false &&\n                    self.testContext.itemSessionState === self.TEST_ITEM_STATE_INTERACTING) {\n\n                    hasTimers = !!this.testContext.timeConstraints.length;\n                    $controls.$topActionBar.toggleClass('has-timers', hasTimers);\n\n                    if (hasTimers) {\n\n                        // Insert QTI Timers container.\n                        // self.formatTime(cst.seconds)\n                        for (i = 0; i < this.testContext.timeConstraints.length; i++) {\n\n                            var cst = this.testContext.timeConstraints[i];\n\n                            if (cst.allowLateSubmission === false) {\n\n                                // Set up a timer for this constraint\n                                $controls.$timerWrapper.append(self.createTimer(cst));\n\n                                // Set up a timer and update it with setInterval.\n                                currentTimes[i] = cst.seconds;\n                                lastDates[i] = new Date();\n                                timeDiffs[i] = 0;\n                                timerIndex = i;\n\n                                if (self.testContext.timerWarning && self.testContext.timerWarning[cst.qtiClassName]) {\n                                    cst.warnings = {};\n                                    _(self.testContext.timerWarning[cst.qtiClassName]).forEach(function (value, key) {\n                                        if (_.contains(['info', 'warning', 'danger'], value)) {\n                                            cst.warnings[key] = {\n                                                type: value,\n                                                showed: cst.seconds <= key,\n                                                point: parseInt(key, 10)\n                                            };\n                                        }\n                                    });\n                                    var closestPreviousWarning = _.find(cst.warnings, { showed: true });\n                                    if (!_.isEmpty(closestPreviousWarning) && closestPreviousWarning.point) {\n                                        cst.warnings[closestPreviousWarning.point].showed = false;\n                                    }\n                                }\n\n                                (function (timerIndex, cst) {\n                                    timerIds[timerIndex] = setInterval(function () {\n\n                                        timeDiffs[timerIndex] += (new Date()).getTime() - lastDates[timerIndex].getTime();\n\n                                        if (timeDiffs[timerIndex] >= 1000) {\n                                            var seconds = timeDiffs[timerIndex] / 1000;\n                                            currentTimes[timerIndex] -= seconds;\n                                            timeDiffs[timerIndex] = 0;\n                                        }\n\n                                        $timers.eq(timerIndex)\n                                            .html(self.formatTime(Math.round(currentTimes[timerIndex])));\n\n                                        if (currentTimes[timerIndex] <= 0) {\n                                            // The timer expired...\n                                            currentTimes[timerIndex] = 0;\n                                            clearInterval(timerIds[timerIndex]);\n\n                                            // Hide item to prevent any further interaction with the candidate.\n                                            $controls.$itemFrame.hide();\n                                            self.timeout();\n                                        } else {\n                                            lastDates[timerIndex] = new Date();\n                                        }\n\n                                        var warning = _.findLast(cst.warnings, { showed: false });\n\n                                        if (!_.isEmpty(warning) && _.isFinite(warning.point) && currentTimes[timerIndex] <= warning.point) {\n                                            self.timeWarning(cst, warning);\n                                        }\n\n                                    }, 1000);\n                                }(timerIndex, cst));\n                            }\n                        }\n\n                        $timers = $controls.$timerWrapper.find('.qti-timer .qti-timer_time');\n                        $controls.$timerWrapper.show();\n                    }\n                }\n            },\n\n            /**\n             * Mark appropriate timer by warning colors and show feedback message\n             *\n             * @param {object} cst - Time constraint\n             * @param {integer} cst.warningTime - Warning time in seconds.\n             * @param {integer} cst.qtiClassName - Class name of qti instance for which the timer is set (assessmentItemRef | assessmentSection | testPart | assessmentTest).\n             * @param {integer} cst.seconds - Initial timer value.\n             * @param {object} warning - Current actual warning\n             * @param {integer} warning.point - Warning time point in seconds, when show message\n             * @param {boolean} warning.showed - boolean flag for mark already showed warnings\n             * @param {string} warning.type - type of warning (from config), can be info, warning or error\n             *\n             * @returns {undefined}\n             */\n            timeWarning: function (cst, warning) {\n                var message = '',\n                    remaining,\n                    $timer = $controls.$timerWrapper.find('.qti-timer__type-' + cst.qtiClassName),\n                    $time = $timer.find('.qti-timer_time');\n\n                $time.removeClass('txt-info txt-warning txt-danger').addClass('txt-' + warning.type);\n\n                remaining = moment.duration(warning.point, \"seconds\").humanize();\n\n                switch (cst.qtiClassName) {\n                    case 'assessmentItemRef':\n                        message = __(\"Warning – You have %s remaining to complete this item.\", remaining);\n                        break;\n                    case 'assessmentSection':\n                        message = __(\"Warning – You have %s remaining to complete this section.\", remaining);\n                        break;\n                    case 'testPart':\n                        message = __(\"Warning – You have %s remaining to complete this test part.\", remaining);\n                        break;\n                    case 'assessmentTest':\n                        message = __(\"Warning – You have %s remaining to complete the test.\", remaining);\n                        break;\n                }\n\n                feedback()[warning.type](message);\n\n                cst.warnings[warning.point].showed = true;\n            },\n\n            /**\n             * Displays or hides the rubric block\n             */\n            updateRubrics: function () {\n                $controls.$rubricBlocks.remove();\n\n                if (this.testContext.rubrics.length > 0) {\n\n                    $controls.$rubricBlocks = $('<div id=\"qti-rubrics\"/>');\n\n                    for (var i = 0; i < this.testContext.rubrics.length; i++) {\n                        $controls.$rubricBlocks.append(this.testContext.rubrics[i]);\n                    }\n\n                    // modify the <a> tags in order to be sure it\n                    // opens in another window.\n                    $controls.$rubricBlocks.find('a').bind('click keypress', function () {\n                        window.open(this.href);\n                        return false;\n                    });\n\n                    $controls.$rubricBlocks.prependTo($controls.$contentBox);\n\n                    if (MathJax) {\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $controls.$rubricBlocks[0]);\n                    }\n\n                }\n            },\n\n            /**\n             * Updates the list of navigation buttons (previous, next, skip, etc.)\n             */\n            updateNavigation: function () {\n                $controls.$exit.show();\n\n                if(this.testContext.isLast === true) {\n                    $controls.$moveForward.hide();\n                    $controls.$moveEnd.show();\n                }\n                else {\n                    $controls.$moveForward.show();\n                    $controls.$moveEnd.hide();\n                }\n                if (this.testContext.navigationMode === this.TEST_NAVIGATION_LINEAR) {\n                    // LINEAR\n                    $controls.$moveBackward.hide();\n                }\n                else {\n                    // NONLINEAR\n                    $controls.$controls.show();\n                    if(this.testContext.canMoveBackward === true) {\n                        $controls.$moveBackward.show();\n                    }\n                    else {\n                        $controls.$moveBackward.hide();\n                    }\n                }\n            },\n\n            /**\n             * Updates the test taker review screen\n             */\n            updateTestReview: function() {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                if (this.testReview) {\n                    this.testReview.toggle(considerProgress && this.hasOption(optionReviewScreen));\n                    this.testReview.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the progress bar\n             */\n            updateProgress: function () {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                $controls.$progressBox.css('visibility', considerProgress ? 'visible' : 'hidden');\n\n                if (considerProgress) {\n                    this.progressUpdater.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the test informations\n             */\n            updateContext: function () {\n\n                $controls.$title.text(this.testContext.testTitle);\n\n                // Visibility of section?\n                var sectionText = (this.testContext.isDeepestSectionVisible === true) ? (' - ' + this.testContext.sectionTitle) : '';\n\n                $controls.$position.text(sectionText);\n                $controls.$titleGroup.show();\n            },\n\n            /**\n             * Displays the right exit button\n             */\n            updateExitButton : function(){\n\n                $controls.$logout.toggleClass('hidden', !this.testContext.logoutButton);\n                $controls.$exit.toggleClass('hidden', !this.testContext.exitButton);\n            },\n\n            /**\n             * Ensures the frame has the right size\n             */\n            adjustFrame: function () {\n                var rubricHeight = $controls.$rubricBlocks.outerHeight(true) || 0;\n                var frameContentHeight;\n                var finalHeight = $(window).innerHeight() - $controls.$topActionBar.outerHeight() - $controls.$bottomActionBar.outerHeight();\n                var itemFrame = $controls.$itemFrame.get(0);\n                $controls.$contentBox.height(finalHeight);\n                if($controls.$sideBars.length){\n                    $controls.$sideBars.each(function() {\n                        var $sideBar = $(this);\n                        $sideBar.height(finalHeight - $sideBar.outerHeight() + $sideBar.height());\n                    });\n                }\n\n                if(itemFrame && itemFrame.contentWindow){\n                    frameContentHeight = $controls.$itemFrame.contents().outerHeight(true);\n\n                    if (frameContentHeight < finalHeight) {\n                        if (rubricHeight) {\n                            frameContentHeight = Math.max(frameContentHeight, finalHeight - rubricHeight);\n                        } else {\n                            frameContentHeight = finalHeight;\n                        }\n                    }\n                    if (itemFrame.contentWindow.$) {\n                        itemFrame.contentWindow.$('body').trigger('setheight', [frameContentHeight]);\n                    }\n                    $controls.$itemFrame.height(frameContentHeight);\n                }\n            },\n\n            /**\n             * Locks the GUI\n             */\n            disableGui: function () {\n                $controls.$naviButtons.addClass('disabled');\n                if (this.testReview) {\n                    this.testReview.disable();\n                }\n            },\n\n            /**\n             * Unlocks the GUI\n             */\n            enableGui: function () {\n                $controls.$naviButtons.removeClass('disabled');\n                if (this.testReview) {\n                    this.testReview.enable();\n                }\n            },\n\n            /**\n             * Hides the GUI\n             */\n            hideGui: function () {\n                $controls.$naviButtons.addClass('hidden');\n                if (this.testReview) {\n                    this.testReview.hide();\n                }\n            },\n\n            /**\n             * Shows the GUI\n             */\n            showGui: function () {\n                $controls.$naviButtons.removeClass('hidden');\n                if (this.testReview) {\n                    this.testReview.show();\n                }\n            },\n\n            /**\n             * Formats a timer\n             * @param {Number} totalSeconds\n             * @returns {String}\n             */\n            formatTime: function (totalSeconds) {\n                var sec_num = totalSeconds;\n                var hours = Math.floor(sec_num / 3600);\n                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n                var seconds = Math.floor(sec_num - (hours * 3600) - (minutes * 60));\n\n                if (hours < 10) {\n                    hours = \"0\" + hours;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n\n                var time = hours + ':' + minutes + ':' + seconds;\n\n                return time;\n            },\n\n            /**\n             * Processes an error\n             * @param {Object} error\n             */\n            processError : function processError(error) {\n                var self = this;\n\n                // keep disabled\n                this.hideGui();\n                this.beforeTransition();\n\n                // ask the parent to display a message\n                iframeNotifier.parent('messagealert', {\n                    message : error.message,\n                    action : function() {\n                        if (testMetaData) {\n                            testMetaData.clearData();\n                        }\n                        if (error.state === self.TEST_STATE_CLOSED) {\n                            // test is closed, finish it\n                            self.serviceApi.finish();\n                        } else {\n                            // test is still open, just exit to the index\n                            self.serviceApi.exit();\n                        }\n                    }\n                });\n            },\n\n            /**\n             * Call action specified in testContext. A postfix <i>Url</i> will be added to the action name.\n             * To specify actions see {@link https://github.com/oat-sa/extension-tao-testqti/blob/master/helpers/class.TestRunnerUtils.php}\n             * @param {String} action - Action name\n             * @param {Object} [extraParams] - Additional parameters to be sent to the server\n             * @returns {undefined}\n             */\n            actionCall: function (action, extraParams) {\n                var self = this,\n                    params = {metaData: testMetaData ? testMetaData.getData() : {}};\n\n                if (extraParams) {\n                    params = _.assign(params, extraParams);\n                }\n                this.beforeTransition(function () {\n                    $.ajax({\n                        url: self.testContext[action + 'Url'],\n                        cache: false,\n                        data: params,\n                        async: true,\n                        dataType: 'json',\n                        success: function (testContext) {\n                            testMetaData.clearData();\n\n                            if (!testContext.success) {\n                                self.processError(testContext);\n                            }\n                            else if (testContext.state === self.TEST_STATE_CLOSED) {\n                                self.serviceApi.finish();\n                            }\n                            else {\n                                self.update(testContext);\n                            }\n                        }\n                    });\n                });\n            },\n\n            /**\n             * Exit from test (after confirmation). All answered questions will be submitted.\n             *\n             * @returns {undefined}\n             */\n            exit: function () {\n                var self = this;\n                testMetaData.addData({\n                    \"TEST\" : {\"TEST_EXIT_CODE\" : testMetaData.TEST_EXIT_CODE.INCOMPLETE},\n                    \"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.QUIT}\n                });\n                this.displayExitMessage(\n                    __('Are you sure you want to end the test?'),\n                    function() {\n                    self.killItemSession(function () {\n                        self.actionCall('endTestSession');\n                        testMetaData.clearData();\n                    });\n                    },\n                    { scope: this.testReview ? this.testContext.reviewScope : null }\n                );\n            },\n\n            /**\n             * Set the state of the current item in the test runner\n             *\n             * @param {string} id\n             * @param {object} state\n             */\n            setCurrentItemState : function(id, state){\n                if(id){\n                    this.currentItemState[id] = state;\n                }\n            },\n\n            /**\n             * Reset the state of the current item in the test runner\n             */\n            resetCurrentItemState : function(){\n                this.currentItemState = {};\n            },\n\n            /**\n             * Get the state of the current item as stored in the test runner\n             * @returns {Object}\n             */\n            getCurrentItemState : function(){\n                return this.currentItemState;\n            }\n        };\n\n        var config = module.config();\n        if (config) {\n            actionBarTools.register(config.qtiTools);\n        }\n\n        return {\n            start: function (testContext) {\n\n                $controls = {\n                    // navigation\n                    $moveForward: $('[data-control=\"move-forward\"]'),\n                    $moveEnd: $('[data-control=\"move-end\"]'),\n                    $moveBackward: $('[data-control=\"move-backward\"]'),\n                    $nextSection: $('[data-control=\"next-section\"]'),\n                    $skip: $('[data-control=\"skip\"]'),\n                    $skipEnd: $('[data-control=\"skip-end\"]'),\n                    $exit: $(window.parent.document).find('[data-control=\"exit\"]'),\n                    $logout: $(window.parent.document).find('[data-control=\"logout\"]'),\n                    $naviButtons: $('.bottom-action-bar .action'),\n                    $skipButtons: $('.navi-box .skip'),\n                    $forwardButtons: $('.navi-box .forward'),\n\n                    // progress bar\n                    $progressBar: $('[data-control=\"progress-bar\"]'),\n                    $progressLabel: $('[data-control=\"progress-label\"]'),\n                    $progressBox: $('.progress-box'),\n\n                    // title\n                    $title:  $('[data-control=\"qti-test-title\"]'),\n                    $position:  $('[data-control=\"qti-test-position\"]'),\n\n                    // timers\n                    $timerWrapper:  $('[data-control=\"qti-timers\"]'),\n\n                    // other zones\n                    $contentPanel: $('.content-panel'),\n                    $controls: $('.qti-controls'),\n                    $itemFrame: $('#qti-item'),\n                    $rubricBlocks: $('#qti-rubrics'),\n                    $contentBox: $('#qti-content'),\n                    $sideBars: $('.test-sidebar'),\n                    $topActionBar: $('.horizontal-action-bar.top-action-bar'),\n                    $bottomActionBar: $('.horizontal-action-bar.bottom-action-bar')\n                };\n\n                // title\n                $controls.$titleGroup = $controls.$title.add($controls.$position);\n\n                $doc.ajaxError(function (event, jqxhr) {\n                    if (jqxhr.status === 403) {\n                        iframeNotifier.parent('serviceforbidden');\n                    }\n                });\n\n                window.onServiceApiReady = function onServiceApiReady(serviceApi) {\n                    TestRunner.serviceApi = serviceApi;\n\n                    if (!testContext.success) {\n                        TestRunner.processError(testContext);\n                    }\n\n                    // If the assessment test session is in CLOSED state,\n                    // we give the control to the delivery engine by calling finish.\n                    else if (testContext.state === TestRunner.TEST_STATE_CLOSED) {\n                        serviceApi.finish();\n                        testMetaData.clearData();\n                    }\n                    else {\n\n                        if (TestRunner.getSessionStateService().getDuration()) {\n                            TestRunner.setTestContext(testContext);\n                            TestRunner.initMetadata();\n\n                            TestRunner.keepItemTimed(TestRunner.getSessionStateService().getDuration());\n                            TestRunner.getSessionStateService().restart();\n                        } else {\n                            TestRunner.update(testContext);\n                        }\n                    }\n                };\n\n                TestRunner.beforeTransition();\n                TestRunner.testContext = testContext;\n\n                $controls.$skipButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.skip();\n                    }\n                });\n\n                $controls.$forwardButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveForward();\n                    }\n                });\n\n                $controls.$moveBackward.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveBackward();\n                    }\n                });\n\n                $controls.$nextSection.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.nextSection();\n                    }\n                });\n\n                $controls.$exit.click(function (e) {\n                    e.preventDefault();\n                    TestRunner.exit();\n                });\n\n                $(window).on('resize', _.throttle(function () {\n                    TestRunner.adjustFrame();\n                    $controls.$titleGroup.show();\n                }, 250));\n\n                $doc.on('loading', function () {\n                    iframeNotifier.parent('loading');\n                });\n\n\n                $doc.on('unloading', function () {\n                    iframeNotifier.parent('unloading');\n                });\n\n                TestRunner.progressUpdater = progressUpdater($controls.$progressBar, $controls.$progressLabel);\n\n                if (testContext.reviewScreen) {\n                    TestRunner.testReview = testReview($controls.$contentPanel, {\n                        region: testContext.reviewRegion || 'left',\n                        hidden: !TestRunner.hasOption(optionReviewScreen),\n                        reviewScope: testContext.reviewScope,\n                        preventsUnseen: !!testContext.reviewPreventsUnseen,\n                        canCollapse: !!testContext.reviewCanCollapse\n                    }).on('jump', function(event, position) {\n                        TestRunner.jump(position);\n                    }).on('mark', function(event, flag, position) {\n                        TestRunner.markForReview(flag, position);\n                    });\n                    $controls.$sideBars = $('.test-sidebar');\n                }\n\n                TestRunner.updateProgress();\n                TestRunner.updateTestReview();\n\n                iframeNotifier.parent('serviceready');\n\n\n                TestRunner.adjustFrame();\n\n                $controls.$topActionBar.add($controls.$bottomActionBar).animate({ opacity: 1 }, 600);\n\n                deleter($('#feedback-box'));\n                modal($('body'));\n\n                //listen to state change in the current item\n                $(document).on('responsechange', function(e, responseId, response){\n                    if(responseId && response){\n                        TestRunner.setCurrentItemState(responseId, {response:response});\n                    }\n                }).on('stateready', function(e, id, state){\n                    if(id && state){\n                        TestRunner.setCurrentItemState(id, state);\n                    }\n                }).on('heightchange', function(e, height) {\n                    $controls.$itemFrame.height(height);\n                });\n\n            }\n        };\n    });\n\n"]}