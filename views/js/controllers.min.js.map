{"version":3,"sources":["routes.js","creator/templates/testpart!tpl","creator/templates/section!tpl","creator/templates/rubricblock!tpl","creator/templates/itemref!tpl","creator/templates/item!tpl","tpl!taoQtiTest/controller/creator/templates/test-props","tpl!taoQtiTest/controller/creator/templates/testpart-props","tpl!taoQtiTest/controller/creator/templates/section-props","tpl!taoQtiTest/controller/creator/templates/itemref-props","tpl!taoQtiTest/controller/creator/templates/rubricblock-props","creator/templates/index.js","creator/views/item.js","creator/views/property.js","creator/views/actions.js","creator/helpers/sectionCategory.js","creator/views/itemref.js","creator/helpers/ckConfigurator.js","creator/views/rubricblock.js","creator/helpers/qtiTest.js","creator/views/section.js","creator/views/testpart.js","creator/views/test.js","creator/encoders/dom2qti.js","creator/creator.js","../testRunner/actionBarHook.js","../testRunner/actionBarTools.js","../testRunner/tpl/navigator!tpl","../testRunner/tpl/navigatorTree!tpl","../testRunner/testReview.js","../testRunner/progressUpdater.js","../testRunner/testMetaData.js","../../serviceApi/ServiceApi.js","../../serviceApi/UserInfoService.js","../../serviceApi/StateStorage.js","runtime/testRunner.js"],"names":["define","Creator","css","actions","index","hb","template","Handlebars","depth0","helpers","partials","data","this","compilerInfo","merge","stack1","helper","buffer","functionType","escapeExpression","identifier","call","hash","options","helperMissing","title","__","href","label","program1","uri","parent","inverse","self","noop","fn","program","program2","each","testPart","section","rubricBlock","itemRef","item","testProps","testPartProps","sectionProps","itemRefProps","rubricBlockProps","testpart","itemref","rubricblock","properties","test","$","templates","itemTemplate","itemView","loadItems","setUpLiveSearch","timeout","liveSearch","pattern","$search","val","length","clearTimeout","setTimeout","items","update","keyup","siblings","click","disableSelection","$itemBox","empty","append","enableSelection","$panel","selectable","filter","selected","event","ui","addClass","unselected","removeClass","stop","trigger","undefined","DataBinder","propView","tmplName","model","propValidation","$view","on","e","isValid","namespace","$togglers","groupValidator","$container","open","databinder","children","hide","appendTo","startDomComponent","bind","getView","isOpen","onOpen","cb","stopPropagation","onClose","destroy","remove","toggle","not","show","propertyView","find","preventDefault","$elt","hasClass","disabledClass","blur","activeClass","btnOnClass","move","$actionContainer","containerClass","elementClass","$element","parents","$elements","is","fadeOut","insertBefore","fadeIn","insertAfter","movable","actionContainerElt","$moveUp","$moveDown","removable","$delete","disable","enable","_","errorHandler","isValidSectionModel","isObject","isArray","sectionParts","setCategories","categories","oldCategories","getCategories","removed","difference","all","propagated","addCategories","removeCategories","map","compact","arrays","values","union","apply","intersection","partial","sort","_ns","getTaoOptionCategories","name","description","sectionCategory","setUp","$itemRef","propHandler","removePropHandler","categoriesProperty","initCategories","$select","select2","width","tags","pluck","multiple","tokenSeparators","formatNoMatches","maximumInputLength","resize","listenActionState","document","$parent","$target","target","throttle","$refs","first","$actions","innerWidth","outerWidth","ckConfigurator","mathJax","getConfig","editor","toolbarType","underline","ckeditor","ckConfig","filterPlugin","plugin","contains","plugins","reject","split","join","extraPlugins","$rubricBlock","rbViews","$propContainer","setUpEditor","$rubricBlockBinding","$rubricBlockContent","syncRubricBlockContent","html","inline","qtiTestHelper","extractIdentifiers","obj","identifiers","has","concat","toLowerCase","flatten","forEach","value","getIdentifier","qtiType","lockedIdentifiers","suggestion","glue","push","idFormatValidator","qtiIdPattern","message","validate","callback","testidFormatValidator","qtiTestIdPattern","idAvailableValidator","original","filterQtiType","type","addMissingQtiType","collection","parentType","key","isNumber","replace","consolidateModel","testParts","assessmentSections","assessmentSection","ordering","shuffle","part","rubricBlocks","content","views","itemRefView","rubricBlockView","$section","$selectionSwitcher","$selectionSelect","$selectionWithRep","switchSelection","prop","incrementer","selection","$title","text","itemRefs","labels","encode","acceptItemRefs","$selected","$items","Array","prototype","slice","arguments","$placeholder","$placeholders","off","defaultItemData","itemSessionControl","isUndefined","maxAttempts","clone","$item","addItemRef","defaults","decode","trim","end","qti-type","attr","$refList","itemData","eq","addRubricBlock","adder","templateData","$li","indexOf","$sections","sectionView","$testPart","$identifier","sections","addSection","sectionIndex","$testParts","testPartView","testView","addTestPart","testPartIndex","navigationMode","submissionMode","added","getAttributes","object","omit","attrToStr","attributes","reduce","acc","isString","isEmpty","Dom2QtiEncoder","modelValue","result","startTag","nodeValue","$nodeValue","elt","nodeType","xmlBase","nodeName","id","class","lang","transform","childNodes","module","history","feedback","DataBindController","itemrefView","validators","url","search","getJSON","notempty","Controller","routes","start","$saver","config","back","binderOptions","filters","isItemRef","isSection","encoders","dom2qti","beforeSave","binder","takeControl","get","register","window","save","success","Promise","isValidConfig","toolconfig","hook","triggerItemLoaded","tool","itemLoaded","initQtiTool","$toolsContainer","testContext","testRunner","itemIsLoaded","tools","resolve","require","$button","$existingBtn","isValidHook","init","clear","isVisible","render","_appendInOrder","$after","$before","order","prepend","parseInt","isNaN","$btn","_order","after","before","method","isFunction","$doc","eventifier","actionBarHook","registeredQtiTools","qtiTools","actionBarTools","registerTools","getRegisteredTools","getRegistered","isRegistered","list","container","promises","forIn","then","getId","region","hidden","active","program4","program29","program6","program7","answered","program8","program9","flagged","program11","program13","viewed","program17","program15","position","program21","program19","program24","program22","program27","program25","itemId","parts","navigatorTpl","navigatorTreeTpl","capitalize","_cssCls","collapsed","collapsible","disabled","unseen","icon","scope","testSection","_selectors","component","filterBar","tree","collapseHandle","linearState","infoAnswered","infoViewed","infoUnanswered","infoFlagged","infoPanel","infoPanelLabels","partLabels","sectionLabels","itemLabels","itemIcons","icons","linearStart","counters","actives","collapsiblePanels","notFlagged","notAnswered","_filterMap","unanswered","filtered","_optionsMap","reviewScope","reviewPreventsUnseen","canCollapse","_reviewScopes","testReview","element","initOptions","putOnRight","insertMethod","currentFilter","$component","Error","_loadDOM","_initEvents","_updateDisplayOptions","$infoAnswered","$infoViewed","$infoUnanswered","$infoFlagged","$filterBar","$filters","$tree","$linearState","toggleClass","_openSelected","closest","_togglePanel","_openOnly","_mark","_select","_jump","mode","_filter","criteria","_updateSectionCounters","jquery","hierarchy","parentsUntil","add","opened","root","panel","collapseSelector","_setItemIcon","_adjustItemIcon","defaultIcon","iconCls","cls","_toggleFlag","flag","itemPosition","$filtered","total","nb","_writeCount","scopeClass","$root","_updateOptions","optionKey","contextKey","_updateInfos","progression","Number","$place","count","_getProgressionOfTest","numberItems","numberCompleted","numberPresented","numberFlagged","_getProgressionOfTestPart","numberItemsPart","numberCompletedPart","numberPresentedPart","numberFlaggedPart","_getProgressionOfTestSection","numberItemsSection","numberCompletedSection","numberPresentedSection","numberFlaggedSection","_updateTree","navigatorMap","reviewScopePart","reviewScopeSection","_partsFilter","preventsUnseen","setItemFlag","updateNumberFlagged","fields","currentPosition","currentFound","currentSection","currentPart","itemFound","itemSection","itemPart","field","getProgression","progressInfoMethod","eventName","dom","extraParameters","testReviewFactory","progressUpdaters","progressBar","progressLabel","progressbar","write","ratio","progressIndicator","progressIndicatorMethod","percentageProgression","Math","max","floor","positionProgression","progressScope","progressIndicatorScope","progressScopeCounter","counter","progressUpdaterFactory","updater","testMetaDataFactory","_testServiceCallId","testServiceCallId","testMetaData","setData","getLocalStorageData","setLocalStorageData","currentKey","getLocalStorageKey","localStorage","setItem","domException","i","removeItem","getItem","JSON","parse","_storageKeyPrefix","_data","TypeError","SECTION_EXIT_CODE","COMPLETED_NORMALLY","QUIT","COMPLETE_TIMEOUT","TIMEOUT","FORCE_QUIT","IN_PROGRESS","ERROR","TEST_EXIT_CODE","COMPLETE","TERMINATED","INCOMPLETE","INCOMPLETE_QUIT","INACTIVE","CANDIDATE_DISAGREED_WITH_NDA","getTestServiceCallId","setTestServiceCallId","stringify","addData","overwrite","getData","clearData","UrlParser","ServiceApi","baseUrl","parameters","serviceCallId","stateStorage","userService","paused","connected","state","hasBeenPaused","SIG_SUCCESS","SIG_ERROR","loadInto","frame","$frame","callUrl","getCallUrl","isCORSAllowed","checkCORS","connect","contentWindow","__knownParent__","onServiceApiReady","params","param","getUserPropertyValues","property","getServiceCallId","getState","setState","set","getHasBeenPaused","setHasBeenPaused","getParameter","onFinish","onFinishCallback","onKill","onKillCallback","onExit","onExitCallback","kill","exit","finish","valueArray","UserInfoService","requestUrl","hasOwnProperty","ajax","dataType","service","r","StateStorage","submitUrl","progressUpdater","iframeNotifier","MathJax","deleter","moment","modal","timerIds","currentTimes","lastDates","timeDiffs","waitingTime","$timers","$controls","timerIndex","sessionStateService","optionNextSection","optionNextSectionWarning","optionReviewScreen","TestRunner","TEST_STATE_INITIAL","TEST_STATE_INTERACTING","TEST_STATE_MODAL_FEEDBACK","TEST_STATE_SUSPENDED","TEST_STATE_CLOSED","TEST_NAVIGATION_LINEAR","TEST_NAVIGATION_NONLINEAR","TEST_ITEM_STATE_INTERACTING","beforeTransition","disableGui","$itemFrame","$rubricBlocks","$timerWrapper","afterTransition","enableGui","ITEM","ITEM_START_TIME_CLIENT","Date","now","jump","action","isJumpOutOfSection","isCurrentItemActive","isTimedSection","exitTimedSection","killItemSession","actionCall","keepItemTimed","duration","markForReview","markForReviewUrl","cache","async","itemFlagged","updateTools","moveForward","itemPositionSection","isTimeout","exitSection","moveBackward","jumpPosition","getCurrentSectionItems","isJumpToOtherSection","isValidPosition","exitCode","SECTION","qtiRunner","getQtiRunner","updateItemApi","displayExitMessage","nextSection","doNextSection","hasOption","scopeSuffixMap","scopeSuffix","$confirmBox","unansweredCount","flaggedCount","isCurrentItemAnswered","toString","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","format","itemServiceApi","itemSessionState","getCurrentItemState","response","base","option","itemFrame","getElementById","itemWindow","itemContainerFrame","itemContainerWindow","timeConstraints","qtiClassName","sectionItems","partId","testPartId","navMap","partIndex","skip","updateTimer","confirmBox","confirmBtn","setTestContext","eval","itemServiceApiCall","initMetadata","getSessionStateService","accuracy","$runner","restart","updateContext","updateProgress","updateNavigation","updateTestReview","updateInformation","updateRubrics","updateExitButton","resetCurrentItemState","$contentBox","adjustFrame","visibility","error","itemIdentifier","showSkip","showSkipEnd","showNextSection","allowSkipping","isLast","$skip","$skipEnd","$nextSection","createTimer","cst","$timer","$label","$time","formatTime","seconds","hasTimers","$topActionBar","allowLateSubmission","timerWarning","warnings","showed","point","closestPreviousWarning","setInterval","getTime","round","clearInterval","warning","findLast","isFinite","timeWarning","remaining","humanize","rubrics","prependTo","Hub","Queue","$exit","$moveForward","$moveEnd","$moveBackward","canMoveBackward","considerProgress","$progressBox","testTitle","sectionText","isDeepestSectionVisible","sectionTitle","$position","$titleGroup","$logout","logoutButton","exitButton","frameContentHeight","rubricHeight","outerHeight","finalHeight","innerHeight","$bottomActionBar","height","$sideBars","$sideBar","contents","$naviButtons","hideGui","showGui","totalSeconds","sec_num","hours","minutes","time","processError","serviceApi","extraParams","metaData","assign","TEST","setCurrentItemState","currentItemState","$skipButtons","$forwardButtons","$progressBar","$progressLabel","$contentPanel","ajaxError","jqxhr","status","getDuration","reviewScreen","reviewRegion","reviewCanCollapse","animate","opacity","responseId"],"mappings":"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hB,oBACA10B,GAAA,OAAA,SAAAd,MAAAuX,UACA2R,WAAAoB,KAAA/S,YACAzW,GAAA,OAAA,SAAAd,MAAAud,KAAAhG,UACA2R,WAAA8B,cAAAzN,KAAAhG,YAEAqR,UAAA8K,UAAAt1B,EAAA,kBAGA8qB,WAAAgG,iBACAhG,WAAAkG,mBAEAnH,eAAAprB,OAAA,gBAGAqsB,WAAAwG,cAEA9G,UAAAkI,cAAAlU,IAAAgM,UAAA4K,kBAAAiC,SAAAC,QAAA,GAAA,KAEAvN,QAAA/pB,EAAA,kBACAiqB,MAAAjqB,EAAA,SAGAA,EAAA+I,UAAArG,GAAA,iBAAA,SAAAC,EAAA40B,WAAArI;AACAqI,A7B7wCA,Y6B6wCArI,UACApE,WAAAyL,oBAAAgB,YAAArI,SAAAA,aAEAxsB,GAAA,aAAA,SAAAC,EAAAkQ,GAAAkU,OACAlU,IAAAkU,OACA+D,WAAAyL,oBAAA1jB,GAAAkU,SAEArkB,GAAA,eAAA,SAAAC,EAAA0yB,QACA7K,UAAAiB,WAAA4J,OAAAA;A7BpxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvlGA,ADmGA;AClpCA,ADqCA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzJA,AD0JA;ACzgvvJA,ADwJA;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrrvIA,ADwIA;ACvjNA,ADkNA;ACjjzxNA,ADyNA;ACxphNA,ADiNA;AChhDA,ADiDA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtfile":"taoQtiTest/controller/routes.js","sourcesContent":["/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n * \r\n * \r\n */\r\n\r\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\r\ndefine('taoQtiTest/controller/routes',[],function(){\r\n    'use strict';\r\n\r\n    return {\r\n        'Creator': {\r\n            'css': 'creator', \r\n            'actions': {\r\n                'index' : 'controller/creator/creator'\r\n            }\r\n        }\r\n    };\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart clearfix\\\">\\r\\n\\r\\n   <h1><span data-bind=\\\"identifier\\\">\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n        <div class=\\\"actions\\\"> \\r\\n            <div class=\\\"tlb\\\">\\r\\n                <div class=\\\"tlb-top\\\">\\r\\n                    <span class=\\\"tlb-box\\\">\\r\\n                        <span class=\\\"tlb-bar\\\">\\r\\n                            <span class=\\\"tlb-start\\\"></span>\\r\\n                            <span class=\\\"tlb-group\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"Test Part Properties\\\"><span class=\\\"icon-settings\\\"></span></a>\\r\\n                                <span class=\\\"tlb-separator\\\"></span>\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"Move Up\\\"><span class=\\\"icon-up\\\"></span></a>\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"Move Down\\\"><span class=\\\"icon-down\\\"></span></a>\\r\\n                                <span class=\\\"tlb-separator\\\"></span> \\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"Remove Test Part\\\" data-delete=\\\"#\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-bin\\\"></span></a>\\r\\n                            </span>\\r\\n                            <span class=\\\"tlb-end\\\"></span>\\r\\n                        </span>  \\r\\n                        <!--<span class=\\\"tlb-bar\\\">-->\\r\\n                            <!--<span class=\\\"tlb-start\\\"></span>-->\\r\\n                            <!--<span class=\\\"tlb-text-button-box\\\">-->\\r\\n                                <!--<a class=\\\"tlb-text-button-off section-adder\\\">-->\\r\\n                                    <!--<span class=\\\"icon-add\\\"></span>-->\\r\\n                                    <!--<span class=\\\"tlb-text\\\">New Section</span>-->\\r\\n                                <!--</a>-->\\r\\n                            <!--</span>-->\\r\\n                            <!--<span class=\\\"tlb-end\\\"></span>-->\\r\\n                        <!--</span>-->\\r\\n                    </span>   \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <a href=\\\"#\\\" class=\\\"toggler opened\\\" data-toggle=\\\"#testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\r\\n    </h1>\\r\\n    <div id=\\\"testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-content\\\">\\r\\n        \\r\\n       <!-- assessmentTest/testPart/assessmentSections -->\\r\\n       <div class=\\\"sections\\\" data-bind-each=\\\"assessmentSections\\\" data-bind-tmpl=\\\"section\\\" data-bind-filter=\\\"isSection\\\"></div>\\r\\n\\r\\n        <button class=\\\"btn-info small section-adder\\\">\\r\\n            <span class=\\\"icon-add\\\"></span>New section\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section\\\">\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\r\\n    <h2><span data-bind=\\\"title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n        <div class=\\\"actions\\\">\\r\\n            <div class=\\\"tlb\\\">\\r\\n                <div class=\\\"tlb-top\\\">\\r\\n                    <span class=\\\"tlb-box\\\">\\r\\n                        <span class=\\\"tlb-bar\\\">\\r\\n                            <span class=\\\"tlb-start\\\"></span>\\r\\n                            <span class=\\\"tlb-group\\\">\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off rub-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Manage Rubric Blocks\", options)))\n    + \"\\\" data-toggle=\\\"#rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" ><span class=\\\"icon-rubric\\\"></span></a>\\r\\n                                <span class=\\\"tlb-separator\\\"></span>\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section Properties\", options) : helperMissing.call(depth0, \"__\", \"Section Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\r\\n                                <span class=\\\"tlb-separator\\\"></span>\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\r\\n                                <span class=\\\"tlb-separator\\\"></span>\\r\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Section\", options) : helperMissing.call(depth0, \"__\", \"Remove Section\", options)))\n    + \"\\\" data-delete=\\\":parent .section\\\"><span class=\\\"icon-bin\\\"></span></a>\\r\\n                            </span>\\r\\n                            <span class=\\\"tlb-end\\\"></span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </h2>\\r\\n\\r\\n    <div id=\\\"rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"rublocks clearfix toggled\\\">\\r\\n        <h3>\\r\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Rubric Blocks\", options)))\n    + \"</span>\\r\\n        </h3>\\r\\n        <ol class=\\\"rubricblocks decimal\\\" data-bind-each=\\\"rubricBlocks\\\" data-bind-tmpl=\\\"rubricblock\\\"></ol>\\r\\n        <button class=\\\"btn-info small rublock-adder\\\">\\r\\n            <span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"New Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"New Rubric Block\", options)))\n    + \"\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"itemrefs-wrapper\\\">\\r\\n        <h3>\\r\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items\", options) : helperMissing.call(depth0, \"__\", \"Items\", options)))\n    + \"</span>\\r\\n        </h3>\\r\\n        <ol class=\\\"itemrefs decimal clearfix\\\" data-bind-each=\\\"sectionParts\\\" data-bind-tmpl=\\\"itemref\\\" data-bind-filter=\\\"isItemRef\\\" data-msg=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\\"></ol>\\r\\n        <div class=\\\"itemref-placeholder\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"rubricblock\\\">\\r\\n    <div class=\\\"actions\\\">\\r\\n       <div class=\\\"tlb\\\">\\r\\n            <div class=\\\"tlb-top\\\">\\r\\n                <span class=\\\"tlb-box\\\">\\r\\n                    <span class=\\\"tlb-bar\\\">\\r\\n                        <span class=\\\"tlb-start\\\"></span>\\r\\n                        <span class=\\\"tlb-group\\\">\\r\\n                            <!--<a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block Properties\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>-->\\r\\n                            <!--<span class=\\\"tlb-separator\\\"></span> -->\\r\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Remove Rubric Block\", options)))\n    + \"\\\" data-delete=\\\":parent .rubricblock\\\"><span class=\\\"icon-bin\\\"></span></a>\\r\\n                        </span>\\r\\n                        <span class=\\\"tlb-end\\\"></span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"rubricblock-content\\\" contenteditable></div>\\r\\n    <div class=\\\"rubricblock-binding\\\" data-bind=\\\"content\\\" data-bind-html=\\\"true\\\" data-bind-encoder=\\\"dom2qti\\\"></div>\\r\\n</li>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<li id='\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-uri='\";\n  if (helper = helpers.href) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.href); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='itemref'>\\r\\n    <span class='title truncate'>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n    <div class=\\\"actions\\\"> \\r\\n        <div class=\\\"tlb\\\">\\r\\n            <div class=\\\"tlb-top\\\">\\r\\n                <span class=\\\"tlb-box\\\">\\r\\n                    <span class=\\\"tlb-bar\\\">\\r\\n                        <span class=\\\"tlb-start\\\"></span>\\r\\n                        <span class=\\\"tlb-group\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Reference Properties\", options) : helperMissing.call(depth0, \"__\", \"Item Reference Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\r\\n                            <span class=\\\"tlb-separator\\\"></span>\\r\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\r\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\r\\n                            <span class=\\\"tlb-separator\\\"></span> \\r\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Item Reference\", options) : helperMissing.call(depth0, \"__\", \"Remove Item Reference\", options)))\n    + \"\\\" data-delete=\\\":parent .itemref\\\"><span class=\\\"icon-bin\\\"></span></a>\\r\\n                        </span>\\r\\n                        <span class=\\\"tlb-end\\\"></span>\\r\\n                    </span>  \\r\\n                </span>   \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</li>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/item', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n     <li data-uri='\";\n  if (helper = helpers.uri) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.uri); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='truncate'>\\r\\n        \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \\r\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parent), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n     </li>\\r\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class='flag truncate' title=\\\"\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.parent) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.parent); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/test-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"test-props props clearfix\\\">\\r\\n\\r\\n    <!-- test properties -->\\r\\n    <h3 data-bind=\\\"title\\\"></h3>\\r\\n\\r\\n<!-- assessmentTest/identifier -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"test-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"test-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The principle identifier of the test.\", options) : helperMissing.call(depth0, \"__\", \"The principle identifier of the test.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<!-- assessmentTest/title -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"test-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"test-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test title.\", options) : helperMissing.call(depth0, \"__\", \"The test title.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/timeLimits -->\\r\\n    <div class=\\\"test-time-limits toggled\\\">\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/timeLimits/maxTime -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"test-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for the all test.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for the all test.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/timeLimits/allowLateSubmission -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"test-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"testpart-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-props props clearfix\\\">\\r\\n    <h3>\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\r\\n\\r\\n    <form autocomplete=\\\"off\\\">\\r\\n\\r\\n<!-- assessmentTest/testPart/identifier -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"testpart-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"testpart-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test part identifier.\", options) : helperMissing.call(depth0, \"__\", \"The test part identifier.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/navigationMode -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n               \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"navigationMode\\\" data-bind-encoder=\\\"number\\\" />\\r\\n                    <span class=\\\"icon-radio\\\"></span>\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Linear\", options) : helperMissing.call(depth0, \"__\", \"Linear\", options)))\n    + \"\\r\\n                </label>\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"1\\\"  />\\r\\n                    <span class=\\\"icon-radio\\\"></span>\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Non Linear\", options) : helperMissing.call(depth0, \"__\", \"Non Linear\", options)))\n    + \"\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options) : helperMissing.call(depth0, \"__\", \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/submissionMode -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Submission\", options) : helperMissing.call(depth0, \"__\", \"Submission\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"submissionMode\\\" data-bind-encoder=\\\"number\\\" />\\r\\n                    <span class=\\\"icon-radio\\\"></span>\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Individual\", options) : helperMissing.call(depth0, \"__\", \"Individual\", options)))\n    + \"\\r\\n                </label>\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"1\\\"  />\\r\\n                    <span class=\\\"icon-radio\\\"></span>\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Simultaneous\", options) : helperMissing.call(depth0, \"__\", \"Simultaneous\", options)))\n    + \"\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options) : helperMissing.call(depth0, \"__\", \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/itemSessionControl -->\\r\\n        <div class=\\\"testpart-item-session-control toggled\\\">\\r\\n\\r\\n<!-- assessmentTest/testPart/itemSessionControl/maxAttempts -->\\r\\n            <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <label for=\\\"testpart-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <input name=\\\"testpart-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-1 help\\\">\\r\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                    <div class=\\\"tooltip-content\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/itemSessionControl/showFeedback -->\\r\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <label for=\\\"testpart-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                        <span class=\\\"icon-checkbox\\\" />\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 help\\\">\\r\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                    <div class=\\\"tooltip-content\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/itemSessionControl/allowComment -->\\r\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <label for=\\\"testpart-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-comment\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                        <span class=\\\"icon-checkbox\\\" />\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 help\\\">\\r\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                    <div class=\\\"tooltip-content\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/itemSessionControl/allowSkipping -->\\r\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <label for=\\\"testpart-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\"   />\\r\\n                        <span class=\\\"icon-checkbox\\\" />\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 help\\\">\\r\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                    <div class=\\\"tooltip-content\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/testPart/timeLimits/minTime -->\\r\\n        <div class=\\\"testpart-time-limits toggled\\\">\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/timeLimits/maxTime -->\\r\\n            <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <label for=\\\"testpart-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-1 help\\\">\\r\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                    <div class=\\\"tooltip-content\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this test part.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this test part.\", options)))\n    + \"\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/timeLimits/allowLateSubmission -->\\r\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <label for=\\\"testpart-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <label>\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                        <span class=\\\"icon-checkbox\\\" />\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-1 help\\\">\\r\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                    <div class=\\\"tooltip-content\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options)))\n    + \"\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"section-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section-props props clearfix\\\">\\r\\n    <h3>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/identifier -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"section-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"section-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the section.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the section.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"section-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"section-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The section title.\", options) : helperMissing.call(depth0, \"__\", \"The section title.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/visible -->\\r\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"section-visible\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Visible\", options) : helperMissing.call(depth0, \"__\", \"Visible\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <label>\\r\\n                <input type=\\\"checkbox\\\" name=\\\"section-visible\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"visible\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                <span class=\\\"icon-checkbox\\\"></span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"A visible section is one that is identifiable by the candidate.\", options) : helperMissing.call(depth0, \"__\", \"A visible section is one that is identifiable by the candidate.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/keepTogether -->\\r\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"section-keep-together\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keep Together\", options) : helperMissing.call(depth0, \"__\", \"Keep Together\", options)))\n    + \"</label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <label>\\r\\n                <input type=\\\"checkbox\\\" name=\\\"section-keep-together\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"keepTogether\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                <span class=\\\"icon-checkbox\\\"></span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options) : helperMissing.call(depth0, \"__\", \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"section-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"section-category\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options) : helperMissing.call(depth0, \"__\", \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Selection\", options) : helperMissing.call(depth0, \"__\", \"Selection\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/selection -->\\r\\n    <div class=\\\"section-selection toggled\\\">\\r\\n\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-enable-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enable selection\", options) : helperMissing.call(depth0, \"__\", \"Enable selection\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-enable-selection\\\"  />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/selection/select -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-select\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select\", options) : helperMissing.call(depth0, \"__\", \"Select\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input name=\\\"section-select\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"0\\\" data-bind=\\\"selection.select\\\"  data-bind-encoder=\\\"number\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The number of child elements to be selected.\", options) : helperMissing.call(depth0, \"__\", \"The number of child elements to be selected.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/selection/withReplacement -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-with-replacement\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With Replacement\", options) : helperMissing.call(depth0, \"__\", \"With Replacement\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-with-replacement\\\" value=\\\"true\\\" data-bind=\\\"selection.withReplacement\\\"  data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"When selecting child elements each element is normally eligible for selection once only.\", options) : helperMissing.call(depth0, \"__\", \"When selecting child elements each element is normally eligible for selection once only.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-ordering\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Ordering\", options) : helperMissing.call(depth0, \"__\", \"Ordering\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/ordering -->\\r\\n    <div class=\\\"section-ordering toggled\\\">\\r\\n<!-- assessmentTest/testPart/assessmentSection/ordering/shuffle -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-shuffle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Shuffle\", options) : helperMissing.call(depth0, \"__\", \"Shuffle\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-shuffle\\\" value=\\\"true\\\" data-bind=\\\"ordering.shuffle\\\"  data-bind-encoder=\\\"boolean\\\"  />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options) : helperMissing.call(depth0, \"__\", \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl -->\\r\\n    <div class=\\\"section-item-session-control toggled\\\">\\r\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/maxAttempts -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input name=\\\"section-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/showFeedback -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowComment -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowSkipping -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/timeLimits -->\\r\\n    <div class=\\\"section-time-limits toggled\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/maxTime -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this section.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this section.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/allowLateSubmission -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"section-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"itemref-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"itemref-props props clearfix\\\">\\r\\n\\r\\n    <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/identifier -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"itemref-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the item reference.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the item reference.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/href -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"itemref-href\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reference\", options) : helperMissing.call(depth0, \"__\", \"Reference\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"itemref-href\\\" data-bind=\\\"href\\\" readonly=\\\"readonly\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The reference.\", options) : helperMissing.call(depth0, \"__\", \"The reference.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"itemref-category\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" name=\\\"itemref-category\\\" data-bind=\\\"categories\\\" data-bind-encoder=\\\"str2array\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items can optionally be assigned to one or more categories.\", options) : helperMissing.call(depth0, \"__\", \"Items can optionally be assigned to one or more categories.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/required -->\\r\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"itemref-required\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required\", options) : helperMissing.call(depth0, \"__\", \"Required\", options)))\n    + \"</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <label>\\r\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-required\\\" value=\\\"true\\\" data-bind=\\\"required\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                <span class=\\\"icon-checkbox\\\"></span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If required it must appear (at least once) in the selection.\", options) : helperMissing.call(depth0, \"__\", \"If required it must appear (at least once) in the selection.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/fixed -->\\r\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"itemref-fixed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Fixed\", options) : helperMissing.call(depth0, \"__\", \"Fixed\", options)))\n    + \"</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <label>\\r\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-fixed\\\" value=\\\"true\\\" data-bind=\\\"fixed\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                <span class=\\\"icon-checkbox\\\"></span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Not shuffled, the position remains fixed.\", options) : helperMissing.call(depth0, \"__\", \"Not shuffled, the position remains fixed.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl -->\\r\\n    <div class=\\\"itemref-item-session-control toggled\\\">\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/maxAttempts -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"itemref-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input name=\\\"itemref-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/showFeedback -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"itemref-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowComment -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"itemref-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowSkipping -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"itemref-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response.\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\r\\n\\r\\n<!-- assessmentTest/timeLimits -->\\r\\n    <div class=\\\"itemref-time-limits toggled\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/maxTime -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"itemref-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this item.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this item.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/allowLateSubmission -->\\r\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <label for=\\\"itemref-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\r\\n                    <span class=\\\"icon-checkbox\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"col-1 help\\\">\\r\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n                <div class=\\\"tooltip-content\\\">\\r\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options)))\n    + \"\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"rubricblock-props props clearfix\\\">\\r\\n\\r\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block\", options)))\n    + \": \";\n  if (helper = helpers.index) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.index); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\r\\n\\r\\n <!--assessmentTest/testPart/assessmentSection/sectionPart/rubrickBlocK/views -->\\r\\n    <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Views\", options) : helperMissing.call(depth0, \"__\", \"Views\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <select name=\\\"view\\\" multiple=\\\"multiple\\\" data-bind=\\\"views\\\">\\r\\n                <option value=\\\"author\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Author\", options) : helperMissing.call(depth0, \"__\", \"Author\", options)))\n    + \"</option>\\r\\n                <option value=\\\"candidate\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Candidate\", options) : helperMissing.call(depth0, \"__\", \"Candidate\", options)))\n    + \"</option>\\r\\n                <option value=\\\"proctor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proctor\", options) : helperMissing.call(depth0, \"__\", \"Proctor\", options)))\n    + \"</option>\\r\\n                <option value=\\\"scorer\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scorer\", options) : helperMissing.call(depth0, \"__\", \"Scorer\", options)))\n    + \"</option>\\r\\n                <option value=\\\"testConstructor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test constructor\", options) : helperMissing.call(depth0, \"__\", \"Test constructor\", options)))\n    + \"</option>\\r\\n                <option value=\\\"tutor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Tutor\", options) : helperMissing.call(depth0, \"__\", \"Tutor\", options)))\n    + \"</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 help\\\">\\r\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span> \\r\\n            <div class=\\\"tooltip-content\\\">\\r\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Who can view the rubric block during the delivery.\", options) : helperMissing.call(depth0, \"__\", \"Who can view the rubric block during the delivery.\", options)))\n    + \"\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";\n  return buffer;\n  });\n});\n\n","define('taoQtiTest/controller/creator/templates/index',[\r\n'tpl!taoQtiTest/controller/creator/templates/testpart',\r\n'tpl!taoQtiTest/controller/creator/templates/section', \r\n'tpl!taoQtiTest/controller/creator/templates/rubricblock', \r\n'tpl!taoQtiTest/controller/creator/templates/itemref',\r\n'tpl!taoQtiTest/controller/creator/templates/item',\r\n'tpl!taoQtiTest/controller/creator/templates/test-props',\r\n'tpl!taoQtiTest/controller/creator/templates/testpart-props', \r\n'tpl!taoQtiTest/controller/creator/templates/section-props', \r\n'tpl!taoQtiTest/controller/creator/templates/itemref-props', \r\n'tpl!taoQtiTest/controller/creator/templates/rubricblock-props'], \r\n\r\nfunction(testPart, section, rubricBlock, itemRef, item, testProps, testPartProps, sectionProps, itemRefProps, rubricBlockProps){\r\n    'use strict';\r\n\r\n    /**\r\n     * Expose all the templates used by the test creator\r\n     * @exports taoQtiTest/controller/creator/templates/index\r\n     */\r\n    return {\r\n        'testpart'      : testPart,\r\n        'section'       : section,\r\n        'itemref'       : itemRef,\r\n        'item'          : item,\r\n        'rubricblock'   : rubricBlock,\r\n        'properties'    : {\r\n            'test'      : testProps,\r\n            'testpart'  : testPartProps,\r\n            'section'   : sectionProps,\r\n            'itemref'   : itemRefProps,\r\n            'rubricblock'   : rubricBlockProps\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/item',['jquery', 'taoQtiTest/controller/creator/templates/index'], function($, templates){\r\n    'use strict';\r\n  \r\n    var itemTemplate = templates.item;\r\n \r\n   /**\r\n     * The ItemView setup items related components\r\n     * @exports taoQtiTest/controller/creator/views/item\r\n     * @param {Function} loadItems - the function used to get items from the server\r\n     */\r\n   var itemView =  function(loadItems){\r\n            \r\n        var $panel     = $('.test-creator-items .item-selection'); \r\n        var $search    = $('#item-filter');\r\n        var $itemBox   = $('.item-box', $panel);\r\n        \r\n        if(typeof loadItems === 'function'){\r\n            //search pattern is empty the 1st time, give it undefined\r\n            loadItems(undefined, function(items){\r\n                update(items);\r\n                setUpLiveSearch();\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * Set up the search behavior: once 3 chars are enters into the field,\r\n         * we load the items that matches the given search pattern.\r\n         * @private\r\n         */\r\n        function setUpLiveSearch (){\r\n            var timeout;\r\n            \r\n            var liveSearch = function(){\r\n                var pattern = $search.val();\r\n                if(pattern.length > 1 || pattern.length === 0){\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(function(){\r\n                        loadItems(pattern, function(items){\r\n                            update(items);\r\n                        });\r\n                    }, 300);\r\n                }\r\n            };\r\n            \r\n            //trigger the search on keyp and on the magnifer button click\r\n            $search.keyup(liveSearch)\r\n                     .siblings('.ctrl').click(liveSearch);\r\n        }\r\n        \r\n        /**\r\n         * Update the items list\r\n         * @private\r\n         * @param {Array} items - the new items\r\n         */\r\n        function update (items){\r\n            disableSelection();\r\n            $itemBox.empty().append(itemTemplate(items));\r\n            enableSelection();\r\n        }\r\n    \r\n        /**\r\n         * Disable the selectable component\r\n         * @private\r\n         * @param {Array} items - the new items\r\n         */\r\n        function disableSelection (){\r\n            if($panel.data('selectable')){\r\n                $panel.selectable('disable');\r\n            }\r\n        }\r\n    \r\n        /**\r\n         * Enable to select items to be added to sections\r\n         * using the jquery-ui selectable.\r\n         * @private\r\n         */\r\n        function enableSelection (){\r\n            \r\n            if($panel.data('selectable')){\r\n                $panel.selectable('enable');\r\n            } else {\r\n                $panel.selectable({\r\n                    filter: 'li',\r\n                    selected: function( event, ui ) {\r\n                        $(ui.selected).addClass('selected');\r\n                    },\r\n                    unselected: function( event, ui ) {\r\n                        $(ui.unselected).removeClass('selected');\r\n                    },\r\n                    stop: function(){\r\n                        $(this).trigger('itemselect.creator', $('.selected')); \r\n                    }\r\n                });\r\n            }\r\n        }\r\n   };\r\n    \r\n    return itemView;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/property',[\r\n'jquery', \r\n'ui', \r\n'core/databinder', \r\n'taoQtiTest/controller/creator/templates/index'], \r\nfunction($, ui, DataBinder, templates){\r\n    'use strict';\r\n\r\n    /**\r\n     * @callback PropertyViewCallback\r\n     * @param {propertyView} propertyView - the view object \r\n     */\r\n   \r\n    /**\r\n     * The PropertyView setup the property panel component\r\n     * \r\n     * @exports taoQtiTest/controller/creator/views/property\r\n     */\r\n   var propView = function propView(tmplName, model){\r\n       var $container = $('.test-creator-props');\r\n       var template = templates.properties[tmplName];\r\n       var $view;       \r\n\r\n       /**\r\n        * Opens the view for the 1st time\r\n        */ \r\n       var open = function propOpen(){\r\n            var databinder;\r\n            $container.children('.props').hide().trigger('propclose.propview');\r\n            $view = $(template(model)).appendTo($container).filter('.props'); \r\n            \r\n            //start listening for DOM compoenents inside the view\r\n            ui.startDomComponent($view);\r\n\r\n            //start the data binding\r\n            databinder = new DataBinder($view, model);\r\n            databinder.bind();\r\n    \r\n            propValidation(); \r\n\r\n            $view.trigger('propopen.propview');\r\n       };\r\n\r\n       /**\r\n        * Get the view container element\r\n        * @returns {jQueryElement}\r\n        */  \r\n       var getView = function propGetView(){\r\n            return $view;\r\n       };\r\n           \r\n       /**\r\n        * Check wheter the view is displayed\r\n        * @returns {boolean} true id opened\r\n        */  \r\n       var isOpen = function propIsOpen(){\r\n            return $view.css('display') !== 'none';\r\n       };\r\n\r\n       /**\r\n        * Bind a callback on view open\r\n        * @param {PropertyViewCallback} cb\r\n        */  \r\n       var onOpen = function propOnOpen(cb){\r\n            $view.on('propopen.propview', function(e){\r\n                e.stopPropagation();\r\n                cb(); \r\n            });\r\n       };\r\n\r\n       \r\n       /**\r\n        * Bind a callback on view close\r\n        * @param {PropertyViewCallback} cb\r\n        */  \r\n       var onClose = function propOnClose(cb){\r\n            $view.on('propclose.propview', function(e){\r\n                e.stopPropagation();\r\n                cb(); \r\n            });\r\n       };\r\n\r\n       /**\r\n        * Removes the property view\r\n        */  \r\n       var destroy = function propDestroy(){\r\n            $view.remove();\r\n       };\r\n       \r\n       /**\r\n        * Toggles the property view display\r\n        */  \r\n       var toggle = function propToggle(){\r\n            $container.children('.props').not($view).hide().trigger('propclose.propview');\r\n            if(isOpen()){\r\n                $view.hide().trigger('propclose.propview');\r\n            } else {\r\n                $view.show().trigger('propopen.propview');\r\n            }\r\n       };\r\n      \r\n       /**\r\n        * Set up the validation on the property view\r\n        * @private\r\n        */  \r\n       function propValidation() {\r\n            $view.on('validated.group', function(e, isValid){\r\n                if(e.namespace === 'group'){\r\n                    var $togglers = $('#test-creator .property-toggler, #saver');\r\n                    if(isValid === true){\r\n                        $togglers.removeClass('disabled');\r\n                    } else {\r\n                        $togglers.addClass('disabled');\r\n                    }\r\n                }\r\n            });\r\n            $view.groupValidator();\r\n        }\r\n\r\n      return {\r\n        open : open,\r\n        getView : getView,\r\n        isOpen : isOpen,\r\n        onOpen : onOpen,\r\n        onClose : onClose,\r\n        destroy : destroy,\r\n        toggle : toggle\r\n      }; \r\n   };\r\n\r\n   return propView;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/actions',[\r\n'jquery',\r\n'taoQtiTest/controller/creator/views/property'],\r\nfunction($, propertyView){\r\n    'use strict';\r\n\r\n    var disabledClass = 'disabled';\r\n    var activeClass = 'active';\r\n    var btnOnClass = 'tlb-button-on';\r\n\r\n    /**\r\n     * Set up the property view for an element\r\n     * @param {jQueryElement} $container - that contains the property opener\r\n     * @param {String} template - the name of the template to give to the propertyView\r\n     * @param {Object} model - the model to bind\r\n     * @param {PropertyViewCallback} cb - execute at view setup phase\r\n     */\r\n    function properties ($container, template, model, cb) {\r\n        var propView = null;\r\n        $container.find('.property-toggler').on('click', function(e){\r\n            e.preventDefault();\r\n            var $elt = $(this);\r\n            if(!$(this).hasClass(disabledClass)){\r\n\r\n                $elt.blur(); //to remove the focus\r\n\r\n                if(propView === null){\r\n\r\n                    $container.addClass(activeClass);\r\n                    $elt.addClass(btnOnClass);\r\n\r\n                    propView = propertyView(template, model);\r\n                    propView.open();\r\n\r\n                    propView.onOpen(function(){\r\n                        $container.addClass(activeClass);\r\n                        $elt.addClass(btnOnClass);\r\n                    });\r\n                    propView.onClose(function(){\r\n                        $container.removeClass(activeClass);\r\n                        $elt.removeClass(btnOnClass);\r\n                    });\r\n\r\n                    if(typeof cb === 'function'){\r\n                        cb(propView);\r\n                    }\r\n                } else {\r\n                    propView.toggle();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Enable to move an element\r\n     * @param {jQueryElement} $actionContainer - where the mover is\r\n     * @param {String} containerClass - the cssClass of the element container\r\n     * @param {String} elementClass - the cssClass to identify elements\r\n     */\r\n    function move ($actionContainer, containerClass, elementClass) {\r\n        var $element = $actionContainer.parents('.' + elementClass);\r\n        var $container = $element.parents('.' + containerClass );\r\n\r\n        //move up an element\r\n        $('.move-up', $actionContainer).click(function(e){\r\n            var $elements, index;\r\n\r\n            //prevent default and click during animation\r\n            e.preventDefault();\r\n            if($element.is(':animated')){\r\n                return false;\r\n            }\r\n\r\n            //get the position\r\n            $elements = $('.' + elementClass, $container);\r\n            index = $elements.index($element);\r\n            if (index > 0) {\r\n                $element.fadeOut(200, function(){\r\n                    $element\r\n                        .insertBefore($('.' + elementClass + ' :eq(' + (index - 1) + ')', $container))\r\n                        .fadeIn(400, function(){\r\n                            $container.trigger('change');\r\n                        });\r\n                });\r\n            }\r\n        });\r\n\r\n        //move down an element\r\n        $('.move-down', $actionContainer).click(function(e){\r\n            var $elements, index;\r\n\r\n            //prevent default and click during animation\r\n            e.preventDefault();\r\n            if($element.is(':animated')){\r\n                return false;\r\n            }\r\n\r\n            //get the position\r\n            $elements = $('.' + elementClass, $container);\r\n            index = $elements.index($element);\r\n            if (index < ($elements.length - 1) && $elements.length > 1) {\r\n                $element.fadeOut(200, function(){\r\n                    $element\r\n                        .insertAfter($('.' + elementClass + ' :eq(' + (index + 1) + ')', $container))\r\n                        .fadeIn(400, function(){\r\n                            $container.trigger('change');\r\n                        });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the movable state of an element\r\n     * @param {jQueryElement} $container - the movable elements (scopped)\r\n     * @param {String} elementClass - the cssClass to identify elements\r\n     * @param {String} actionContainerElt - the element name that contains the actions\r\n     */\r\n    function movable ($container, elementClass, actionContainerElt){\r\n        $container.each(function(){\r\n            var $elt = $(this);\r\n            var $actionContainer = $(actionContainerElt, $elt);\r\n\r\n            var index = $container.index($elt);\r\n            var $moveUp = $('.move-up', $actionContainer);\r\n            var $moveDown = $('.move-down', $actionContainer);\r\n\r\n            //only one test part, no moving\r\n            if( $container.length === 1 ){\r\n                $moveUp.addClass(disabledClass);\r\n                $moveDown.addClass(disabledClass);\r\n\r\n            //testpart is the first, only moving down\r\n            } else if(index === 0) {\r\n                $moveUp.addClass(disabledClass);\r\n                $moveDown.removeClass(disabledClass);\r\n\r\n            //testpart is the lasst, only moving up\r\n            } else if ( index >= ($container.length - 1) ) {\r\n                $moveDown.addClass(disabledClass);\r\n                $moveUp.removeClass(disabledClass);\r\n\r\n            //or enable moving top/bottom\r\n            } else {\r\n                $moveUp.removeClass(disabledClass);\r\n                $moveDown.removeClass(disabledClass);\r\n            }\r\n         });\r\n    }\r\n\r\n    /**\r\n     * Update the removable state of an element\r\n     * @param {jQueryElement} $container - that contains the removable action\r\n     * @param {String} actionContainerElt - the element name that contains the actions\r\n     */\r\n    function removable ($container, actionContainerElt){\r\n        $container.each(function(){\r\n            var $elt = $(this);\r\n            var $actionContainer = $(actionContainerElt, $elt);\r\n            var $delete = $('[data-delete]', $actionContainer);\r\n\r\n            if($container.length <= 1){\r\n                $delete.addClass(disabledClass);\r\n            } else {\r\n                $delete.removeClass(disabledClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disable all the actions of the target\r\n     * @param {jQueryElement} $container - that contains the the actions\r\n     * @param {String} actionContainerElt - the element name that contains the actions\r\n     */\r\n    function disable($container, actionContainerElt){\r\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').addClass(disabledClass);\r\n    }\r\n\r\n    /**\r\n     * Enable all the actions of the target\r\n     * @param {jQueryElement} $container - that contains the the actions\r\n     * @param {String} actionContainerElt - the element name that contains the actions\r\n     */\r\n    function enable($container, actionContainerElt){\r\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').removeClass(disabledClass);\r\n    }\r\n\r\n    /**\r\n     * The actions gives you shared behavior for some actions.\r\n     *\r\n     * @exports taoQtiTest/controller/creator/views/actions\r\n     */\r\n    return {\r\n        properties  : properties,\r\n        move        : move,\r\n        removable   : removable,\r\n        movable     : movable,\r\n        disable     : disable,\r\n        enable      : enable\r\n    };\r\n});\r\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiTest/controller/creator/helpers/sectionCategory',[\n    'lodash',\n    'i18n',\n    'core/errorHandler'\n], function (_, __, errorHandler){\n\n    'use strict';\n\n    var _ns = '.sectionCategory';\n\n    /**\n     * Check if the given object is a valid assessmentSection model object\n     *\n     * @param {object} model\n     * @returns {boolean}\n     */\n    function isValidSectionModel(model){\n        return (_.isObject(model) && model['qti-type'] === 'assessmentSection' && _.isArray(model.sectionParts));\n    }\n\n    /**\n     * Set an array of categories to the section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function setCategories(model, categories){\n\n        var oldCategories = getCategories(model);\n\n        //the categories that are no longer in the new list of categories should be removed\n        var removed = _.difference(oldCategories.all, categories);\n\n        //the categories that are not in the old categories collection should be added to the children\n        var propagated = _.difference(categories, oldCategories.all);\n\n        //process the modification\n        addCategories(model, propagated);\n        removeCategories(model, removed);\n    }\n\n    /**\n     * Get the categories assign to the section model, infered by its interal itemRefs\n     *\n     * @param {object} model\n     * @returns {object}\n     */\n    function getCategories(model){\n\n        if(isValidSectionModel(model)){\n            var categories = _.map(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    return _.compact(itemRef.categories);\n                }\n            });\n            //array of categories\n            var arrays = _.values(categories);\n            var union = _.union.apply(null, arrays);\n\n            //categories that are common to all itemRef\n            var propagated = _.intersection.apply(null, arrays);\n\n            //the categories that are only partially covered on the section level : complementary of \"propagated\"\n            var partial = _.difference(union, propagated);\n\n            return {\n                all : union.sort(),\n                propagated : propagated.sort(),\n                partial : partial.sort()\n            };\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Add an array of categories to a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function addCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef'){\n                    if(!_.isArray(itemRef.categories)){\n                        itemRef.categories = [];\n                    }\n                    itemRef.categories = _.union(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Remove an array of categories from a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function removeCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    itemRef.categories = _.difference(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Give the list of tao pre-defined test option categories\n     * Useful to have this list somewhere in the code.\n     *\n     * @returns {array}\n     */\n    function getTaoOptionCategories(){\n        return [\n            {\n                name : 'x-tao-option-nextSectionWarning',\n                description : __('displays a next section button that warns the user that they will not be able to return to the section')\n            },\n            {\n                name : 'x-tao-option-nextSection',\n                description : __('displays a next section button')\n            },\n            {\n                name : 'x-tao-option-exit',\n                description : __('displays an exit button')\n            },\n            {\n                name : 'x-tao-option-markReview',\n                description : __('displays a mark for review button. This option requires requires the x-tao-option-reviewScreen option')\n            },\n            {\n                name : 'x-tao-option-reviewScreen',\n                description : __('displays the review screen / navigator')\n            },\n            {\n                name : 'x-tao-option-calculator',\n                description : __('enable calculator')\n            },\n            {\n                name : 'x-tao-itemusage-informational',\n                description : __('describe the item as informational')\n            }\n        ];\n    }\n\n    return {\n        isValidSectionModel : isValidSectionModel,\n        setCategories : setCategories,\n        getCategories : getCategories,\n        addCategories : addCategories,\n        removeCategories : removeCategories,\n        getTaoOptionCategories : getTaoOptionCategories\n    };\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/itemref',[\r\n'jquery',\r\n'lodash', \r\n'i18n',\r\n'taoQtiTest/controller/creator/views/actions',\r\n'taoQtiTest/controller/creator/helpers/sectionCategory'],\r\nfunction($, _, __, actions, sectionCategory){\r\n    'use strict';\r\n\r\n   /**\r\n    * Set up an item ref: init action beahviors. Called for each one.\r\n    *\r\n    * @param {jQueryElement} $itemRef - the itemRef element to set up\r\n    * @param {Object} model - the data model to bind to the ref\r\n    */\r\n   var setUp =  function setUp ($itemRef, model){\r\n\r\n        var $actionContainer = $('.actions', $itemRef);\r\n        \r\n        actions.properties($actionContainer, 'itemref', model, propHandler);\r\n        actions.move($actionContainer, 'itemrefs', 'itemref');\r\n\r\n        resize();\r\n\r\n        /**\r\n         * Perform some binding once the property view is create\r\n         * @private\r\n         * @param {propView} propView - the view object\r\n         */\r\n        function propHandler (propView) {\r\n\r\n            categoriesProperty(propView.getView());\r\n            \r\n            $itemRef.parents('.testpart').on('delete', removePropHandler);\r\n            $itemRef.parents('.section').on('delete', removePropHandler);\r\n            $itemRef.on('delete', removePropHandler);\r\n            \r\n            function removePropHandler(e){\r\n                if(propView !== null){\r\n                    propView.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Set up the category property\r\n         * @private\r\n         * @param {jQueryElement} $view - the $view object containing the $select\r\n         */\r\n        function categoriesProperty($view){\r\n            var $select = $view.find('[name=itemref-category]');\r\n            $select.select2({\r\n                width: '100%',\r\n                tags : _.pluck(sectionCategory.getTaoOptionCategories(), 'name'),\r\n                multiple : true,\r\n                tokenSeparators: [\",\", \" \", \";\"],\r\n                formatNoMatches : function(){\r\n                    return __('Enter a category');\r\n                },\r\n                maximumInputLength : 32\r\n            });\r\n            \r\n            initCategories();\r\n            $view.on('propopen.propview', function(){\r\n                initCategories();\r\n            });\r\n            \r\n            /**\r\n             * save the categories into the model\r\n             * @private\r\n             */\r\n            function initCategories(){\r\n                $select.select2('val', model.categories);\r\n            }\r\n        }\r\n   };\r\n\r\n   /**\r\n    * Listen for state changes to enable/disable . Called globally.\r\n    */\r\n   var listenActionState =  function listenActionState (){\r\n\r\n        var $actionContainer;\r\n        \r\n        $('.itemrefs').each(function(){\r\n            actions.movable($('.itemref', $(this)), 'itemref', '.actions');\r\n        });\r\n       \r\n        $(document)\r\n        .on('delete', function(e){\r\n            var $parent;\r\n            var $target = $(e.target);\r\n            if($target.hasClass('itemref')){\r\n                $parent = $target.parents('.itemrefs');\r\n                actions.disable($parent.find('.itemref'), '.actions');\r\n           }\r\n        })\r\n        .on('add change undo.deleter deleted.deleter', '.itemrefs',  function(e){\r\n            var $parent;\r\n            var $target = $(e.target);\r\n            if($target.hasClass('itemref') || $target.hasClass('itemrefs')){\r\n                $parent = $('.itemref', $target.hasClass('itemrefs') ? $target : $target.parents('.itemrefs'));\r\n                actions.enable($parent, '.actions');\r\n                actions.movable($parent, 'itemref', '.actions');\r\n            }\r\n        });\r\n   };\r\n\r\n    /**\r\n     * We need to resize the itemref in case of long labels\r\n     */\r\n    var resize = _.throttle(function resize(){\r\n        var $refs = $('.itemrefs').first();\r\n        var $actions = $('.itemref .actions').first();\r\n        var width = $refs.innerWidth() - $actions.outerWidth();\r\n        $('.itemref > .title').width(width); \r\n    }, 100);\r\n    \r\n    /**\r\n     * The itemrefView setup itemref related components and beahvior\r\n     * \r\n     * @exports taoQtiTest/controller/creator/views/itemref\r\n     */\r\n    return {\r\n        setUp : setUp,\r\n        listenActionState: listenActionState,\r\n        resize : resize\r\n   };\r\n \r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator', 'mathJax'], function(ckConfigurator, mathJax) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Generate a configuration object for CKEDITOR\r\n     *\r\n     * @param editor instance of ckeditor\r\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\r\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\r\n     *        Note that it's here you need to add parameters for the resource manager.\r\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\r\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\r\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\r\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\r\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\r\n     * @param {Boolean} [options.underline] - enables the underline plugin\r\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\r\n     *\r\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\r\n     */\r\n    var getConfig = function(editor, toolbarType, options){\r\n        options = options || {};\r\n\r\n        options.underline = true;\r\n\r\n        return ckConfigurator.getConfig(editor, toolbarType, options);\r\n    };\r\n\r\n    return {\r\n        getConfig : getConfig\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/rubricblock',[\r\n    'jquery',\r\n    'lodash',\r\n    'taoQtiTest/controller/creator/views/actions',\r\n    'helpers',\r\n    'ckeditor',\r\n    'taoQtiTest/controller/creator/helpers/ckConfigurator'\r\n], function($, _, actions, helpers, ckeditor, ckConfigurator){ // qtiClasses, creatorRenderer, XmlRenderer, simpleParser){\r\n    'use strict';\r\n\r\n    //compute ckeditor config only once\r\n    var ckConfig = ckConfigurator.getConfig(ckeditor, 'qtiBlock');\r\n\r\n    var filterPlugin = function filterPlugin(plugin){\r\n        return _.contains(['taoqtiimage', 'taoqtimedia','taoqtimaths', 'taoqtiinclude'], plugin);\r\n    };\r\n    ckConfig.plugins = _.reject(ckConfig.plugins.split(','), filterPlugin).join(',');\r\n    ckConfig.extraPlugins = _.reject(ckConfig.extraPlugins.split(','), filterPlugin).join(',');\r\n\r\n    /**\r\n     * Set up a rubric block: init action beahviors. Called for each one.\r\n     *\r\n     * @param {jQueryElement} $rubricBlock - the rubricblock to set up\r\n     */\r\n    var setUp = function setUp($rubricBlock, model, data){\r\n\r\n        actions.properties($rubricBlock, 'rubricblock', model, propHandler);\r\n        setUpEditor();\r\n\r\n        /**\r\n         * Perform some binding once the property view is create\r\n         * @private\r\n         * @param {propView} propView - the view object\r\n         */\r\n        function propHandler(propView){\r\n\r\n            rbViews(propView.getView());\r\n\r\n            $rubricBlock.parents('.testpart').on('delete', removePropHandler);\r\n            $rubricBlock.parents('.section').on('delete', removePropHandler);\r\n            $rubricBlock.on('delete', removePropHandler);\r\n\r\n            function removePropHandler(e){\r\n                if(propView !== null){\r\n                    propView.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Set up the views select box\r\n         * @private\r\n         * @param {jQuerElement} $propContainer - the element container\r\n         */\r\n        function rbViews($propContainer){\r\n            var $select = $('select', $propContainer);\r\n\r\n            $select.select2({\r\n                'width' : '100%'\r\n            }).on(\"select2-removed\", function(e){\r\n                if($select.select2('val').length === 0){\r\n                    $select.select2('val', [1]);\r\n                }\r\n            });\r\n\r\n            if($select.select2('val').length === 0){\r\n                $select.select2('val', [1]);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Set up ck editor\r\n         * @private\r\n         */\r\n        function setUpEditor(){\r\n            var editor;\r\n\r\n            //we need to synchronize the ck elt with an hidden elt that has data-binding\r\n            var $rubricBlockBinding = $('.rubricblock-binding', $rubricBlock);\r\n            var $rubricBlockContent = $('.rubricblock-content', $rubricBlock);\r\n            var syncRubricBlockContent = _.throttle(function(){\r\n                 $rubricBlockBinding\r\n                    .html($rubricBlockContent.html())\r\n                    .trigger('change');\r\n            }, 100);\r\n\r\n            $rubricBlockContent.empty().html($rubricBlockBinding.html());\r\n\r\n            editor = ckeditor.inline($rubricBlockContent[0], ckConfig);\r\n            editor.on('change', function(e) {\r\n                syncRubricBlockContent();\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * The rubriclockView setup RB related components and beahvior\r\n     *\r\n     * @exports taoQtiTest/controller/creator/views/rubricblock\r\n     */\r\n    return {\r\n        setUp : setUp\r\n    };\r\n\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/helpers/qtiTest',['lodash', 'i18n'], function(_, __){\r\n    'use strict';\r\n\r\n    /**\r\n     * Utils to manage the QTI Test model\r\n     * @exports taoQtiTest/controller/creator/qtiTestHelper\r\n     */\r\n    var qtiTestHelper = {\r\n\r\n        /**\r\n         * Extract qti identifiers from a model\r\n         * @param {Object} obj - the model to extract id from\r\n         * @returns {Array} the extracted identifiers\r\n         */\r\n        extractIdentifiers : function extractIdentifiers(obj){\r\n            var self = this;\r\n            var identifiers = [];\r\n            if(_.has(obj, 'identifier')){\r\n                identifiers = identifiers.concat(obj.identifier.toLowerCase());\r\n            }\r\n            _.flatten(_.forEach(obj, function(value) {\r\n                identifiers = identifiers.concat(typeof value === \"object\" ? self.extractIdentifiers(value) : []);\r\n            }), true);\r\n            return identifiers;\r\n        },\r\n\r\n        /**\r\n         * Get a valid and avialable qti identifier\r\n         * @param {String} qtiType - the type of element you want an id for\r\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\r\n         * @returns {String} the identifier\r\n         */\r\n        getIdentifier : function getIdentifier(qtiType, lockedIdentifiers){\r\n            var index = 1;\r\n            var suggestion;\r\n            var glue =  '-';\r\n\r\n            do {\r\n                suggestion = qtiType +  glue + (index++);\r\n            } while(_.contains(lockedIdentifiers, suggestion.toLowerCase()));\r\n\r\n            lockedIdentifiers.push(suggestion.toLowerCase());\r\n\r\n            return suggestion;\r\n        },\r\n\r\n        /**\r\n         * Gives you a validator that check QTI id format\r\n         * @returns {Object} the validator\r\n         */\r\n        idFormatValidator : function idFormatValidator(){\r\n            var qtiIdPattern = /^[_a-zA-Z]{1}[a-zA-Z0-9\\-._]{0,31}$/i;\r\n            return {\r\n                name : 'idFormat',\r\n                message : __('is not a valid identifier (alphanum, underscore, dash and dots)'),\r\n                validate : function(value, callback){\r\n                    if(typeof callback === 'function'){\r\n                        callback(qtiIdPattern.test(value));\r\n                    }\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Gives you a validator that check QTI id format of the test (it is different from the others...)\r\n         * @returns {Object} the validator\r\n         */\r\n        testidFormatValidator : function testidFormatValidator(){\r\n            var qtiTestIdPattern = /^\\S+$/;\r\n            return {\r\n                name : 'testIdFormat',\r\n                message : __('is not a valid identifier (everything except spaces)'),\r\n                validate : function(value, callback){\r\n                    if(typeof callback === 'function'){\r\n                        callback(qtiTestIdPattern.test(value));\r\n                    }\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Gives you a validator that check if a QTI id is available\r\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\r\n         * @returns {Object} the validator\r\n         */\r\n        idAvailableValidator : function idAvailableValidator(lockedIdentifiers){\r\n            return {\r\n                name : 'testIdAvailable',\r\n                message : __('is already used in the test.'),\r\n                validate : function(value, callback, options){\r\n                    if(typeof callback === 'function'){\r\n                        callback(!_.contains(_.values(lockedIdentifiers), value.toLowerCase()) || (options.original && value === options.original));\r\n                    }\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Does the value contains the type type\r\n         * @param {Object} value\r\n         * @param {string} type\r\n         * @returns {boolean}\r\n         */\r\n        filterQtiType : function filterQtiType (value, type){\r\n             return value['qti-type'] && value['qti-type'] === type;\r\n        },\r\n\r\n        /**\r\n         * Add the 'qti-type' properties to object that miss it, using the parent key name\r\n         * @param {Object|Array} collection\r\n         * @param {string} parentType\r\n         */\r\n        addMissingQtiType : function addMissingQtiType(collection, parentType) {\r\n              var self = this;\r\n              _.forEach(collection, function(value, key) {\r\n                if (_.isObject(value) && !_.isArray(value) && !_.has(value, 'qti-type')) {\r\n                    if (_.isNumber(key)) {\r\n                        if (parentType) {\r\n                            value['qti-type'] = parentType;\r\n                        }\r\n                    } else {\r\n                        value['qti-type'] = key;\r\n                    }\r\n                }\r\n                if (_.isArray(value)) {\r\n                    self.addMissingQtiType(value, key.replace(/s$/, ''));\r\n                } else if (_.isObject(value)) {\r\n                   self.addMissingQtiType(value);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Applies consolidation rules to the model\r\n         * @param {Object} model\r\n         * @returns {Object}\r\n         */\r\n        consolidateModel : function consolidateModel(model){\r\n            if(model && model.testParts && _.isArray(model.testParts)){\r\n                \r\n                _.forEach(model.testParts, function(testPart) {\r\n\r\n                    if(testPart.assessmentSections && _.isArray(testPart.assessmentSections)){\r\n                        \r\n                        _.forEach(testPart.assessmentSections, function(assessmentSection) {\r\n\r\n                            //remove ordering is shuffle is false\r\n                            if(assessmentSection.ordering &&\r\n                                assessmentSection.ordering.shuffle !== undefined && assessmentSection.ordering.shuffle === false){\r\n                                delete assessmentSection.ordering;\r\n                            }\r\n\r\n                            // clean categories (QTI identifier can't be empty string)\r\n                            if(assessmentSection.sectionParts && _.isArray(assessmentSection.sectionParts)) {\r\n                                _.forEach(assessmentSection.sectionParts, function(part) {\r\n                                    if(part.categories && _.isArray(part.categories) && (part.categories.length === 0 || part.categories[0].length === 0)) {\r\n                                        part.categories = [];\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            if(assessmentSection.rubricBlocks && _.isArray(assessmentSection.rubricBlocks)) {\r\n\r\n                                //remove rubrick blocks if empty\r\n                                if (assessmentSection.rubricBlocks.length === 0 ||\r\n                                    (assessmentSection.rubricBlocks.length === 1 && assessmentSection.rubricBlocks[0].content.length === 0) ) {\r\n\r\n                                    delete assessmentSection.rubricBlocks;\r\n                                }\r\n                                //ensure the view attribute is present\r\n                                else if(assessmentSection.rubricBlocks.length > 0){\r\n                                    _.forEach(assessmentSection.rubricBlocks, function(rubricBlock){\r\n                                        rubricBlock.views = ['candidate'];\r\n                                        //change once views are supported\r\n                                        //if(rubricBlock && rubricBlock.content && (!rubricBlock.views || (_.isArray(rubricBlock.views) && rubricBlock.views.length === 0))){\r\n                                        //rubricBlock.views = ['candidate'];\r\n                                        //}\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    } \r\n                });\r\n            }\r\n            return model;\r\n        }\r\n    };\r\n\r\n    return  qtiTestHelper;\r\n});\r\n\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/section',[\r\n    'jquery',\r\n    'lodash',\r\n    'uri',\r\n    'i18n',\r\n    'taoQtiTest/controller/creator/views/actions',\r\n    'taoQtiTest/controller/creator/views/itemref',\r\n    'taoQtiTest/controller/creator/views/rubricblock',\r\n    'taoQtiTest/controller/creator/templates/index',\r\n    'taoQtiTest/controller/creator/helpers/qtiTest',\r\n    'taoQtiTest/controller/creator/helpers/sectionCategory'\r\n],\r\nfunction($, _, uri, __, actions, itemRefView, rubricBlockView, templates, qtiTestHelper, sectionCategory){\r\n    'use strict';\r\n\r\n   /**\r\n    * Set up a section: init action beahviors. Called for each section.\r\n    *\r\n    * @param {jQueryElement} $sectuin - the section to set up\r\n    * @param {Object} model - the data model to bind to the test part\r\n    * @param {Object} [data] - additionnal data used by the setup\r\n    * @param {Array} [data.identifiers] - the locked identifiers\r\n    */\r\n   var setUp = function setUp ($section, model, data){\r\n\r\n        var $actionContainer = $('h2', $section);\r\n\r\n        actions.properties($actionContainer, 'section', model, propHandler);\r\n        actions.move($actionContainer, 'sections', 'section');\r\n        itemRefs();\r\n        acceptItemRefs();\r\n        rubricBlocks();\r\n        addRubricBlock();\r\n\r\n        //trigger for the case the section is added an a selection is ongoing\r\n\r\n\r\n        /**\r\n         *  Perform some binding once the property view is create\r\n         *  @param {propView} propView - the view object\r\n         */\r\n        function propHandler (propView) {\r\n\r\n            var $view = propView.getView();\r\n            \r\n            //enable/disable selection\r\n            var $selectionSwitcher = $('[name=section-enable-selection]', $view);\r\n            var $selectionSelect = $('[name=section-select]', $view);\r\n            var $selectionWithRep = $('[name=section-with-replacement]', $view);\r\n\r\n            var switchSelection = function switchSelection(){\r\n                 if($selectionSwitcher.prop('checked') === true){\r\n                    $selectionSelect.incrementer('enable');\r\n                    $selectionWithRep.removeClass('disabled');\r\n                 } else {\r\n                    $selectionSelect.incrementer('disable');\r\n                    $selectionWithRep.addClass('disabled');\r\n                 }\r\n            };\r\n            $selectionSwitcher.on('change', switchSelection);\r\n            $selectionSwitcher.on('change', function updateModel(){\r\n                 if(!$selectionSwitcher.prop('checked')){\r\n                     $selectionSelect.val(0);\r\n                     $selectionWithRep.prop('checked', false);\r\n                     delete model.selection;\r\n                 }\r\n            });\r\n\r\n            $selectionSwitcher.prop('checked', !!model.selection).trigger('change');\r\n\r\n            //listen for databinder change to update the test part title\r\n            var $title =  $('[data-bind=title]', $section);\r\n            $view.on('change.binder', function(e, model){\r\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentSection'){\r\n                    $title.text(model.title);\r\n                }\r\n            });\r\n\r\n            $section.parents('.testpart').on('deleted.deleter', removePropHandler);\r\n            $section.on('deleted.deleter', removePropHandler);\r\n            \r\n            //section level category configuration\r\n            categoriesProperty($view);\r\n            \r\n            function removePropHandler(){\r\n                if(propView !== null){\r\n                    propView.destroy();\r\n                }\r\n            }\r\n        }\r\n        \r\n        /**\r\n         * Set up the item refs that already belongs to the section\r\n         * @private\r\n         */\r\n        function itemRefs(){\r\n\r\n            if(!model.sectionParts){\r\n                model.sectionParts = [];\r\n            }\r\n            $('.itemref', $section).each(function(){\r\n                var $itemRef = $(this);\r\n                var index = $itemRef.data('bind-index');\r\n                if(!model.sectionParts[index]){\r\n                    model.sectionParts[index] = {};\r\n                }\r\n\r\n                itemRefView.setUp($itemRef, model.sectionParts[index]);\r\n                $itemRef.find('.title').text(\r\n                    data.labels[uri.encode($itemRef.data('uri'))]\r\n                );\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Make the section to accept the selected items\r\n         * @private\r\n         */\r\n        function acceptItemRefs(){\r\n            var $selected;\r\n            var $items     = $('.test-creator-items');\r\n\r\n             //the item selector trigger a select event\r\n             $items.on('itemselect.creator', function(e){\r\n                var selection = Array.prototype.slice.call(arguments, 1);\r\n                var $placeholder = $('.itemref-placeholder', $section);\r\n                var $placeholders = $('.itemref-placeholder');\r\n                \r\n                if(selection.length > 0){\r\n                    $placeholder.show().off('click').on('click', function(e){\r\n                        \r\n                        //prepare the item data \r\n                        var categories, \r\n                            defaultItemData = {};\r\n                            \r\n                        if(model.itemSessionControl && !_.isUndefined(model.itemSessionControl.maxAttempts)){\r\n                            \r\n                            //for a matter of consistency, the itemRef will \"inherit\" the itemSessionControl configuration from its parent section\r\n                            defaultItemData.itemSessionControl = _.clone(model.itemSessionControl);\r\n                        }\r\n                        \r\n                        //the itemRef should also \"inherit\" the categories set at the item level\r\n                        categories = sectionCategory.getCategories(model);\r\n                        defaultItemData.categories = categories.propagated;\r\n                            \r\n                        _.forEach(selection, function(item){\r\n                            var $item = $(item);\r\n\r\n                            addItemRef($('.itemrefs', $section), undefined, _.defaults({\r\n                                href        : uri.decode($item.data('uri')),\r\n                                label       : $.trim($item.clone().children().remove().end().text()),\r\n                                'qti-type'  : 'assessmentItemRef'\r\n                            }, defaultItemData));\r\n                        });\r\n\r\n                        //reset the current selection\r\n                        $('.ui-selected', $items).removeClass('ui-selected').removeClass('selected');\r\n                        $placeholders.hide().off('click');\r\n                    });\r\n                } else {\r\n                    $placeholders.hide().off('click');\r\n                }\r\n             });\r\n\r\n\r\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\r\n            $(document)\r\n              .off('add.binder', '#' + $section.attr('id') + ' .itemrefs')\r\n              .on('add.binder', '#' + $section.attr('id') + ' .itemrefs', function(e, $itemRef){\r\n                if(e.namespace === 'binder' && $itemRef.hasClass('itemref')){\r\n                    var index = $itemRef.data('bind-index');\r\n\r\n                    //initialize the new item ref\r\n                    itemRefView.setUp($itemRef, model.sectionParts[index]);\r\n                }\r\n            });\r\n\r\n            //on set up, if there is a selection ongoing, we trigger the event\r\n            $selected = $('.selected', $items);\r\n            if($selected.length > 0){\r\n                $items.trigger('itemselect.creator', $selected);\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Add a new item ref to the section\r\n         * @param {jQueryElement} $refList - the element to add the item to\r\n         * @param {Number} [index] - the position of the item to add\r\n         * @param {Object} [itemData] - the data to bind to the new item ref\r\n         */\r\n        function addItemRef($refList, index, itemData){\r\n           var $itemRef;\r\n           var $items = $refList.children('li');\r\n           index = index || $items.length;\r\n           itemData.identifier = qtiTestHelper.getIdentifier('item', data.identifiers);\r\n           itemData.index = index + 1;\r\n           $itemRef = $(templates.itemref(itemData));\r\n           if(index > 0){\r\n               $itemRef.insertAfter($items.eq(index - 1));\r\n           } else {\r\n               $itemRef.appendTo($refList);\r\n           }\r\n           $refList.trigger('add', [$itemRef, itemData]);\r\n        }\r\n\r\n\r\n        /**\r\n         * Set up the rubric blocks that already belongs to the section\r\n         * @private\r\n         */\r\n        function rubricBlocks () {\r\n            if(!model.rubricBlocks){\r\n                model.rubricBlocks = [];\r\n            }\r\n            $('.rubricblock', $section).each(function(){\r\n                var $rubricBlock = $(this);\r\n                var index = $rubricBlock.data('bind-index');\r\n                if(!model.rubricBlocks[index]){\r\n                    model.rubricBlocks[index] = {};\r\n                }\r\n\r\n                rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\r\n            });\r\n\r\n            //opens the rubric blocks section if they are there.\r\n            if(model.rubricBlocks.length > 0){\r\n                $('.rub-toggler', $section).trigger('click');\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Enable to add new rubrick block\r\n         * @private\r\n         */\r\n        function addRubricBlock () {\r\n\r\n            $('.rublock-adder', $section).adder({\r\n                target: $('.rubricblocks', $section),\r\n                content : templates.rubricblock,\r\n                templateData : function(cb){\r\n                    cb({\r\n                        'qti-type' : 'rubricBlock',\r\n                        index  : $('.rubricblock', $section).length,\r\n                        content : [],\r\n                        views : [1]\r\n                    });\r\n                }\r\n            });\r\n\r\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\r\n            $(document).on('add.binder', '#' + $section.attr('id') + ' .rubricblocks', function(e, $rubricBlock){\r\n                if(e.namespace === 'binder' && $rubricBlock.hasClass('rubricblock')){\r\n                    var index = $rubricBlock.data('bind-index');\r\n                    $('.rubricblock-binding', $rubricBlock).html('<p>&nbsp;</p>');\r\n                    rubricBlockView.setUp($rubricBlock, model.rubricBlocks[index], data);\r\n                }\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * Set up the category property\r\n         * @private\r\n         * @param {jQueryElement} $view - the $view object containing the $select\r\n         */\r\n        function categoriesProperty($view){\r\n            var $select = $('[name=section-category]', $view);\r\n            $select.select2({\r\n                width: '100%',\r\n                tags : _.pluck(sectionCategory.getTaoOptionCategories(), 'name'),\r\n                multiple : true,\r\n                tokenSeparators: [\",\", \" \", \";\"],\r\n                formatNoMatches : function(){\r\n                    return __('Enter a category');\r\n                },\r\n                maximumInputLength : 32\r\n            }).on('change', function(e){\r\n                setCategories(e.val);\r\n            });\r\n            \r\n            initCategories();\r\n            $view.on('propopen.propview', function(){\r\n                initCategories();\r\n            });\r\n            \r\n            /**\r\n             * Start the categories editing\r\n             * @private\r\n             */\r\n            function initCategories(){\r\n                \r\n                var categories = sectionCategory.getCategories(model);\r\n                \r\n                //set categories found in the model in the select2 input\r\n                $select.select2('val', categories.all);\r\n                \r\n                //color partial categories\r\n                $select.siblings('.select2-container').find('.select2-search-choice').each(function(){\r\n                   var $li = $(this);\r\n                   var content = $li.find('div').text();\r\n                   if(_.indexOf(categories.partial, content) >= 0){\r\n                       $li.addClass('partial');\r\n                   }\r\n                });\r\n            }\r\n            \r\n            /**\r\n             * save the categories into the model\r\n             * @private\r\n             */\r\n            function setCategories(categories){\r\n                sectionCategory.setCategories(model, categories);\r\n            }\r\n            \r\n        }\r\n   };\r\n\r\n   /**\r\n    * Listen for state changes to enable/disable . Called globally.\r\n    */\r\n   var listenActionState =  function listenActionState (){\r\n\r\n        var $sections;\r\n        var $actionContainer;\r\n\r\n        $('.sections').each(function(){\r\n            $sections = $('.section', $(this));\r\n\r\n            actions.removable($sections, 'h2');\r\n            actions.movable($sections, 'section', 'h2');\r\n        });\r\n\r\n        $(document)\r\n        .on('delete', function(e){\r\n            var $parent;\r\n            var $target = $(e.target);\r\n            if($target.hasClass('section')){\r\n                $parent = $target.parents('.sections');\r\n                actions.disable($parent.find('.section'), 'h2');\r\n           }\r\n        })\r\n        .on('add change undo.deleter deleted.deleter', function(e){\r\n            var $target = $(e.target);\r\n            if($target.hasClass('section') || $target.hasClass('sections')){\r\n                $sections = $('.section', $target.hasClass('sections') ? $target : $target.parents('.sections'));\r\n                actions.removable($sections, 'h2');\r\n                actions.movable($sections, 'section', 'h2');\r\n            }\r\n        })\r\n        .on('open.toggler', '.rub-toggler', function(e){\r\n            if(e.namespace === 'toggler'){\r\n               $(this).parents('h2').addClass('active');\r\n            }\r\n        })\r\n        .on('close.toggler', '.rub-toggler', function(e){\r\n            if(e.namespace === 'toggler'){\r\n               $(this).parents('h2').removeClass('active');\r\n            }\r\n        });\r\n   };\r\n\r\n\r\n   /**\r\n     * The sectionView setup section related components and beahvior\r\n     *\r\n     * @exports taoQtiTest/controller/creator/views/section\r\n     */\r\n    return {\r\n        setUp : setUp,\r\n        listenActionState: listenActionState\r\n   };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/testpart',[\r\n'jquery', 'lodash', \r\n'taoQtiTest/controller/creator/views/actions', \r\n'taoQtiTest/controller/creator/views/section',\r\n'taoQtiTest/controller/creator/templates/index', \r\n'taoQtiTest/controller/creator/helpers/qtiTest'],\r\nfunction($, _, actions, sectionView, templates, qtiTestHelper){\r\n    'use strict';\r\n\r\n   /**\r\n    * Set up a test part: init action beahviors. Called for each test part.\r\n    *\r\n    * @param {jQueryElement} $testPart - the testpart to set up\r\n    * @param {Object} model - the data model to bind to the test part\r\n    * @param {Object} [data] - additionnal data used by the setup\r\n    * @param {Array} [data.identifiers] - the locked identifiers\r\n    */\r\n   var setUp =  function setUp ($testPart, model, data){\r\n\r\n        var $actionContainer = $('h1', $testPart);\r\n\r\n        //run setup methods\r\n        actions.properties($actionContainer, 'testpart', model, propHandler);\r\n        actions.move($actionContainer, 'testparts', 'testpart');\r\n        sections();\r\n        addSection();\r\n\r\n        /**\r\n         * Perform some binding once the property view is created\r\n         * @private\r\n         * @param {propView} propView - the view object\r\n         */\r\n        function propHandler (propView) {\r\n            \r\n           var $view = propView.getView();\r\n\r\n            //listen for databinder change to update the test part title\r\n           var $identifier =  $('[data-bind=identifier]', $testPart);\r\n           $view.on('change.binder', function(e, model){\r\n                if(e.namespace === 'binder' && model['qti-type'] === 'testPart'){\r\n                    $identifier.text(model.identifier);\r\n                }\r\n            });\r\n\r\n            //destroy it when it's testpart is removed\r\n            $testPart.on('delete', function(e){\r\n                if(propView !== null){\r\n                    propView.destroy();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Set up sections that already belongs to the test part\r\n         * @private\r\n         */\r\n        function sections(){\r\n            if(!model.assessmentSections){\r\n                model.assessmentSections = [];\r\n            }                   \r\n            $('.section', $testPart).each(function(){\r\n                var $section = $(this);\r\n                var index = $section.data('bind-index');\r\n                if(!model.assessmentSections[index]){\r\n                    model.assessmentSections[index] = {};\r\n                }\r\n\r\n                sectionView.setUp($section, model.assessmentSections[index], data);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Enable to add new sections\r\n         * @private\r\n         */\r\n        function addSection(){\r\n            $('.section-adder', $testPart).adder({\r\n                target: $('.sections', $testPart),\r\n                content : templates.section,\r\n                templateData : function(cb){\r\n\r\n                    //create a new section model object to be bound to the template\r\n                    var sectionIndex = $('.section', $testPart).length;\r\n                    cb({\r\n                        'qti-type' : 'assessmentSection',\r\n                        identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\r\n                        title : 'Section ' + (sectionIndex + 1),\r\n                        index : 0,\r\n                        sectionParts : []             \r\n                    });\r\n                }\r\n            });\r\n            \r\n                   \r\n \r\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\r\n            $(document)\r\n              .off('add.binder', '#' + $testPart.attr('id') + ' .sections')\r\n              .on ('add.binder', '#' + $testPart.attr('id') + ' .sections', function(e, $section){\r\n                if(e.namespace === 'binder' && $section.hasClass('section')){\r\n                    var index = $section.data('bind-index'); \r\n                    //initialize the new test part\r\n                    sectionView.setUp($section, model.assessmentSections[index], data);\r\n                }\r\n            });\r\n        }\r\n\r\n   };\r\n   \r\n   /**\r\n    * Listen for state changes to enable/disable . Called globally.\r\n    */\r\n   var listenActionState =  function listenActionState (){\r\n\r\n        var $testParts = $('.testpart');\r\n        \r\n        actions.removable($testParts, 'h1');\r\n        actions.movable($testParts, 'testpart', 'h1');\r\n\r\n        $('.testparts')\r\n        .on('delete', function(e){\r\n            var $target = $(e.target);\r\n            if($target.hasClass('testpart')){\r\n                actions.disable($('.testpart'), 'h1');\r\n           }\r\n        })\r\n        .on('add change undo.deleter deleted.deleter', function(e){\r\n            var $target = $(e.target);\r\n\r\n            if($target.hasClass('testpart') || $target.hasClass('testparts')){\r\n                \r\n                //refresh\r\n                $testParts = $('.testpart');\r\n\r\n                //check state\r\n                actions.removable($testParts, 'h1');\r\n                actions.movable($testParts, 'testpart', 'h1');\r\n            }\r\n        });\r\n   };\r\n \r\n    /**\r\n     * The testPartView setup testpart related components and beahvior\r\n     * \r\n     * @exports taoQtiTest/controller/creator/views/testpart\r\n     */\r\n    return {\r\n        setUp : setUp,\r\n        listenActionState: listenActionState\r\n   }; \r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/views/test',[\r\n'jquery', 'lodash',\r\n'taoQtiTest/controller/creator/views/actions', \r\n'taoQtiTest/controller/creator/views/testpart',\r\n'taoQtiTest/controller/creator/templates/index',\r\n'taoQtiTest/controller/creator/helpers/qtiTest'\r\n], \r\nfunction($, _, actions, testPartView, templates, qtiTestHelper){\r\n    'use strict';\r\n \r\n   /**\r\n     * The TestView setup test related components and beahvior\r\n     * \r\n     * @exports taoQtiTest/controller/creator/views/test\r\n     * @param {Object} model - the data model to bind to the test\r\n     * @param {Object} [data] - additionnal data used by the setup\r\n     * @param {Array} [data.identifiers] - the locked identifiers\r\n     */\r\n   var testView = function testView (model, data) {\r\n       \r\n        actions.properties($('.test-creator-test > h1'), 'test', model, propHandler);\r\n        testParts();\r\n        addTestPart();\r\n\r\n        /**\r\n         * set up the exisiting test part views\r\n         * @private\r\n         */\r\n        function testParts () {\r\n            if(!model.testParts){\r\n                model.testParts = [];\r\n            }                   \r\n            $('.testpart').each(function(){\r\n                var $testPart = $(this);\r\n                var index = $testPart.data('bind-index');\r\n                if(!model.testParts[index]){\r\n                    model.testParts[index] = {};\r\n                }\r\n\r\n                testPartView.setUp($testPart, model.testParts[index], data);\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * Perform some binding once the property view is created\r\n         * @private\r\n         * @param {propView} propView - the view object\r\n         */\r\n        function propHandler (propView) {\r\n            \r\n           var $view = propView.getView();\r\n\r\n            //listen for databinder change to update the test part title\r\n           var $title =  $('.test-creator-test > h1 [data-bind=title]');\r\n           $view.on('change.binder', function(e, model){\r\n                if(e.namespace === 'binder' && model['qti-type'] === 'assessmentTest'){\r\n                    $title.text(model.title);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Enable to add new test parts\r\n         * @private\r\n         */\r\n        function addTestPart () {\r\n\r\n            $('.testpart-adder').adder({\r\n                target: $('.testparts'),\r\n                content : templates.testpart,\r\n                templateData : function(cb){\r\n\r\n                    //create an new testPart model object to be bound to the template\r\n                    var testPartIndex = $('.testpart').length;\r\n                    cb({\r\n                        'qti-type' : 'testPart',\r\n                        identifier : qtiTestHelper.getIdentifier('testPart', data.identifiers),\r\n                        index  : testPartIndex,\r\n                        navigationMode : 0,\r\n                        submissionMode : 0,\r\n                        assessmentSections : [{\r\n                            'qti-type' : 'assessmentSection',\r\n                            identifier : qtiTestHelper.getIdentifier('assessmentSection',  data.identifiers),\r\n                            title : 'Section 1',\r\n                            index : 0,\r\n                            sectionParts : []             \r\n                        }]\r\n                    });\r\n                }\r\n            });\r\n            \r\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\r\n            $(document)\r\n              .off('add.binder', '.testparts')\r\n              .on ('add.binder', '.testparts', function(e, $testPart, added){\r\n                if(e.namespace === 'binder' && $testPart.hasClass('testpart')){\r\n                    //initialize the new test part\r\n                    testPartView.setUp($testPart, model.testParts[added.index], data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return testView;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/encoders/dom2qti',['jquery', 'lodash'], function($, _){\r\n    'use strict';\r\n\r\n   /**\r\n    * Get the list of objects attributes to encode\r\n    * @param {Object} object\r\n    * @returns {Array}\r\n    */\r\n   var getAttributes = function getAttributes(object){\r\n        return _.omit(object, [\r\n           'qti-type',\r\n           'content',\r\n           'xmlBase',\r\n           'lang',\r\n           'label'\r\n        ]);\r\n   };\r\n\r\n   /**\r\n    * Encode object's properties to xml/html string attributes\r\n    * @param {Object} attributes\r\n    * @returns {string}\r\n    */\r\n   var attrToStr = function attrToStr(attributes){\r\n     return _.reduce(attributes, function(acc, value, key){\r\n         if(_.isNumber(value) || (_.isString(value) && !_.isEmpty(value)) ){\r\n             return acc + ' ' + key + '=\"'+ value + '\" ';\r\n         }\r\n         return acc;\r\n     }, '');\r\n   };\r\n\r\n   /**\r\n    * This encoder is used to transform DOM to JSON QTI and JSON QTI to DOM.\r\n    * It works now for the rubricBlocks components.\r\n    * @exports creator/encoders/dom2qti\r\n    */\r\n   var Dom2QtiEncoder = {\r\n\r\n       /**\r\n        * Encode an object to a dom string\r\n        * @param {Object} modelValue\r\n        * @returns {string}\r\n        */\r\n       encode : function(modelValue){\r\n           var self = this;\r\n\r\n           if(_.isArray(modelValue)){\r\n               return _.reduce(modelValue, function(result, value){\r\n                   return result + self.encode(value);\r\n               }, '');\r\n           } else if(_.isObject(modelValue) && modelValue['qti-type']){\r\n                if(modelValue['qti-type'] === 'textRun'){\r\n                    return modelValue.content;\r\n                }\r\n                var startTag = '<' + modelValue['qti-type'] + attrToStr(getAttributes(modelValue));\r\n                if(modelValue.content){\r\n                    return  startTag + '>' + self.encode(modelValue.content) + '</' + modelValue['qti-type'] + '>';\r\n                } else {\r\n                    return startTag + '/>';\r\n                }\r\n           }\r\n           return modelValue;\r\n       },\r\n\r\n       /**\r\n        * Decode a string that represents a DOM to a QTI formated object\r\n        * @param {string} nodeValue\r\n        * @returns {Array}\r\n        */\r\n       decode : function(nodeValue){\r\n           var self = this;\r\n           var $nodeValue = (nodeValue instanceof $) ? nodeValue : $(nodeValue);\r\n           var result = [];\r\n\r\n           _.forEach($nodeValue, function(elt){\r\n               var object;\r\n                if (elt.nodeType === 3) {\r\n                    if (!_.isEmpty($.trim(elt.nodeValue))) {\r\n                        result.push({\r\n                            'qti-type': 'textRun',\r\n                            'content': elt.nodeValue,\r\n                            \"xmlBase\": \"\"\r\n                        });\r\n                    }\r\n                } else if (elt.nodeType === 1){\r\n                    object = _.merge({\r\n                            'qti-type': elt.nodeName.toLowerCase(),\r\n                            'id' : '',\r\n                            'class' : '',\r\n                            'xmlBase' : '',\r\n                            'lang' : '',\r\n                            'label' : ''\r\n                        },\r\n                        _.transform(elt.attributes, function(acc, value) {\r\n                            if(value.nodeName){\r\n                                acc[value.nodeName] = value.nodeValue;\r\n                            }\r\n                        })\r\n                    );\r\n                    if (elt.childNodes.length > 0) {\r\n                        object.content = self.decode(elt.childNodes);\r\n                    }\r\n                    result.push(object);\r\n                }\r\n            });\r\n           return result;\r\n       }\r\n   };\r\n\r\n   return Dom2QtiEncoder;\r\n});\r\n\r\n\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('taoQtiTest/controller/creator/creator',[\r\n    'module',\r\n    'jquery',\r\n    'lodash',\r\n    'helpers',\r\n    'i18n',\r\n    'html5-history-api',\r\n    'ui/feedback',\r\n    'core/databindcontroller',\r\n    'taoQtiTest/controller/creator/views/item',\r\n    'taoQtiTest/controller/creator/views/test',\r\n    'taoQtiTest/controller/creator/views/testpart',\r\n    'taoQtiTest/controller/creator/views/section',\r\n    'taoQtiTest/controller/creator/views/itemref',\r\n    'taoQtiTest/controller/creator/encoders/dom2qti',\r\n    'taoQtiTest/controller/creator/templates/index',\r\n    'taoQtiTest/controller/creator/helpers/qtiTest',\r\n    'core/validator/validators'\r\n], function(\r\n    module,\r\n    $,\r\n    _,\r\n    helpers,\r\n    __,\r\n    history,\r\n    feedback,\r\n    DataBindController,\r\n    itemView, testView,\r\n    testPartView,\r\n    sectionView,\r\n    itemrefView,\r\n    Dom2QtiEncoder,\r\n    templates,\r\n    qtiTestHelper,\r\n    validators\r\n    ){\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Generic callback used when retrieving data from the server\r\n     * @callback DataCallback\r\n     * @param {Object} data - the received data\r\n     */\r\n\r\n    /**\r\n     * Call the server to get the list of items\r\n     * @param {string} url\r\n     * @param {string} search - a posix pattern to filter items\r\n     * @param {DataCallback} cb - with items\r\n     */\r\n    function loadItems(url, search, cb){\r\n        $.getJSON(url, {pattern : search, notempty : 'true'}, function(data){\r\n            if(data && typeof cb === 'function'){\r\n                cb(data);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * The test creator controller is the main entry point\r\n     * and orchestrates data retrieval and view/components loading.\r\n     * @exports creator/controller\r\n     */\r\n    var Controller = {\r\n\r\n         routes : {},\r\n\r\n         identifiers: [],\r\n\r\n         /**\r\n          * Start the controller, main entry method.\r\n          * @public\r\n          * @param {Object} options\r\n          * @param {Object} options.labels - the list of item's labels to give to the ItemView\r\n          * @param {Object} options.routes - action's urls\r\n          */\r\n         start : function(options){\r\n            var self = this;\r\n            var $container = $('#test-creator');\r\n            var $saver = $('#saver');\r\n\r\n            self.identifiers = [];\r\n\r\n            options = _.merge(module.config(), options || {});\r\n            options.routes = options.routes || {};\r\n            options.labels = options.labels || {};\r\n\r\n\r\n            //back button\r\n            $('#authoringBack').on('click', function(e){\r\n                e.preventDefault();\r\n\r\n                if (history) {\r\n                    history.back();\r\n                }\r\n            });\r\n\r\n            //set up the ItemView, give it a configured loadItems ref\r\n            itemView( _.partial(loadItems, options.routes.items) );\r\n\r\n            //Print data binder chandes for DEBUGGING ONLY\r\n            //$container.on('change.binder', function(e, model){\r\n                //if(e.namespace === 'binder'){\r\n                    //console.log(model);\r\n                //}\r\n            //});\r\n\r\n            //Data Binding options\r\n            var binderOptions = _.merge(options.routes, {\r\n                filters : {\r\n                    'isItemRef' : function(value){\r\n                        return qtiTestHelper.filterQtiType(value, 'assessmentItemRef');\r\n                    },\r\n                    'isSection' : function(value){\r\n                        return qtiTestHelper.filterQtiType(value, 'assessmentSection');\r\n                    }\r\n                },\r\n                encoders : {\r\n                  'dom2qti' : Dom2QtiEncoder\r\n                },\r\n                templates : templates,\r\n                beforeSave : function(model){\r\n                    //ensure the qti-type is present\r\n                    qtiTestHelper.addMissingQtiType(model);\r\n\r\n                    //apply consolidation rules\r\n                    qtiTestHelper.consolidateModel(model);\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            //set up the databinder\r\n            var binder = DataBindController\r\n                .takeControl($container, binderOptions)\r\n                .get(function(model){\r\n\r\n                    //extract ids\r\n                    self.identifiers = qtiTestHelper.extractIdentifiers(model);\r\n\r\n                    //register validators\r\n                    validators.register('idFormat', qtiTestHelper.idFormatValidator());\r\n                    validators.register('testIdFormat', qtiTestHelper.testidFormatValidator());\r\n                    validators.register('testIdAvailable', qtiTestHelper.idAvailableValidator(self.identifiers), true);\r\n\r\n                    //once model is loaded, we set up the test view\r\n                    testView(model, {\r\n                        uri : options.uri,\r\n                        identifiers : self.identifiers,\r\n                        labels : options.labels\r\n                    });\r\n\r\n                    //listen for changes to update available actions\r\n                    testPartView.listenActionState();\r\n                    sectionView.listenActionState();\r\n                    itemrefView.listenActionState();\r\n                    itemrefView.resize();\r\n\r\n                    $(window)\r\n                      .off('resize.qti-test-creator')\r\n                      .on('resize.qti-test-creator', function(){\r\n                            itemrefView.resize();\r\n                    });\r\n                });\r\n\r\n            //the save button triggers binder's save action.\r\n            $saver.on('click', function(event){\r\n                event.preventDefault();\r\n\r\n                if(!$saver.hasClass('disabled')){\r\n                    $saver.attr('disabled', true).addClass('disabled');\r\n                    binder.save(function(){\r\n\r\n                        $saver.attr('disabled', false).removeClass('disabled');\r\n\r\n                        feedback().success(__('Test Saved'));\r\n\r\n                    }, function(){\r\n\r\n                        $saver.attr('disabled', false).removeClass('disabled');\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return Controller;\r\n});\r\n\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n *\r\n */\r\n\r\n/**\r\n * This module allows adding extra buttons in the action bar of the test runner\r\n *\r\n */\r\ndefine('taoQtiTest/testRunner/actionBarHook',[\r\n    'jquery',\r\n    'lodash',\r\n    'core/errorHandler',\r\n    'core/promise'\r\n], function ($, _, errorHandler, Promise) {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Events namespace\r\n     * @type {String}\r\n     * @private\r\n     */\r\n    var _ns = '.actionBarHook';\r\n\r\n    /**\r\n     * We need to access the root document to listen for some events\r\n     * @type {jQuery}\r\n     * @private\r\n     */\r\n    var $doc = $(document);\r\n\r\n    /**\r\n     * List of loaded and visible hooks\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var tools = {};\r\n\r\n    /**\r\n     * Flag set to true when the item is loaded\r\n     * @type {Boolean}\r\n     * @private\r\n     */\r\n    var itemIsLoaded = false;\r\n\r\n    // catch the item loaded event\r\n    $doc.off(_ns).on('serviceloaded' + _ns, function() {\r\n        itemIsLoaded = true;\r\n        _.forEach(tools, function(tool) {\r\n            triggerItemLoaded(tool);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Check that the toolConfig is correct\r\n     *\r\n     * @param {Object} toolconfig\r\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\r\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\r\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\r\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\r\n     * @param {Array} [toolconfig.items] - an optional list of menu items\r\n     * @returns {Boolean}\r\n     */\r\n    function isValidConfig(toolconfig) {\r\n        return !!(_.isObject(toolconfig) && toolconfig.hook);\r\n    }\r\n\r\n    /**\r\n     * Triggers the itemLoaded event inside the provided actionBar hook\r\n     * @param {Object} tool\r\n     */\r\n    function triggerItemLoaded(tool) {\r\n        if (tool && tool.itemLoaded) {\r\n            tool.itemLoaded();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init a test runner button from its config\r\n     *\r\n     * @param {String} id\r\n     * @param {Object|String} toolconfig\r\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\r\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\r\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\r\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\r\n     * @param {Array} [toolconfig.items] - an optional list of menu items\r\n     * @param {Object} testContext - the complete state of the test\r\n     * @param {Object} testRunner - the test runner instance\r\n     * @fires ready.actionBarHook when the hook has been initialized\r\n     * @returns {Promise}\r\n     */\r\n    function initQtiTool($toolsContainer, id, toolconfig, testContext, testRunner) {\r\n\r\n        // the tool is always initialized before the item is loaded, so we can safely false the flag\r\n        itemIsLoaded = false;\r\n        tools[id] = null;\r\n\r\n        if (_.isString(toolconfig)) {\r\n            toolconfig = {\r\n                hook: toolconfig\r\n            };\r\n        }\r\n\r\n        return new Promise(function(resolve) {\r\n            if (isValidConfig(toolconfig)) {\r\n\r\n                require([toolconfig.hook], function (hook) {\r\n\r\n                    var $button;\r\n                    var $existingBtn;\r\n\r\n                    if (isValidHook(hook)) {\r\n                        //init the control\r\n                        hook.init(id, toolconfig, testContext, testRunner);\r\n\r\n                        //if an instance of the tool is already attached, remove it:\r\n                        $existingBtn = $toolsContainer.children('[data-control=\"' + id + '\"]');\r\n                        if ($existingBtn.length) {\r\n                            hook.clear($existingBtn);\r\n                            $existingBtn.remove();\r\n                        }\r\n\r\n                        //check if the tool is to be available\r\n                        if (hook.isVisible()) {\r\n                            //keep access to the tool\r\n                            tools[id] = hook;\r\n\r\n                            // renders the button from the config\r\n                            $button = hook.render();\r\n\r\n                            //only attach the button to the dom when everything is ready\r\n                            _appendInOrder($toolsContainer, $button);\r\n\r\n                            //ready !\r\n                            $button.trigger('ready' + _ns, [hook]);\r\n\r\n                            //fires the itemLoaded event if the item has already been loaded\r\n                            if (itemIsLoaded) {\r\n                                triggerItemLoaded(hook);\r\n                            }\r\n                        }\r\n\r\n                        resolve(hook);\r\n                    } else {\r\n                        errorHandler.throw(_ns, 'invalid hook format');\r\n                        resolve(null);\r\n                    }\r\n\r\n                }, function (e) {\r\n                    errorHandler.throw(_ns, 'the hook amd module cannot be found');\r\n                    resolve(null);\r\n                });\r\n\r\n            } else {\r\n                errorHandler.throw(_ns, 'invalid tool config format');\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Append a dom element $button to a $container in a specific order\r\n     * The orders are provided by data-order attribute set to the $button\r\n     *\r\n     * @param {JQuery} $container\r\n     * @param {JQuery} $button\r\n     */\r\n    function _appendInOrder($container, $button) {\r\n\r\n        var $after, $before;\r\n        var order = $button.data('order');\r\n\r\n        if ('last' === order) {\r\n\r\n            $container.append($button);\r\n\r\n        } else if ('first' === order) {\r\n\r\n            $container.prepend($button);\r\n\r\n        } else {\r\n\r\n            order = _.parseInt(order);\r\n            if (!_.isNaN(order)) {\r\n\r\n                $container.children('.action').each(function () {\r\n\r\n                    var $btn = $(this),\r\n                        _order = $btn.data('order');\r\n\r\n                    if ('last' === _order) {\r\n\r\n                        $before = $btn;\r\n                        $after = null;\r\n\r\n                    } else if ('first' === _order) {\r\n\r\n                        $before = null;\r\n                        $after = $btn;\r\n\r\n                    } else {\r\n\r\n                        _order = _.parseInt(_order);\r\n\r\n                        if (_.isNaN(_order) || _order > order) {\r\n                            $before = $btn;\r\n                            $after = null;\r\n                            //stops here because $container children returns the dom elements in the dom order\r\n                            return false;\r\n                        } else if (_order === order) {\r\n                            $after = $btn;\r\n                        } else if (_order < order) {\r\n                            $after = $btn;\r\n                            $before = null;\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n                if ($after) {\r\n                    $after.after($button);\r\n                } else if ($before) {\r\n                    $before.before($button);\r\n                } else {\r\n                    $container.append($button);\r\n                }\r\n\r\n            } else {\r\n                //unordered buttons are append at the end (including when order equals 0)\r\n                $container.append($button);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the hook object is valid\r\n     *\r\n     * @param {Object} hook\r\n     * @param {Function} hook.init\r\n     * @param {Function} hook.clear\r\n     * @param {Function} hook.isVisible\r\n     * @returns {Boolean}\r\n     */\r\n    function isValidHook(hook) {\r\n        return (_.isObject(hook) && _(['init', 'render', 'clear', 'isVisible']).reduce(function (result, method) {\r\n            return result && _.isFunction(hook[method]);\r\n        }, true));\r\n    }\r\n\r\n    return {\r\n        isValid: isValidConfig,\r\n        initQtiTool: initQtiTool\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/testRunner/actionBarTools',[\r\n    'jquery',\r\n    'lodash',\r\n    'core/eventifier',\r\n    'core/promise',\r\n    'taoQtiTest/testRunner/actionBarHook'\r\n], function ($, _, eventifier, Promise, actionBarHook) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The list of registered actionBar tools\r\n     * @type {Object}\r\n     */\r\n    var registeredQtiTools;\r\n\r\n    /**\r\n     * The list of actionBar tools instances\r\n     * @type {Object}\r\n     */\r\n    var qtiTools;\r\n\r\n    /**\r\n     * Manages the actionBar tools\r\n     * @type {Object}\r\n     */\r\n    var actionBarTools = {\r\n        /**\r\n         * Registers the actionBar tools\r\n         * @param {Object} tools\r\n         */\r\n        register : function register(tools) {\r\n            var registerTools = tools || {};\r\n\r\n            /**\r\n             * @event actionBarTools#beforeregister\r\n             * @param {Object} tools\r\n             * @param {actionBarTools} this\r\n             */\r\n            this.trigger('beforeregister', registerTools, this);\r\n\r\n            registeredQtiTools = registerTools;\r\n\r\n            /**\r\n             * @event actionBarTools#afterregister\r\n             * @param {Object} tools\r\n             * @param {actionBarTools} this\r\n             */\r\n            this.trigger('afterregister', registerTools, this);\r\n        },\r\n\r\n        /**\r\n         * Gets the list of registered tools\r\n         * @returns {Object}\r\n         */\r\n        getRegisteredTools : function getRegisteredTools() {\r\n            return registeredQtiTools || {};\r\n        },\r\n\r\n        /**\r\n         * Gets a particular tool config\r\n         * @param {String} id\r\n         * @returns {Object}\r\n         */\r\n        getRegistered : function getRegistered(id) {\r\n            return registeredQtiTools && registeredQtiTools[id];\r\n        },\r\n\r\n        /**\r\n         * Checks if a particular tool is registered\r\n         * @param {String} id\r\n         * @returns {Boolean}\r\n         */\r\n        isRegistered : function isRegistered(id) {\r\n            return !!(registeredQtiTools && registeredQtiTools[id]);\r\n        },\r\n\r\n        /**\r\n         * Gets a particular tool\r\n         * @param {String} id\r\n         * @returns {Object}\r\n         */\r\n        get : function get(id) {\r\n            return qtiTools && qtiTools[id];\r\n        },\r\n\r\n        /**\r\n         * Gets the list of tools instances\r\n         * @returns {Array}\r\n         */\r\n        list : function list() {\r\n            return _.values(qtiTools || {});\r\n        },\r\n\r\n        /**\r\n         * Renders the actionBar\r\n         * @param {String|jQuery|HTMLElement} container - The container in which renders the tools\r\n         * @param {Object} testContext - The assessment test context\r\n         * @param {Object} testRunner - The assessment test runner\r\n         * @param {Function} [callback] - An optional callback fired when all tools have been rendered\r\n         */\r\n        render : function render(container, testContext, testRunner, callback) {\r\n            var self = this;\r\n            var $container = $(container);\r\n            var promises = [];\r\n\r\n            /**\r\n             * @event actionBarTools#beforerender\r\n             * @param {jQuery} $container\r\n             * @param {Object} testContext\r\n             * @param {Object} testRunner\r\n             * @param {actionBarTools} this\r\n             */\r\n            this.trigger('beforerender', $container, testContext, testRunner, this);\r\n\r\n            _.forIn(this.getRegisteredTools(), function(toolconfig, id){\r\n                promises.push(actionBarHook.initQtiTool($container, id, toolconfig, testContext, testRunner));\r\n            });\r\n\r\n            Promise.all(promises).then(function(values) {\r\n                var tools = [];\r\n                qtiTools = {};\r\n\r\n                _.forEach(values, function(tool) {\r\n                    if (tool) {\r\n                        tools.push(tool);\r\n                        qtiTools[tool.getId()] = tool;\r\n                    }\r\n                });\r\n\r\n                if (_.isFunction(callback)) {\r\n                    callback.call(self, tools, $container, testContext, testRunner, self);\r\n                }\r\n\r\n                /**\r\n                 * @event actionBarTools#afterrender\r\n                 * @param {Array} tools\r\n                 * @param {jQuery} $container\r\n                 * @param {Object} testContext\r\n                 * @param {Object} testRunner\r\n                 * @param {actionBarTools} this\r\n                 */\r\n                self.trigger('afterrender', tools, $container, testContext, testRunner, self);\r\n            });\r\n        }\r\n    };\r\n\r\n    return eventifier(actionBarTools);\r\n});\r\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"        <aside class=\\\"test-sidebar test-sidebar-\";\n  if (helper = helpers.region) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.region); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" flex-container-navi qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\r\\n            <div class=\\\"qti-navigator-collapsible\\\">\\r\\n                <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\r\\n                <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"qti-navigator-info collapsible\\\">\\r\\n                <span class=\\\"qti-navigator-label\\\">\\r\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\r\\n                    <span class=\\\"icon-up\\\"></span>\\r\\n                    <span class=\\\"icon-down\\\"></span>\\r\\n                </span>\\r\\n                <ul class=\\\"collapsible-panel plain\\\">\\r\\n                    <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                    <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\">\\r\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\r\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\r\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\r\\n                        </span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"qti-navigator-filters\\\">\\r\\n                <ul class=\\\"plain clearfix\\\">\\r\\n                    <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\r\\n                        <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"</span>\\r\\n                    </li>\\r\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\r\\n                        <span class=\\\"icon-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\"></span>\\r\\n                    </li>\\r\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\r\\n                        <span class=\\\"icon-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\"></span>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n\\r\\n            <nav class=\\\"qti-navigator-tree\\\">\\r\\n            </nav>\\r\\n\\r\\n            <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\r\\n                <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\r\\n                <p class=\\\"qti-navigator-message\\\">\\r\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\r\\n                </p>\\r\\n            </div>\\r\\n        </aside>\\r\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n                    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n                            <span class=\\\"icon-up\\\"></span>\\r\\n                            <span class=\\\"icon-down\\\"></span>\\r\\n                        </span>\\r\\n                        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.sections)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(29, program29, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                    </li>\\r\\n                    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\r\\n                        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\r\\n                            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                        </ul>\\r\\n                        \";\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n                            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\r\\n                                    <span class=\\\"qti-navigator-counter\\\">\";\n  if (helper = helpers.answered) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.answered); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\r\\n                                </span>\\r\\n                                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\r\\n                                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                                </ul>\\r\\n                            </li>\\r\\n                            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\r\\n                                    <li class=\\\"qti-navigator-item\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\r\\n                                            <span class=\\\"qti-navigator-icon icon-\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\\r\\n                                            <span class=\\\"qti-navigator-number\\\">\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\r\\n                                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\r\\n                                        </span>\\r\\n                                    </li>\\r\\n                                    \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \" flagged\";\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  return \" answered\";\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  return \" viewed\";\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  return \" unseen\";\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  return \"flagged\";\n  }\n\nfunction program21(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program22(depth0,data) {\n  \n  \n  return \"answered\";\n  }\n\nfunction program24(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program25(depth0,data) {\n  \n  \n  return \"viewed\";\n  }\n\nfunction program27(depth0,data) {\n  \n  \n  return \"unseen\";\n  }\n\nfunction program29(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\r\\n                        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\r\\n                            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\r\\n                            <p class=\\\"qti-navigator-message\\\">\\r\\n                                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\r\\n                            </p>\\r\\n                            <p class=\\\"qti-navigator-actions\\\">\\r\\n                                <button class=\\\"btn-info small\\\" data-id=\\\"\";\n  if (helper = helpers.itemId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.itemId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\r\\n                                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\r\\n                                    <span class=\\\"icon-play r\\\"></span>\\r\\n                                </button>\\r\\n                            </p>\\r\\n                        </div>\\r\\n                        \";\n  return buffer;\n  }\n\n  buffer += \"                <ul class=\\\"qti-navigator-parts plain\\\">\\r\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n                </ul>\\r\\n\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/testRunner/testReview',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'tpl!taoQtiTest/testRunner/tpl/navigator',\r\n    'tpl!taoQtiTest/testRunner/tpl/navigatorTree',\r\n    'util/capitalize'\r\n], function ($, _, __, navigatorTpl, navigatorTreeTpl, capitalize) {\r\n    'use strict';\r\n\r\n    /**\r\n     * List of CSS classes\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _cssCls = {\r\n        active : 'active',\r\n        collapsed : 'collapsed',\r\n        collapsible : 'collapsible',\r\n        hidden : 'hidden',\r\n        disabled : 'disabled',\r\n        flagged : 'flagged',\r\n        answered : 'answered',\r\n        viewed : 'viewed',\r\n        unseen : 'unseen',\r\n        icon : 'qti-navigator-icon',\r\n        scope : {\r\n            test : 'scope-test',\r\n            testPart : 'scope-test-part',\r\n            testSection : 'scope-test-section'\r\n        }\r\n    };\r\n\r\n    /**\r\n     * List of common CSS selectors\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _selectors = {\r\n        component : '.qti-navigator',\r\n        filterBar : '.qti-navigator-filters',\r\n        tree : '.qti-navigator-tree',\r\n        collapseHandle : '.qti-navigator-collapsible',\r\n        linearState : '.qti-navigator-linear',\r\n        infoAnswered : '.qti-navigator-answered .qti-navigator-counter',\r\n        infoViewed : '.qti-navigator-viewed .qti-navigator-counter',\r\n        infoUnanswered : '.qti-navigator-unanswered .qti-navigator-counter',\r\n        infoFlagged : '.qti-navigator-flagged .qti-navigator-counter',\r\n        infoPanel : '.qti-navigator-info',\r\n        infoPanelLabels : '.qti-navigator-info > .qti-navigator-label',\r\n        parts : '.qti-navigator-part',\r\n        partLabels : '.qti-navigator-part > .qti-navigator-label',\r\n        sections : '.qti-navigator-section',\r\n        sectionLabels : '.qti-navigator-section > .qti-navigator-label',\r\n        items : '.qti-navigator-item',\r\n        itemLabels : '.qti-navigator-item > .qti-navigator-label',\r\n        itemIcons : '.qti-navigator-item > .qti-navigator-icon',\r\n        icons : '.qti-navigator-icon',\r\n        linearStart : '.qti-navigator-linear-part button',\r\n        counters : '.qti-navigator-counter',\r\n        actives : '.active',\r\n        collapsible : '.collapsible',\r\n        collapsiblePanels : '.collapsible-panel',\r\n        unseen : '.unseen',\r\n        answered : '.answered',\r\n        flagged : '.flagged',\r\n        notFlagged : ':not(.flagged)',\r\n        notAnswered : ':not(.answered)',\r\n        hidden : '.hidden'\r\n    };\r\n\r\n    /**\r\n     * Maps the filter mode to filter criteria.\r\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _filterMap = {\r\n        all : \"\",\r\n        unanswered : _selectors.answered,\r\n        flagged : _selectors.notFlagged,\r\n        answered : _selectors.notAnswered,\r\n        filtered : _selectors.hidden\r\n    };\r\n\r\n    /**\r\n     * Maps of config options translated from the context object to the local options\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _optionsMap = {\r\n        'reviewScope' : 'reviewScope',\r\n        'reviewPreventsUnseen' : 'preventsUnseen',\r\n        'canCollapse' : 'canCollapse'\r\n    };\r\n\r\n    /**\r\n     * Maps the handled review scopes\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _reviewScopes = {\r\n        test : 'test',\r\n        testPart : 'testPart',\r\n        testSection : 'testSection'\r\n    };\r\n\r\n    /**\r\n     * Provides a test review manager\r\n     * @type {Object}\r\n     */\r\n    var testReview = {\r\n        /**\r\n         * Initializes the component\r\n         * @param {String|jQuery|HTMLElement} element The element on which install the component\r\n         * @param {Object} [options] A list of extra options\r\n         * @param {String} [options.region] The region on which put the component: left or right\r\n         * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\r\n         * the whole test, the current test part or the current test section)\r\n         * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\r\n         * @returns {testReview}\r\n         */\r\n        init: function init(element, options) {\r\n            var initOptions = _.isObject(options) && options || {};\r\n            var putOnRight = 'right' === initOptions.region;\r\n            var insertMethod = putOnRight ? 'append' : 'prepend';\r\n\r\n            this.options = initOptions;\r\n            this.disabled = false;\r\n            this.hidden = !!initOptions.hidden;\r\n            this.currentFilter = 'all';\r\n\r\n            // clean the DOM if the init method is called after initialisation\r\n            if (this.$component) {\r\n                this.$component.remove();\r\n            }\r\n\r\n            // build the component structure and inject it into the DOM\r\n            this.$container = $(element);\r\n            insertMethod = this.$container[insertMethod];\r\n            if (insertMethod) {\r\n                insertMethod.call(this.$container, navigatorTpl({\r\n                    region: putOnRight ? 'right' : 'left',\r\n                    hidden: this.hidden\r\n                }));\r\n            } else {\r\n                throw new Error(\"Unable to inject the component structure into the DOM\");\r\n            }\r\n\r\n            // install the component behaviour\r\n            this._loadDOM();\r\n            this._initEvents();\r\n            this._updateDisplayOptions();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Links the component to the underlying DOM elements\r\n         * @private\r\n         */\r\n        _loadDOM: function() {\r\n            this.$component = this.$container.find(_selectors.component);\r\n\r\n            // access to info panel displaying counters\r\n            this.$infoAnswered = this.$component.find(_selectors.infoAnswered);\r\n            this.$infoViewed = this.$component.find(_selectors.infoViewed);\r\n            this.$infoUnanswered = this.$component.find(_selectors.infoUnanswered);\r\n            this.$infoFlagged = this.$component.find(_selectors.infoFlagged);\r\n\r\n            // access to filter switches\r\n            this.$filterBar = this.$component.find(_selectors.filterBar);\r\n            this.$filters = this.$filterBar.find('li');\r\n\r\n            // access to the tree of parts/sections/items\r\n            this.$tree = this.$component.find(_selectors.tree);\r\n\r\n            // access to the panel displayed when a linear part is reached\r\n            this.$linearState = this.$component.find(_selectors.linearState);\r\n        },\r\n\r\n        /**\r\n         * Installs the event handlers on the underlying DOM elements\r\n         * @private\r\n         */\r\n        _initEvents: function() {\r\n            var self = this;\r\n\r\n            // click on the collapse handle: collapse/expand the review panel\r\n            this.$component.on('click' + _selectors.component, _selectors.collapseHandle, function() {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                self.$component.toggleClass(_cssCls.collapsed);\r\n                if (self.$component.hasClass(_cssCls.collapsed)) {\r\n                    self._openSelected();\r\n                }\r\n            });\r\n\r\n            // click on the info panel title: toggle the related panel\r\n            this.$component.on('click' + _selectors.component, _selectors.infoPanelLabels, function() {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                var $panel = $(this).closest(_selectors.infoPanel);\r\n                self._togglePanel($panel, _selectors.infoPanel);\r\n            });\r\n\r\n            // click on a part title: toggle the related panel\r\n            this.$tree.on('click' + _selectors.component, _selectors.partLabels, function() {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                var $panel = $(this).closest(_selectors.parts);\r\n                var open = self._togglePanel($panel, _selectors.parts);\r\n\r\n                if (open) {\r\n                    if ($panel.hasClass(_cssCls.active)) {\r\n                        self._openSelected();\r\n                    } else {\r\n                        self._openOnly($panel.find(_selectors.sections).first(), $panel);\r\n                    }\r\n                }\r\n            });\r\n\r\n            // click on a section title: toggle the related panel\r\n            this.$tree.on('click' + _selectors.component, _selectors.sectionLabels, function() {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                var $panel = $(this).closest(_selectors.sections);\r\n\r\n                self._togglePanel($panel, _selectors.sections);\r\n            });\r\n\r\n            // click on an item: jump to the position\r\n            this.$tree.on('click' + _selectors.component, _selectors.itemLabels, function(event) {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                var $item = $(this).closest(_selectors.items);\r\n                var $target;\r\n\r\n                if (!$item.hasClass(_cssCls.disabled)) {\r\n                    $target = $(event.target);\r\n                    if ($target.is(_selectors.icons) && !self.$component.hasClass(_cssCls.collapsed)) {\r\n                        if (!$item.hasClass(_cssCls.unseen)) {\r\n                            self._mark($item);\r\n                        }\r\n                    } else {\r\n                        self._select($item);\r\n                        self._jump($item);\r\n                    }\r\n                }\r\n            });\r\n\r\n            // click on the start button inside a linear part: jump to the position\r\n            this.$tree.on('click' + _selectors.component, _selectors.linearStart, function() {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                var $btn = $(this);\r\n\r\n                if (!$btn.hasClass(_cssCls.disabled)) {\r\n                    $btn.addClass(_cssCls.disabled);\r\n                    self._jump($btn);\r\n                }\r\n            });\r\n\r\n            // click on a filter button\r\n            this.$filterBar.on('click' + _selectors.component, 'li', function() {\r\n                if (self.disabled) {\r\n                    return;\r\n                }\r\n\r\n                var $btn = $(this);\r\n                var mode = $btn.data('mode');\r\n\r\n                self.$filters.removeClass(_cssCls.active);\r\n                self.$component.removeClass(_cssCls.collapsed);\r\n                $btn.addClass(_cssCls.active);\r\n\r\n                self._filter(mode);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Filters the items by a criteria\r\n         * @param {String} criteria\r\n         * @private\r\n         */\r\n        _filter: function(criteria) {\r\n            var $items = this.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\r\n            var filter = _filterMap[criteria];\r\n            if (filter) {\r\n                $items.filter(filter).addClass(_cssCls.hidden);\r\n            }\r\n            this._updateSectionCounters(!!filter);\r\n            this.currentFilter = criteria;\r\n        },\r\n\r\n        /**\r\n         * Selects an item\r\n         * @param {String|jQuery} position The item's position\r\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\r\n         * @returns {jQuery} Returns the selected item\r\n         * @private\r\n         */\r\n        _select: function(position, open) {\r\n            // find the item to select and extract its hierarchy\r\n            var selected = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\r\n            var hierarchy = selected.parentsUntil(this.$tree);\r\n\r\n            // collapse the full tree and open only the hierarchy of the selected item\r\n            if (open) {\r\n                this._openOnly(hierarchy);\r\n            }\r\n\r\n            // select the item\r\n            this.$tree.find(_selectors.actives).removeClass(_cssCls.active);\r\n            hierarchy.add(selected).addClass(_cssCls.active);\r\n            return selected;\r\n        },\r\n\r\n        /**\r\n         * Opens the tree on the selected item only\r\n         * @returns {jQuery} Returns the selected item\r\n         * @private\r\n         */\r\n        _openSelected: function() {\r\n            // find the selected item and extract its hierarchy\r\n            var selected = this.$tree.find(_selectors.items + _selectors.actives);\r\n            var hierarchy = selected.parentsUntil(this.$tree);\r\n\r\n            // collapse the full tree and open only the hierarchy of the selected item\r\n            this._openOnly(hierarchy);\r\n\r\n            return selected;\r\n        },\r\n\r\n        /**\r\n         * Collapses the full tree and opens only the provided branch\r\n         * @param {jQuery} opened The element to be opened\r\n         * @param {jQuery} [root] The root element from which collapse the panels\r\n         * @private\r\n         */\r\n        _openOnly: function(opened, root) {\r\n            (root || this.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\r\n            opened.removeClass(_cssCls.collapsed);\r\n        },\r\n\r\n        /**\r\n         * Toggles a panel\r\n         * @param {jQuery} panel The panel to toggle\r\n         * @param {String} [collapseSelector] Selector of panels to collapse\r\n         * @returns {Boolean} Returns `true` if the panel just expanded now\r\n         */\r\n        _togglePanel: function(panel, collapseSelector) {\r\n            var collapsed = panel.hasClass(_cssCls.collapsed);\r\n\r\n            if (collapseSelector) {\r\n                this.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\r\n            }\r\n\r\n            if (collapsed) {\r\n                panel.removeClass(_cssCls.collapsed);\r\n            } else {\r\n                panel.addClass(_cssCls.collapsed);\r\n            }\r\n            return collapsed;\r\n        },\r\n\r\n        /**\r\n         * Sets the icon of a particular item\r\n         * @param {jQuery} $item\r\n         * @param {String} icon\r\n         * @private\r\n         */\r\n        _setItemIcon: function($item, icon) {\r\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\r\n        },\r\n\r\n        /**\r\n         * Sets the icon of a particular item according to its state\r\n         * @param {jQuery} $item\r\n         * @private\r\n         */\r\n        _adjustItemIcon: function($item) {\r\n            var icon = null;\r\n            var defaultIcon = _cssCls.unseen;\r\n            var iconCls = [\r\n                _cssCls.flagged,\r\n                _cssCls.answered,\r\n                _cssCls.viewed\r\n            ];\r\n\r\n            _.forEach(iconCls, function(cls) {\r\n                if ($item.hasClass(cls)) {\r\n                    icon = cls;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            this._setItemIcon($item, icon || defaultIcon);\r\n        },\r\n\r\n        /**\r\n         * Toggle the marked state of an item\r\n         * @param {jQuery} $item\r\n         * @param {Boolean} [flag]\r\n         * @private\r\n         */\r\n        _toggleFlag: function($item, flag) {\r\n            $item.toggleClass(_cssCls.flagged, flag);\r\n            this._adjustItemIcon($item);\r\n        },\r\n\r\n        /**\r\n         * Marks an item for later review\r\n         * @param {jQuery} $item\r\n         * @private\r\n         */\r\n        _mark: function($item) {\r\n            var itemId = $item.data('id');\r\n            var itemPosition = $item.data('position');\r\n            var flag = !$item.hasClass(_cssCls.flagged);\r\n\r\n            this._toggleFlag($item);\r\n\r\n            /**\r\n             * A storage of the flag is required\r\n             * @event testReview#mark\r\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\r\n             * @param {Number} position - The item position on which jump\r\n             * @param {String} itemId - The identifier of the target item\r\n             * @param {testReview} testReview - The client testReview component\r\n             */\r\n            this.trigger('mark', [flag, itemPosition, itemId]);\r\n        },\r\n\r\n        /**\r\n         * Jumps to an item\r\n         * @param {jQuery} $item\r\n         * @private\r\n         */\r\n        _jump: function($item) {\r\n            var itemId = $item.data('id');\r\n            var itemPosition = $item.data('position');\r\n\r\n            /**\r\n             * A jump to a particular item is required\r\n             * @event testReview#jump\r\n             * @param {Number} position - The item position on which jump\r\n             * @param {String} itemId - The identifier of the target item\r\n             * @param {testReview} testReview - The client testReview component\r\n             */\r\n            this.trigger('jump', [itemPosition, itemId]);\r\n        },\r\n\r\n        /**\r\n         * Updates the sections related items counters\r\n         * @param {Boolean} filtered\r\n         */\r\n        _updateSectionCounters: function(filtered) {\r\n            var self = this;\r\n            var filter = _filterMap[filtered ? 'filtered' : 'answered'];\r\n            this.$tree.find(_selectors.sections).each(function() {\r\n                var $section = $(this);\r\n                var $items = $section.find(_selectors.items);\r\n                var $filtered = $items.filter(filter);\r\n                var total = $items.length;\r\n                var nb = total - $filtered.length;\r\n                self._writeCount($section.find(_selectors.counters), nb, total);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates the display according to options\r\n         * @private\r\n         */\r\n        _updateDisplayOptions: function() {\r\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test';\r\n            var scopeClass = _cssCls.scope[reviewScope];\r\n            var $root = this.$component;\r\n            _.forEach(_cssCls.scope, function(cls) {\r\n                $root.removeClass(cls);\r\n            });\r\n            if (scopeClass) {\r\n                $root.addClass(scopeClass);\r\n            }\r\n            $root.toggleClass(_cssCls.collapsible, this.options.canCollapse);\r\n        },\r\n\r\n        /**\r\n         * Updates the local options from the provided context\r\n         * @param {Object} testContext The progression context\r\n         * @private\r\n         */\r\n        _updateOptions: function(testContext) {\r\n            var options = this.options;\r\n            _.forEach(_optionsMap, function(optionKey, contextKey) {\r\n                if (undefined !== testContext[contextKey]) {\r\n                    options[optionKey] = testContext[contextKey];\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates the info panel\r\n         */\r\n        _updateInfos: function() {\r\n            var progression = this.progression,\r\n                unanswered = Number(progression.total) - Number(progression.answered);\r\n\r\n            // update the info panel\r\n            this._writeCount(this.$infoAnswered, progression.answered, progression.total);\r\n            this._writeCount(this.$infoUnanswered, unanswered, progression.total);\r\n            this._writeCount(this.$infoViewed, progression.viewed, progression.total);\r\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\r\n        },\r\n\r\n        /**\r\n         * Updates a counter\r\n         * @param {jQuery} $place\r\n         * @param {Number} count\r\n         * @param {Number} total\r\n         * @private\r\n         */\r\n        _writeCount: function($place, count, total) {\r\n            $place.text(count + '/' + total);\r\n        },\r\n\r\n        /**\r\n         * Gets the progression stats for the whole test\r\n         * @param {Object} testContext The progression context\r\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\r\n         * @private\r\n         */\r\n        _getProgressionOfTest: function(testContext) {\r\n            return {\r\n                total : testContext.numberItems || 0,\r\n                answered : testContext.numberCompleted || 0,\r\n                viewed : testContext.numberPresented || 0,\r\n                flagged : testContext.numberFlagged || 0\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Gets the progression stats for the current test part\r\n         * @param {Object} testContext The progression context\r\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\r\n         * @private\r\n         */\r\n        _getProgressionOfTestPart: function(testContext) {\r\n            return {\r\n                total : testContext.numberItemsPart || 0,\r\n                answered : testContext.numberCompletedPart || 0,\r\n                viewed : testContext.numberPresentedPart || 0,\r\n                flagged : testContext.numberFlaggedPart || 0\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Gets the progression stats for the current test section\r\n         * @param {Object} testContext The progression context\r\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\r\n         * @private\r\n         */\r\n        _getProgressionOfTestSection: function(testContext) {\r\n            return {\r\n                total : testContext.numberItemsSection || 0,\r\n                answered : testContext.numberCompletedSection || 0,\r\n                viewed : testContext.numberPresentedSection || 0,\r\n                flagged : testContext.numberFlaggedSection || 0\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Updates the navigation tre\r\n         * @param {Object} testContext The progression context\r\n         */\r\n        _updateTree: function(testContext) {\r\n            var navigatorMap = testContext.navigatorMap;\r\n            var reviewScope = this.options.reviewScope;\r\n            var reviewScopePart = reviewScope === 'testPart';\r\n            var reviewScopeSection = reviewScope === 'testSection';\r\n            var _partsFilter = function(part) {\r\n                if (reviewScopeSection && part.sections) {\r\n                    part.sections = _.filter(part.sections, _partsFilter);\r\n                }\r\n                return part.active;\r\n            };\r\n\r\n            // rebuild the tree\r\n            if (navigatorMap) {\r\n                if (reviewScopePart || reviewScopeSection) {\r\n                    // display only the current section\r\n                    navigatorMap = _.filter(navigatorMap, _partsFilter);\r\n                }\r\n\r\n                this.$filterBar.show();\r\n                this.$linearState.hide();\r\n                this.$tree.html(navigatorTreeTpl({\r\n                    parts: navigatorMap\r\n                }));\r\n\r\n                if (this.options.preventsUnseen) {\r\n                    // disables all unseen items to prevent the test taker has access to.\r\n                    this.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\r\n                }\r\n            } else {\r\n                this.$filterBar.hide();\r\n                this.$linearState.show();\r\n                this.$tree.empty();\r\n            }\r\n\r\n            // apply again the current filter\r\n            this._filter(this.$filters.filter(_selectors.actives).data('mode'));\r\n        },\r\n\r\n        /**\r\n         * Set the marked state of an item\r\n         * @param {Number|String|jQuery} position\r\n         * @param {Boolean} flag\r\n         */\r\n        setItemFlag: function setItemFlag(position, flag) {\r\n            var $item = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\r\n            var progression = this.progression;\r\n\r\n            // update the item flag\r\n            this._toggleFlag($item, flag);\r\n\r\n            // update the info panel\r\n            progression.flagged = this.$tree.find(_selectors.flagged).length;\r\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\r\n            this._filter(this.currentFilter);\r\n        },\r\n\r\n        /**\r\n         * Update the number of flagged items in the test context\r\n         * @param {Object} testContext The test context\r\n         * @param {Number} position The position of the flagged item\r\n         * @param {Boolean} flag The flag state\r\n         */\r\n        updateNumberFlagged: function(testContext, position, flag) {\r\n            var fields = ['numberFlagged'];\r\n            var currentPosition = testContext.itemPosition;\r\n            var currentFound = false, currentSection = null, currentPart = null;\r\n            var itemFound = false, itemSection = null, itemPart = null;\r\n\r\n            if (testContext.navigatorMap) {\r\n                // find the current item and the marked item inside the navigator map\r\n                // check if the marked item is in the current section\r\n                _.forEach(testContext.navigatorMap, function(part) {\r\n                    _.forEach(part && part.sections, function(section) {\r\n                        _.forEach(section && section.items, function(item) {\r\n                            if (item) {\r\n                                if (item.position === position) {\r\n                                    itemPart = part;\r\n                                    itemSection = section;\r\n                                    itemFound = true;\r\n                                }\r\n                                if (item.position === currentPosition) {\r\n                                    currentPart = part;\r\n                                    currentSection = section;\r\n                                    currentFound = true;\r\n\r\n                                }\r\n                                if (itemFound && currentFound) {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        if (itemFound && currentFound) {\r\n                            return false;\r\n                        }\r\n                    });\r\n\r\n                    if (itemFound && currentFound) {\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                // select the context to update\r\n                if (itemFound && currentPart === itemPart) {\r\n                    fields.push('numberFlaggedPart');\r\n                }\r\n                if (itemFound && currentSection === itemSection) {\r\n                    fields.push('numberFlaggedSection');\r\n                }\r\n            } else {\r\n                // no navigator map, the current the marked item is in the current section\r\n                fields.push('numberFlaggedPart');\r\n                fields.push('numberFlaggedSection');\r\n            }\r\n\r\n            _.forEach(fields, function(field) {\r\n                if (field in testContext) {\r\n                    testContext[field] += flag ? 1 : -1;\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get progression\r\n         * @param {Object} testContext The progression context\r\n         * @returns {object} progression\r\n         */\r\n        getProgression: function getProgression(testContext) {\r\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test',\r\n                progressInfoMethod = '_getProgressionOf' + capitalize(reviewScope),\r\n                getProgression = this[progressInfoMethod] || this._getProgressionOfTest,\r\n                progression = getProgression && getProgression(testContext) || {};\r\n\r\n            return progression;\r\n        },\r\n\r\n        /**\r\n         * Updates the review screen\r\n         * @param {Object} testContext The progression context\r\n         * @returns {testReview}\r\n         */\r\n        update: function update(testContext) {\r\n            this.progression = this.getProgression(testContext);\r\n            this._updateOptions(testContext);\r\n            this._updateInfos(testContext);\r\n            this._updateTree(testContext);\r\n            this._updateDisplayOptions(testContext);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disables the component\r\n         * @returns {testReview}\r\n         */\r\n        disable: function disable() {\r\n            this.disabled = true;\r\n            this.$component.addClass(_cssCls.disabled);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enables the component\r\n         * @returns {testReview}\r\n         */\r\n        enable: function enable() {\r\n            this.disabled = false;\r\n            this.$component.removeClass(_cssCls.disabled);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides the component\r\n         * @returns {testReview}\r\n         */\r\n        hide: function hide() {\r\n            this.disabled = true;\r\n            this.hidden = true;\r\n            this.$component.addClass(_cssCls.hidden);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Shows the component\r\n         * @returns {testReview}\r\n         */\r\n        show: function show() {\r\n            this.disabled = false;\r\n            this.hidden = false;\r\n            this.$component.removeClass(_cssCls.hidden);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles the display state of the component\r\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\r\n         * @returns {testReview}\r\n         */\r\n        toggle: function toggle(show) {\r\n            if (undefined === show) {\r\n                show = this.hidden;\r\n            }\r\n\r\n            if (show) {\r\n                this.show();\r\n            } else {\r\n                this.hide();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Install an event handler on the underlying DOM element\r\n         * @param {String} eventName\r\n         * @returns {testReview}\r\n         */\r\n        on: function on(eventName) {\r\n            var dom = this.$component;\r\n            if (dom) {\r\n                dom.on.apply(dom, arguments);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Uninstall an event handler from the underlying DOM element\r\n         * @param {String} eventName\r\n         * @returns {testReview}\r\n         */\r\n        off: function off(eventName) {\r\n            var dom = this.$component;\r\n            if (dom) {\r\n                dom.off.apply(dom, arguments);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggers an event on the underlying DOM element\r\n         * @param {String} eventName\r\n         * @param {Array|Object} extraParameters\r\n         * @returns {testReview}\r\n         */\r\n        trigger : function trigger(eventName, extraParameters) {\r\n            var dom = this.$component;\r\n\r\n            if (undefined === extraParameters) {\r\n                extraParameters = [];\r\n            }\r\n            if (!_.isArray(extraParameters)) {\r\n                extraParameters = [extraParameters];\r\n            }\r\n\r\n            extraParameters.push(this);\r\n\r\n            if (dom) {\r\n                dom.trigger(eventName, extraParameters);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Builds an instance of testReview\r\n     * @param {String|jQuery|HTMLElement} element The element on which install the component\r\n     * @param {Object} [options] A list of extra options\r\n     * @param {String} [options.region] The region on which put the component: left or right\r\n     * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\r\n     * the whole test, the current test part or the current test section)\r\n     * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\r\n     * @returns {testReview}\r\n     */\r\n    var testReviewFactory = function(element, options) {\r\n        var component = _.clone(testReview, true);\r\n        return component.init(element, options);\r\n    };\r\n\r\n    return testReviewFactory;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\r\n */\r\ndefine('taoQtiTest/testRunner/progressUpdater',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/progressbar'\r\n], function ($, _, __) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Provides a versatile progress bar updater\r\n     * @type {{init: Function, update: Function}}\r\n     */\r\n    var progressUpdaters = {\r\n        /**\r\n         * Initializes the progress updater\r\n         *\r\n         * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\r\n         * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\r\n         * @returns {progressUpdaters}\r\n         */\r\n        init: function(progressBar, progressLabel) {\r\n            this.progressBar = $(progressBar).progressbar();\r\n            this.progressLabel = $(progressLabel);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Writes the progress label and update the progress by ratio\r\n         * @param {String} label\r\n         * @param {Number} ratio\r\n         * @returns {progressUpdaters}\r\n         */\r\n        write: function(label, ratio) {\r\n            this.progressLabel.text(label);\r\n            this.progressBar.progressbar('value', ratio);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates the progress bar\r\n         * @param {Object} testContext The progression context\r\n         * @returns {{ratio: number, label: string}}\r\n         */\r\n        update: function(testContext) {\r\n            var progressIndicator = testContext.progressIndicator || 'percentage';\r\n            var progressIndicatorMethod = progressIndicator + 'Progression';\r\n            var getProgression = this[progressIndicatorMethod] || this.percentageProgression;\r\n            var progression = getProgression && getProgression(testContext) || {};\r\n\r\n            this.write(progression.label, progression.ratio);\r\n            return progression;\r\n        },\r\n\r\n        /**\r\n         * Updates the progress bar displaying the percentage\r\n         * @param {Object} testContext The progression context\r\n         * @returns {{ratio: number, label: string}}\r\n         */\r\n        percentageProgression: function(testContext) {\r\n            var total = Math.max(1, testContext.numberItems);\r\n            var ratio = Math.floor(testContext.numberCompleted / total * 100);\r\n            return {\r\n                ratio : ratio,\r\n                label : ratio + '%'\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Updates the progress bar displaying the position\r\n         * @param {Object} testContext The progression context\r\n         * @returns {{ratio: number, label: string}}\r\n         */\r\n        positionProgression: function(testContext) {\r\n            var progressScope = testContext.progressIndicatorScope;\r\n            var progressScopeCounter = {\r\n                test : {\r\n                    total : 'numberItems',\r\n                    position : 'itemPosition'\r\n                },\r\n                testPart : {\r\n                    total : 'numberItemsPart',\r\n                    position : 'itemPositionPart'\r\n                },\r\n                testSection : {\r\n                    total : 'numberItemsSection',\r\n                    position : 'itemPositionSection'\r\n                }\r\n            };\r\n            var counter = progressScopeCounter[progressScope] || progressScopeCounter.test;\r\n            var total = Math.max(1, testContext[counter.total]);\r\n            var position = testContext[counter.position] + 1;\r\n            return {\r\n                ratio : Math.floor(position / total * 100),\r\n                label : __('Item %d of %d', position, total)\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Builds an instance of progressUpdaters\r\n     * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\r\n     * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\r\n     * @returns {progressUpdaters}\r\n     */\r\n    var progressUpdaterFactory = function(progressBar, progressLabel) {\r\n        var updater = _.clone(progressUpdaters, true);\r\n        return updater.init(progressBar, progressLabel);\r\n    };\r\n\r\n    return progressUpdaterFactory;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\n/**\r\n * Metadata to be sent to the server. Will be saved in result storage as a trace variable.\r\n * Usage example:\r\n * <pre>\r\n * var testMetaData = testMetaDataFactory({\r\n *   testServiceCallId : this.itemServiceApi.serviceCallId\r\n * });\r\n *\r\n * testMetaData.setData({\r\n *   'TEST' : {\r\n *      'TEST_EXIT_CODE' : 'T'\r\n *   },\r\n *   'SECTION' : {\r\n *      'SECTION_EXIT_CODE' : 704\r\n *   }\r\n * });\r\n *\r\n * testMetaData.addData({'ITEM' : {\r\n *      'ITEM_START_TIME_CLIENT' : 1443596730143,\r\n *      'ITEM_END_TIME_CLIENT' : 1443596731301\r\n *    }\r\n * });\r\n * </pre>\r\n *\r\n * Data for each service call id will be stored in local storage to be able get data\r\n * after reloading the page or resuming the test session.\r\n *\r\n * To clear all data related to current test_call_id used <i>clearData</i> method.\r\n */\r\ndefine('taoQtiTest/testRunner/testMetaData',[\r\n    'lodash'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} options\r\n     * @param {string} options.testServiceCallId - test call id.\r\n     */\r\n     var testMetaDataFactory = function testMetaDataFactory(options) {\r\n        var _testServiceCallId,\r\n            _storageKeyPrefix = 'testMetaData_',\r\n            _data = {};\r\n\r\n        if (!options || options.testServiceCallId === undefined) {\r\n            throw new TypeError(\"testServiceCallId option is required\");\r\n        }\r\n\r\n        var testMetaData = {\r\n            SECTION_EXIT_CODE : {\r\n                'COMPLETED_NORMALLY': 700,\r\n                'QUIT': 701,\r\n                'COMPLETE_TIMEOUT': 703,\r\n                'TIMEOUT': 704,\r\n                'FORCE_QUIT': 705,\r\n                'IN_PROGRESS': 706,\r\n                'ERROR': 300\r\n            },\r\n            TEST_EXIT_CODE : {\r\n                'COMPLETE': 'C',\r\n                'TERMINATED': 'T',\r\n                'INCOMPLETE': 'IC',\r\n                'INCOMPLETE_QUIT': 'IQ',\r\n                'INACTIVE': 'IA',\r\n                'CANDIDATE_DISAGREED_WITH_NDA': 'DA'\r\n            },\r\n            /**\r\n             * Return test call id.\r\n             * @returns {string}- Test call id\r\n             */\r\n            getTestServiceCallId : function getTestServiceCallId () {\r\n                return _testServiceCallId;\r\n            },\r\n\r\n            /**\r\n             * Set test call id.\r\n             * @param {string} value\r\n             */\r\n            setTestServiceCallId : function setTestServiceCallId (value) {\r\n                _testServiceCallId = value;\r\n            },\r\n\r\n            /**\r\n             * Set meta data. Current data object will be overwritten.\r\n             * @param {Object} data - metadata object\r\n             */\r\n            setData : function setData(data) {\r\n                _data = data;\r\n                setLocalStorageData(JSON.stringify(_data));\r\n            },\r\n\r\n            /**\r\n             * Add data.\r\n             * @param {Object} data - metadata object\r\n             * @param {Boolean} overwrite - whether the same data should be overwritten. Default - <i>false</i>\r\n             */\r\n            addData : function addData(data, overwrite) {\r\n                data = _.clone(data);\r\n                if (overwrite === undefined) {\r\n                    overwrite = false;\r\n                }\r\n\r\n                if (overwrite) {\r\n                    _.merge(_data, data);\r\n                } else {\r\n                    _data = _.merge(data, _data);\r\n                }\r\n                setLocalStorageData(JSON.stringify(_data));\r\n            },\r\n\r\n            /**\r\n             * Get the saved data.\r\n             * The cloned object will be returned to avoid unwanted affecting of the original data.\r\n             * @returns {Object} - metadata object.\r\n             */\r\n            getData : function getData() {\r\n                return _.clone(_data);\r\n            },\r\n\r\n            /**\r\n             * Clear all data saved in current object and in local storage related to current test call id.\r\n             * @returns {Object} - metadata object.\r\n             */\r\n            clearData : function clearData() {\r\n                _data = {};\r\n                window.localStorage.removeItem(testMetaData.getLocalStorageKey());\r\n            },\r\n\r\n            getLocalStorageKey : function getLocalStorageKey () {\r\n                return _storageKeyPrefix + _testServiceCallId;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Initialize test meta data manager\r\n         */\r\n        function init() {\r\n            _testServiceCallId = options.testServiceCallId;\r\n            testMetaData.setData(getLocalStorageData());\r\n        }\r\n\r\n        /**\r\n         * Set data to local storage\r\n         * @param {string} val - data to be stored.\r\n         */\r\n        function setLocalStorageData(val) {\r\n            var currentKey = testMetaData.getLocalStorageKey();\r\n            try {\r\n                window.localStorage.setItem(currentKey, val);\r\n            } catch(domException) {\r\n                if (domException.name === 'QuotaExceededError' ||\r\n                    domException.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\r\n                    var removed = 0,\r\n                        i = window.localStorage.length,\r\n                        key;\r\n                    while (i--) {\r\n                        key  = localStorage.key(i);\r\n                        if (/^testMetaData_.*/.test(key) && key !== currentKey) {\r\n                            window.localStorage.removeItem(key);\r\n                            removed++;\r\n                        }\r\n                    }\r\n                    if (removed) {\r\n                        setLocalStorageData(val);\r\n                    } else {\r\n                        throw domException;\r\n                    }\r\n                } else {\r\n                    throw domException;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get data from local storage stored for current call id\r\n         * @returns {*} saved data or empty object\r\n         */\r\n        function getLocalStorageData() {\r\n            var data = window.localStorage.getItem(testMetaData.getLocalStorageKey()),\r\n                result = JSON.parse(data) || {};\r\n\r\n            return result;\r\n        }\r\n\r\n        init();\r\n\r\n        return testMetaData;\r\n    };\r\n\r\n    return testMetaDataFactory;\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\ndefine('serviceApi/ServiceApi',['jquery', 'urlParser'], function($, UrlParser){\r\n    'use strict';\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function ServiceApi(baseUrl, parameters, serviceCallId, stateStorage, userService, paused){\r\n        this.baseUrl = baseUrl;\r\n        this.parameters = parameters;\r\n        this.connected = false;\r\n\r\n        this.serviceCallId = serviceCallId;\r\n        this.state = stateStorage;\r\n        this.userService = userService;\r\n        this.hasBeenPaused = paused;\r\n    }\r\n\r\n    ServiceApi.SIG_SUCCESS = 0;\r\n    ServiceApi.SIG_ERROR = 1;\r\n\r\n    ServiceApi.prototype.loadInto = function(frame, connected){\r\n        var self = this;\r\n        var $frame = $(frame);\r\n        var callUrl = this.getCallUrl();\r\n        var isCORSAllowed = new UrlParser(callUrl).checkCORS();\r\n\r\n        $frame.on('load', function(e){\r\n             //if we are  in the same domain, we add a variable\r\n             //to the frame window, so the frame knows it can communicate\r\n             //with the parent\r\n            $(document).on('serviceready', function(){\r\n                self.connect(frame, function(){\r\n                    $(document).off('serviceready');\r\n                    if(typeof connected === 'function'){\r\n                        connected();\r\n                    }\r\n                });\r\n            });\r\n             if(isCORSAllowed === true){\r\n                 frame.contentWindow.__knownParent__ = true;\r\n             }\r\n         });\r\n\r\n        $frame.attr('src', callUrl);\r\n    };\r\n\r\n    ServiceApi.prototype.connect = function(frame, connected){\r\n        if(this.connected === false && frame.contentWindow){\r\n            //frame.contentWindow.serviceApi = this;\r\n            if (typeof(frame.contentWindow.onServiceApiReady) === \"function\") {\r\n                frame.contentWindow.onServiceApiReady(this);\r\n                this.connected = true;\r\n                if(typeof connected === 'function'){\r\n                    connected();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the service call URL\r\n     * @returns {String} the URI\r\n     */\r\n    ServiceApi.prototype.getCallUrl = function(){\r\n        var params = this.parameters || {};\r\n        params.serviceCallId = this.serviceCallId;\r\n        return this.baseUrl + '?' + $.param(params);\r\n    };\r\n\r\n    ServiceApi.prototype.getUserPropertyValues = function(property, callback){\r\n    \tthis.userService.get(property, callback);\r\n    };\r\n\r\n    //Context\r\n    ServiceApi.prototype.getServiceCallId = function(){\r\n        return this.serviceCallId;\r\n    };\r\n\r\n    //Context\r\n    ServiceApi.prototype.getState = function(){\r\n        return this.state.get();\r\n    };\r\n\r\n    ServiceApi.prototype.setState = function(state, callback){\r\n        return this.state.set(state, callback);\r\n    };\r\n\r\n    //Context\r\n    ServiceApi.prototype.getHasBeenPaused = function(){\r\n        return this.hasBeenPaused;\r\n    };\r\n\r\n    ServiceApi.prototype.setHasBeenPaused = function(paused){\r\n        this.hasBeenPaused = paused;\r\n    };\r\n\r\n    // Variables\r\n    ServiceApi.prototype.getParameter = function(identifier){\r\n        if (typeof(this.parameters[identifier]) !== \"undefined\") {\r\n            return this.parameters[identifier];\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets a callback on the finish action\r\n     * @param {Function} callback\r\n     * @returns {ServiceApi}\r\n     */\r\n    ServiceApi.prototype.onFinish = function(callback) {\r\n        this.onFinishCallback = callback;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Sets a callback on the kill action\r\n     * @param {Function} callback\r\n     * @returns {ServiceApi}\r\n     */\r\n    ServiceApi.prototype.onKill = function(callback) {\r\n        this.onKillCallback = callback;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Sets a callback on the exit action\r\n     * @param {Function} callback\r\n     * @returns {ServiceApi}\r\n     */\r\n    ServiceApi.prototype.onExit = function(callback) {\r\n        this.onExitCallback = callback;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {Function} callback - Function called if no dedicated callback is found\r\n     */\r\n    ServiceApi.prototype.kill = function(callback) {\r\n    \tif (typeof this.onKillCallback === 'function') {\r\n    \t\tthis.onKillCallback(callback);\r\n    \t} else {\r\n    \t\tcallback(0);\r\n    \t}\r\n    };\r\n\r\n    /**\r\n     * Exits the flow\r\n     * @param {Function} callback - Function called if no dedicated callback is found\r\n     */\r\n    ServiceApi.prototype.exit = function(callback) {\r\n    \tif (typeof this.onExitCallback === 'function') {\r\n    \t\tthis.onExitCallback(callback);\r\n    \t} else {\r\n    \t\tcallback(0);\r\n    \t}\r\n    };\r\n\r\n    /**\r\n     * Finishes the flow\r\n     * @param valueArray - return parameters of the service.\r\n     */\r\n    ServiceApi.prototype.finish = function(valueArray) {\r\n        //return execution to service caller\r\n        if (typeof this.onFinishCallback === 'function') {\r\n                this.onFinishCallback(valueArray);\r\n        }\r\n    };\r\n\r\n    return ServiceApi;\r\n\r\n});\r\n\n","define('serviceApi/UserInfoService',['jquery'], function($){\r\n    \r\n    function UserInfoService(requestUrl, data) {\r\n        this.data = data;\r\n        this.requestUrl = requestUrl;\r\n    }\r\n\r\n    UserInfoService.prototype.get = function(property, callback){\r\n        if (this.data.hasOwnProperty(property)) {\r\n            if (typeof callback === \"function\") {\r\n                    callback(this.data[property]);\r\n            }\r\n        } else {\r\n            $.ajax({\r\n                url : this.requestUrl,\r\n                data \t\t: {\r\n                    'property' : property\r\n                },\r\n                type        : 'post',\r\n                dataType\t: 'json',\r\n                success     : (function(service, callback) {return function(r) {\r\n            \t\tfor (key in r.data) {\r\n            \t\t\tservice.data[key] = r.data[key];\r\n            \t\t}\r\n                    if (typeof callback === \"function\") {\r\n                        callback(service.data[property]);\r\n                    }\r\n\r\n                }})(this, callback)\r\n                /*\t\r\n            \tfunction(r){\r\n                    if(r.success){\r\n                    \tconsole.log(this.data);\r\n                    \tthis.data[property] = r.values;\r\n                    \t//console.log(this.data);\r\n\t                    if (typeof callback === \"function\") {\r\n\t                        callback(this.data[property]);\r\n\t                    }\r\n                    }\r\n                }\r\n                */\r\n                \r\n                \r\n            });\r\n        }\r\n    };\r\n\r\n    return UserInfoService;\r\n});\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2013 (original work) Open Assessment Technologies SA ;\r\n */\r\ndefine('serviceApi/StateStorage',['jquery'], function($){\r\n    'use strict';\r\n    \r\n    function StateStorage(state, submitUrl) {\r\n        this.state = state;\r\n        this.submitUrl = submitUrl;\r\n    }\r\n\r\n    StateStorage.prototype.get = function(callback){\r\n        if (typeof callback === 'function') {\r\n                callback(this.state);\r\n        }\r\n        return this.state;\r\n    };\r\n\r\n    StateStorage.prototype.set = function(state, callback){\r\n\r\n        if (state === this.state) {\r\n            if (typeof callback === \"function\") {\r\n                    callback();\r\n            }\r\n        } else {\r\n            this.state = state;\r\n            $.ajax({\r\n                url : this.submitUrl,\r\n                data \t\t: {\r\n                    'state' : state\r\n                },\r\n                type        : 'post',\r\n                dataType\t: 'json',\r\n                success     : typeof callback === \"function\" ? callback : null\r\n            });\r\n        }\r\n    };\r\n\r\n    return StateStorage;\r\n});\n","/*\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *\r\n */\r\n\r\ndefine('taoQtiTest/controller/runtime/testRunner',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'module',\r\n    'taoQtiTest/testRunner/actionBarTools',\r\n    'taoQtiTest/testRunner/testReview',\r\n    'taoQtiTest/testRunner/progressUpdater',\r\n    'taoQtiTest/testRunner/testMetaData',\r\n    'serviceApi/ServiceApi',\r\n    'serviceApi/UserInfoService',\r\n    'serviceApi/StateStorage',\r\n    'iframeNotifier',\r\n    'mathJax',\r\n    'ui/feedback',\r\n    'ui/deleter',\r\n    'moment',\r\n    'ui/modal',\r\n    'ui/progressbar'\r\n],\r\nfunction (\r\n    $,\r\n    _,\r\n    __,\r\n    module,\r\n    actionBarTools,\r\n    testReview,\r\n    progressUpdater,\r\n    testMetaDataFactory,\r\n    ServiceApi,\r\n    UserInfoService,\r\n    StateStorage,\r\n    iframeNotifier,\r\n    MathJax,\r\n    feedback,\r\n    deleter,\r\n    moment,\r\n    modal\r\n) {\r\n\r\n    'use strict';\r\n\r\n    var timerIds = [],\r\n        currentTimes = [],\r\n        lastDates = [],\r\n        timeDiffs = [],\r\n        waitingTime = 0,\r\n        $timers,\r\n        $controls,\r\n        timerIndex,\r\n        testMetaData,\r\n        sessionStateService,\r\n        $doc = $(document),\r\n        optionNextSection = 'x-tao-option-nextSection',\r\n        optionNextSectionWarning = 'x-tao-option-nextSectionWarning',\r\n        optionReviewScreen = 'x-tao-option-reviewScreen',\r\n        TestRunner = {\r\n            // Constants\r\n            'TEST_STATE_INITIAL': 0,\r\n            'TEST_STATE_INTERACTING': 1,\r\n            'TEST_STATE_MODAL_FEEDBACK': 2,\r\n            'TEST_STATE_SUSPENDED': 3,\r\n            'TEST_STATE_CLOSED': 4,\r\n            'TEST_NAVIGATION_LINEAR': 0,\r\n            'TEST_NAVIGATION_NONLINEAR': 1,\r\n            'TEST_ITEM_STATE_INTERACTING': 1,\r\n\r\n            /**\r\n             * Prepare a transition to another item\r\n             * @param {Function} [callback]\r\n             */\r\n            beforeTransition: function (callback) {\r\n                // Ask the top window to start the loader.\r\n                iframeNotifier.parent('loading');\r\n\r\n                // Disable buttons.\r\n                this.disableGui();\r\n\r\n                $controls.$itemFrame.hide();\r\n                $controls.$rubricBlocks.hide();\r\n                $controls.$timerWrapper.hide();\r\n\r\n                // Wait at least waitingTime ms for a better user experience.\r\n                if (typeof callback === 'function') {\r\n                    setTimeout(callback, waitingTime);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Complete a transition to another item\r\n             */\r\n            afterTransition: function () {\r\n                this.enableGui();\r\n\r\n                //ask the top window to stop the loader\r\n                iframeNotifier.parent('unloading');\r\n                testMetaData.addData({\r\n                    'ITEM' : {'ITEM_START_TIME_CLIENT' : Date.now() / 1000}\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Jumps to a particular item in the test\r\n             * @param {Number} position The position of the item within the test\r\n             */\r\n            jump: function(position) {\r\n                var self = this,\r\n                    action = 'jump',\r\n                    params = {position: position};\r\n                this.disableGui();\r\n\r\n                if( this.isJumpOutOfSection(position)  && this.isCurrentItemActive() && this.isTimedSection() ){\r\n                    this.exitTimedSection(action, params);\r\n                } else {\r\n                    this.killItemSession(function() {\r\n                        self.actionCall(action, params);\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Push to server how long user seen that item before to track duration\r\n             * @param {Number} duration\r\n             */\r\n            keepItemTimed: function(duration){\r\n                if (duration) {\r\n                    var self = this,\r\n                        action = 'keepItemTimed',\r\n                        params = {duration: duration};\r\n                    self.actionCall(action, params);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Marks an item for later review\r\n             * @param {Boolean} flag The state of the flag\r\n             * @param {Number} position The position of the item within the test\r\n             */\r\n            markForReview: function(flag, position) {\r\n                var self = this;\r\n\r\n                // Ask the top window to start the loader.\r\n                iframeNotifier.parent('loading');\r\n\r\n                // Disable buttons.\r\n                this.disableGui();\r\n\r\n                $.ajax({\r\n                    url: self.testContext.markForReviewUrl,\r\n                    cache: false,\r\n                    async: true,\r\n                    type: 'POST',\r\n                    dataType: 'json',\r\n                    data: {\r\n                        flag: flag,\r\n                        position: position\r\n                    },\r\n                    success: function(data) {\r\n                        // update the item flagged state\r\n                        if (self.testReview) {\r\n                            self.testReview.setItemFlag(position, flag);\r\n                            self.testReview.updateNumberFlagged(self.testContext, position, flag);\r\n                            if (self.testContext.itemPosition === position) {\r\n                                self.testContext.itemFlagged = flag;\r\n                            }\r\n                            self.updateTools(self.testContext);\r\n                        }\r\n\r\n                        // Enable buttons.\r\n                        self.enableGui();\r\n\r\n                        //ask the top window to stop the loader\r\n                        iframeNotifier.parent('unloading');\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Move to the next available item\r\n             */\r\n            moveForward: function () {\r\n                var self = this,\r\n                    action = 'moveForward';\r\n\r\n                this.disableGui();\r\n\r\n                if( (( this.testContext.numberItemsSection - this.testContext.itemPositionSection - 1) == 0) && this.isCurrentItemActive()){\r\n                    if( this.isTimedSection() && !this.testContext.isTimeout){\r\n                        this.exitTimedSection(action);\r\n                    } else {\r\n                        this.exitSection(action);\r\n                    }\r\n                } else {\r\n                    this.killItemSession(function () {\r\n                        self.actionCall(action);\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Move to the previous available item\r\n             */\r\n            moveBackward: function () {\r\n                var self = this,\r\n                    action = 'moveBackward';\r\n\r\n                this.disableGui();\r\n\r\n                if( (this.testContext.itemPositionSection == 0) && this.isCurrentItemActive() && this.isTimedSection() ){\r\n                    this.exitTimedSection(action);\r\n                } else {\r\n                this.killItemSession(function () {\r\n                        self.actionCall(action);\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Checks if a position is out of the current section\r\n             * @param {Number} jumpPosition\r\n             * @returns {Boolean}\r\n             */\r\n            isJumpOutOfSection: function(jumpPosition){\r\n                var items = this.getCurrentSectionItems(),\r\n                    isJumpToOtherSection = true,\r\n                    isValidPosition = (jumpPosition >= 0) && ( jumpPosition < this.testContext.numberItems );\r\n\r\n                if( isValidPosition){\r\n                    for(var i in items ) {\r\n                        if (!items.hasOwnProperty(i)) {\r\n                            continue;\r\n                        }\r\n                        if( items[i].position == jumpPosition ){\r\n                            isJumpToOtherSection = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    isJumpToOtherSection = false;\r\n                }\r\n\r\n                return isJumpToOtherSection;\r\n            },\r\n\r\n            /**\r\n             * Exit from the current section. Set the exit code.de\r\n             * @param {String} action\r\n             * @param {Object} params\r\n             * @param {Number} [exitCode]\r\n             */\r\n            exitSection: function(action, params, exitCode){\r\n                var self = this;\r\n                testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : exitCode || testMetaData.SECTION_EXIT_CODE.COMPLETED_NORMALLY}});\r\n                self.killItemSession(function () {\r\n                    self.actionCall(action, params);\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Tries to exit a timed section. Display a confirm message.\r\n             * @param {String} action\r\n             * @param {Object} params\r\n             */\r\n            exitTimedSection: function(action, params){\r\n                var self = this;\r\n                var qtiRunner = this.getQtiRunner();\r\n\r\n                if (qtiRunner) {\r\n                    qtiRunner.updateItemApi();\r\n                }\r\n\r\n                this.displayExitMessage(\r\n                    __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\r\n                    function() {\r\n                        self.exitSection(action, params);\r\n                    },\r\n                    'testSection'\r\n                );\r\n\r\n                this.enableGui();\r\n            },\r\n\r\n            /**\r\n             * Tries to leave the current section and go to the next\r\n             */\r\n            nextSection: function(){\r\n                var self = this;\r\n                var qtiRunner = this.getQtiRunner();\r\n                var doNextSection = function() {\r\n                    self.exitSection('nextSection', null, testMetaData.SECTION_EXIT_CODE.QUIT);\r\n                };\r\n\r\n                if (qtiRunner) {\r\n                    qtiRunner.updateItemApi();\r\n                }\r\n\r\n                if (this.hasOption(optionNextSectionWarning)) {\r\n                    this.displayExitMessage(\r\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\r\n                        doNextSection,\r\n                        'testSection'\r\n                    );\r\n                } else {\r\n                    doNextSection();\r\n                }\r\n\r\n                this.enableGui();\r\n            },\r\n\r\n            /**\r\n             * Gets the current progression within a particular scope\r\n             * @param {String} [scope]\r\n             * @returns {Object}\r\n             */\r\n            getProgression: function(scope) {\r\n                var scopeSuffixMap = {\r\n                    test : '',\r\n                    testPart : 'Part',\r\n                    testSection : 'Section'\r\n                };\r\n                var scopeSuffix = scope && scopeSuffixMap[scope] || '';\r\n\r\n                return {\r\n                    total : this.testContext['numberItems' + scopeSuffix] || 0,\r\n                    answered : this.testContext['numberCompleted' + scopeSuffix] || 0,\r\n                    viewed : this.testContext['numberPresented' + scopeSuffix] || 0,\r\n                    flagged : this.testContext['numberFlagged' + scopeSuffix] || 0\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Displays an exit message for a particular scope\r\n             * @param {String} message\r\n             * @param {Function} [action]\r\n             * @param {String} [scope]\r\n             * @returns {jQuery} Returns the message box\r\n             */\r\n            displayExitMessage: function(message, action, scope) {\r\n                var self = this;\r\n                var $confirmBox = $('.exit-modal-feedback');\r\n                var progression = this.getProgression(scope);\r\n                var unansweredCount = (progression.total - progression.answered);\r\n                var flaggedCount = progression.flagged;\r\n\r\n                if (unansweredCount && this.isCurrentItemAnswered()) {\r\n                    unansweredCount--;\r\n                }\r\n\r\n                if (flaggedCount && unansweredCount) {\r\n                    message = __('You have %s unanswered question(s) and have %s item(s) marked for review.',\r\n                        unansweredCount.toString(),\r\n                        flaggedCount.toString()\r\n                    ) + ' ' + message;\r\n                } else {\r\n                    if (flaggedCount) {\r\n                        message = __('You have %s item(s) marked for review.', flaggedCount.toString()) + ' ' + message;\r\n                    }\r\n\r\n                    if (unansweredCount) {\r\n                        message = __('You have %s unanswered question(s).', unansweredCount.toString()) + ' ' + message;\r\n                    }\r\n                }\r\n\r\n                $confirmBox.find('.message').html(message);\r\n                $confirmBox.modal({ width: 500 });\r\n\r\n                $confirmBox.find('.js-exit-cancel, .modal-close').off('click').on('click', function () {\r\n                    $confirmBox.modal('close');\r\n                });\r\n\r\n                $confirmBox.find('.js-exit-confirm').off('click').on('click', function () {\r\n                    $confirmBox.modal('close');\r\n                    if (_.isFunction(action)) {\r\n                        action.call(self);\r\n                    }\r\n                });\r\n\r\n                return $confirmBox;\r\n            },\r\n\r\n            /**\r\n             * Kill current item section and execute callback function given as first parameter.\r\n             * Item end execution time will be stored in metadata object to be sent to the server.\r\n             * @param {function} callback\r\n             */\r\n            killItemSession : function (callback) {\r\n                testMetaData.addData({\r\n                    'ITEM' : {\r\n                        'ITEM_END_TIME_CLIENT' : Date.now() / 1000,\r\n                        'ITEM_TIMEZONE' : moment().utcOffset(moment().utcOffset()).format('Z')\r\n                    }\r\n                });\r\n                if (typeof callback !== 'function') {\r\n                    callback = _.noop;\r\n                }\r\n                this.itemServiceApi.kill(callback);\r\n            },\r\n\r\n            /**\r\n             * Checks if the current item is active\r\n             * @returns {Boolean}\r\n             */\r\n            isCurrentItemActive: function(){\r\n                return (this.testContext.itemSessionState !=4);\r\n            },\r\n\r\n            /**\r\n             * Tells is the current item has been answered or not\r\n             * The item is considered answered when at least one response has been set to not empty {base : null}\r\n             *\r\n             * @returns {Boolean}\r\n             */\r\n            isCurrentItemAnswered: function(){\r\n                var answered = false;\r\n                _.each(this.getCurrentItemState(), function(state){\r\n                    if(state && _.isObject(state.response) && state.response.base !== null){\r\n                        answered = true;//at least one response is not null so consider the item answered\r\n                        return false;\r\n                    }\r\n                });\r\n                return answered;\r\n            },\r\n\r\n            /**\r\n             * Checks if a particular option is enabled for the current item\r\n             * @param {String} option\r\n             * @returns {Boolean}\r\n             */\r\n            hasOption: function(option) {\r\n                return _.indexOf(this.testContext.categories, option) >= 0;\r\n            },\r\n\r\n            /**\r\n             * Gets access to the qtiRunner instance\r\n             * @returns {Object}\r\n             */\r\n            getQtiRunner: function(){\r\n                var itemFrame = document.getElementById('qti-item');\r\n                var itemWindow = itemFrame && itemFrame.contentWindow;\r\n                var itemContainerFrame = itemWindow && itemWindow.document.getElementById('item-container');\r\n                var itemContainerWindow = itemContainerFrame && itemContainerFrame.contentWindow;\r\n                return itemContainerWindow && itemContainerWindow.qtiRunner;\r\n            },\r\n\r\n            /**\r\n             * Checks if the current section is timed\r\n             * @returns {Boolean}\r\n             */\r\n            isTimedSection: function(){\r\n                var timeConstraints = this.testContext.timeConstraints,\r\n                    isTimedSection = false;\r\n                for( var index in timeConstraints ){\r\n                    if(timeConstraints.hasOwnProperty(index) &&\r\n                        timeConstraints[index].qtiClassName === 'assessmentSection' ){\r\n                        isTimedSection = true;\r\n                    }\r\n                }\r\n\r\n                return isTimedSection;\r\n            },\r\n\r\n            /**\r\n             * Gets the list of items owned by the current section\r\n             * @returns {Array}\r\n             */\r\n            getCurrentSectionItems: function(){\r\n                var partId  = this.testContext.testPartId,\r\n                    navMap  = this.testContext.navigatorMap,\r\n                    sectionItems;\r\n\r\n                for( var partIndex in navMap ){\r\n                    if( !navMap.hasOwnProperty(partIndex)){\r\n                        continue;\r\n                    }\r\n                    if( navMap[partIndex].id !== partId ){\r\n                        continue;\r\n                    }\r\n\r\n                    for(var sectionIndex in navMap[partIndex].sections){\r\n                        if( !navMap[partIndex].sections.hasOwnProperty(sectionIndex)){\r\n                            continue;\r\n                        }\r\n                        if( navMap[partIndex].sections[sectionIndex].active === true ){\r\n                            sectionItems = navMap[partIndex].sections[sectionIndex].items;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return sectionItems;\r\n            },\r\n\r\n            /**\r\n             * Skips the current item\r\n             */\r\n            skip: function () {\r\n                this.disableGui();\r\n                this.actionCall('skip');\r\n            },\r\n\r\n            /**\r\n             * Handles the timeout state\r\n             */\r\n            timeout: function () {\r\n                var self = this;\r\n                this.disableGui();\r\n                this.testContext.isTimeout = true;\r\n                this.updateTimer();\r\n\r\n                this.killItemSession(function () {\r\n                    var confirmBox = $('.timeout-modal-feedback'),\r\n                        testContext = self.testContext,\r\n                        confirmBtn = confirmBox.find('.js-timeout-confirm, .modal-close');\r\n\r\n                    if (testContext.numberCompletedSection === testContext.numberItemsSection) {\r\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.COMPLETE_TIMEOUT}});\r\n                    } else {\r\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.TIMEOUT}});\r\n                    }\r\n\r\n                    self.enableGui();\r\n                    confirmBox.modal({width: 500});\r\n                    confirmBtn.off('click').on('click', function () {\r\n                        confirmBox.modal('close');\r\n                        self.actionCall('timeout');\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Sets the assessment test context object\r\n             * @param {Object} testContext\r\n             */\r\n            setTestContext: function(testContext) {\r\n                this.testContext = testContext;\r\n                this.itemServiceApi = eval(testContext.itemServiceApiCall);\r\n                this.itemServiceApi.setHasBeenPaused(testContext.hasBeenPaused);\r\n            },\r\n\r\n\r\n            /**\r\n             * Handles Metadata initialization\r\n             */\r\n            initMetadata: function (){\r\n                testMetaData = testMetaDataFactory({\r\n                    testServiceCallId: this.itemServiceApi.serviceCallId\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Retrieve service responsible for broken session tracking\r\n             * @returns {*}\r\n             */\r\n            getSessionStateService: function () {\r\n                if (!sessionStateService) {\r\n                    sessionStateService = this.testContext.sessionStateService({accuracy: 1000});\r\n                }\r\n                return sessionStateService;\r\n            },\r\n\r\n            /**\r\n             * Updates the GUI\r\n             * @param {Object} testContext\r\n             */\r\n            update: function (testContext) {\r\n                var self = this;\r\n                $controls.$itemFrame.remove();\r\n\r\n                var $runner = $('#runner');\r\n                $runner.css('height', 'auto');\r\n\r\n                this.getSessionStateService().restart();\r\n\r\n                this.setTestContext(testContext);\r\n                this.updateContext();\r\n                this.updateProgress();\r\n                this.updateNavigation();\r\n                this.updateTestReview();\r\n                this.updateInformation();\r\n                this.updateRubrics();\r\n                this.updateTools(testContext);\r\n                this.updateTimer();\r\n                this.updateExitButton();\r\n                this.resetCurrentItemState();\r\n                this.initMetadata();\r\n\r\n                $controls.$itemFrame = $('<iframe id=\"qti-item\" frameborder=\"0\" scrollbars=\"no\"/>');\r\n                $controls.$itemFrame.appendTo($controls.$contentBox);\r\n\r\n                if (this.testContext.itemSessionState === this.TEST_ITEM_STATE_INTERACTING && self.testContext.isTimeout === false) {\r\n                    $doc.off('.testRunner').on('serviceloaded.testRunner', function () {\r\n                        self.afterTransition();\r\n                        self.adjustFrame();\r\n                        $controls.$itemFrame.css({visibility: 'visible'});\r\n                    });\r\n\r\n                    // Inject API into the frame.\r\n                    this.itemServiceApi.loadInto($controls.$itemFrame[0], function () {\r\n                        // We now rely on the 'serviceloaded' event.\r\n                    });\r\n                }\r\n                else {\r\n                    // e.g. no more attempts or timeout! Simply consider the transition is finished,\r\n                    // but do not load the item.\r\n                    self.afterTransition();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Displays feedback on the current state of the test\r\n             */\r\n            updateInformation: function () {\r\n\r\n                if (this.testContext.isTimeout === true) {\r\n                    feedback().error(__('Time limit reached for item \"%s\".', this.testContext.itemIdentifier));\r\n                }\r\n                else if (this.testContext.itemSessionState !== this.TEST_ITEM_STATE_INTERACTING) {\r\n                    feedback().error(__('No more attempts allowed for item \"%s\".', this.testContext.itemIdentifier));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Updates the displayed tools\r\n             * @param {Object} testContext\r\n             */\r\n            updateTools: function updateTools(testContext) {\r\n                var showSkip = false;\r\n                var showSkipEnd = false;\r\n                var showNextSection = !!testContext.nextSection && (this.hasOption(optionNextSection) || this.hasOption(optionNextSectionWarning));\r\n\r\n                if (this.testContext.allowSkipping === true) {\r\n                    if (this.testContext.isLast === false) {\r\n                        showSkip = true;\r\n                    } else {\r\n                        showSkipEnd = true;\r\n                    }\r\n                }\r\n\r\n                $controls.$skip.toggle(showSkip);\r\n                $controls.$skipEnd.toggle(showSkipEnd);\r\n                $controls.$nextSection.toggle(showNextSection);\r\n\r\n                actionBarTools.render('.tools-box-list', testContext, TestRunner);\r\n            },\r\n\r\n            /**\r\n             * Displays a timer\r\n             * @param {Object} cst\r\n             * @returns {*|jQuery|HTMLElement}\r\n             */\r\n            createTimer: function(cst) {\r\n                var $timer = $('<div>', {'class': 'qti-timer qti-timer__type-' + cst.qtiClassName }),\r\n                    $label = $('<div>', {'class': 'qti-timer_label truncate', text: cst.label }),\r\n                    $time  = $('<div>', {'class': 'qti-timer_time', text: this.formatTime(cst.seconds) });\r\n\r\n                $timer.append($label);\r\n                $timer.append($time);\r\n                return $timer;\r\n            },\r\n\r\n            /**\r\n             * Updates the timers\r\n             */\r\n            updateTimer: function () {\r\n                var self = this;\r\n                var hasTimers;\r\n                $controls.$timerWrapper.empty();\r\n\r\n                for (var i = 0; i < timerIds.length; i++) {\r\n                    clearTimeout(timerIds[i]);\r\n                }\r\n\r\n                timerIds = [];\r\n                currentTimes = [];\r\n                lastDates = [];\r\n                timeDiffs = [];\r\n\r\n                if (self.testContext.isTimeout === false &&\r\n                    self.testContext.itemSessionState === self.TEST_ITEM_STATE_INTERACTING) {\r\n\r\n                    hasTimers = !!this.testContext.timeConstraints.length;\r\n                    $controls.$topActionBar.toggleClass('has-timers', hasTimers);\r\n\r\n                    if (hasTimers) {\r\n\r\n                        // Insert QTI Timers container.\r\n                        // self.formatTime(cst.seconds)\r\n                        for (i = 0; i < this.testContext.timeConstraints.length; i++) {\r\n\r\n                            var cst = this.testContext.timeConstraints[i];\r\n\r\n                            if (cst.allowLateSubmission === false) {\r\n\r\n                                // Set up a timer for this constraint\r\n                                $controls.$timerWrapper.append(self.createTimer(cst));\r\n\r\n                                // Set up a timer and update it with setInterval.\r\n                                currentTimes[i] = cst.seconds;\r\n                                lastDates[i] = new Date();\r\n                                timeDiffs[i] = 0;\r\n                                timerIndex = i;\r\n\r\n                                if (self.testContext.timerWarning && self.testContext.timerWarning[cst.qtiClassName]) {\r\n                                    cst.warnings = {};\r\n                                    _(self.testContext.timerWarning[cst.qtiClassName]).forEach(function (value, key) {\r\n                                        if (_.contains(['info', 'warning', 'danger'], value)) {\r\n                                            cst.warnings[key] = {\r\n                                                type: value,\r\n                                                showed: cst.seconds <= key,\r\n                                                point: parseInt(key, 10)\r\n                                            };\r\n                                        }\r\n                                    });\r\n                                    var closestPreviousWarning = _.find(cst.warnings, { showed: true });\r\n                                    if (!_.isEmpty(closestPreviousWarning) && closestPreviousWarning.point) {\r\n                                        cst.warnings[closestPreviousWarning.point].showed = false;\r\n                                    }\r\n                                }\r\n\r\n                                (function (timerIndex, cst) {\r\n                                    timerIds[timerIndex] = setInterval(function () {\r\n\r\n                                        timeDiffs[timerIndex] += (new Date()).getTime() - lastDates[timerIndex].getTime();\r\n\r\n                                        if (timeDiffs[timerIndex] >= 1000) {\r\n                                            var seconds = timeDiffs[timerIndex] / 1000;\r\n                                            currentTimes[timerIndex] -= seconds;\r\n                                            timeDiffs[timerIndex] = 0;\r\n                                        }\r\n\r\n                                        $timers.eq(timerIndex)\r\n                                            .html(self.formatTime(Math.round(currentTimes[timerIndex])));\r\n\r\n                                        if (currentTimes[timerIndex] <= 0) {\r\n                                            // The timer expired...\r\n                                            currentTimes[timerIndex] = 0;\r\n                                            clearInterval(timerIds[timerIndex]);\r\n\r\n                                            // Hide item to prevent any further interaction with the candidate.\r\n                                            $controls.$itemFrame.hide();\r\n                                            self.timeout();\r\n                                        } else {\r\n                                            lastDates[timerIndex] = new Date();\r\n                                        }\r\n\r\n                                        var warning = _.findLast(cst.warnings, { showed: false });\r\n\r\n                                        if (!_.isEmpty(warning) && _.isFinite(warning.point) && currentTimes[timerIndex] <= warning.point) {\r\n                                            self.timeWarning(cst, warning);\r\n                                        }\r\n\r\n                                    }, 1000);\r\n                                }(timerIndex, cst));\r\n                            }\r\n                        }\r\n\r\n                        $timers = $controls.$timerWrapper.find('.qti-timer .qti-timer_time');\r\n                        $controls.$timerWrapper.show();\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Mark appropriate timer by warning colors and show feedback message\r\n             *\r\n             * @param {object} cst - Time constraint\r\n             * @param {integer} cst.warningTime - Warning time in seconds.\r\n             * @param {integer} cst.qtiClassName - Class name of qti instance for which the timer is set (assessmentItemRef | assessmentSection | testPart | assessmentTest).\r\n             * @param {integer} cst.seconds - Initial timer value.\r\n             * @param {object} warning - Current actual warning\r\n             * @param {integer} warning.point - Warning time point in seconds, when show message\r\n             * @param {boolean} warning.showed - boolean flag for mark already showed warnings\r\n             * @param {string} warning.type - type of warning (from config), can be info, warning or error\r\n             *\r\n             * @returns {undefined}\r\n             */\r\n            timeWarning: function (cst, warning) {\r\n                var message = '',\r\n                    remaining,\r\n                    $timer = $controls.$timerWrapper.find('.qti-timer__type-' + cst.qtiClassName),\r\n                    $time = $timer.find('.qti-timer_time');\r\n\r\n                $time.removeClass('txt-info txt-warning txt-danger').addClass('txt-' + warning.type);\r\n\r\n                remaining = moment.duration(warning.point, \"seconds\").humanize();\r\n\r\n                switch (cst.qtiClassName) {\r\n                    case 'assessmentItemRef':\r\n                        message = __(\"Warning – You have %s remaining to complete this item.\", remaining);\r\n                        break;\r\n                    case 'assessmentSection':\r\n                        message = __(\"Warning – You have %s remaining to complete this section.\", remaining);\r\n                        break;\r\n                    case 'testPart':\r\n                        message = __(\"Warning – You have %s remaining to complete this test part.\", remaining);\r\n                        break;\r\n                    case 'assessmentTest':\r\n                        message = __(\"Warning – You have %s remaining to complete the test.\", remaining);\r\n                        break;\r\n                }\r\n\r\n                feedback()[warning.type](message);\r\n\r\n                cst.warnings[warning.point].showed = true;\r\n            },\r\n\r\n            /**\r\n             * Displays or hides the rubric block\r\n             */\r\n            updateRubrics: function () {\r\n                $controls.$rubricBlocks.remove();\r\n\r\n                if (this.testContext.rubrics.length > 0) {\r\n\r\n                    $controls.$rubricBlocks = $('<div id=\"qti-rubrics\"/>');\r\n\r\n                    for (var i = 0; i < this.testContext.rubrics.length; i++) {\r\n                        $controls.$rubricBlocks.append(this.testContext.rubrics[i]);\r\n                    }\r\n\r\n                    // modify the <a> tags in order to be sure it\r\n                    // opens in another window.\r\n                    $controls.$rubricBlocks.find('a').bind('click keypress', function () {\r\n                        window.open(this.href);\r\n                        return false;\r\n                    });\r\n\r\n                    $controls.$rubricBlocks.prependTo($controls.$contentBox);\r\n\r\n                    if (MathJax) {\r\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $controls.$rubricBlocks[0]);\r\n                    }\r\n\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Updates the list of navigation buttons (previous, next, skip, etc.)\r\n             */\r\n            updateNavigation: function () {\r\n                $controls.$exit.show();\r\n\r\n                if(this.testContext.isLast === true) {\r\n                    $controls.$moveForward.hide();\r\n                    $controls.$moveEnd.show();\r\n                }\r\n                else {\r\n                    $controls.$moveForward.show();\r\n                    $controls.$moveEnd.hide();\r\n                }\r\n                if (this.testContext.navigationMode === this.TEST_NAVIGATION_LINEAR) {\r\n                    // LINEAR\r\n                    $controls.$moveBackward.hide();\r\n                }\r\n                else {\r\n                    // NONLINEAR\r\n                    $controls.$controls.show();\r\n                    if(this.testContext.canMoveBackward === true) {\r\n                        $controls.$moveBackward.show();\r\n                    }\r\n                    else {\r\n                        $controls.$moveBackward.hide();\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Updates the test taker review screen\r\n             */\r\n            updateTestReview: function() {\r\n                var considerProgress = this.testContext.considerProgress === true;\r\n\r\n                if (this.testReview) {\r\n                    this.testReview.toggle(considerProgress && this.hasOption(optionReviewScreen));\r\n                    this.testReview.update(this.testContext);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Updates the progress bar\r\n             */\r\n            updateProgress: function () {\r\n                var considerProgress = this.testContext.considerProgress === true;\r\n\r\n                $controls.$progressBox.css('visibility', considerProgress ? 'visible' : 'hidden');\r\n\r\n                if (considerProgress) {\r\n                    this.progressUpdater.update(this.testContext);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Updates the test informations\r\n             */\r\n            updateContext: function () {\r\n\r\n                $controls.$title.text(this.testContext.testTitle);\r\n\r\n                // Visibility of section?\r\n                var sectionText = (this.testContext.isDeepestSectionVisible === true) ? (' - ' + this.testContext.sectionTitle) : '';\r\n\r\n                $controls.$position.text(sectionText);\r\n                $controls.$titleGroup.show();\r\n            },\r\n\r\n            /**\r\n             * Displays the right exit button\r\n             */\r\n            updateExitButton : function(){\r\n\r\n                $controls.$logout.toggleClass('hidden', !this.testContext.logoutButton);\r\n                $controls.$exit.toggleClass('hidden', !this.testContext.exitButton);\r\n            },\r\n\r\n            /**\r\n             * Ensures the frame has the right size\r\n             */\r\n            adjustFrame: function () {\r\n                var rubricHeight = $controls.$rubricBlocks.outerHeight(true) || 0;\r\n                var frameContentHeight;\r\n                var finalHeight = $(window).innerHeight() - $controls.$topActionBar.outerHeight() - $controls.$bottomActionBar.outerHeight();\r\n                var itemFrame = $controls.$itemFrame.get(0);\r\n                $controls.$contentBox.height(finalHeight);\r\n                if($controls.$sideBars.length){\r\n                    $controls.$sideBars.each(function() {\r\n                        var $sideBar = $(this);\r\n                        $sideBar.height(finalHeight - $sideBar.outerHeight() + $sideBar.height());\r\n                    });\r\n                }\r\n\r\n                if(itemFrame && itemFrame.contentWindow){\r\n                    frameContentHeight = $controls.$itemFrame.contents().outerHeight(true);\r\n\r\n                    if (frameContentHeight < finalHeight) {\r\n                        if (rubricHeight) {\r\n                            frameContentHeight = Math.max(frameContentHeight, finalHeight - rubricHeight);\r\n                        } else {\r\n                            frameContentHeight = finalHeight;\r\n                        }\r\n                    }\r\n                    if (itemFrame.contentWindow.$) {\r\n                        itemFrame.contentWindow.$('body').trigger('setheight', [frameContentHeight]);\r\n                    }\r\n                    $controls.$itemFrame.height(frameContentHeight);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Locks the GUI\r\n             */\r\n            disableGui: function () {\r\n                $controls.$naviButtons.addClass('disabled');\r\n                if (this.testReview) {\r\n                    this.testReview.disable();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Unlocks the GUI\r\n             */\r\n            enableGui: function () {\r\n                $controls.$naviButtons.removeClass('disabled');\r\n                if (this.testReview) {\r\n                    this.testReview.enable();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Hides the GUI\r\n             */\r\n            hideGui: function () {\r\n                $controls.$naviButtons.addClass('hidden');\r\n                if (this.testReview) {\r\n                    this.testReview.hide();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Shows the GUI\r\n             */\r\n            showGui: function () {\r\n                $controls.$naviButtons.removeClass('hidden');\r\n                if (this.testReview) {\r\n                    this.testReview.show();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Formats a timer\r\n             * @param {Number} totalSeconds\r\n             * @returns {String}\r\n             */\r\n            formatTime: function (totalSeconds) {\r\n                var sec_num = totalSeconds;\r\n                var hours = Math.floor(sec_num / 3600);\r\n                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n                var seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n                if (hours < 10) {\r\n                    hours = \"0\" + hours;\r\n                }\r\n                if (minutes < 10) {\r\n                    minutes = \"0\" + minutes;\r\n                }\r\n                if (seconds < 10) {\r\n                    seconds = \"0\" + seconds;\r\n                }\r\n\r\n                var time = hours + ':' + minutes + ':' + seconds;\r\n\r\n                return time;\r\n            },\r\n\r\n            /**\r\n             * Processes an error\r\n             * @param {Object} error\r\n             */\r\n            processError : function processError(error) {\r\n                var self = this;\r\n\r\n                // keep disabled\r\n                this.hideGui();\r\n                this.beforeTransition();\r\n\r\n                // ask the parent to display a message\r\n                iframeNotifier.parent('messagealert', {\r\n                    message : error.message,\r\n                    action : function() {\r\n                        if (testMetaData) {\r\n                            testMetaData.clearData();\r\n                        }\r\n                        if (error.state === self.TEST_STATE_CLOSED) {\r\n                            // test is closed, finish it\r\n                            self.serviceApi.finish();\r\n                        } else {\r\n                            // test is still open, just exit to the index\r\n                            self.serviceApi.exit();\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Call action specified in testContext. A postfix <i>Url</i> will be added to the action name.\r\n             * To specify actions see {@link https://github.com/oat-sa/extension-tao-testqti/blob/master/helpers/class.TestRunnerUtils.php}\r\n             * @param {String} action - Action name\r\n             * @param {Object} [extraParams] - Additional parameters to be sent to the server\r\n             * @returns {undefined}\r\n             */\r\n            actionCall: function (action, extraParams) {\r\n                var self = this,\r\n                    params = {metaData: testMetaData ? testMetaData.getData() : {}};\r\n\r\n                if (extraParams) {\r\n                    params = _.assign(params, extraParams);\r\n                }\r\n                this.beforeTransition(function () {\r\n                    $.ajax({\r\n                        url: self.testContext[action + 'Url'],\r\n                        cache: false,\r\n                        data: params,\r\n                        async: true,\r\n                        dataType: 'json',\r\n                        success: function (testContext) {\r\n                            testMetaData.clearData();\r\n\r\n                            if (!testContext.success) {\r\n                                self.processError(testContext);\r\n                            }\r\n                            else if (testContext.state === self.TEST_STATE_CLOSED) {\r\n                                self.serviceApi.finish();\r\n                            }\r\n                            else {\r\n                                self.update(testContext);\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Exit from test (after confirmation). All answered questions will be submitted.\r\n             *\r\n             * @returns {undefined}\r\n             */\r\n            exit: function () {\r\n                var self = this;\r\n                testMetaData.addData({\r\n                    \"TEST\" : {\"TEST_EXIT_CODE\" : testMetaData.TEST_EXIT_CODE.INCOMPLETE},\r\n                    \"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.QUIT}\r\n                });\r\n                this.displayExitMessage(\r\n                    __('Are you sure you want to end the test?'),\r\n                    function() {\r\n                    self.killItemSession(function () {\r\n                        self.actionCall('endTestSession');\r\n                        testMetaData.clearData();\r\n                    });\r\n                    },\r\n                    this.testReview ? this.testContext.reviewScope : null\r\n                );\r\n            },\r\n\r\n            /**\r\n             * Set the state of the current item in the test runner\r\n             *\r\n             * @param {string} id\r\n             * @param {object} state\r\n             */\r\n            setCurrentItemState : function(id, state){\r\n                if(id){\r\n                    this.currentItemState[id] = state;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Reset the state of the current item in the test runner\r\n             */\r\n            resetCurrentItemState : function(){\r\n                this.currentItemState = {};\r\n            },\r\n\r\n            /**\r\n             * Get the state of the current item as stored in the test runner\r\n             * @returns {Object}\r\n             */\r\n            getCurrentItemState : function(){\r\n                return this.currentItemState;\r\n            }\r\n        };\r\n\r\n        var config = module.config();\r\n        if (config) {\r\n            actionBarTools.register(config.qtiTools);\r\n        }\r\n\r\n        return {\r\n            start: function (testContext) {\r\n\r\n                $controls = {\r\n                    // navigation\r\n                    $moveForward: $('[data-control=\"move-forward\"]'),\r\n                    $moveEnd: $('[data-control=\"move-end\"]'),\r\n                    $moveBackward: $('[data-control=\"move-backward\"]'),\r\n                    $nextSection: $('[data-control=\"next-section\"]'),\r\n                    $skip: $('[data-control=\"skip\"]'),\r\n                    $skipEnd: $('[data-control=\"skip-end\"]'),\r\n                    $exit: $(window.parent.document).find('[data-control=\"exit\"]'),\r\n                    $logout: $(window.parent.document).find('[data-control=\"logout\"]'),\r\n                    $naviButtons: $('.bottom-action-bar .action'),\r\n                    $skipButtons: $('.navi-box .skip'),\r\n                    $forwardButtons: $('.navi-box .forward'),\r\n\r\n                    // progress bar\r\n                    $progressBar: $('[data-control=\"progress-bar\"]'),\r\n                    $progressLabel: $('[data-control=\"progress-label\"]'),\r\n                    $progressBox: $('.progress-box'),\r\n\r\n                    // title\r\n                    $title:  $('[data-control=\"qti-test-title\"]'),\r\n                    $position:  $('[data-control=\"qti-test-position\"]'),\r\n\r\n                    // timers\r\n                    $timerWrapper:  $('[data-control=\"qti-timers\"]'),\r\n\r\n                    // other zones\r\n                    $contentPanel: $('.content-panel'),\r\n                    $controls: $('.qti-controls'),\r\n                    $itemFrame: $('#qti-item'),\r\n                    $rubricBlocks: $('#qti-rubrics'),\r\n                    $contentBox: $('#qti-content'),\r\n                    $sideBars: $('.test-sidebar'),\r\n                    $topActionBar: $('.horizontal-action-bar.top-action-bar'),\r\n                    $bottomActionBar: $('.horizontal-action-bar.bottom-action-bar')\r\n                };\r\n\r\n                // title\r\n                $controls.$titleGroup = $controls.$title.add($controls.$position);\r\n\r\n                $doc.ajaxError(function (event, jqxhr) {\r\n                    if (jqxhr.status === 403) {\r\n                        iframeNotifier.parent('serviceforbidden');\r\n                    }\r\n                });\r\n\r\n                window.onServiceApiReady = function onServiceApiReady(serviceApi) {\r\n                    TestRunner.serviceApi = serviceApi;\r\n\r\n                    if (!testContext.success) {\r\n                        TestRunner.processError(testContext);\r\n                    }\r\n\r\n                    // If the assessment test session is in CLOSED state,\r\n                    // we give the control to the delivery engine by calling finish.\r\n                    else if (testContext.state === TestRunner.TEST_STATE_CLOSED) {\r\n                        serviceApi.finish();\r\n                        testMetaData.clearData();\r\n                    }\r\n                    else {\r\n\r\n                        if (TestRunner.getSessionStateService().getDuration()) {\r\n                            TestRunner.setTestContext(testContext);\r\n                            TestRunner.initMetadata();\r\n\r\n                            TestRunner.keepItemTimed(TestRunner.getSessionStateService().getDuration());\r\n                            TestRunner.getSessionStateService().restart();\r\n                        } else {\r\n                            TestRunner.update(testContext);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                TestRunner.beforeTransition();\r\n                TestRunner.testContext = testContext;\r\n\r\n                $controls.$skipButtons.click(function () {\r\n                    if (!$(this).hasClass('disabled')) {\r\n                        TestRunner.skip();\r\n                    }\r\n                });\r\n\r\n                $controls.$forwardButtons.click(function () {\r\n                    if (!$(this).hasClass('disabled')) {\r\n                        TestRunner.moveForward();\r\n                    }\r\n                });\r\n\r\n                $controls.$moveBackward.click(function () {\r\n                    if (!$(this).hasClass('disabled')) {\r\n                        TestRunner.moveBackward();\r\n                    }\r\n                });\r\n\r\n                $controls.$nextSection.click(function () {\r\n                    if (!$(this).hasClass('disabled')) {\r\n                        TestRunner.nextSection();\r\n                    }\r\n                });\r\n\r\n                $controls.$exit.click(function (e) {\r\n                    e.preventDefault();\r\n                    TestRunner.exit();\r\n                });\r\n\r\n                $(window).on('resize', _.throttle(function () {\r\n                    TestRunner.adjustFrame();\r\n                    $controls.$titleGroup.show();\r\n                }, 250));\r\n\r\n                $doc.on('loading', function () {\r\n                    iframeNotifier.parent('loading');\r\n                });\r\n\r\n\r\n                $doc.on('unloading', function () {\r\n                    iframeNotifier.parent('unloading');\r\n                });\r\n\r\n                TestRunner.progressUpdater = progressUpdater($controls.$progressBar, $controls.$progressLabel);\r\n\r\n                if (testContext.reviewScreen) {\r\n                    TestRunner.testReview = testReview($controls.$contentPanel, {\r\n                        region: testContext.reviewRegion || 'left',\r\n                        hidden: !TestRunner.hasOption(optionReviewScreen),\r\n                        reviewScope: testContext.reviewScope,\r\n                        preventsUnseen: !!testContext.reviewPreventsUnseen,\r\n                        canCollapse: !!testContext.reviewCanCollapse\r\n                    }).on('jump', function(event, position) {\r\n                        TestRunner.jump(position);\r\n                    }).on('mark', function(event, flag, position) {\r\n                        TestRunner.markForReview(flag, position);\r\n                    });\r\n                    $controls.$sideBars = $('.test-sidebar');\r\n                }\r\n\r\n                TestRunner.updateProgress();\r\n                TestRunner.updateTestReview();\r\n\r\n                iframeNotifier.parent('serviceready');\r\n\r\n\r\n                TestRunner.adjustFrame();\r\n\r\n                $controls.$topActionBar.add($controls.$bottomActionBar).animate({ opacity: 1 }, 600);\r\n\r\n                deleter($('#feedback-box'));\r\n                modal($('body'));\r\n\r\n                //listen to state change in the current item\r\n                $(document).on('responsechange', function(e, responseId, response){\r\n                    if(responseId && response){\r\n                        TestRunner.setCurrentItemState(responseId, {response:response});\r\n                    }\r\n                }).on('stateready', function(e, id, state){\r\n                    if(id && state){\r\n                        TestRunner.setCurrentItemState(id, state);\r\n                    }\r\n                }).on('heightchange', function(e, height) {\r\n                    $controls.$itemFrame.height(height);\r\n                });\r\n\r\n            }\r\n        };\r\n    });\r\n\n"]}