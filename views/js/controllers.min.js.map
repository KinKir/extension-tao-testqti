{"version":3,"sources":["routes.js","creator/areaBroker.js","creator/helpers/baseType.js","creator/helpers/cardinality.js","creator/helpers/outcomeValidator.js","creator/helpers/qtiElement.js","creator/helpers/outcome.js","creator/helpers/category.js","creator/modelOverseer.js","creator/qtiTestCreator.js","../provider/testItems.js","creator/views/item.js","creator/templates/testpart!tpl","creator/templates/section!tpl","creator/templates/rubricblock!tpl","creator/templates/itemref!tpl","creator/templates/outcomes!tpl","tpl!taoQtiTest/controller/creator/templates/test-props","tpl!taoQtiTest/controller/creator/templates/testpart-props","tpl!taoQtiTest/controller/creator/templates/section-props","tpl!taoQtiTest/controller/creator/templates/itemref-props","tpl!taoQtiTest/controller/creator/templates/itemref-props-weight","tpl!taoQtiTest/controller/creator/templates/rubricblock-props","tpl!taoQtiTest/controller/creator/templates/category-presets","creator/templates/index.js","creator/views/property.js","creator/views/actions.js","creator/helpers/categorySelector.js","creator/helpers/sectionCategory.js","creator/helpers/qtiTest.js","creator/views/itemref.js","creator/encoders/dom2qti.js","../../taoQtiItem/qtiItem/helper/util.js","../../taoQtiItem/qtiItem/helper/rendererConfig.js","../../taoQtiItem/qtiItem/core/Element.js","../../taoQtiItem/qtiItem/helper/interactionHelper.js","../../taoQtiItem/qtiRunner/core/Renderer.js","../../taoItems/assets/manager.js","../../taoItems/assets/strategies.js","../../taoQtiItem/portableElementRegistry/factory/factory.js","../../taoQtiItem/qtiCreator/helper/qtiElements.js","../../taoQtiItem/portableElementRegistry/factory/ciRegistry.js","../../taoQtiItem/portableElementRegistry/ciRegistry.js","../../taoQtiItem/portableElementRegistry/factory/icRegistry.js","../../taoQtiItem/portableElementRegistry/icRegistry.js","../../taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy.js","../../taoQtiItem/qtiCommonRenderer/renderers/config.js","../../taoQtiItem/qtiCommonRenderer/renderers/Renderer.js","../../taoQtiItem/qtiCommonRenderer/helpers/container.js","../../taoQtiItem/qtiCreator/helper/commonRenderer.js","../../taoQtiItem/qtiItem/core/qtiClasses.js","../../taoQtiItem/qtiItem/helper/xmlNsHandler.js","../../taoQtiItem/qtiItem/core/Loader.js","../../taoQtiItem/qtiCreator/model/helper/event.js","../../taoQtiItem/qtiCreator/model/helper/invalidator.js","../../taoQtiItem/qtiCreator/model/mixin/editable.js","../../taoQtiItem/qtiItem/core/Container.js","../../taoQtiItem/qtiCreator/model/Container.js","../../taoQtiItem/qtiCreator/model/qtiClasses.js","../../taoQtiItem/qtiCreator/model/helper/container.js","../../taoQtiItem/qtiCreator/model/mixin/editableContainer.js","../../taoQtiItem/qtiItem/core/IdentifiedElement.js","../../taoQtiItem/qtiItem/mixin/Mixin.js","../../taoQtiItem/qtiItem/mixin/Container.js","../../taoQtiItem/qtiItem/mixin/ContainerItemBody.js","../../taoQtiItem/qtiItem/core/Item.js","../../taoQtiItem/qtiItem/core/Stylesheet.js","../../taoQtiItem/qtiCreator/model/Stylesheet.js","../../taoQtiItem/qtiItem/core/ResponseProcessing.js","../../taoQtiItem/qtiCreator/model/ResponseProcessing.js","../../taoQtiItem/qtiItem/core/variables/VariableDeclaration.js","../../taoQtiItem/qtiItem/core/variables/OutcomeDeclaration.js","../../taoQtiItem/qtiCreator/model/variables/OutcomeDeclaration.js","../../taoQtiItem/qtiItem/core/feedbacks/ModalFeedback.js","../../taoQtiItem/qtiCreator/model/feedbacks/ModalFeedback.js","../../taoQtiItem/qtiCreator/model/Item.js","../../taoQtiItem/qtiXmlRenderer/renderers/config.js","../../taoQtiItem/qtiXmlRenderer/renderers/Renderer.js","../../taoQtiItem/qtiItem/helper/response.js","../../taoQtiItem/qtiItem/helper/maxScore.js","../../taoQtiItem/qtiCreator/helper/xmlRenderer.js","../../taoQtiItem/qtiItem/helper/simpleParser.js","../../taoQtiItem/qtiCreator/renderers/config.js","../../taoQtiItem/qtiCreator/renderers/Renderer.js","../../taoQtiItem/qtiCreator/helper/creatorRenderer.js","../../taoQtiItem/qtiItem/helper/xincludeLoader.js","../../taoQtiItem/qtiCreator/helper/xincludeRenderer.js","../../taoQtiItem/qtiCreator/editor/gridEditor/config.js","../../taoQtiItem/qtiCreator/editor/gridEditor/helper.js","../../taoQtiItem/qtiCreator/editor/gridEditor/resizable.js","../../taoQtiItem/qtiCreator/widgets/helpers/textWrapper.js","../../taoQtiItem/qtiCreator/editor/gridEditor/content.js","../../taoQtiItem/qtiCreator/helper/ckConfigurator.js","../../taoQtiItem/qtiCreator/widgets/helpers/content.js","../../taoQtiItem/qtiCreator/tpl/notifications/deletingInfoBox!tpl","../../taoQtiItem/qtiCreator/widgets/helpers/deletingState.js","../../taoQtiItem/qtiCreator/editor/ckEditor/htmlEditor.js","../../taoQtiItem/qtiCreator/editor/containerEditor.js","creator/qtiContentCreator.js","creator/views/rubricblock.js","creator/helpers/sectionBlueprints.js","creator/views/section.js","creator/views/testpart.js","creator/views/test.js","creator/helpers/processingRule.js","creator/helpers/scoring.js","creator/creator.js","creator/helpers/ckConfigurator.js","../testRunner/actionBarHook.js","../testRunner/actionBarTools.js","../testRunner/tpl/navigator!tpl","../testRunner/tpl/navigatorTree!tpl","../testRunner/testReview.js","../testRunner/progressUpdater.js","../testRunner/testMetaData.js","../../serviceApi/ServiceApi.js","../../serviceApi/UserInfoService.js","../../serviceApi/StateStorage.js","runtime/testRunner.js"],"names":["define","Creator","css","actions","index","_","areaBroker","requireAreas","partial","baseTypeEnum","IDENTIFIER","BOOLEAN","INTEGER","FLOAT","STRING","POINT","PAIR","DIRECTED_PAIR","DURATION","FILE","URI","INT_OR_IDENTIFIER","COORDS","ANY","SAME","baseTypeHelper","asArray","getValid","type","defaultType","isFinite","getNameByConstant","getConstantByName","isUndefined","getValue","value","isString","toLowerCase","parseInt","parseFloat","isNaN","name","String","trim","constant","operator","assign","cardinalityEnum","SINGLE","MULTIPLE","ORDERED","RECORD","cardinalityHelper","cardinality","defaultCardinality","validateIdentifier","identifier","identifierValidator","test","validateOutcome","outcome","checkIdentifier","allowedTypes","validOutcome","isPlainObject","validIdentifier","isArray","indexOf","validateOutcomes","outcomes","valid","forEach","outcomeValidator","forceArray","qtiElementHelper","create","properties","element","qti-type","TypeError","find","collection","checkType","qtiElement","types","found","lookupElement","tree","path","nodeName","key","steps","split","nodeNames","len","length","i","has","lookupProperty","result","propertyName","pop","outcomeHelper","getProcessingRuleExpression","outcomeRule","getProcessingRuleProperty","getOutcomeIdentifier","isObject","getOutcomeDeclarations","testModel","outcomeDeclarations","getOutcomeProcessingRules","rules","outcomeProcessing","outcomeRules","eachOutcomeDeclarations","cb","eachOutcomeProcessingRules","eachOutcomeProcessingRuleExpressions","browseExpressions","processingRule","expression","expressions","listOutcomes","isFunction","push","removeOutcomes","check","declarations","indexBy","remove","createOutcome","views","interpretation","longInterpretation","normalMaximum","normalMinimum","masteryValue","baseType","addOutcomeProcessing","addOutcome","replaceOutcomes","concat","isCategoryOption","category","eachCategories","testParts","testPart","assessmentSections","assessmentSection","sectionParts","itemRef","categories","listCategories","keys","listOptions","options","eventifier","statifier","categoryHelper","modelOverseerFactory","model","config","modelOverseer","getModel","setModel","newModel","trigger","this","getConfig","getOutcomesList","map","declaration","getOutcomesNames","getCategories","getOptions","$","areaBrokerFactory","testCreatorFactory","$creatorContainer","loadModelOverseer","loadAreaBroker","$container","creator","itemSelectorPanel","contentCreatorPanel","propertyPanel","elementPropertyPanel","testCreator","setTestModel","m","getAreaBroker","getModelOverseer","__","urlUtil","request","defaultConfig","getItemClasses","url","route","getItems","getItemClassProperties","defaults","params","classUri","loggerFactory","testItemProviderFactory","resourceSelector","feedback","logger","testItemProvider","onError","err","error","message","selectorConfig","selectionMode","selectionModes","multiple","then","classes","uri","filters","on","self","clearSelection","items","update","catch","updateFilters","values","hb","template","Handlebars","depth0","helpers","partials","data","compilerInfo","merge","stack1","helper","buffer","functionType","escapeExpression","call","hash","helperMissing","title","href","label","program1","each","inverse","noop","fn","program","program2","program4","modes","program5","selected","program3","description","scoring","hasBlueprint","orderIndex","groupId","groupLabel","presets","qtiCategory","id","section","rubricBlock","testProps","testPartProps","sectionProps","itemRefProps","itemRefPropsWeight","rubricBlockProps","categoryPresets","testpart","itemref","rubricblock","itemrefweight","categorypresets","ui","DataBinder","templates","propView","tmplName","propValidation","$togglers","$view","e","isValid","namespace","removeClass","addClass","groupValidator","open","databinder","binderOptions","children","hide","appendTo","filter","startDomComponent","bind","getView","isOpen","onOpen","stopPropagation","onClose","destroy","toggle","not","show","propertyView","preventDefault","$elt","hasClass","disabledClass","blur","activeClass","btnOnClass","move","$actionContainer","containerClass","elementClass","$element","parents","click","$elements","is","fadeOut","insertBefore","fadeIn","insertAfter","movable","actionContainerElt","$moveUp","$moveDown","removable","$delete","disable","enable","tooltip","categorySelectorFactory","updateCategories","selectedCategories","indeterminatedCategories","presetSelected","toArray","categoryEl","presetIndeterminate","customSelected","$customCategoriesSelect","siblings","textContent","customIndeterminate","categorySelector","$presetsCheckboxes","$presetsContainer","createForm","currentCategories","presetsTpl","customCategories","difference","allQtiCategoriesPresets","append","allPresets","$checkbox","$preset","target","closest","prop","defer","select2","width","tags","tokenSeparators","formatNoMatches","maximumInputLength","updateFormState","indeterminate","checked","$li","content","text","extractCategoriesFromPresets","reduce","prev","current","groupIds","pluck","setPresets","errorHandler","isValidSectionModel","setCategories","toRemove","toAdd","all","propagated","addCategories","removeCategories","arrays","union","compact","apply","intersection","sort","throw","_ns","qtiTestHelper","extractIdentifiers","obj","identifiers","flatten","getIdentifier","qtiType","lockedIdentifiers","suggestion","glue","contains","idFormatValidator","qtiIdPattern","validate","callback","testidFormatValidator","qtiTestIdPattern","idAvailableValidator","original","filterQtiType","addMissingQtiType","parentType","isNumber","replace","consolidateModel","ordering","undefined","shuffle","part","rubricBlocks","validateModel","feedbackBlock","outcomeIdentifier","Error","sectionCategory","setUp","creatorContext","refModel","sectionModel","$itemRef","propHandler","removePropHandler","categoriesProperty","weightsProperty","$categoryField","val","join","$weightList","weightTpl","defaultData","weights","itemSessionControl","resize","listenActionState","document","$parent","$target","throttle","$refs","first","$actions","innerWidth","outerWidth","getAttributes","object","omit","attrToStr","attributes","acc","isBoolean","isEmpty","normalizeNodeName","normalized","toLocaleLowerCase","normalizedNodes","feedbackblock","outcomeidentifier","showhide","printedvariable","powerform","mappingindicator","typedAttributes","printedVariable","powerForm","base","delimiter","field","mappingIndicator","encode","modelValue","startTag","decode","nodeValue","$nodeValue","elt","nodeType","xmlBase","class","lang","transform","attrName","childNodes","util","buildSerial","prefix","chars","charAt","Math","floor","random","buildId","item","usedIds","suffix","exists","getUsedIds","buildIdentifier","useSuffix","getUsedIdentifiers","findInCollection","collectionNames","searchedSerial","collectionName","nameToken","parent","addMarkupNamespace","markup","ns","$0","$1","$2","$3","$4","removeMarkupNamespaces","getMarkupUsedNamespaces","namespaces","slash","node","uniq","rendererConfigHelper","getOptionsFromArguments","args","placeholder","subclass","renderer","arg","isRenderer","console","log","Class","rendererConfig","_instances","Element","extend","qtiClass","serial","rootElement","init","metaData","match","setAttributes","initContainer","arguments","initObject","getSerial","elts","getComposingElements","attr","removeData","removeAttr","removeAttributes","warn","clone","attrNames","getBody","getObject","v","isA","getUsedClasses","ret","composingElts","body","location","getRootElement","setRelatedItem","setRootElement","getRelatedItem","setRenderer","getRenderer","render","rendering","_renderer","tplData","tag","resolveUrl","getData","renderTpl","replaceWith","postRender","altClassName","postRenderers","getContainer","$scope","arr","className","clazz","_containClass","regex","RegExp","toggleClass","state","isset","issetElement","unset","unsetElement","allClassStr","getElementBySerial","composingElements","convertChoices","choices","outputType","_this","c","findChoices","interaction","inputType","choice","getChoice","getChoiceByIdentifier","shuffleChoices","r","f","j","n","k","tmp","serialToIdentifier","choiceSerial","Promise","interactionHelper","themeLoader","getDocumentBaseUrl","window","protocol","host","pathname","_isValidRenderer","classCorrect","_renderableClasses","pos","slice","subClass","_renderableSubclasses","_dependencies","assessmentItem","associateInteraction","choiceInteraction","gapMatchInteraction","graphicAssociateInteraction","graphicGapMatchInteraction","graphicOrderInteraction","hotspotInteraction","hottextInteraction","inlineChoiceInteraction","matchInteraction","orderInteraction","simpleAssociableChoice","simpleChoice","_defaults","Renderer","registerRendererClass","list","success","_locations","_renderers","shuffledChoices","_getClassRenderer","setOption","setOptions","opts","getOption","getCustomMessage","elementName","messageKey","messages","compile","getAssetManager","assetManager","getThemeLoader","qtiSubclass","res","decorators","before","after","renderDirect","tpl","setResponse","qtiInteraction","response","getResponse","resetResponse","getState","setState","getLoadedRenderers","register","renderersLocations","load","requiredClasses","required","themes","available","theme","reqClass","deps","requiredSubClasses","require","unload","setShuffledChoices","identificationType","getShuffledChoices","reshuffle","returnedType","getChoices","getRenderers","getLocations","resolve","getAbsoluteUrl","relUrl","absUrl","runtimeLocations","size","forIn","runtimeLocation","typeIdentifier","baseUrl","setAreaBroker","_areaBroker","getItemCreator","build","defaultOptions","NewRenderer","prototype","checkStrategy","strategy","handle","assetManagerFactory","strategies","cache","parseUrl","_strategies","addStrategy","prependStrategy","unshift","setStrategies","newStrategies","setData","resolved","inputUrl","hasOwnProperty","parse","resolveBy","clearCache","prependToUrl","slashcat","directory","encodeURIComponent","file","isRelative","itemCssNoCache","bust","Date","now","external","isAbsolute","toString","base64","isBase64","taomedia","_requirejs","_defaultLoadingOptions","reload","enabledOnly","runtimeOnly","loadModuleConfig","manifest","reject","requireConfigAliases","reqConfigs","modules","runtime","pciConfig","paths","runtimeModules","conf","methods","_loaded","__providers","_registry","get","version","last","registerProvider","moduleName","resetProviders","loadProviders","providerLoadingStack","provider","shift","getAllVersions","versions","getRuntime","pci","getCreator","xmlns","getBaseUrl","loadRuntimes","loadPromise","loadStack","results","configLoadingStack","_pcis","moduleConfigs","loadCreators","requiredCreatorHooks","requiredCreators","pciModel","hook","enabled","creators","creatorHook","getTypeIdentifier","findIndex","module","isEnabled","QtiElements","itemBody","abstract","atomicBlock","atomicInline","simpleBlock","simpleInline","flowStatic","blockStatic","inlineStatic","flow","tableCell","caption","xhtml","col","colgroup","div","dl","dt","dd","hr","math","li","ol","ul","param","table","tbody","tfoot","thead","td","th","tr","a","abbr","acronym","b","big","cite","code","dfn","em","kbd","q","samp","small","span","strong","sub","sup","tt","var","blockquote","address","h1","h2","h3","h4","h5","h6","p","pre","img","br","infoControl","qti","textRun","feedbackInline","blockInteraction","inlineInteraction","gap","hottext","prompt","templateElement","templateBlock","templateInline","mediaInteraction","sliderInteraction","uploadInteraction","drawingInteraction","graphicInteraction","selectPointInteraction","textEntryInteraction","extendedTextInteraction","endAttemptInteraction","customInteraction","_container","containable","getAllowedContainersElements","getAllowedContainers","jqSelector","substring","getParentClasses","aClass","intersect","getChildClasses","getAllowedContents","recursive","contain","child","isAllowedClass","qtiContainerClass","qtiContentClass","allowedClasses","cacheType","isBlock","isInline","topClass","getAvailableAuthoringElements","icon","short","portableElementRegistry","qtiElements","getAuthoringData","ciRegistry","registry","providers","icRegistry","getBaseUrlByIdentifier","source","relative","fullmatch","relPath","context","assetStrategies","portableAssetStrategy","itemThemes","moduleConfig","root_url","locations","_simpleFeedbackRule","_tooltip","stylesheet","outcomeDeclaration","responseDeclaration","responseProcessing","modalFeedback","simpleChoice.choiceInteraction","simpleChoice.orderInteraction","gapText","simpleAssociableChoice.matchInteraction","simpleAssociableChoice.associateInteraction","inlineChoice","hotspotChoice","gapImg","associableHotspot","include","enableDragAndDrop","associate","associateDragAndDrop","gapMatch","gapMatchDragAndDrop","graphicGapMatch","graphicGapMatchDragAndDrop","order","orderDragAndDrop","_containers","_$containerContext","_getSelector","selector","containerHelper","setContext","reset","clear","eventType","triggerResponseChangeEvent","extraData","targetBlank","_$previousContext","commonRenderer","$context","restoreContext","qtiClasses","done","getPrefix","html5Ns","prefixed","stripNs","pattern","openRegEx","closeRegEx","restoreNs","xml","tagMatch","xmlRe","tagRe","xmlMatch","imsXsd","prefixAtt","xmlNsHandler","loadPortableCustomElementData","portableElement","entryPoint","libraries","setNamespace","loadPortableCustomElementProperties","rawProperties","forOwn","JSON","Loader","classesLocation","setClassesLocation","getRequiredClasses","loadRequiredClasses","requiredClass","QtiClass","getLoadedClasses","loadItemData","Qti","loadContainer","buildOutcome","addOutcomeDeclaration","feedbacks","buildElement","addModalFeedback","stylesheets","addStylesheet","responses","buildResponse","addResponseDeclaration","feedbackRules","fbData","buildSimpleFeedbackRule","setResponseProcessing","buildResponseProcessing","setNamespaces","setSchemaLocations","schemaLocations","setApipAccessibility","apipAccessibility","loadAndBuildElement","loadElement","loadElementData","loadElements","allElements","elementData","howMatch","defaultValue","correctResponse","correctResponses","mapping","mapEntries","areaMapping","mappingAttributes","feedbackRule","setCondition","condition","comparedValue","feedbackOutcome","feedbackThen","modalFeedbacks","feedbackElse","comparedOutcome","rp","processingType","bodyObject","bodyData","elements","eltData","setElement","bdy","loadObjectData","loadInteractionData","loadChoiceData","loadMathData","loadPicData","loadTooltipData","buildInteractionChoices","loadPciData","set","matchSet","addChoice","gapImgs","addGapImg","_alt","setMathML","mathML","annotations","encoding","setAnnotation","pic","_ns_model","eventList","event","choiceCreated","deleted","off","getList","addedNamespace","events","initElementToWidgetListeners","container","widget","getNs","getNsModel","invalidator","completelyValid","invalidElements","invalid","stateName","entity","_removeSelf","removed","related","removeGapImg","removeChoice","beforeRemove","removeElement","_removeElement","containerPropName","eltToBeRemoved","targetElt","targetSerial","getDefaultAttributes","_super","Container","setElements","returnValue","getElements","getElement","elementsData","contentModel","editable","afterCreate","createElements","qtiClassElt","newElts","newBody","$doc","IdentifiedElement","augment","targetClass","methodName","Object","_parent","Mixin","Item","getInteractions","interactions","getResponseDeclaration","getOutcomeDeclaration","getOutcomes","removeOutcome","elementCollection","getResponses","addNamespace","getNamespaces","getSchemaLocations","apip","getApipAccessibility","removeStyleSheet","stylesheetExists","$dummy","html","$children","Stylesheet","media","ResponseProcessing","setProcessingType","setTemplate","VariableDeclaration","setDefaultValue","getDefaultValue","OutcomeDeclaration","ModalFeedback","showHide","editableContainer","adaptive","timeDependent","xml:lang","createResponseProcessing","createStyleSheet","createOutcomeDeclaration","createModalFeedback","deleteResponseDeclaration","rule","_templateNames","MATCH_CORRECT","MAP_RESPONSE","MAP_RESPONSE_POINT","NONE","isUsingTemplate","isValidTemplateName","tplName","getTemplateUriFromName","getTemplateNameFromUri","tplUri","gamp","responseHelper","_ignoreMinChoice","pairExists","pair","setNormalMaximum","scoreOutcome","interactionMaxScore","getNormalMaximum","add","setMaxScore","customOutcomes","maxScore","maxScoreOutcome","hasInvalidInteraction","getMatchMaxOrderedChoices","choiceCollection","matchMax","Infinity","sortBy","reverse","valueOf","choiceInteractionBased","max","maxChoice","minChoice","scoreMaps","requiredChoiceCount","totalAnswerableResponse","sortedMapEntries","missingMapsCount","mapDefault","maxChoices","minChoices","times","score","upperBound","min","orderInteractionBased","associateInteractionBased","requiredAssoc","usedChoices","choicesIdentifiers","allPossibleMapEntries","infiniteScoringPair","maxAssoc","minAssoc","possiblePairs","checkInfinitePair","countBy","count","forEachRight","mapEntry","choiceId","_usedChoices","cloneDeep","used","gapMatchInteractionBased","skippableWrongResponse","usedGaps","group1","group2","calculatePossiblePairs","pairs","matchSet1","matchSet2","getGaps","choice1","choice2","gapId","selectPointInteractionBased","mappedValue","sliderInteractionBased","textEntryInteractionBased","isPossibleResponse","patternMask","XmlRenderer","_xmlRenderer","_render","_getElementSelector","getQtiClassFromXmlDom","$node","_qtiClassNames","specified","_qtiAttributesNames","buildMath","$annotation","unescape","buildTooltip","targetHtml","contentId","contentHtml","aria-describedby","parseContainer","_parsableElements","$qtiElement","_placeholder","$content","parser","_defaultOptions","loaded","xmlStr","loader","commonRenderConfig","dom","_creatorRenderer","_configurableInteractions","_extractInteractionsConfig","interactionName","$bodyEltForm","itemOptionForm","interactionOptionForm","choiceOptionForm","responseOptionForm","bodyElementOptionForm","getElementPropertyPanelArea","textOptionForm","modalFeedbackOptionForm","mediaManager","appendContainer","browseUrl","getFilesUrl","uploadUrl","fileUploadUrl","deleteUrl","fileDeleteUrl","downloadUrl","fileDownloadUrl","fileExistsUrl","mediaSourcesUrl","qtiCreatorContext","getCreatorContext","simpleParser","xinclude","stimulusXml","$wrapper","$sampleXMLrootNode","$stimulus","mathNs","loadedClasses","xincludeLoader","xincludeWidget","newHref","xi","refresh","getColUnits","cssClasses","colMatch","setUnitsFromClass","$el","units","_syncHandleHeight","$row","h","height","_createResizables","marginWidth","activeWidth","$col","$nextCol","next","offset","nextMin","unitWidth","activeHeight","$activeZone","top","right","$handle","_syncOutlineHeight","draggable","containment","left","axis","cursor","start","$overlay","border-right-width","drag","nextUnits","_setColUnits","stop","_deleteResizables","newUnits","oldUnits","$parentRow","totalUnits","preserveGlobalEvents","syncHandleHeight","getSelection","selection","createRange","containElement","range","commonAncestorContainer","selectedChildNodes","cloneContents","wrapSelection","wrap","sel","rangeCount","getRangeAt","cloneRange","startOffset","endOffset","surroundContents","removeAllRanges","addRange","unwrapSelection","$editable","textWrapper","wrappedText","unwrap","resizable","contentHelper","getContent","inner","$body","destroyGridWidgets","serializeElements","getChangeCallback","$pseudoContainer","getChangeCallbackForBlockStatic","contents","wrapInner","existingElements","$qtiElementWidget","inClone","ckConfigurator","mathJax","qtiImage","qtiMedia","qtiInclude","underline","editor","toolbarType","creatorRenderer","gridContentHelper","$placeholder","$widget","$original","changeInnerWidgetState","outerWidget","innerWidget","changeState","equal","deletingInfoTpl","_timeout","_destroy","$messageBox","undo","_bindEvents","ctrlKey","metaKey","keyCode","_confirmDeletion","setTimeout","fadeDelay","deletingHelper","createInfoBox","widgets","display","position","margin-left","zIndex","w","CKEditor","_buildEditor","$editableContainer","ckConfig","$toolbarArea","getToolbarArea","dtdMode","autoParagraph","removePlugins","enterMode","ENTER_P","floatSpaceDockedOffsetY","sharedSpaces","taoQtiItem","insert","tempWidget","$newContent","_htmlEncode","createdWidget","createdElement","rebuild","_activateInnerWidget","instanceReady","debounce","_detectWidgetDeletion","change","leading","managePlaceholder","_rebuildWidgets","restoreState","shieldInnerContent","_shieldInnerContent","autofocus","_focus","focus","configLoaded","toolbar","getTooltypeFromContainer","highlight","afterPaste","inline","togglePlaceholder","nonEmptyContent","removePlaceholder","placeholderClass","_find","dataAttribute","$collection","currentState","getCurrentState","ready","_findWidgetContainer","undoCmd","getCommand","resetUndo","undoManager","addShield","$shield","containerWidget","listenToWidgetCreation","one","targetWidget","delay","encodedStr","parentNode","moveToElementEditablePosition","selectRanges","editorFactory","passthroughInnerContent","disableAutoInline","hasEditor","buildEditor","editorOptions","buildTasks","destroyEditor","destructTasks","focusManager","escape","allQtiClasses","xmlRenderer","xincludeRenderer","htmlEditor","htmls","markupSelector","extractHtmlFromMarkup","containerEditors","metadata","resetRenderer","buildContainer","editorContent","data-html-editable","cleanup","createFakeWidget","markupStr","$found","uuid","qtiCommonRenderer","containerEditor","editorId","getContentCreatorPanelArea","hider","dialogAlert","namespaceHelper","Dom2QtiEncoder","qtiContentCreator","rubricModel","$rubricBlock","bindEvent","eventName","namespaceAll","uid","ensureWrap","editorToModel","rubric","wrapper","modelToEditor","$rubricBlockContent","updateFeedback","activated","matchValue","changeFeedback","$feedbackOutcomeLine","$feedbackMatchLine","changeHandler","changedModel","updateOutcomes","$feedbackOutcome","minimumResultsForSearch","$feedbackActivated","rbViews","$propContainer","$select","uniqueId","changedRubricBlock","getPropertyPanelArea","CKEDITOR","getWindow","fire","setBlueprint","blueprint","getBlueprint","getUrl","ajax","dataType","fail","itemRefView","rubricBlockView","sectionBlueprint","partModel","$section","$title","$selectionSwitcher","$selectionSelect","$selectionWithRep","switchSelection","incrementer","blueprintProperty","itemRefs","labels","acceptItemRefs","$itemsPanel","$placeholders","defaultItemData","maxAttempts","itemData","addItemRef","itemRefModel","$refList","$items","eq","addRubricBlock","adder","templateData","initBlueprint","routes","blueprintByTestSection","blueprintsById","method","minimumInputLength","allowClear","$sections","sectionView","$testPart","$identifier","sections","addSection","sectionIndex","$testParts","testPartView","testView","changeScoring","noOptions","newScoringState","stringify","$cutScoreLine","$categoryScoreLine","$weightIdentifierLine","$descriptions","scoringState","$panel","$generate","addTestPart","testPartIndex","navigationMode","submissionMode","added","unaryOperator","processingRuleHelper","minOperands","maxOperands","addTypeAndCardinality","binaryOperator","acceptedCardinalities","acceptedBaseTypes","includeCategories","excludeCategories","addSectionIdentifier","sectionIdentifier","addWeightIdentifier","weightIdentifier","validateOutcomeList","setExpression","addExpression","setOutcomeValue","gte","lte","divide","sum","terms","testVariables","variableIdentifier","outcomeMaximum","numberPresented","baseValue","variable","isNull","outcomeCondition","outcomeIf","outcomeElse","outcomeElseIfs","instruction","format","addTotalScoreOutcomes","weight","scoreIdentifier","addMaxScoreOutcomes","addRatioOutcomes","identifierTotal","identifierMax","addCutScoreOutcomes","countIdentifier","cutScore","addGlobalCutScoreOutcomes","ratioIdentifier","addFeedbackScoreOutcomes","passed","notPassed","formatCategoryOutcome","toUpperCase","belongToRecipe","recipe","onlyCategories","signature","weighted","matchRecipe","outcomeRecipe","matchRecipeOutcome","outcomeMatch","categoryIdentifier","categoryWeighted","categoryFeedback","outcomesRecipes","signatures","getSignatures","signatureMatch","getRecipes","descriptors","getOutcomesRecipe","mode","processingRecipe","listScoringModes","handleCategories","categoryScore","hasCategoryOutcome","categoryOutcomes","getCutScore","defaultCutScore","getWeightIdentifier","getOutcomeProcessing","included","processing","diff","detectScoring","processingModes","defaultScoreIdentifier","removeScoring","scoringOutcomes","none","custom","total","cut","clean","writer","scoreWeighted","feedbackOk","feedbackFailed","outcomesWriters","ratio","descriptor","totalModeOutcomes","whichOutcome","categoryOutcome","categoryOutcomeIdentifier","categoryScoreIdentifier","categoryCountIdentifier","scoringHelper","generate","recipes","DataBindController","qtiTestCreatorFactory","itemView","itemrefView","validators","Controller","binder","$saver","categoriesPresets","history","back","isItemRef","isSection","encoders","dom2qti","beforeSave","takeControl","save","isValidConfig","toolconfig","triggerItemLoaded","tool","itemLoaded","initQtiTool","$toolsContainer","testContext","testRunner","itemIsLoaded","tools","$button","$existingBtn","isValidHook","isVisible","_appendInOrder","$after","$before","prepend","$btn","_order","actionBarHook","registeredQtiTools","qtiTools","actionBarTools","registerTools","getRegisteredTools","getRegistered","isRegistered","promises","getId","region","hidden","active","program29","program6","program7","answered","program8","program9","flagged","program11","program13","viewed","program17","program15","program21","program19","program24","program22","program27","program25","itemId","parts","navigatorTpl","navigatorTreeTpl","capitalize","_cssCls","collapsed","collapsible","disabled","unseen","scope","testSection","_selectors","component","filterBar","collapseHandle","linearState","infoAnswered","infoViewed","infoUnanswered","infoFlagged","infoPanel","infoPanelLabels","partLabels","sectionLabels","itemLabels","itemIcons","icons","linearStart","counters","actives","collapsiblePanels","notFlagged","notAnswered","_filterMap","unanswered","filtered","_optionsMap","reviewScope","reviewPreventsUnseen","canCollapse","_reviewScopes","testReview","initOptions","putOnRight","insertMethod","currentFilter","$component","_loadDOM","_initEvents","_updateDisplayOptions","$infoAnswered","$infoViewed","$infoUnanswered","$infoFlagged","$filterBar","$filters","$tree","$linearState","_openSelected","_togglePanel","_openOnly","$item","_mark","_select","_jump","_filter","criteria","_updateSectionCounters","jquery","hierarchy","parentsUntil","opened","root","panel","collapseSelector","_setItemIcon","_adjustItemIcon","defaultIcon","iconCls","cls","_toggleFlag","flag","itemPosition","$filtered","nb","_writeCount","scopeClass","$root","_updateOptions","optionKey","contextKey","_updateInfos","progression","Number","$place","_getProgressionOfTest","numberItems","numberCompleted","numberFlagged","_getProgressionOfTestPart","numberItemsPart","numberCompletedPart","numberPresentedPart","numberFlaggedPart","_getProgressionOfTestSection","numberItemsSection","numberCompletedSection","numberPresentedSection","numberFlaggedSection","_updateTree","navigatorMap","reviewScopePart","reviewScopeSection","_partsFilter","preventsUnseen","empty","setItemFlag","updateNumberFlagged","fields","currentPosition","currentFound","currentSection","currentPart","itemFound","itemSection","itemPart","getProgression","progressInfoMethod","extraParameters","testReviewFactory","progressUpdaters","progressBar","progressLabel","progressbar","write","progressIndicator","progressIndicatorMethod","percentageProgression","positionProgression","progressScope","progressIndicatorScope","progressScopeCounter","counter","progressUpdaterFactory","updater","testMetaDataFactory","_testServiceCallId","testServiceCallId","testMetaData","getLocalStorageData","setLocalStorageData","currentKey","getLocalStorageKey","localStorage","setItem","domException","removeItem","getItem","_storageKeyPrefix","_data","SECTION_EXIT_CODE","COMPLETED_NORMALLY","QUIT","COMPLETE_TIMEOUT","TIMEOUT","FORCE_QUIT","IN_PROGRESS","ERROR","TEST_EXIT_CODE","COMPLETE","TERMINATED","INCOMPLETE","INCOMPLETE_QUIT","INACTIVE","CANDIDATE_DISAGREED_WITH_NDA","getTestServiceCallId","setTestServiceCallId","addData","overwrite","clearData","UrlParser","ServiceApi","parameters","serviceCallId","stateStorage","userService","paused","connected","hasBeenPaused","SIG_SUCCESS","SIG_ERROR","loadInto","frame","$frame","callUrl","getCallUrl","isCORSAllowed","checkCORS","connect","contentWindow","__knownParent__","onServiceApiReady","getUserPropertyValues","property","getServiceCallId","getHasBeenPaused","setHasBeenPaused","getParameter","onFinish","onFinishCallback","onKill","onKillCallback","onExit","onExitCallback","kill","exit","finish","valueArray","UserInfoService","requestUrl","service","StateStorage","submitUrl","progressUpdater","iframeNotifier","MathJax","deleter","moment","modal","timerIds","currentTimes","lastDates","timeDiffs","waitingTime","$timers","$controls","timerIndex","sessionStateService","optionNextSection","optionNextSectionWarning","optionReviewScreen","optionEndTestWarning","optionNoExitTimedSectionWarning","TestRunner","TEST_STATE_INITIAL","TEST_STATE_INTERACTING","TEST_STATE_MODAL_FEEDBACK","TEST_STATE_SUSPENDED","TEST_STATE_CLOSED","TEST_NAVIGATION_LINEAR","TEST_NAVIGATION_NONLINEAR","TEST_ITEM_STATE_INTERACTING","beforeTransition","disableGui","$itemFrame","$rubricBlocks","$timerWrapper","afterTransition","enableGui","ITEM","ITEM_START_TIME_CLIENT","jump","action","isJumpOutOfSection","isCurrentItemActive","isTimedSection","exitTimedSection","killItemSession","actionCall","keepItemTimed","duration","markForReview","markForReviewUrl","async","itemFlagged","updateTools","moveForward","doExitSection","isTimeout","exitSection","itemPositionSection","shouldDisplayEndTestWarning","displayEndTestWarning","isLast","hasOption","nextAction","confirmLabel","cancelLabel","showItemCount","displayExitMessage","moveBackward","jumpPosition","getCurrentSectionItems","isJumpToOtherSection","isValidPosition","exitCode","SECTION","qtiRunner","getQtiRunner","doExitTimedSection","updateItemApi","keepTimerUpToTimeout","nextSection","doNextSection","scopeSuffixMap","scopeSuffix","$confirmBox","unansweredCount","flaggedCount","isCurrentItemAnswered","ITEM_END_TIME_CLIENT","ITEM_TIMEZONE","utcOffset","itemServiceApi","itemSessionState","getCurrentItemState","option","itemFrame","getElementById","itemWindow","itemContainerFrame","itemContainerWindow","timeConstraints","qtiClassName","sectionItems","partId","testPartId","navMap","partIndex","skip","doSkip","timeout","updateTimer","confirmBox","confirmBtn","setTestContext","eval","itemServiceApiCall","initMetadata","getSessionStateService","accuracy","$runner","restart","updateContext","updateProgress","updateNavigation","updateTestReview","updateInformation","updateRubrics","updateExitButton","resetCurrentItemState","$contentBox","adjustFrame","visibility","itemIdentifier","showSkip","showSkipEnd","showNextSection","allowSkipping","$skip","$skipEnd","$nextSection","createTimer","cst","$timer","$label","$time","formatTime","seconds","hasTimers","clearTimeout","$topActionBar","allowLateSubmission","timerWarning","warnings","showed","point","closestPreviousWarning","setInterval","getTime","round","clearInterval","warning","findLast","timeWarning","remaining","humanize","rubrics","prependTo","Hub","Queue","$exit","$moveForward","$moveEnd","$moveBackward","canMoveBackward","considerProgress","$progressBox","testTitle","sectionText","isDeepestSectionVisible","sectionTitle","$position","$titleGroup","$logout","logoutButton","exitButton","frameContentHeight","rubricHeight","outerHeight","finalHeight","innerHeight","$bottomActionBar","$sideBars","$sideBar","$naviButtons","hideGui","showGui","totalSeconds","sec_num","hours","minutes","time","processError","serviceApi","extraParams","TEST","setCurrentItemState","currentItemState","$skipButtons","$forwardButtons","$progressBar","$progressLabel","$contentPanel","ajaxError","jqxhr","status","getDuration","reviewScreen","reviewRegion","reviewCanCollapse","animate","opacity","responseId"],"mappings":"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","file":"routes.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('taoQtiTest/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Creator': {\n            'css': 'creator', \n            'actions': {\n                'index' : 'controller/creator/creator'\n            }\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technlogies SA\n *\n */\n\n/**\n *\n * Defines the test creator areas\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/areaBroker',[\n    'lodash',\n    'core/areaBroker'\n], function (_, areaBroker) {\n    'use strict';\n\n    var requireAreas = [\n        'creator',\n        'itemSelectorPanel',\n        'contentCreatorPanel',\n        'propertyPanel',\n        'elementPropertyPanel'\n    ];\n\n    /**\n     * Creates an area broker with the required areas for the item creator\n     *\n     * @see core/areaBroker\n     *\n     * @param {jQueryElement|HTMLElement|String} $container - the main container\n     * @param {Object} mapping - keys are the area names, values are jQueryElement\n     * @returns {broker} the broker\n     * @throws {TypeError} without a valid container\n     */\n    return _.partial(areaBroker, requireAreas);\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * The BaseType enumeration (port of \\qtism\\common\\enums\\BaseType).\n *\n * From IMS QTI:\n *\n * A base-type is simply a description of a set of atomic values (atomic to this specification).\n * Note that several of the baseTypes used to define the runtime data model have identical\n * definitions to those of the basic data types used to define the values for attributes\n * in the specification itself. The use of an enumeration to define the set of baseTypes\n * used in the runtime model, as opposed to the use of classes with similar names, is\n * designed to help distinguish between these two distinct levels of modelling.\n *\n * @author Jérôme Bogaerts <jerome@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/baseType',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * The list of QTI base types\n     * @type {Object}\n     */\n    var baseTypeEnum = {\n        /**\n         * From IMS QTI:\n         *\n         * The set of identifier values is the same as the set of values\n         * defined by the identifier class.\n         *\n         * @type {Number}\n         */\n        IDENTIFIER: 0,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of boolean values is the same as the set of values defined\n         * by the boolean class.\n         *\n         * @type {Number}\n         */\n        BOOLEAN: 1,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of integer values is the same as the set of values defined\n         * by the integer class.\n         *\n         * @type {Number}\n         */\n        INTEGER: 2,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of float values is the same as the set of values defined by the\n         * float class.\n         *\n         * @type {Number}\n         */\n        FLOAT: 3,\n\n        /**\n         * From IMS QTI:\n         *\n         * The set of string values is the same as the set of values defined by the\n         * string class.\n         *\n         * @type {Number}\n         */\n        STRING: 4,\n\n        /**\n         * From IMS QTI:\n         *\n         * A point value represents an integer tuple corresponding to a graphic point.\n         * The two integers correspond to the horizontal (x-axis) and vertical (y-axis)\n         * positions respectively. The up/down and left/right senses of the axes are\n         * context dependent.\n         *\n         * @type {Number}\n         */\n        POINT: 5,\n\n        /**\n         * From IMS QTI:\n         *\n         * A pair value represents a pair of identifiers corresponding to an association\n         * between two objects. The association is undirected so (A,B) and (B,A) are equivalent.\n         *\n         * @type {Number}\n         */\n        PAIR: 6,\n\n        /**\n         * From IMS QTI:\n         *\n         * A directedPair value represents a pair of identifiers corresponding to a directed\n         * association between two objects. The two identifiers correspond to the source\n         * and destination objects.\n         *\n         * @type {Number}\n         */\n        DIRECTED_PAIR: 7,\n\n        /**\n         * From IMS QTI:\n         *\n         * A duration value specifies a distance (in time) between two time points.\n         * In other words, a time period as defined by [ISO8601], but represented as\n         * a single float that records time in seconds. Durations may have a fractional\n         * part. Durations are represented using the xsd:double datatype rather than\n         * xsd:dateTime for convenience and backward compatibility.\n         *\n         * @type {Number}\n         */\n        DURATION: 8,\n\n        /**\n         * From IMS QTI:\n         *\n         * A file value is any sequence of octets (bytes) qualified by a content-type and an\n         * optional filename given to the file (for example, by the candidate when uploading\n         * it as part of an interaction). The content type of the file is one of the MIME\n         * types defined by [RFC2045].\n         *\n         * @type {Number}\n         */\n        FILE: 9,\n\n        /**\n         * From IMS QTI:\n         *\n         * A URI value is a Uniform Resource Identifier as defined by [URI].\n         *\n         * @type {Number}\n         */\n        URI: 10,\n\n        /**\n         * From IMS QTI:\n         *\n         * An intOrIdentifier value is the union of the integer baseType and\n         * the identifier baseType.\n         *\n         * @type {Number}\n         */\n        INT_OR_IDENTIFIER: 11,\n\n        /**\n         * In qtism, we consider an extra 'coords' baseType.\n         *\n         * @type {Number}\n         */\n        COORDS: 12,\n\n        /**\n         * Express that the operands can have any BaseType from the BaseType enumeration and\n         * can be different.\n         *\n         * @type {Number}\n         */\n        ANY: 12,\n\n        /**\n         * Express that all the operands must have the same\n         * baseType.\n         *\n         * @type {Number}\n         */\n        SAME: 13\n    };\n\n    var baseTypeHelper = _({\n        /**\n         * Gets the the list of QTI base types\n         * @returns {Object}\n         */\n        asArray: function asArray() {\n            return baseTypeEnum;\n        },\n\n        /**\n         * Gets a valid type or the default\n         * @param {String|Number} type\n         * @param {String|Number} [defaultType]\n         * @returns {*}\n         */\n        getValid: function getValid(type, defaultType) {\n            if (_.isFinite(type)) {\n                if (!baseTypeHelper.getNameByConstant(type)) {\n                    type = false;\n                }\n            } else {\n                type = baseTypeHelper.getConstantByName(type);\n            }\n\n            if (false === type) {\n                if (!_.isUndefined(defaultType) && defaultType !== -1) {\n                    type = baseTypeHelper.getValid(defaultType, -1);\n                } else {\n                    type = -1;\n                }\n            }\n\n            return type;\n        },\n\n        /**\n         * Adjusts a value with respect to the type\n         * @param {String|Number} type\n         * @param {*} value\n         * @returns {*}\n         */\n        getValue: function getValue(type, value) {\n            if (_.isString(type)) {\n                type = baseTypeHelper.getConstantByName(type);\n            }\n\n            switch (type) {\n                case baseTypeEnum.URI:\n                case baseTypeEnum.STRING:\n                case baseTypeEnum.IDENTIFIER:\n                    return value + '';\n\n                case baseTypeEnum.BOOLEAN:\n                    if (_.isString(value)) {\n                        switch (value.toLowerCase()) {\n                            case 'true':\n                                return true;\n                            case 'false':\n                                return false;\n                        }\n                    }\n                    return !!value;\n\n                case baseTypeEnum.INTEGER:\n                    return parseInt(value, 10) || 0;\n\n                case baseTypeEnum.FLOAT:\n                    return parseFloat(value) || 0;\n\n                case baseTypeEnum.INT_OR_IDENTIFIER:\n                    if (!_.isNaN(parseInt(value, 10))) {\n                        return parseInt(value, 10) || 0;\n                    } else {\n                        return '' + value;\n                    }\n            }\n\n            return value;\n        },\n\n        /**\n         * Get a constant value from the BaseType enumeration by baseType name.\n         *\n         * * 'identifier' -> baseTypes.IDENTIFIER\n         * * 'boolean' -> baseTypes.BOOLEAN\n         * * 'integer' -> baseTypes.INTEGER\n         * * 'float' -> baseTypes.FLOAT\n         * * 'string' -> baseTypes.STRING\n         * * 'point' -> baseTypes.POINT\n         * * 'pair' -> baseTypes.PAIR\n         * * 'directedPair' -> baseTypes.DIRECTED_PAIR\n         * * 'duration' -> baseTypes.DURATION\n         * * 'file' -> baseTypes.FILE\n         * * 'uri' -> baseTypes.URI\n         * * 'intOrIdentifier' -> baseTypes.INT_OR_IDENTIFIER\n         * * extra 'coords' -> baseTypes.COORDS\n         *\n         * @param {String} name The baseType name.\n         * @return {Number|Boolean} The related enumeration value or `false` if the name could not be resolved.\n         */\n        getConstantByName: function getConstantByName(name) {\n            switch (String(name).trim().toLowerCase()) {\n                case 'identifier':\n                    return baseTypeEnum.IDENTIFIER;\n\n                case 'boolean':\n                    return baseTypeEnum.BOOLEAN;\n\n                case 'integer':\n                    return baseTypeEnum.INTEGER;\n\n                case 'float':\n                    return baseTypeEnum.FLOAT;\n\n                case 'string':\n                    return baseTypeEnum.STRING;\n\n                case 'point':\n                    return baseTypeEnum.POINT;\n\n                case 'pair':\n                    return baseTypeEnum.PAIR;\n\n                case 'directedpair':\n                    return baseTypeEnum.DIRECTED_PAIR;\n\n                case 'duration':\n                    return baseTypeEnum.DURATION;\n\n                case 'file':\n                    return baseTypeEnum.FILE;\n\n                case 'uri':\n                    return baseTypeEnum.URI;\n\n                case 'intoridentifier':\n                    return baseTypeEnum.INT_OR_IDENTIFIER;\n\n                case 'coords':\n                    return baseTypeEnum.COORDS;\n\n                case 'any':\n                    return baseTypeEnum.ANY;\n\n                case 'same':\n                    return baseTypeEnum.SAME;\n\n                default:\n                    return false;\n            }\n        },\n\n        /**\n         * Get the QTI name of a BaseType.\n         *\n         * @param {Number} constant A constant value from the BaseType enumeration.\n         * @param {Boolean} [operator] A flag that allow to switch between operator an value types to prevent duplicate name issue\n         * @return {String|Boolean} The QTI name or false if not match.\n         */\n        getNameByConstant: function getNameByConstant(constant, operator) {\n            switch (constant) {\n                case baseTypeEnum.IDENTIFIER:\n                    return 'identifier';\n\n                case baseTypeEnum.BOOLEAN:\n                    return 'boolean';\n\n                case baseTypeEnum.INTEGER:\n                    return 'integer';\n\n                case baseTypeEnum.FLOAT:\n                    return 'float';\n\n                case baseTypeEnum.STRING:\n                    return 'string';\n\n                case baseTypeEnum.POINT:\n                    return 'point';\n\n                case baseTypeEnum.PAIR:\n                    return 'pair';\n\n                case baseTypeEnum.DIRECTED_PAIR:\n                    return 'directedPair';\n\n                case baseTypeEnum.DURATION:\n                    return 'duration';\n\n                case baseTypeEnum.FILE:\n                    return 'file';\n\n                case baseTypeEnum.URI:\n                    return 'uri';\n\n                case baseTypeEnum.INT_OR_IDENTIFIER:\n                    return 'intOrIdentifier';\n\n                case baseTypeEnum.COORDS:\n                case baseTypeEnum.ANY:\n                    if (operator) {\n                        return 'any';\n                    } else {\n                        return 'coords';\n                    }\n\n                case baseTypeEnum.SAME:\n                    return 'same';\n\n                default:\n                    return false;\n            }\n        }\n    }).assign(baseTypeEnum).value();\n\n    return baseTypeHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * The Cardinality enumeration (port of \\qtism\\common\\enums\\Cardinality).\n *\n * From IMS QTI:\n *\n * An expression or itemVariable can either be single-valued or multi-valued. A multi-valued\n * expression (or variable) is called a container. A container contains a list of values,\n * this list may be empty in which case it is treated as NULL. All the values in a multiple\n * or ordered container are drawn from the same value set, however, containers may contain\n * multiple occurrences of the same value. In other words, [A,B,B,C] is an acceptable value\n * for a container. A container with cardinality multiple and value [A,B,C] is equivalent\n * to a similar one with value [C,B,A] whereas these two values would be considered distinct\n * for containers with cardinality ordered. When used as the value of a response variable\n * this distinction is typified by the difference between selecting choices in a multi-response\n * multi-choice task and ranking choices in an order objects task. In the language of [ISO11404]\n * a container with multiple cardinality is a \"bag-type\", a container with ordered cardinality\n * is a \"sequence-type\" and a container with record cardinality is a \"record-type\".\n *\n * The record container type is a special container that contains a set of independent values\n * each identified by its own identifier and having its own base-type. This specification\n * does not make use of the record type directly however it is provided to enable\n * customInteractions to manipulate more complex responses and customOperators to\n * return more complex values, in addition to the use for detailed information about\n * numeric responses described in the stringInteraction abstract class.\n *\n * @author Jérôme Bogaerts <jerome@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/cardinality',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * The list of QTI cardinalities\n     * @type {Object}\n     */\n    var cardinalityEnum = {\n        /**\n         * Single term cardinality\n         *\n         * @type {Number}\n         */\n        SINGLE: 0,\n\n        /**\n         * Multiple terms cardinality\n         *\n         * @type {Number}\n         */\n        MULTIPLE: 1,\n\n        /**\n         * Ordered terms cardinality\n         *\n         * @type {Number}\n         */\n        ORDERED: 2,\n\n        /**\n         * Record term cardinality\n         *\n         * @type {Number}\n         */\n        RECORD: 3,\n\n        /**\n         * Express that all the expressions involved in an operator have\n         * the same cardinality.\n         *\n         * @type {Number}\n         */\n        SAME: 4,\n\n        /**\n         * Express that all the expressions involved in an operator may\n         * have any cardinality.\n         *\n         * @type {Number}\n         */\n        ANY: 5\n    };\n\n    var cardinalityHelper = _({\n        /**\n         * Gets the the list of QTI cardinalities\n         * @returns {Object}\n         */\n        asArray: function asArray() {\n            return cardinalityEnum;\n        },\n\n        /**\n         * Gets a valid cardinality or the default\n         * @param {String|Number} cardinality\n         * @param {String|Number} [defaultCardinality]\n         * @returns {*}\n         */\n        getValid: function getValid(cardinality, defaultCardinality) {\n            if (_.isFinite(cardinality)) {\n                if (!cardinalityHelper.getNameByConstant(cardinality)) {\n                    cardinality = false;\n                }\n            } else {\n                cardinality = cardinalityHelper.getConstantByName(cardinality);\n            }\n\n            if (false === cardinality) {\n                if (!_.isUndefined(defaultCardinality) && defaultCardinality !== cardinalityEnum.SINGLE) {\n                    cardinality = cardinalityHelper.getValid(defaultCardinality, cardinalityEnum.SINGLE);\n                } else {\n                    cardinality = cardinalityEnum.SINGLE;\n                }\n            }\n\n            return cardinality;\n        },\n\n        /**\n         * Get a constant value from its name.\n         *\n         * @param {String} name The name of the constant, as per QTI spec.\n         * @return {Number|Boolean} The constant value or `false` if not found.\n         */\n        getConstantByName: function getConstantByName(name) {\n            switch (String(name).trim().toLowerCase()) {\n                case 'single':\n                    return cardinalityEnum.SINGLE;\n\n                case 'multiple':\n                    return cardinalityEnum.MULTIPLE;\n\n                case 'ordered':\n                    return cardinalityEnum.ORDERED;\n\n                case 'record':\n                    return cardinalityEnum.RECORD;\n\n                case 'same':\n                    return cardinalityEnum.SAME;\n\n                case 'any':\n                    return cardinalityEnum.ANY;\n\n                default:\n                    return false;\n            }\n        },\n\n        /**\n         * Get the name of a constant from its value.\n         *\n         * @param {Number} constant The constant value to search the name for.\n         * @return {String|Boolean} The name of the constant or false if not found.\n         */\n        getNameByConstant: function getNameByConstant(constant) {\n            switch (constant) {\n                case cardinalityEnum.SINGLE:\n                    return 'single';\n\n                case cardinalityEnum.MULTIPLE:\n                    return 'multiple';\n\n                case cardinalityEnum.ORDERED:\n                    return 'ordered';\n\n                case cardinalityEnum.RECORD:\n                    return 'record';\n\n                case cardinalityEnum.SAME:\n                    return 'same';\n\n                case cardinalityEnum.ANY:\n                    return 'any';\n\n                default:\n                    return false;\n            }\n        }\n    }).assign(cardinalityEnum).value();\n\n    return cardinalityHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/outcomeValidator',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * The RegEx that validates outcome identifiers\n     * @type {RegExp}\n     */\n    var identifierValidator = /^[a-zA-Z_][a-zA-Z0-9_\\.-]*$/;\n\n    /**\n     * Checks the validity of an identifier\n     * @param {String} identifier\n     * @returns {Boolean}\n     */\n    function validateIdentifier(identifier) {\n        return !!(identifier && _.isString(identifier) && identifierValidator.test(identifier));\n    }\n\n    /**\n     * Checks if an object is a valid outcome\n     * @param {Object} outcome\n     * @param {Boolean} [checkIdentifier]\n     * @param {String||String[]} [allowedTypes]\n     * @returns {Boolean}\n     */\n    function validateOutcome(outcome, checkIdentifier, allowedTypes) {\n        var validOutcome = _.isPlainObject(outcome) && validateIdentifier(outcome['qti-type']);\n        var validIdentifier = !checkIdentifier || (outcome && validateIdentifier(outcome.identifier));\n\n        if (allowedTypes) {\n            allowedTypes = !_.isArray(allowedTypes) ? [allowedTypes] : allowedTypes;\n            validOutcome =  validOutcome && _.indexOf(allowedTypes, outcome['qti-type']) >= 0;\n        }\n\n        return !!(validOutcome && validIdentifier);\n    }\n\n    /**\n     * Checks if an array contains valid outcomes\n     * @param {Array} outcomes\n     * @param {Boolean} [checkIdentifier]\n     * @param {String||String[]} [allowedTypes]\n     * @returns {Boolean}\n     */\n    function validateOutcomes(outcomes, checkIdentifier, allowedTypes) {\n        var valid = _.isArray(outcomes);\n        _.forEach(outcomes, function(outcome) {\n            if (!validateOutcome(outcome, checkIdentifier, allowedTypes)) {\n                valid = false;\n                return false;\n            }\n        });\n        return valid;\n    }\n\n    return {\n        validateIdentifier: validateIdentifier,\n        validateOutcomes: validateOutcomes,\n        validateOutcome: validateOutcome\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiElement',[\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/outcomeValidator'\n], function (_, outcomeValidator) {\n    'use strict';\n\n    var qtiElementHelper = {\n        /**\n         * Creates a QTI element\n         * @param {String} type - The QTI type of the element to create\n         * @param {String|Object} [identifier] - An optional identifier, or a list of properties\n         * @param {Object} [properties] - A list of additional properties\n         * @returns {Object}\n         * @throws {TypeError} if the type or the identifier is not valid\n         */\n        create: function create(type, identifier, properties) {\n            var element = {\n                'qti-type': type\n            };\n\n            if (!outcomeValidator.validateIdentifier(type)) {\n                throw new TypeError('You must provide a valid QTI type!');\n            }\n\n            if (_.isPlainObject(identifier)) {\n                properties = identifier;\n                identifier = null;\n            }\n\n            if (identifier) {\n                if (!outcomeValidator.validateIdentifier(identifier)) {\n                    throw new TypeError('You must provide a valid identifier!');\n                }\n                element.identifier = identifier;\n            }\n\n            return _.assign(element, properties || {});\n        },\n\n        /**\n         * Finds a QTI element in a collection, by its type.\n         * The collection may also be a single object.\n         * @param {Array|Object} collection\n         * @param {Array|String} type\n         * @returns {Object}\n         */\n        find: function find(collection, type) {\n            var found = null;\n            var types = forceArray(type);\n\n            function checkType(qtiElement) {\n                if (types.indexOf(qtiElement['qti-type']) >= 0) {\n                    found = qtiElement;\n                    return false;\n                }\n            }\n\n            if (_.isArray(collection)) {\n                _.forEach(collection, checkType);\n            } else if (collection) {\n                checkType(collection);\n            }\n\n            return found;\n        },\n\n        /**\n         * Finds an element from a tree.\n         * The path to the element is based on QTI types.\n         * @param {Object} tree - The root of the tree from which get the property\n         * @param {String|String[]} path - The path to the element, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue\"\n         * @param {String|String[]} nodeName - The name of the nodes that may contain subtrees\n         * @returns {*}\n         */\n        lookupElement: function lookupElement(tree, path, nodeName) {\n            var steps = _.isArray(path) ? path : path.split('.');\n            var nodeNames = forceArray(nodeName);\n            var len = steps.length;\n            var i = 0;\n            var key;\n\n            while (tree && i < len) {\n                tree = qtiElementHelper.find(tree, steps[i++]);\n                if (tree && i < len) {\n                    key = _.find(nodeNames, _.partial(_.has, tree));\n                    tree = key && tree[key];\n                }\n            }\n\n            return tree || null;\n        },\n\n        /**\n         * Finds a property from a tree.\n         * The path to the property is based on QTI types.\n         * @param {Object} tree - The root of the tree from which get the property\n         * @param {String|String[]} path - The path to the property, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue.value\"\n         * @param {String|String[]} nodeName - The name of the nodes that may contain subtrees\n         * @returns {*}\n         */\n        lookupProperty: function lookupProperty(tree, path, nodeName) {\n            var result = null;\n            var steps = _.isArray(path) ? path : path.split('.');\n            var propertyName = steps.pop();\n            var element = qtiElementHelper.lookupElement(tree, steps, nodeName);\n\n            if (element && element[propertyName]) {\n                result = element[propertyName];\n            }\n\n            return result;\n        }\n    };\n\n    /**\n     * Ensures a value is an array\n     * @param {*} value\n     * @returns {Array}\n     */\n    function forceArray(value) {\n        if (!value) {\n            value = [];\n        }\n        if (!_.isArray(value)) {\n            value = [value];\n        }\n        return value;\n    }\n\n    return qtiElementHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Basic helper that is intended to manage outcomes inside a test model.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/outcome',[\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/outcomeValidator',\n    'taoQtiTest/controller/creator/helpers/qtiElement',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/cardinality'\n], function (_, outcomeValidator, qtiElementHelper, baseTypeHelper, cardinalityHelper) {\n    'use strict';\n\n    var outcomeHelper = {\n        /**\n         * Gets a property from an outcome rule expression.\n         * The path to the property is based on QTI types.\n         * @param {Object} outcomeRule - The outcome rule from which get the property\n         * @param {String|String[]} path - The path to the property, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue\"\n         * @returns {*}\n         */\n        getProcessingRuleExpression: function getProcessingRuleExpression(outcomeRule, path) {\n            return qtiElementHelper.lookupElement(outcomeRule, path, ['expression', 'expressions']);\n        },\n\n        /**\n         * Gets a property from an outcome rule expression.\n         * The path to the property is based on QTI types.\n         * @param {Object} outcomeRule - The outcome rule from which get the property\n         * @param {String|String[]} path - The path to the property, with QTI types separated by dot, like: \"setOutcomeValue.gte.baseValue.value\"\n         * @returns {*}\n         */\n        getProcessingRuleProperty: function getProcessingRuleProperty(outcomeRule, path) {\n            return qtiElementHelper.lookupProperty(outcomeRule, path, ['expression', 'expressions']);\n        },\n\n        /**\n         * Gets the identifier of an outcome\n         * @param {Object|String} outcome\n         * @returns {String}\n         */\n        getOutcomeIdentifier: function getOutcomeIdentifier(outcome) {\n            return String(_.isObject(outcome) ? outcome.identifier : outcome);\n        },\n\n        /**\n         * Gets the list of outcome declarations\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        getOutcomeDeclarations: function getOutcomeDeclarations(testModel) {\n            var outcomes = testModel && testModel.outcomeDeclarations;\n            return outcomes || [];\n        },\n\n        /**\n         * Gets the list of outcome processing rules\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        getOutcomeProcessingRules: function getOutcomeProcessingRules(testModel) {\n            var rules = testModel && testModel.outcomeProcessing && testModel.outcomeProcessing.outcomeRules;\n            return rules || [];\n        },\n\n        /**\n         * Applies a function on each outcome declarations\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachOutcomeDeclarations: function eachOutcomeDeclarations(testModel, cb) {\n            _.forEach(outcomeHelper.getOutcomeDeclarations(testModel), cb);\n        },\n\n        /**\n         * Applies a function on each outcome processing rules. Does not take care of sub-expressions.\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachOutcomeProcessingRules: function eachOutcomeProcessingRules(testModel, cb) {\n            _.forEach(outcomeHelper.getOutcomeProcessingRules(testModel), cb);\n        },\n\n        /**\n         * Applies a function on each outcome processing rules, take care of each sub expression.\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachOutcomeProcessingRuleExpressions: function eachOutcomeProcessingRuleExpressions(testModel, cb) {\n            function browseExpressions(processingRule) {\n                if (_.isArray(processingRule)) {\n                    _.forEach(processingRule, browseExpressions);\n                } else if (processingRule) {\n                    cb(processingRule);\n\n                    if (processingRule.expression) {\n                        browseExpressions(processingRule.expression);\n                    } else if (processingRule.expressions) {\n                        browseExpressions(processingRule.expressions);\n                    }\n                }\n            }\n\n            browseExpressions(outcomeHelper.getOutcomeProcessingRules(testModel));\n        },\n\n        /**\n         * Lists all outcomes identifiers. An optional callback allows to filter the list\n         * @param {Object} testModel\n         * @param {Function} [cb]\n         * @returns {Array}\n         */\n        listOutcomes: function listOutcomes(testModel, cb) {\n            var outcomes = [];\n            if (!_.isFunction(cb)) {\n                cb = null;\n            }\n            outcomeHelper.eachOutcomeDeclarations(testModel, function (outcome) {\n                if (!cb || cb(outcome)) {\n                    outcomes.push(outcomeHelper.getOutcomeIdentifier(outcome));\n                }\n            });\n            return outcomes;\n        },\n\n        /**\n         * Removes the specified outcomes from the provided test model\n         * @param {Object} testModel - The test model to clean up\n         * @param {Function|String[]} outcomes - The list of outcomes identifiers to remove,\n         *                                       or a callback that will match each outcome to remove\n         */\n        removeOutcomes: function removeOutcomes(testModel, outcomes) {\n            var declarations = outcomeHelper.getOutcomeDeclarations(testModel);\n            var rules = outcomeHelper.getOutcomeProcessingRules(testModel);\n            var check;\n\n            if (_.isFunction(outcomes)) {\n                check = outcomes;\n            } else {\n                outcomes = _.indexBy(_.isArray(outcomes) ? outcomes : [outcomes], function (outcome) {\n                    return outcome;\n                });\n\n                check = function checkIdentifier(outcome) {\n                    return !!outcomes[outcomeHelper.getOutcomeIdentifier(outcome)];\n                };\n            }\n\n            if (declarations) {\n                _.remove(declarations, check);\n            }\n\n            if (rules) {\n                _.remove(rules, check);\n            }\n        },\n\n        /**\n         * Creates an outcome declaration\n         * @param {String} identifier\n         * @param {String|Number|Boolean} [type] - The data type of the outcome, FLOAT by default\n         * @param {Number} [cardinality] - The variable cardinality, default 0\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         */\n        createOutcome: function createOutcome(identifier, type, cardinality) {\n\n            if (!outcomeValidator.validateIdentifier(identifier)) {\n                throw new TypeError('You must provide a valid identifier!');\n            }\n\n            return qtiElementHelper.create('outcomeDeclaration', identifier, {\n                views: [],\n                interpretation: '',\n                longInterpretation: '',\n                normalMaximum: false,\n                normalMinimum: false,\n                masteryValue: false,\n                cardinality: cardinalityHelper.getValid(cardinality, cardinalityHelper.SINGLE),\n                baseType: baseTypeHelper.getValid(type, baseTypeHelper.FLOAT)\n            });\n        },\n\n        /**\n         * Adds a processing rule into the test model\n         *\n         * @param {Object} testModel\n         * @param {Object} processingRule\n         * @returns {Object}\n         * @throws {TypeError} if the processing rule is not valid\n         */\n        addOutcomeProcessing: function createOutcomeProcessing(testModel, processingRule) {\n            var outcomeProcessing = testModel.outcomeProcessing;\n\n            if (!outcomeValidator.validateOutcome(processingRule)) {\n                throw new TypeError('You must provide a valid outcome processing rule!');\n            }\n\n            if (!outcomeProcessing) {\n                outcomeProcessing = qtiElementHelper.create('outcomeProcessing', {\n                    outcomeRules: []\n                });\n                testModel.outcomeProcessing = outcomeProcessing;\n            } else if (!outcomeProcessing.outcomeRules) {\n                outcomeProcessing.outcomeRules = [];\n            }\n\n            outcomeProcessing.outcomeRules.push(processingRule);\n            return processingRule;\n        },\n\n        /**\n         * Creates an outcome and adds it to the declarations\n         * @param {Object} testModel\n         * @param {Object} outcome - The outcome to add\n         * @param {Object} [processingRule] - The processing rule attached to the outcome\n         * @returns {Object}\n         * @throws {TypeError} if one of the outcome or the processing rule is not valid\n         */\n        addOutcome: function addOutcome(testModel, outcome, processingRule) {\n            var declarations = testModel.outcomeDeclarations;\n\n            if (!outcomeValidator.validateOutcome(outcome, true, 'outcomeDeclaration')) {\n                throw new TypeError('You must provide a valid outcome!');\n            }\n\n            if (processingRule) {\n                if (!outcomeValidator.validateOutcome(processingRule) || processingRule.identifier !== outcome.identifier) {\n                    throw new TypeError('You must provide a valid outcome processing rule!');\n                }\n\n                outcomeHelper.addOutcomeProcessing(testModel, processingRule);\n            }\n\n            if (!declarations) {\n                declarations = [];\n                testModel.outcomeDeclarations = declarations;\n            }\n\n            declarations.push(outcome);\n            return outcome;\n        },\n\n        /**\n         * Replaces the outcomes in a test model\n         * @param {Object} testModel\n         * @param {Object} outcomes\n         * @throws {TypeError} if one of the outcomes or the processing rules are not valid\n         */\n        replaceOutcomes: function replaceOutcomes(testModel, outcomes) {\n            if (_.isPlainObject(outcomes)) {\n                if (_.isArray(outcomes.outcomeDeclarations)) {\n                    if (!outcomeValidator.validateOutcomes(outcomes.outcomeDeclarations, true, 'outcomeDeclaration')) {\n                        throw new TypeError('You must provide valid outcomes!');\n                    }\n\n                    testModel.outcomeDeclarations = [].concat(outcomes.outcomeDeclarations);\n                }\n                if (outcomes.outcomeProcessing && _.isArray(outcomes.outcomeProcessing.outcomeRules)) {\n                    if (!outcomeValidator.validateOutcomes(outcomes.outcomeProcessing.outcomeRules)) {\n                        throw new TypeError('You must provide valid processing rules!');\n                    }\n\n                    if (!testModel.outcomeProcessing) {\n                        testModel.outcomeProcessing = qtiElementHelper.create('outcomeProcessing');\n                    }\n                    testModel.outcomeProcessing.outcomeRules = [].concat(outcomes.outcomeProcessing.outcomeRules);\n                }\n            }\n        }\n    };\n\n    return outcomeHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Helper that provides a way to browse all categories attached to a test model at the item level.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/category',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * Checks if a category is an option\n     *\n     * @param {String} category\n     * @returns {Boolean}\n     */\n    function isCategoryOption(category) {\n        return category && category.indexOf('x-tao-') === 0;\n    }\n\n    /**\n     * Calls a function for each category in the test model\n     * @param {Object} testModel\n     * @param {Function} cb\n     */\n    function eachCategories(testModel, cb) {\n        _.forEach(testModel.testParts, function (testPart) {\n            _.forEach(testPart.assessmentSections, function (assessmentSection) {\n                _.forEach(assessmentSection.sectionParts, function (itemRef) {\n                    _.forEach(itemRef.categories, function(category) {\n                        cb(category, itemRef);\n                    });\n                });\n            });\n        });\n    }\n\n    return {\n        /**\n         * Calls a function for each category in the test model\n         * @function eachCategories\n         * @param {Object} testModel\n         * @param {Function} cb\n         */\n        eachCategories: eachCategories,\n\n        /**\n         * Gets the list of categories assigned to the items.\n         * Discards special purpose categories like 'x-tao-...'\n         *\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        listCategories: function listCategories(testModel) {\n            var categories = {};\n            eachCategories(testModel, function(category) {\n                if (!isCategoryOption(category)) {\n                    categories[category] = true;\n                }\n            });\n            return _.keys(categories);\n        },\n\n        /**\n         * Gets the list of options assigned to the items (special purpose categories like 'x-tao-...').\n         *\n         * @param {Object} testModel\n         * @returns {Array}\n         */\n        listOptions: function listOptions(testModel) {\n            var options = {};\n            eachCategories(testModel, function(category) {\n                if (isCategoryOption(category)) {\n                    options[category] = true;\n                }\n            });\n            return _.keys(options);\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/modelOverseer',[\n    'lodash',\n    'core/eventifier',\n    'core/statifier',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/cardinality',\n    'taoQtiTest/controller/creator/helpers/outcome',\n    'taoQtiTest/controller/creator/helpers/category'\n], function (_, eventifier, statifier, baseTypeHelper, cardinalityHelper, outcomeHelper, categoryHelper) {\n    'use strict';\n\n    /**\n     * Wraps the test model in a manager, provides API to handle events and states\n     * @param {Object} model\n     * @param {Object} [config]\n     * @returns {Object}\n     */\n    function modelOverseerFactory(model, config) {\n        var modelOverseer = {\n            /**\n             * Gets the nested model\n             * @returns {Object}\n             */\n            getModel: function getModel() {\n                return model;\n            },\n\n            /**\n             * Sets the nested model\n             *\n             * @param {Object} newModel\n             * @returns {modelOverseer}\n             * @fires setmodel\n             */\n            setModel: function setModel(newModel) {\n                model = newModel;\n\n                /**\n                 * @event modelOverseer#setmodel\n                 * @param {String} model\n                 */\n                modelOverseer.trigger('setmodel', model);\n                return this;\n            },\n\n            /**\n             * Gets the config set\n             * @returns {Object}\n             */\n            getConfig: function getConfig() {\n                return config;\n            },\n\n            /**\n             * Gets the list of defined outcomes for the nested model. A descriptor is built for each outcomes:\n             * {\n             *      name: {String},\n             *      type: {String},\n             *      cardinality: {String}\n             * }\n             * @returns {Object[]}\n             */\n            getOutcomesList: function getOutcomesList() {\n                return _.map(outcomeHelper.getOutcomeDeclarations(model), function(declaration) {\n                    return {\n                        name: declaration.identifier,\n                        type: baseTypeHelper.getNameByConstant(declaration.baseType),\n                        cardinality: cardinalityHelper.getNameByConstant(declaration.cardinality)\n                    };\n                });\n            },\n\n            /**\n             * Gets the names of the defined outcomes for the nested model\n             * @returns {Array}\n             */\n            getOutcomesNames: function getOutcomesNames() {\n                return _.map(outcomeHelper.getOutcomeDeclarations(model), function(declaration) {\n                    return declaration.identifier;\n                });\n            },\n\n            /**\n             * Gets the list of defined categories for the nested model\n             * @returns {Array}\n             */\n            getCategories: function getCategories() {\n                return categoryHelper.listCategories(model);\n            },\n\n            /**\n             * Gets the list of defined options for the nested model\n             * @returns {Array}\n             */\n            getOptions: function getOptions() {\n                return categoryHelper.listOptions(model);\n            }\n        };\n\n        config = _.isPlainObject(config) ? config : _.assign({}, config);\n\n        return statifier(eventifier(modelOverseer));\n    }\n\n    return modelOverseerFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * This object holds a shared context for all of the test creator modules and allow them to communicate via events.\n * Its lifecycle is bound to the creator controller.\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/qtiTestCreator',[\n    'jquery',\n    'core/eventifier',\n    'taoQtiTest/controller/creator/areaBroker',\n    'taoQtiTest/controller/creator/modelOverseer'\n], function($, eventifier, areaBrokerFactory, modelOverseerFactory) {\n    'use strict';\n\n    /**\n     * @param {jQuery} $creatorContainer - root DOM element containing the creator\n     * @param {Object} config - options that will be forwareded to the modelOverseer Factory\n     * @returns {Object}\n     */\n    function testCreatorFactory($creatorContainer, config) {\n        var testCreator;\n\n        var $container,\n            model,\n            areaBroker,\n            modelOverseer;\n\n        /**\n         * Create the model overseer with the given model\n         * @returns {modelOverseer}\n         */\n        function loadModelOverseer() {\n            if (! modelOverseer && model) {\n                modelOverseer = modelOverseerFactory(model, config);\n            }\n            return modelOverseer;\n        }\n\n        /**\n         * Set up the areaBroker mapping from the actual DOM\n         * @returns {areaBroker} already mapped\n         */\n        function loadAreaBroker(){\n            if (! areaBroker) {\n                areaBroker = areaBrokerFactory($container, {\n                    'creator': $container,\n                    'itemSelectorPanel': $container.find('.test-creator-items'),\n                    'contentCreatorPanel': $container.find('.test-creator-content'),\n                    'propertyPanel': $container.find('.test-creator-props'),\n                    'elementPropertyPanel': $container.find('.qti-widget-properties')\n                });\n            }\n            return areaBroker;\n        }\n\n        if (! ($creatorContainer instanceof $)) {\n            throw new TypeError('a valid $container must be given');\n        }\n\n        $container = $creatorContainer;\n\n        testCreator = {\n            setTestModel: function setTestModel(m) {\n                model = m;\n            },\n\n            getAreaBroker: function getAreaBroker() {\n                return loadAreaBroker();\n            },\n\n            getModelOverseer: function getModelOverseer() {\n                return loadModelOverseer();\n            }\n        };\n        return eventifier(testCreator);\n    }\n\n    return testCreatorFactory;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * The testItem data provider\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/provider/testItems',[\n    'lodash',\n    'i18n',\n    'util/url',\n    'core/dataProvider/request'\n], function (_, __, urlUtil, request) {\n    'use strict';\n\n    /**\n     * Per function requests configuration.\n     */\n    var defaultConfig = {\n        getItemClasses : {\n            url : urlUtil.route('getItemClasses', 'Items', 'taoQtiTest')\n        },\n        getItems : {\n            url : urlUtil.route('getItems', 'Items', 'taoQtiTest')\n        },\n        getItemClassProperties : {\n            url : urlUtil.route('create', 'RestFormItem', 'taoItems')\n        }\n    };\n\n    /**\n     * Creates a configured testItem provider\n     *\n     * @param {Object} [config] - to override the default config\n     * @returns {testItemProvider} the new provider\n     */\n    return function testItemProviderFactory(config){\n\n        config = _.defaults(config || {}, defaultConfig);\n\n        /**\n         * @typedef {testItemProvider}\n         */\n        return {\n\n            /**\n             * Get the list of Items classes and sub classes\n             * @returns {Promise} that resolves with the classes\n             */\n            getItemClasses: function getItemClasses(){\n                return request(config.getItemClasses.url);\n            },\n\n            /**\n             * Get QTI Items in different formats\n             * @param {Object} [params] - the parameters to pass through the request\n             * @returns {Promise} that resolves with the classes\n             */\n            getItems : function getItems(params){\n                return request(config.getItems.url, params);\n            },\n\n            /**\n             * Get the properties of a the given item class\n             * @param {String} classUri - the item class URI\n             * @returns {Promise} that resolves with the classes\n             */\n            getItemClassProperties: function getItemClassProperties(classUri) {\n                return request(config.getItemClassProperties.url, { classUri : classUri });\n            }\n        };\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/item',[\n    'jquery',\n    'i18n',\n    'core/logger',\n    'taoQtiTest/provider/testItems',\n    'ui/resource/selector',\n    'ui/feedback'\n], function($, __, loggerFactory, testItemProviderFactory, resourceSelector, feedback){\n    'use strict';\n\n   /**\n    * Create a dedicated logger\n    */\n    var logger = loggerFactory('taoQtiTest/creator/views/item');\n\n    /**\n     * Let's you access the data\n     */\n    var testItemProvider = testItemProviderFactory();\n\n    /**\n     * Handles errors\n     * @param {Error} err\n     */\n    var onError = function onError(err){\n        logger.error(err);\n        feedback.error(err.message || __('An error occured while retrieving items'));\n    };\n\n   /**\n     * The ItemView setup items related components\n     * @exports taoQtiTest/controller/creator/views/item\n     * @param {jQueryElement} $container - where to append the view\n     */\n    return function itemView($container){\n\n        var selectorConfig = {\n            type : __('items'),\n            selectionMode : resourceSelector.selectionModes.multiple\n        };\n\n        //load the classes hierarchy\n        testItemProvider.getItemClasses()\n            .then(function(classes){\n                selectorConfig.classes = classes;\n                selectorConfig.classUri = classes[0].uri;\n            })\n            .then(function(){\n                //load the class properties\n                return testItemProvider.getItemClassProperties(selectorConfig.classUri);\n            })\n            .then(function(filters){\n                //set the filters from the properties\n                selectorConfig.filters = filters;\n            })\n            .then(function(){\n                //set up the resource selector\n                resourceSelector($container, selectorConfig)\n                    .on('render', function(){\n                        var self = this;\n                        $container.on('itemselected.creator', function(){\n                            self.clearSelection();\n                        });\n                    })\n                    .on('query', function(params){\n                        var self = this;\n\n                        //ask the server the item from the component query\n                        testItemProvider.getItems(params)\n                            .then(function(items){\n                                //and update the item list\n                                self.update(items, params);\n                            })\n                            .catch(onError);\n                    })\n                    .on('classchange', function(classUri){\n                        var self = this;\n\n                        //by changing the class we need to change the\n                        //properties filters\n                        testItemProvider\n                            .getItemClassProperties(classUri)\n                            .then(function(filters){\n                                self.updateFilters(filters);\n                            })\n                            .catch(onError);\n                    })\n                    .on('change', function(values){\n\n                        /**\n                         * We've got a selection, triggered on the view container\n                         *\n                         * TODO replace jquery events by the eventifier\n                         *\n                         * @event jQuery#itemselect.creator\n                         * @param {Object[]} values - the selection\n                         */\n                        $container.trigger('itemselect.creator', [values]);\n                    });\n            })\n            .catch(onError);\n    };\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart clearfix\\\">\\n\\n   <h1><span data-bind=\\\"identifier\\\">\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\"> \\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"Test Part Properties\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"Move Up\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"Move Down\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span> \\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"Remove Test Part\\\" data-delete=\\\"#\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>  \\n                        <!--<span class=\\\"tlb-bar\\\">-->\\n                            <!--<span class=\\\"tlb-start\\\"></span>-->\\n                            <!--<span class=\\\"tlb-text-button-box\\\">-->\\n                                <!--<a class=\\\"tlb-text-button-off section-adder\\\">-->\\n                                    <!--<span class=\\\"icon-add\\\"></span>-->\\n                                    <!--<span class=\\\"tlb-text\\\">New Section</span>-->\\n                                <!--</a>-->\\n                            <!--</span>-->\\n                            <!--<span class=\\\"tlb-end\\\"></span>-->\\n                        <!--</span>-->\\n                    </span>   \\n                </div>\\n            </div>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"toggler opened\\\" data-toggle=\\\"#testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></a>\\n    </h1>\\n    <div id=\\\"testpart-content-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-content\\\">\\n        \\n       <!-- assessmentTest/testPart/assessmentSections -->\\n       <div class=\\\"sections\\\" data-bind-each=\\\"assessmentSections\\\" data-bind-tmpl=\\\"section\\\" data-bind-filter=\\\"isSection\\\"></div>\\n\\n        <button class=\\\"btn-info small section-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>New section\\n        </button>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section\\\">\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <h2><span data-bind=\\\"title\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <div class=\\\"actions\\\">\\n            <div class=\\\"tlb\\\">\\n                <div class=\\\"tlb-top\\\">\\n                    <span class=\\\"tlb-box\\\">\\n                        <span class=\\\"tlb-bar\\\">\\n                            <span class=\\\"tlb-start\\\"></span>\\n                            <span class=\\\"tlb-group\\\">\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off rub-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Manage Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Manage Rubric Blocks\", options)))\n    + \"\\\" data-toggle=\\\"#rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" ><span class=\\\"icon-rubric\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section Properties\", options) : helperMissing.call(depth0, \"__\", \"Section Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-up disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off move-down disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                                <span class=\\\"tlb-separator\\\"></span>\\n                                <a href=\\\"#\\\" class=\\\"tlb-button-off disabled\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Section\", options) : helperMissing.call(depth0, \"__\", \"Remove Section\", options)))\n    + \"\\\" data-delete=\\\":parent .section\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                            </span>\\n                            <span class=\\\"tlb-end\\\"></span>\\n                        </span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </h2>\\n\\n    <div id=\\\"rublocks-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"rublocks clearfix toggled\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Blocks\", options) : helperMissing.call(depth0, \"__\", \"Rubric Blocks\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"rubricblocks decimal\\\" data-bind-each=\\\"rubricBlocks\\\" data-bind-tmpl=\\\"rubricblock\\\"></ol>\\n        <button class=\\\"btn-info small rublock-adder\\\">\\n            <span class=\\\"icon-add\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"New Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"New Rubric Block\", options)))\n    + \"\\n        </button>\\n    </div>\\n    <div class=\\\"itemrefs-wrapper\\\">\\n        <h3>\\n            <span class=\\\"title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items\", options) : helperMissing.call(depth0, \"__\", \"Items\", options)))\n    + \"</span>\\n        </h3>\\n        <ol class=\\\"itemrefs decimal clearfix\\\" data-bind-each=\\\"sectionParts\\\" data-bind-tmpl=\\\"itemref\\\" data-bind-filter=\\\"isItemRef\\\" data-msg=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\\"></ol>\\n        <div class=\\\"itemref-placeholder\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add selected item(s) here.\", options) : helperMissing.call(depth0, \"__\", \"Add selected item(s) here.\", options)))\n    + \"\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li class=\\\"rubricblock\\\">\\n    <div class=\\\"actions\\\">\\n       <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block Properties\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Remove Rubric Block\", options)))\n    + \"\\\" data-delete=\\\":parent .rubricblock\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"rubricblock-content\\\"></div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<li id='\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' data-uri='\";\n  if (helper = helpers.href) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.href); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"' class='itemref'>\\n    <span class='title truncate'>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <div class=\\\"actions\\\"> \\n        <div class=\\\"tlb\\\">\\n            <div class=\\\"tlb-top\\\">\\n                <span class=\\\"tlb-box\\\">\\n                    <span class=\\\"tlb-bar\\\">\\n                        <span class=\\\"tlb-start\\\"></span>\\n                        <span class=\\\"tlb-group\\\">\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off property-toggler\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Reference Properties\", options) : helperMissing.call(depth0, \"__\", \"Item Reference Properties\", options)))\n    + \"\\\"><span class=\\\"icon-settings\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-up\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Up\", options) : helperMissing.call(depth0, \"__\", \"Move Up\", options)))\n    + \"\\\"><span class=\\\"icon-up\\\"></span></a>\\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off move-down\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Move Down\", options) : helperMissing.call(depth0, \"__\", \"Move Down\", options)))\n    + \"\\\"><span class=\\\"icon-down\\\"></span></a>\\n                            <span class=\\\"tlb-separator\\\"></span> \\n                            <a href=\\\"#\\\" class=\\\"tlb-button-off\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Item Reference\", options) : helperMissing.call(depth0, \"__\", \"Remove Item Reference\", options)))\n    + \"\\\" data-delete=\\\":parent .itemref\\\"><span class=\\\"icon-bin\\\"></span></a>\\n                        </span>\\n                        <span class=\\\"tlb-end\\\"></span>\\n                    </span>  \\n                </span>   \\n            </div>\\n        </div>\\n    </div>\\n</li>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/outcomes', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-6 line\\\">\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"col-3 line\\\">\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        <div class=\\\"col-3 line\\\">\";\n  if (helper = helpers.cardinality) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cardinality); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-12 line\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"no outcome declaration found\", options) : helperMissing.call(depth0, \"__\", \"no outcome declaration found\", options)))\n    + \"</div>\\n    </div>\\n\";\n  return buffer;\n  }\n\n  buffer += \"    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-6 header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</div>\\n        <div class=\\\"col-3 header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Type\", options) : helperMissing.call(depth0, \"__\", \"Type\", options)))\n    + \"</div>\\n        <div class=\\\"col-3 header\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cardinality\", options) : helperMissing.call(depth0, \"__\", \"Cardinality\", options)))\n    + \"</div>\\n    </div>\\n\";\n  stack1 = helpers['if'].call(depth0, depth0, {hash:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/test-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n    <div class=\\\"test-scoring toggled\\\">\\n\\n<!-- assessmentTest/scoring/outcomeProcessing -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-outcome-processing\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Outcome processing\", options) : helperMissing.call(depth0, \"__\", \"Outcome processing\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <select name=\\\"test-outcome-processing\\\" class=\\\"select2\\\" data-bind=\\\"scoring.outcomeProcessing\\\" data-bind-encoder=\\\"string\\\" data-has-search=\\\"false\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.modes), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </select>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select the way the responses of your test should be processed\", options) : helperMissing.call(depth0, \"__\", \"Select the way the responses of your test should be processed\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/categoryScore -->\\n        <div class=\\\"grid-row test-category-score\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-category-score\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Category score\", options) : helperMissing.call(depth0, \"__\", \"Category score\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-category-score\\\" value=\\\"true\\\" data-bind=\\\"scoring.categoryScore\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Also compute the score per categories\", options) : helperMissing.call(depth0, \"__\", \"Also compute the score per categories\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/cutScore -->\\n        <div class=\\\"grid-row test-cut-score\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-cut-score\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Cut score (pass ratio)\", options) : helperMissing.call(depth0, \"__\", \"Cut score (pass ratio)\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"test-cut-score\\\" value=\\\"0\\\" data-bind=\\\"scoring.cutScore\\\" data-bind-encoder=\\\"float\\\" data-validate=\\\"$numeric;\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the cut score (or pass score ratio) associated to the test. It must be a float between 0 and 1.\", options) : helperMissing.call(depth0, \"__\", \"Set the cut score (or pass score ratio) associated to the test. It must be a float between 0 and 1.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/weightIdentifier -->\\n        <div class=\\\"grid-row test-weight-identifier\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-weight-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Weight\", options) : helperMissing.call(depth0, \"__\", \"Weight\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"test-weight-identifier\\\" data-bind=\\\"scoring.weightIdentifier\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_][a-zA-Z0-9_\\\\.-]*)?$);\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the weight identifier used to process the score\", options) : helperMissing.call(depth0, \"__\", \"Set the weight identifier used to process the score\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/scoring/description -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-12\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.modes), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </div>\\n        </div>\\n    </div>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <option value=\\\"\";\n  if (helper = helpers.key) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.key); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n                \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                <div class=\\\"feedback-info test-outcome-processing-description\\\" data-key=\\\"\";\n  if (helper = helpers.key) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.key); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                    <span class=\\\"icon-info\\\"></span>\\n                    \";\n  if (helper = helpers.description) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.description); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                </div>\\n                \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"test-props props clearfix\\\">\\n\\n    <!-- test properties -->\\n    <h3 data-bind=\\\"title\\\"></h3>\\n\\n<!-- assessmentTest/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The principle identifier of the test.\", options) : helperMissing.call(depth0, \"__\", \"The principle identifier of the test.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"test-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"test-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test title.\", options) : helperMissing.call(depth0, \"__\", \"The test title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"test-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"test-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for the all test.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for the all test.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"test-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-scoring\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scoring\", options) : helperMissing.call(depth0, \"__\", \"Scoring\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/scoring -->\\n\";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.scoring), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .test-outcome-declarations\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Outcome declarations\", options) : helperMissing.call(depth0, \"__\", \"Outcome declarations\", options)))\n    + \"</h4>\\n\\n    <!-- assessmentTest/outcomeDeclarations -->\\n    <div class=\\\"test-outcome-declarations panel toggled\\\">\\n        <div class=\\\"grid-row test-outcomes-generate\\\">\\n            <div class=\\\"col-12 align-right\\\">\\n                <button class=\\\"btn-info small\\\" data-action=\\\"generate-outcomes\\\"><span class=\\\"icon icon-reset\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Regenerate\", options) : helperMissing.call(depth0, \"__\", \"Regenerate\", options)))\n    + \"</button>\\n            </div>\\n        </div>\\n        <div class=\\\"outcome-declarations\\\"></div>\\n    </div>\\n\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/testpart-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"testpart-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"testpart-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n    <form autocomplete=\\\"off\\\">\\n\\n<!-- assessmentTest/testPart/identifier -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"testpart-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"testpart-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The test part identifier.\", options) : helperMissing.call(depth0, \"__\", \"The test part identifier.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/navigationMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n               \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"navigationMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Linear\", options) : helperMissing.call(depth0, \"__\", \"Linear\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-navigation-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Non Linear\", options) : helperMissing.call(depth0, \"__\", \"Non Linear\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options) : helperMissing.call(depth0, \"__\", \"The navigation mode determines the general paths that the candidate may take. A linear mode restricts the candidate to attempt each item in turn. Non Linear removes this restriction.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/submissionMode -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Submission\", options) : helperMissing.call(depth0, \"__\", \"Submission\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"0\\\" checked=\\\"checked\\\" data-bind=\\\"submissionMode\\\" data-bind-encoder=\\\"number\\\" />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Individual\", options) : helperMissing.call(depth0, \"__\", \"Individual\", options)))\n    + \"\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"testpart-submission-mode\\\" value=\\\"1\\\"  />\\n                    <span class=\\\"icon-radio\\\"></span>\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Simultaneous\", options) : helperMissing.call(depth0, \"__\", \"Simultaneous\", options)))\n    + \"\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options) : helperMissing.call(depth0, \"__\", \"The submission mode determines when the candidate's responses are submitted for response processing. A testPart in individual mode requires the candidate to submit their responses on an item-by-item basis. In simultaneous mode the candidate's responses are all submitted together at the end of the testPart.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl -->\\n        <div class=\\\"testpart-item-session-control toggled\\\">\\n\\n<!-- assessmentTest/testPart/itemSessionControl/maxAttempts -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input name=\\\"testpart-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/showFeedback -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowComment -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-comment\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/allowSkipping -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\"   />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response (default is true).\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response (default is true).\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/itemSessionControl/validateResponses -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-validate-responses\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Validate Responses\", options) : helperMissing.call(depth0, \"__\", \"Validate Responses\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"testpart-validate-responses\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.validateResponses\\\" data-bind-encoder=\\\"boolean\\\"  />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The candidate is not allowed to submit invalid responses.\", options) : helperMissing.call(depth0, \"__\", \"The candidate is not allowed to submit invalid responses.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n        <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .testpart-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/timeLimits/minTime -->\\n        <div class=\\\"testpart-time-limits toggled\\\">\\n\\n\\n\\n<!-- assessmentTest/testPart/timeLimits/maxTime -->\\n            <div class=\\\"grid-row\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this test part.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this test part.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n\\n<!-- assessmentTest/testPart/timeLimits/allowLateSubmission -->\\n            <div class=\\\"grid-row pseudo-label-box\\\">\\n                <div class=\\\"col-5\\\">\\n                    <label for=\\\"testpart-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                        <span class=\\\"icon-checkbox\\\" />\\n                    </label>\\n                </div>\\n                <div class=\\\"col-1 help\\\">\\n                    <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                    <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the test part should still be accepted.\", options)))\n    + \"\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/section-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-blueprint\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Associate Blueprint\", options) : helperMissing.call(depth0, \"__\", \"Associate Blueprint\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-blueprint\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Associate a blueprint to a section allow you to validate this section against the specified blueprint.\", options) : helperMissing.call(depth0, \"__\", \"Associate a blueprint to a section allow you to validate this section against the specified blueprint.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div id=\\\"section-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"section-props props clearfix\\\">\\n    <h3>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $idFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the section.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/title -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-title\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Title\", options) : helperMissing.call(depth0, \"__\", \"Title\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"section-title\\\" data-bind=\\\"title\\\" data-validate=\\\"$notEmpty\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The section title.\", options) : helperMissing.call(depth0, \"__\", \"The section title.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/visible -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-visible\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Visible\", options) : helperMissing.call(depth0, \"__\", \"Visible\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-visible\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"visible\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"A visible section is one that is identifiable by the candidate.\", options) : helperMissing.call(depth0, \"__\", \"A visible section is one that is identifiable by the candidate.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/keepTogether -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"section-keep-together\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Keep Together\", options) : helperMissing.call(depth0, \"__\", \"Keep Together\", options)))\n    + \"</label>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"section-keep-together\\\" value=\\\"true\\\" checked=\\\"checked\\\"  data-bind=\\\"keepTogether\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options) : helperMissing.call(depth0, \"__\", \"An invisible section with a parent that is subject to shuffling can specify whether or not its children, which will appear to the candidate as if they were part of the parent, are shuffled as a block or mixed up with the other children of the parent section.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hasBlueprint), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\\n    <div class=\\\"categories\\\">\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"category-custom\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"category-custom\\\"/>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options) : helperMissing.call(depth0, \"__\", \"Section level category enables configuring the categories of its composing items all at once. A category in gray means that all items have that category. A category in white means that only a few items have that category.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- some user features (Test Navigation, Test Taker Tools, etc.) are in fact implemented as categories. They will appear here: -->\\n        <div class=\\\"category-presets\\\"></div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Selection\", options) : helperMissing.call(depth0, \"__\", \"Selection\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection -->\\n    <div class=\\\"section-selection toggled\\\">\\n\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-enable-selection\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Enable selection\", options) : helperMissing.call(depth0, \"__\", \"Enable selection\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-enable-selection\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/select -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-select\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Select\", options) : helperMissing.call(depth0, \"__\", \"Select\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-select\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"0\\\" data-bind=\\\"selection.select\\\"  data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The number of child elements to be selected.\", options) : helperMissing.call(depth0, \"__\", \"The number of child elements to be selected.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/selection/withReplacement -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-with-replacement\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With Replacement\", options) : helperMissing.call(depth0, \"__\", \"With Replacement\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-with-replacement\\\" value=\\\"true\\\" data-bind=\\\"selection.withReplacement\\\"  data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"When selecting child elements each element is normally eligible for selection once only.\", options) : helperMissing.call(depth0, \"__\", \"When selecting child elements each element is normally eligible for selection once only.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-ordering\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Ordering\", options) : helperMissing.call(depth0, \"__\", \"Ordering\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/ordering -->\\n    <div class=\\\"section-ordering toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/ordering/shuffle -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-shuffle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Shuffle\", options) : helperMissing.call(depth0, \"__\", \"Shuffle\", options)))\n    + \"</label>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-shuffle\\\" value=\\\"true\\\" data-bind=\\\"ordering.shuffle\\\"  data-bind-encoder=\\\"boolean\\\"  />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options) : helperMissing.call(depth0, \"__\", \"If set, it causes the order of the child elements to be randomized, otherwise it uses the order in which the child elements are defined.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl -->\\n    <div class=\\\"section-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"section-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response (default is true).\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response (default is true).\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/itemSessionControl/validateResponses -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-validate-responses\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Validate Responses\", options) : helperMissing.call(depth0, \"__\", \"Validate Responses\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-validate-responses\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.validateResponses\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The candidate is not allowed to submit invalid responses.\", options) : helperMissing.call(depth0, \"__\", \"The candidate is not allowed to submit invalid responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .section-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"section-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this section.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this section.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"section-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"section-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the section should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<div id=\\\"itemref-props-\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"itemref-props props clearfix\\\">\\n\\n    <h3>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/identifier -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-identifier\\\" data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the item reference.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the item reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/href -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-href\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reference\", options) : helperMissing.call(depth0, \"__\", \"Reference\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"itemref-href\\\" data-bind=\\\"href\\\" readonly=\\\"readonly\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The reference.\", options) : helperMissing.call(depth0, \"__\", \"The reference.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/required -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-required\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required\", options) : helperMissing.call(depth0, \"__\", \"Required\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-required\\\" value=\\\"true\\\" data-bind=\\\"required\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If required it must appear (at least once) in the selection.\", options) : helperMissing.call(depth0, \"__\", \"If required it must appear (at least once) in the selection.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/fixed -->\\n    <div class=\\\"grid-row pseudo-label-box\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-fixed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Fixed\", options) : helperMissing.call(depth0, \"__\", \"Fixed\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"itemref-fixed\\\" value=\\\"true\\\" data-bind=\\\"fixed\\\" data-bind-encoder=\\\"boolean\\\" />\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Not shuffled, the position remains fixed.\", options) : helperMissing.call(depth0, \"__\", \"Not shuffled, the position remains fixed.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"categories\\\">\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"category-custom\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Categories\", options) : helperMissing.call(depth0, \"__\", \"Categories\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"custom categories\", options) : helperMissing.call(depth0, \"__\", \"custom categories\", options)))\n    + \"\\\" name=\\\"category-custom\\\"/>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items can optionally be assigned to one or more categories.\", options) : helperMissing.call(depth0, \"__\", \"Items can optionally be assigned to one or more categories.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- assessmentTest/testPart/assessmentSection/sectionPart/category -->\\n        <textarea title=\\\"categories\\\" class=\\\"hidden\\\" type=\\\"text\\\" name=\\\"itemref-category\\\" data-bind=\\\"categories\\\" data-bind-encoder=\\\"str2array\\\"></textarea>\\n\\n        <!-- some user features (Test Navigation, Test Taker Tools, etc.) are in fact implemented as categories. They will appear here: -->\\n        <div class=\\\"category-presets\\\"></div>\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-weights\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Weights\", options) : helperMissing.call(depth0, \"__\", \"Weights\", options)))\n    + \"</h4>\\n\\n    <div class=\\\"itemref-weights toggled\\\">\\n        <div class=\\\"grid-row \\\">\\n            <div class=\\\"col-9\\\">\\n                <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</strong>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n                <strong>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Value\", options) : helperMissing.call(depth0, \"__\", \"Value\", options)))\n    + \"</strong>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the contribution of an individual item score to the overall test score.\", options) : helperMissing.call(depth0, \"__\", \"Controls the contribution of an individual item score to the overall test score.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/weights -->\\n        <div data-bind-each=\\\"weights\\\" data-bind-tmpl=\\\"itemrefweight\\\"></div>\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-12\\\">\\n                <a class=\\\"itemref-weight-add\\\"><span class=\\\"icon-add\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"add a new weight\", options) : helperMissing.call(depth0, \"__\", \"add a new weight\", options)))\n    + \"</a>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-item-session-control\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Item Session Control\", options) : helperMissing.call(depth0, \"__\", \"Item Session Control\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl -->\\n    <div class=\\\"itemref-item-session-control toggled\\\">\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/maxAttempts -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-attempts\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max Attempts\", options) : helperMissing.call(depth0, \"__\", \"Max Attempts\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input name=\\\"itemref-max-attempts\\\" type=\\\"text\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" value=\\\"1\\\" data-bind=\\\"itemSessionControl.maxAttempts\\\" data-bind-encoder=\\\"number\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options) : helperMissing.call(depth0, \"__\", \"Controls the maximum number of attempts allowed. 0 means unlimited.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/showFeedback -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-show-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Feedback\", options) : helperMissing.call(depth0, \"__\", \"Show Feedback\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-show-feedback\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.showFeedback\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint affects the visibility of feedback after the end of the last attempt.\", options) : helperMissing.call(depth0, \"__\", \"This constraint affects the visibility of feedback after the end of the last attempt.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowComment -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-comment\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Comment\", options) : helperMissing.call(depth0, \"__\", \"Allow Comment\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-comment\\\" value=\\\"true\\\"  data-bind=\\\"itemSessionControl.allowComment\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options) : helperMissing.call(depth0, \"__\", \"This constraint controls whether or not the candidate is allowed to provide a comment on the item during the session. Comments are not part of the assessed responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/allowSkipping -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-skipping\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow Skipping\", options) : helperMissing.call(depth0, \"__\", \"Allow Skipping\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-skipping\\\" value=\\\"true\\\" checked=\\\"checked\\\" data-bind=\\\"itemSessionControl.allowSkipping\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"If the candidate can skip the item, without submitting a response (default is true).\", options) : helperMissing.call(depth0, \"__\", \"If the candidate can skip the item, without submitting a response (default is true).\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/itemSessionControl/validateResponses -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-validate-responses\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Validate Responses\", options) : helperMissing.call(depth0, \"__\", \"Validate Responses\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-validate-responses\\\" value=\\\"true\\\" data-bind=\\\"itemSessionControl.validateResponses\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The candidate is not allowed to submit invalid responses.\", options) : helperMissing.call(depth0, \"__\", \"The candidate is not allowed to submit invalid responses.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .itemref-time-limits\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time Limits\", options) : helperMissing.call(depth0, \"__\", \"Time Limits\", options)))\n    + \"</h4>\\n\\n<!-- assessmentTest/timeLimits -->\\n    <div class=\\\"itemref-time-limits toggled\\\">\\n\\n\\n\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/maxTime -->\\n        <div class=\\\"grid-row\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-max-time\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum Duration\", options) : helperMissing.call(depth0, \"__\", \"Maximum Duration\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"max-time\\\" value=\\\"00:00:00\\\" data-duration=\\\"HH:mm:ss\\\" data-bind=\\\"timeLimits.maxTime\\\" data-bind-encoder=\\\"time\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum duration for this item.\", options) : helperMissing.call(depth0, \"__\", \"Maximum duration for this item.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n<!-- assessmentTest/testPart/assessmentSection/sectionPart/timeLimits/allowLateSubmission -->\\n        <div class=\\\"grid-row pseudo-label-box\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"itemref-allow-late-submission\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Late submission allowed\", options) : helperMissing.call(depth0, \"__\", \"Late submission allowed\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"itemref-allow-late-submission\\\" value=\\\"true\\\" data-bind=\\\"timeLimits.allowLateSubmission\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options) : helperMissing.call(depth0, \"__\", \"Whether a candidate's response that is beyond the maximum duration of the item should still be accepted.\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/itemref-props-weight', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"grid-row itemref-weight\\\">\\n    <div class=\\\"col-9\\\">\\n        <input data-bind=\\\"identifier\\\" data-validate=\\\"$notEmpty; $testIdFormat; $testIdAvailable(original=\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\" type=\\\"text\\\" value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n        <input data-bind=\\\"value\\\" data-validate=\\\"$notEmpty; $numeric;\\\" type=\\\"text\\\" value=\\\"\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-bind-encoder=\\\"float\\\" />\\n    </div>\\n    <div class=\\\"col-1\\\">\\n        <a class=\\\"itemref-weight-remove\\\" data-delete=\\\":parent .itemref-weight\\\">\\n            <span class=\\\"icon-bin\\\"></span>\\n        </a>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/rubricblock-props', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"rubric-feedback toggled\\\">\\n\\n        <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback/activated -->\\n        <div class=\\\"grid-row rubric-feedback-activated\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"activated\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Activated\", options) : helperMissing.call(depth0, \"__\", \"Activated\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" name=\\\"activated\\\" value=\\\"true\\\" data-bind=\\\"feedback.activated\\\" data-bind-encoder=\\\"boolean\\\" />\\n                    <span class=\\\"icon-checkbox\\\"></span>\\n                </label>\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the rubric block as a feedback block\", options) : helperMissing.call(depth0, \"__\", \"Set the rubric block as a feedback block\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback/outcome -->\\n        <div class=\\\"grid-row rubric-feedback-outcome\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"feedback-outcome\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Outcome\", options) : helperMissing.call(depth0, \"__\", \"Outcome\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"feedback-outcome\\\" data-bind=\\\"feedback.outcome\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_][a-zA-Z0-9_\\\\.-]*)?$);\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set outcome identifier the feedback block is related to\", options) : helperMissing.call(depth0, \"__\", \"Set outcome identifier the feedback block is related to\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback/matchValue -->\\n        <div class=\\\"grid-row rubric-feedback-match-value\\\">\\n            <div class=\\\"col-5\\\">\\n                <label for=\\\"feedback-match-value\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Match value\", options) : helperMissing.call(depth0, \"__\", \"Match value\", options)))\n    + \"</label>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <input type=\\\"text\\\" name=\\\"feedback-match-value\\\" data-bind=\\\"feedback.matchValue\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_][a-zA-Z0-9_\\\\.-]*)?$);\\\" />\\n            </div>\\n            <div class=\\\"col-1 help\\\">\\n                <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n                <div class=\\\"tooltip-content\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the value of the outcome that will activate the feedback block\", options) : helperMissing.call(depth0, \"__\", \"Set the value of the outcome that will activate the feedback block\", options)))\n    + \"\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"rubricblock-props props clearfix\\\">\\n\\n    <h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Rubric Block\", options) : helperMissing.call(depth0, \"__\", \"Rubric Block\", options)))\n    + \": \";\n  if (helper = helpers.orderIndex) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.orderIndex); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h3>\\n\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/views -->\\n    <!--\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"itemref-identifier\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Views\", options) : helperMissing.call(depth0, \"__\", \"Views\", options)))\n    + \" <abbr title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Required field\", options) : helperMissing.call(depth0, \"__\", \"Required field\", options)))\n    + \"\\\">*</abbr></label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <select name=\\\"view\\\" multiple=\\\"multiple\\\" data-bind=\\\"views\\\">\\n                <option value=\\\"author\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Author\", options) : helperMissing.call(depth0, \"__\", \"Author\", options)))\n    + \"</option>\\n                <option value=\\\"candidate\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Candidate\", options) : helperMissing.call(depth0, \"__\", \"Candidate\", options)))\n    + \"</option>\\n                <option value=\\\"proctor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Proctor\", options) : helperMissing.call(depth0, \"__\", \"Proctor\", options)))\n    + \"</option>\\n                <option value=\\\"scorer\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scorer\", options) : helperMissing.call(depth0, \"__\", \"Scorer\", options)))\n    + \"</option>\\n                <option value=\\\"testConstructor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test constructor\", options) : helperMissing.call(depth0, \"__\", \"Test constructor\", options)))\n    + \"</option>\\n                <option value=\\\"tutor\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Tutor\", options) : helperMissing.call(depth0, \"__\", \"Tutor\", options)))\n    + \"</option>\\n            </select>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Who can view the rubric block during the delivery.\", options) : helperMissing.call(depth0, \"__\", \"Who can view the rubric block during the delivery.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    -->\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/class -->\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"class\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Class\", options) : helperMissing.call(depth0, \"__\", \"Class\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"class\\\" data-bind=\\\"class\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_\\\\s][a-zA-Z0-9_\\\\s-]*)?$);\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the XHTML-QTI class of the rubric block.\", options) : helperMissing.call(depth0, \"__\", \"Set the XHTML-QTI class of the rubric block.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/id -->\\n    <!--\\n    <div class=\\\"grid-row\\\">\\n        <div class=\\\"col-5\\\">\\n            <label for=\\\"id\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Identifier\", options) : helperMissing.call(depth0, \"__\", \"Identifier\", options)))\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <input type=\\\"text\\\" name=\\\"id\\\" data-bind=\\\"id\\\" data-bind-encoder=\\\"string\\\" data-validate=\\\"$pattern(pattern=^([a-zA-Z_\\\\s][a-zA-Z0-9_\\\\s-]*)?$);\\\" />\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Set the XHTML-QTI identifier of the rubric block.\", options) : helperMissing.call(depth0, \"__\", \"Set the XHTML-QTI identifier of the rubric block.\", options)))\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    -->\\n\\n    <h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .rubric-feedback\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Feedback block\", options) : helperMissing.call(depth0, \"__\", \"Feedback block\", options)))\n    + \"</h4>\\n\\n    <!--assessmentTest/testPart/assessmentSection/sectionPart/rubricBlock/feedback -->\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.feedback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/controller/creator/templates/category-presets', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n\\n<h4 class=\\\"toggler closed\\\" data-toggle=\\\"~ .category-preset-group-\";\n  if (helper = helpers.groupId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.groupId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.groupLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.groupLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h4>\\n\\n<div class=\\\"category-preset-group-\";\n  if (helper = helpers.groupId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.groupId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" toggled\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.presets), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\\n\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <div class=\\\"grid-row pseudo-label-box category-preset\\\" data-qti-category=\\\"\";\n  if (helper = helpers.qtiCategory) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.qtiCategory); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <div class=\\\"col-1\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" name=\\\"category-preset-\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" value=\\\"\";\n  if (helper = helpers.qtiCategory) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.qtiCategory); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"/>\\n                <span class=\\\"icon-checkbox\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-10\\\">\\n            <label for=\\\"category-preset-\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</label>\\n        </div>\\n        <div class=\\\"col-1 help\\\">\\n            <span class=\\\"icon-help\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <div class=\\\"tooltip-content\\\">\\n                \";\n  if (helper = helpers.description) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.description); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n            </div>\\n        </div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  return buffer;\n  });\n});\n\n","define('taoQtiTest/controller/creator/templates/index',[\n    'tpl!taoQtiTest/controller/creator/templates/testpart',\n    'tpl!taoQtiTest/controller/creator/templates/section',\n    'tpl!taoQtiTest/controller/creator/templates/rubricblock',\n    'tpl!taoQtiTest/controller/creator/templates/itemref',\n    'tpl!taoQtiTest/controller/creator/templates/outcomes',\n    'tpl!taoQtiTest/controller/creator/templates/test-props',\n    'tpl!taoQtiTest/controller/creator/templates/testpart-props',\n    'tpl!taoQtiTest/controller/creator/templates/section-props',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props',\n    'tpl!taoQtiTest/controller/creator/templates/itemref-props-weight',\n    'tpl!taoQtiTest/controller/creator/templates/rubricblock-props',\n    'tpl!taoQtiTest/controller/creator/templates/category-presets'\n],\nfunction(\n    testPart,\n    section,\n    rubricBlock,\n    itemRef,\n    outcomes,\n    testProps,\n    testPartProps,\n    sectionProps,\n    itemRefProps,\n    itemRefPropsWeight,\n    rubricBlockProps,\n    categoryPresets\n){\n    'use strict';\n\n    /**\n     * Expose all the templates used by the test creator\n     * @exports taoQtiTest/controller/creator/templates/index\n     */\n    return {\n        'testpart'      : testPart,\n        'section'       : section,\n        'itemref'       : itemRef,\n        'rubricblock'   : rubricBlock,\n        'outcomes'      : outcomes,\n        'properties'    : {\n            'test'      : testProps,\n            'testpart'  : testPartProps,\n            'section'   : sectionProps,\n            'itemref'   : itemRefProps,\n            'itemrefweight'     : itemRefPropsWeight,\n            'rubricblock'       : rubricBlockProps,\n            'categorypresets'  : categoryPresets\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/property',[\n    'jquery',\n    'ui',\n    'core/databinder',\n    'taoQtiTest/controller/creator/templates/index'\n],\nfunction($, ui, DataBinder, templates){\n    'use strict';\n\n    /**\n     * @callback PropertyViewCallback\n     * @param {propertyView} propertyView - the view object\n     */\n\n    /**\n     * The PropertyView setup the property panel component\n     *\n     * @exports taoQtiTest/controller/creator/views/property\n     */\n    var propView = function propView(tmplName, model){\n        var $container = $('.test-creator-props');\n        var template = templates.properties[tmplName];\n        var $view;\n\n        /**\n         * Opens the view for the 1st time\n         */\n        var open = function propOpen(){\n            var databinder,\n                binderOptions = {\n                    templates: templates.properties\n                };\n            $container.children('.props').hide().trigger('propclose.propview');\n            $view = $(template(model)).appendTo($container).filter('.props');\n\n            //start listening for DOM compoenents inside the view\n            ui.startDomComponent($view);\n\n            //start the data binding\n            databinder = new DataBinder($view, model, binderOptions);\n            databinder.bind();\n\n            propValidation();\n\n            $view.trigger('propopen.propview');\n        };\n\n       /**\n        * Get the view container element\n        * @returns {jQueryElement}\n        */\n        var getView = function propGetView(){\n            return $view;\n        };\n\n       /**\n        * Check wheter the view is displayed\n        * @returns {boolean} true id opened\n        */\n        var isOpen = function propIsOpen(){\n            return $view.css('display') !== 'none';\n        };\n\n       /**\n        * Bind a callback on view open\n        * @param {PropertyViewCallback} cb\n        */\n        var onOpen = function propOnOpen(cb){\n            $view.on('propopen.propview', function(e){\n                e.stopPropagation();\n                cb();\n            });\n        };\n\n\n        /**\n         * Bind a callback on view close\n         * @param {PropertyViewCallback} cb\n         */\n        var onClose = function propOnClose(cb){\n            $view.on('propclose.propview', function(e){\n                e.stopPropagation();\n                cb();\n            });\n        };\n\n        /**\n         * Removes the property view\n         */\n        var destroy = function propDestroy(){\n            $view.remove();\n        };\n\n        /**\n         * Toggles the property view display\n         */\n        var toggle = function propToggle(){\n            $container.children('.props').not($view).hide().trigger('propclose.propview');\n            if(isOpen()){\n                $view.hide().trigger('propclose.propview');\n            } else {\n                $view.show().trigger('propopen.propview');\n            }\n        };\n\n       /**\n        * Set up the validation on the property view\n        * @private\n        */\n        function propValidation() {\n            var $togglers;\n            $view.on('validated.group', function(e, isValid){\n                if(e.namespace === 'group'){\n                    $togglers = $('#test-creator .property-toggler, #saver');\n                    if(isValid === true){\n                        $togglers.removeClass('disabled');\n                    } else {\n                        $togglers.addClass('disabled');\n                    }\n                }\n            });\n            $view.groupValidator();\n        }\n\n        return {\n            open : open,\n            getView : getView,\n            isOpen : isOpen,\n            onOpen : onOpen,\n            onClose : onClose,\n            destroy : destroy,\n            toggle : toggle\n        };\n    };\n\n    return propView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/actions',[\n'jquery',\n'taoQtiTest/controller/creator/views/property'],\nfunction($, propertyView){\n    'use strict';\n\n    var disabledClass = 'disabled';\n    var activeClass = 'active';\n    var btnOnClass = 'tlb-button-on';\n\n    /**\n     * Set up the property view for an element\n     * @param {jQueryElement} $container - that contains the property opener\n     * @param {String} template - the name of the template to give to the propertyView\n     * @param {Object} model - the model to bind\n     * @param {PropertyViewCallback} cb - execute at view setup phase\n     */\n    function properties ($container, template, model, cb) {\n        var propView = null;\n        $container.find('.property-toggler').on('click', function(e){\n            e.preventDefault();\n            var $elt = $(this);\n            if(!$(this).hasClass(disabledClass)){\n\n                $elt.blur(); //to remove the focus\n\n                if(propView === null){\n\n                    $container.addClass(activeClass);\n                    $elt.addClass(btnOnClass);\n\n                    propView = propertyView(template, model);\n                    propView.open();\n\n                    propView.onOpen(function(){\n                        $container.addClass(activeClass);\n                        $elt.addClass(btnOnClass);\n                    });\n                    propView.onClose(function(){\n                        $container.removeClass(activeClass);\n                        $elt.removeClass(btnOnClass);\n                    });\n\n                    if(typeof cb === 'function'){\n                        cb(propView);\n                    }\n                } else {\n                    propView.toggle();\n                }\n            }\n        });\n    }\n\n\n    /**\n     * Enable to move an element\n     * @param {jQueryElement} $actionContainer - where the mover is\n     * @param {String} containerClass - the cssClass of the element container\n     * @param {String} elementClass - the cssClass to identify elements\n     */\n    function move ($actionContainer, containerClass, elementClass) {\n        var $element = $actionContainer.parents('.' + elementClass);\n        var $container = $element.parents('.' + containerClass );\n\n        //move up an element\n        $('.move-up', $actionContainer).click(function(e){\n            var $elements, index;\n\n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            index = $elements.index($element);\n            if (index > 0) {\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertBefore($('.' + elementClass + ' :eq(' + (index - 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n\n        //move down an element\n        $('.move-down', $actionContainer).click(function(e){\n            var $elements, index;\n\n            //prevent default and click during animation\n            e.preventDefault();\n            if($element.is(':animated')){\n                return false;\n            }\n\n            //get the position\n            $elements = $('.' + elementClass, $container);\n            index = $elements.index($element);\n            if (index < ($elements.length - 1) && $elements.length > 1) {\n                $element.fadeOut(200, function(){\n                    $element\n                        .insertAfter($('.' + elementClass + ' :eq(' + (index + 1) + ')', $container))\n                        .fadeIn(400, function(){\n                            $container.trigger('change');\n                        });\n                });\n            }\n        });\n    }\n\n    /**\n     * Update the movable state of an element\n     * @param {jQueryElement} $container - the movable elements (scopped)\n     * @param {String} elementClass - the cssClass to identify elements\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function movable ($container, elementClass, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n\n            var index = $container.index($elt);\n            var $moveUp = $('.move-up', $actionContainer);\n            var $moveDown = $('.move-down', $actionContainer);\n\n            //only one test part, no moving\n            if( $container.length === 1 ){\n                $moveUp.addClass(disabledClass);\n                $moveDown.addClass(disabledClass);\n\n            //testpart is the first, only moving down\n            } else if(index === 0) {\n                $moveUp.addClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n\n            //testpart is the lasst, only moving up\n            } else if ( index >= ($container.length - 1) ) {\n                $moveDown.addClass(disabledClass);\n                $moveUp.removeClass(disabledClass);\n\n            //or enable moving top/bottom\n            } else {\n                $moveUp.removeClass(disabledClass);\n                $moveDown.removeClass(disabledClass);\n            }\n         });\n    }\n\n    /**\n     * Update the removable state of an element\n     * @param {jQueryElement} $container - that contains the removable action\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function removable ($container, actionContainerElt){\n        $container.each(function(){\n            var $elt = $(this);\n            var $actionContainer = $(actionContainerElt, $elt);\n            var $delete = $('[data-delete]', $actionContainer);\n\n            if($container.length <= 1){\n                $delete.addClass(disabledClass);\n            } else {\n                $delete.removeClass(disabledClass);\n            }\n        });\n    }\n\n    /**\n     * Disable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function disable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').addClass(disabledClass);\n    }\n\n    /**\n     * Enable all the actions of the target\n     * @param {jQueryElement} $container - that contains the the actions\n     * @param {String} actionContainerElt - the element name that contains the actions\n     */\n    function enable($container, actionContainerElt){\n        $container.find(actionContainerElt).find('[data-delete],.move-up,.move-down').removeClass(disabledClass);\n    }\n\n    /**\n     * The actions gives you shared behavior for some actions.\n     *\n     * @exports taoQtiTest/controller/creator/views/actions\n     */\n    return {\n        properties  : properties,\n        move        : move,\n        removable   : removable,\n        movable     : movable,\n        disable     : disable,\n        enable      : enable\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * This helper manages the category selection UI:\n * - either via a text entry field that allow to enter any custom categories\n * - either via displaying grouped checkboxes that allow to select any categories presets\n * All categories are then grouped and given to this object's listeners, as they will later end up in the same model field.\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/categorySelector',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'core/eventifier',\n    'ui/tooltip',\n    'taoQtiTest/controller/creator/templates/index',\n    'select2'\n], function($, _, __, eventifier, tooltip, templates) {\n    'use strict';\n\n    var allPresets = [],\n        allQtiCategoriesPresets = [];\n\n\n    function categorySelectorFactory($container) {\n        var categorySelector,\n\n            $presetsContainer = $container.find('.category-presets'),\n            $presetsCheckboxes,\n            $customCategoriesSelect = $container.find('[name=category-custom]');\n\n        /**\n         * Read the form state from the DOM and trigger an event with the result, so the listeners can update the item/section model\n         * @fires categorySelector#category-change\n         */\n        function updateCategories() {\n            var selectedCategories,\n                indeterminatedCategories,\n\n                presetSelected = $container\n                    .find('.category-preset input:checked')\n                    .toArray()\n                    .map(function(categoryEl) {\n                        return categoryEl.value;\n                    }),\n                presetIndeterminate = $container\n                    .find('.category-preset input:indeterminate')\n                    .toArray()\n                    .map(function(categoryEl) {\n                        return categoryEl.value;\n                    }),\n                customSelected = $customCategoriesSelect.siblings('.select2-container').find('.select2-search-choice').not('.partial')\n                    .toArray()\n                    .map(function(categoryEl) {\n                        return categoryEl.textContent && categoryEl.textContent.trim();\n                    }),\n                customIndeterminate = $customCategoriesSelect.siblings('.select2-container').find('.select2-search-choice.partial')\n                    .toArray()\n                    .map(function(categoryEl) {\n                        return categoryEl.textContent && categoryEl.textContent.trim();\n                    });\n\n            selectedCategories = presetSelected.concat(customSelected);\n            indeterminatedCategories = presetIndeterminate.concat(customIndeterminate);\n\n            /**\n             * @event categorySelector#category-change\n             * @param {String[]} allCategories\n             * @param {String[]} indeterminate\n             */\n            this.trigger('category-change', selectedCategories, indeterminatedCategories);\n        }\n\n        categorySelector = {\n            /**\n             * Create the category selection form\n             *\n             * @param {Array} [currentCategories] - all categories currently associated to the item. If applied to a section,\n             * contains all the categories applied to at least one item of the section.\n             */\n            createForm: function createForm(currentCategories) {\n                var self = this,\n                    presetsTpl = templates.properties.categorypresets,\n                    customCategories = _.difference(currentCategories, allQtiCategoriesPresets);\n\n                // add preset checkboxes\n                $presetsContainer.append(\n                    presetsTpl(allPresets)\n                );\n\n                $presetsContainer.on('click', function(e) {\n                    var $preset = $(e.target).closest('.category-preset'),\n                        $checkbox;\n\n                    if ($preset.length) {\n                        $checkbox = $preset.find('input');\n                        $checkbox.prop('indeterminate', false);\n\n                        _.defer(function() {\n                            updateCategories.call(self);\n                        });\n                    }\n                });\n\n                // init custom categories field\n                $customCategoriesSelect.select2({\n                    width: '100%',\n                    tags : customCategories,\n                    multiple : true,\n                    tokenSeparators: [\",\", \" \", \";\"],\n                    formatNoMatches : function(){\n                        return __('Enter a custom category');\n                    },\n                    maximumInputLength : 32\n                }).on('change', function(){\n                    updateCategories.call(self);\n                });\n\n                // enable help tooltips\n                tooltip($container);\n            },\n\n            /**\n             * Check/Uncheck boxes and fill the custom category field to match the new model\n             * @param {String[]} selected - categories associated with an item, or with all the items of the same section\n             * @param {String[]} [indeterminate] - categories in an indeterminate state at a section level\n             */\n            updateFormState: function updateFormState(selected, indeterminate) {\n                var customCategories;\n\n                indeterminate = indeterminate || [];\n\n                customCategories = _.difference(selected.concat(indeterminate), allQtiCategoriesPresets);\n\n                // Preset categories\n\n                $presetsCheckboxes = $container.find('.category-preset input');\n                $presetsCheckboxes.each(function() {\n                    var category = this.value;\n\n                    this.indeterminate = false;\n                    this.checked = false;\n\n                    if (indeterminate.indexOf(category) !== -1) {\n                        this.indeterminate = true;\n                    } else if (selected.indexOf(category) !== -1) {\n                        this.checked = true;\n                    }\n                });\n\n                // Custom categories\n\n                $customCategoriesSelect.select2('val', customCategories);\n\n                $customCategoriesSelect.siblings('.select2-container').find('.select2-search-choice').each(function(){\n                    var $li = $(this);\n                    var content = $li.find('div').text();\n                    if(indeterminate.indexOf(content) !== -1){\n                        $li.addClass('partial');\n                    }\n                });\n            }\n        };\n\n        eventifier(categorySelector);\n\n        return categorySelector;\n    }\n\n    /**\n     * @param {Object[]} presets - expected format:\n     * [\n     *  {\n     *      groupId: 'navigation',\n     *      groupLabel: 'Test Navigation',\n     *      presets: [\n     *          {\n     *              id: 'nextPartWarning',\n     *              label: 'Next Part Warning',\n     *              qtiCategory : 'x-tao-option-nextPartWarning',\n     *              description : 'Displays a warning before the user finishes a part'\n *              },\n     *          ...\n     *      ]\n     *  },\n     *  ...\n     * ]\n     */\n    categorySelectorFactory.setPresets = function setPresets(presets) {\n        if (_.isArray(presets)) {\n            allPresets = presets;\n            allQtiCategoriesPresets = extractCategoriesFromPresets();\n        }\n    };\n\n    /**\n     * Extract the qtiCategory property of all presets of all groups\n     * @returns {String[]}\n     */\n    function extractCategoriesFromPresets() {\n        return allPresets.reduce(function (prev, current) {\n            var groupIds = _.pluck(current.presets, 'qtiCategory');\n            return prev.concat(groupIds);\n        }, []);\n    }\n\n    return categorySelectorFactory;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiTest/controller/creator/helpers/sectionCategory',[\n    'lodash',\n    'i18n',\n    'core/errorHandler'\n], function (_, __, errorHandler){\n\n    'use strict';\n\n    var _ns = '.sectionCategory';\n\n    /**\n     * Check if the given object is a valid assessmentSection model object\n     *\n     * @param {object} model\n     * @returns {boolean}\n     */\n    function isValidSectionModel(model){\n        return (_.isObject(model) && model['qti-type'] === 'assessmentSection' && _.isArray(model.sectionParts));\n    }\n\n    /**\n     * Set an array of categories to the section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} selected - all categories active for the whole section\n     * @param {array} partial - only categories in an indeterminate state\n     * @returns {undefined}\n     */\n    function setCategories(model, selected, partial){\n\n        var toRemove,\n            toAdd,\n            currentCategories = getCategories(model);\n\n        partial = partial || [];\n\n        //the categories that are no longer in the new list of categories should be removed\n        toRemove = _.difference(currentCategories.all, selected.concat(partial));\n\n        //the categories that are not in the current categories collection should be added to the children\n        toAdd = _.difference(selected, currentCategories.propagated);\n\n        //process the modification\n        addCategories(model, toAdd);\n        removeCategories(model, toRemove);\n    }\n\n    /**\n     * Get the categories assign to the section model, infered by its interal itemRefs\n     *\n     * @param {object} model\n     * @returns {object}\n     */\n    function getCategories(model){\n        var categories,\n            arrays,\n            union,\n            propagated,\n            partial;\n\n        if(isValidSectionModel(model)){\n            categories = _.map(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    return _.compact(itemRef.categories);\n                }\n            });\n            //array of categories\n            arrays = _.values(categories);\n            union = _.union.apply(null, arrays);\n\n            //categories that are common to all itemRef\n            propagated = _.intersection.apply(null, arrays);\n\n            //the categories that are only partially covered on the section level : complementary of \"propagated\"\n            partial = _.difference(union, propagated);\n\n            return {\n                all : union.sort(),\n                propagated : propagated.sort(),\n                partial : partial.sort()\n            };\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Add an array of categories to a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function addCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef'){\n                    if(!_.isArray(itemRef.categories)){\n                        itemRef.categories = [];\n                    }\n                    itemRef.categories = _.union(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    /**\n     * Remove an array of categories from a section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {array} categories\n     * @returns {undefined}\n     */\n    function removeCategories(model, categories){\n        if(isValidSectionModel(model)){\n            _.each(model.sectionParts, function (itemRef){\n                if(itemRef['qti-type'] === 'assessmentItemRef' && _.isArray(itemRef.categories)){\n                    itemRef.categories = _.difference(itemRef.categories, categories);\n                }\n            });\n        }else{\n            errorHandler.throw(_ns, 'invalid tool config format');\n        }\n    }\n\n    return {\n        isValidSectionModel : isValidSectionModel,\n        setCategories : setCategories,\n        getCategories : getCategories,\n        addCategories : addCategories,\n        removeCategories : removeCategories\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/qtiTest',[\n    'lodash',\n    'i18n',\n    'taoQtiTest/controller/creator/helpers/outcome',\n    'taoQtiTest/controller/creator/helpers/qtiElement'\n], function(_, __, outcomeHelper, qtiElementHelper){\n    'use strict';\n\n    /**\n     * Utils to manage the QTI Test model\n     * @exports taoQtiTest/controller/creator/qtiTestHelper\n     */\n    var qtiTestHelper = {\n\n        /**\n         * Extract qti identifiers from a model\n         * @param {Object} obj - the model to extract id from\n         * @returns {Array} the extracted identifiers\n         */\n        extractIdentifiers : function extractIdentifiers(obj){\n            var self = this;\n            var identifiers = [];\n            if(_.has(obj, 'identifier')){\n                identifiers = identifiers.concat(obj.identifier.toLowerCase());\n            }\n            _.flatten(_.forEach(obj, function(value) {\n                identifiers = identifiers.concat(typeof value === \"object\" ? self.extractIdentifiers(value) : []);\n            }), true);\n            return identifiers;\n        },\n\n        /**\n         * Get a valid and avialable qti identifier\n         * @param {String} qtiType - the type of element you want an id for\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {String} the identifier\n         */\n        getIdentifier : function getIdentifier(qtiType, lockedIdentifiers){\n            var index = 1;\n            var suggestion;\n            var glue =  '-';\n\n            do {\n                suggestion = qtiType +  glue + (index++);\n            } while(_.contains(lockedIdentifiers, suggestion.toLowerCase()));\n\n            lockedIdentifiers.push(suggestion.toLowerCase());\n\n            return suggestion;\n        },\n\n        /**\n         * Gives you a validator that check QTI id format\n         * @returns {Object} the validator\n         */\n        idFormatValidator : function idFormatValidator(){\n            var qtiIdPattern = /^[_a-zA-Z]{1}[a-zA-Z0-9\\-._]{0,31}$/i;\n            return {\n                name : 'idFormat',\n                message : __('is not a valid identifier (alphanum, underscore, dash and dots)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Gives you a validator that check QTI id format of the test (it is different from the others...)\n         * @returns {Object} the validator\n         */\n        testidFormatValidator : function testidFormatValidator(){\n            var qtiTestIdPattern = /^\\S+$/;\n            return {\n                name : 'testIdFormat',\n                message : __('is not a valid identifier (everything except spaces)'),\n                validate : function(value, callback){\n                    if(typeof callback === 'function'){\n                        callback(qtiTestIdPattern.test(value));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Gives you a validator that check if a QTI id is available\n         * @param {Array} lockedIdentifiers - the list of identifiers you cannot use anymore\n         * @returns {Object} the validator\n         */\n        idAvailableValidator : function idAvailableValidator(lockedIdentifiers){\n            return {\n                name : 'testIdAvailable',\n                message : __('is already used in the test.'),\n                validate : function(value, callback, options){\n                    if(typeof callback === 'function'){\n                        callback(!_.contains(_.values(lockedIdentifiers), value.toLowerCase()) || (options.original && value === options.original));\n                    }\n                }\n            };\n        },\n\n        /**\n         * Does the value contains the type type\n         * @param {Object} value\n         * @param {string} type\n         * @returns {boolean}\n         */\n        filterQtiType : function filterQtiType (value, type){\n            return value['qti-type'] && value['qti-type'] === type;\n        },\n\n        /**\n         * Add the 'qti-type' properties to object that miss it, using the parent key name\n         * @param {Object|Array} collection\n         * @param {string} parentType\n         */\n        addMissingQtiType : function addMissingQtiType(collection, parentType) {\n            var self = this;\n            _.forEach(collection, function(value, key) {\n                if (_.isObject(value) && !_.isArray(value) && !_.has(value, 'qti-type')) {\n                    if (_.isNumber(key)) {\n                        if (parentType) {\n                            value['qti-type'] = parentType;\n                        }\n                    } else {\n                        value['qti-type'] = key;\n                    }\n                }\n                if (_.isArray(value)) {\n                    self.addMissingQtiType(value, key.replace(/s$/, ''));\n                } else if (_.isObject(value)) {\n                    self.addMissingQtiType(value);\n                }\n            });\n        },\n\n        /**\n         * Applies consolidation rules to the model\n         * @param {Object} model\n         * @returns {Object}\n         */\n        consolidateModel : function consolidateModel(model){\n            if(model && model.testParts && _.isArray(model.testParts)){\n\n                _.forEach(model.testParts, function(testPart) {\n\n                    if(testPart.assessmentSections && _.isArray(testPart.assessmentSections)){\n\n                        _.forEach(testPart.assessmentSections, function(assessmentSection) {\n\n                            //remove ordering is shuffle is false\n                            if(assessmentSection.ordering &&\n                                assessmentSection.ordering.shuffle !== undefined && assessmentSection.ordering.shuffle === false){\n                                delete assessmentSection.ordering;\n                            }\n\n                            // clean categories (QTI identifier can't be empty string)\n                            if(assessmentSection.sectionParts && _.isArray(assessmentSection.sectionParts)) {\n                                _.forEach(assessmentSection.sectionParts, function(part) {\n                                    if(part.categories && _.isArray(part.categories) && (part.categories.length === 0 || part.categories[0].length === 0)) {\n                                        part.categories = [];\n                                    }\n                                });\n                            }\n\n                            if(assessmentSection.rubricBlocks && _.isArray(assessmentSection.rubricBlocks)) {\n\n                                //remove rubrick blocks if empty\n                                if (assessmentSection.rubricBlocks.length === 0 ||\n                                    (assessmentSection.rubricBlocks.length === 1 && assessmentSection.rubricBlocks[0].content.length === 0) ) {\n\n                                    delete assessmentSection.rubricBlocks;\n                                }\n                                //ensure the view attribute is present\n                                else if(assessmentSection.rubricBlocks.length > 0){\n                                    _.forEach(assessmentSection.rubricBlocks, function(rubricBlock){\n                                        rubricBlock.views = ['candidate'];\n                                        //change once views are supported\n                                        //if(rubricBlock && rubricBlock.content && (!rubricBlock.views || (_.isArray(rubricBlock.views) && rubricBlock.views.length === 0))){\n                                        //rubricBlock.views = ['candidate'];\n                                        //}\n                                    });\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n            return model;\n        },\n\n        /**\n         * Validates the provided model\n         * @param {Object} model\n         * @throws {Error} if the model is not valid\n         */\n        validateModel: function validateModel(model) {\n            var outcomes = _.indexBy(outcomeHelper.listOutcomes(model));\n\n            _.forEach(model.testParts, function (testPart) {\n                _.forEach(testPart.assessmentSections, function (assessmentSection) {\n                    _.forEach(assessmentSection.rubricBlocks, function (rubricBlock) {\n                        var feedbackBlock = qtiElementHelper.lookupElement(rubricBlock, 'rubricBlock.div.feedbackBlock', 'content');\n                        if (feedbackBlock && !outcomes[feedbackBlock.outcomeIdentifier]) {\n                            throw new Error(__('The outcome \"%s\" does not exist, but it is referenced by a feedback block!', feedbackBlock.outcomeIdentifier));\n                        }\n                    });\n                });\n            });\n        }\n    };\n\n    return  qtiTestHelper;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/itemref',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/helpers/categorySelector',\n    'taoQtiTest/controller/creator/helpers/sectionCategory',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'taoQtiTest/controller/creator/templates/index'\n],\nfunction(\n    $,\n    _,\n    __,\n    actions,\n    categorySelectorFactory,\n    sectionCategory,\n    qtiTestHelper,\n    templates\n){\n    'use strict';\n\n    /**\n     * We need to resize the itemref in case of long labels\n     */\n    var resize = _.throttle(function resize(){\n        var $refs = $('.itemrefs').first();\n        var $actions = $('.itemref .actions').first();\n        var width = $refs.innerWidth() - $actions.outerWidth();\n        $('.itemref > .title').width(width);\n    }, 100);\n\n    /**\n     * Set up an item ref: init action behaviors. Called for each one.\n     *\n     * @param {Object} creatorContext\n     * @param {Object} refModel - the data model to bind to the item ref\n     * @param {Object} sectionModel - the parent data model to inherit\n     * @param {jQueryElement} $itemRef - the itemRef element to set up\n     */\n    function setUp (creatorContext, refModel, sectionModel, $itemRef) {\n\n        var modelOverseer = creatorContext.getModelOverseer();\n        var $actionContainer = $('.actions', $itemRef);\n\n        // set item session control to use test part options if section level isn't set\n        if (!refModel.itemSessionControl) {\n            refModel.itemSessionControl = {};\n        }\n        _.defaults(refModel.itemSessionControl, sectionModel.itemSessionControl);\n\n        actions.properties($actionContainer, 'itemref', refModel, propHandler);\n        actions.move($actionContainer, 'itemrefs', 'itemref');\n\n        resize();\n\n        /**\n         * Perform some binding once the property view is create\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            categoriesProperty(propView.getView());\n            weightsProperty(propView);\n\n            $itemRef.parents('.testpart').on('delete', removePropHandler);\n            $itemRef.parents('.section').on('delete', removePropHandler);\n            $itemRef.on('delete', removePropHandler);\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         */\n        function categoriesProperty($view){\n            var categorySelector = categorySelectorFactory($view),\n                $categoryField = $view.find('[name=\"itemref-category\"]');\n\n            categorySelector.createForm();\n            categorySelector.updateFormState(refModel.categories);\n\n            $view.on('propopen.propview', function(){\n                categorySelector.updateFormState(refModel.categories);\n            });\n\n            categorySelector.on('category-change', function(selected) {\n                // Let the binder update the model by going through the category hidden field\n                $categoryField.val(selected.join(','));\n                $categoryField.trigger('change');\n\n                modelOverseer.trigger('category-change', selected);\n            });\n        }\n\n\n        /**\n         * Setup the weights properties\n         */\n        function weightsProperty(propView) {\n            var $view = propView.getView(),\n                $weightList = $view.find('[data-bind-each=\"weights\"]'),\n                weightTpl = templates.properties.itemrefweight;\n\n            $view.find('.itemref-weight-add').on('click', function(e) {\n                var defaultData = {\n                    value: 1,\n                    identifier: (refModel.weights.length === 0)\n                        ? 'WEIGHT'\n                        : qtiTestHelper.getIdentifier('WEIGHT', qtiTestHelper.extractIdentifiers(refModel))\n                };\n                e.preventDefault();\n\n                $weightList.append(weightTpl(defaultData));\n                $weightList.trigger('add.internalbinder'); // trigger model update\n\n                $view.groupValidator();\n            });\n        }\n    }\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    function listenActionState (){\n\n        $('.itemrefs').each(function(){\n            actions.movable($('.itemref', $(this)), 'itemref', '.actions');\n        });\n\n        $(document)\n            .on('delete', function(e){\n                var $parent;\n                var $target = $(e.target);\n                if($target.hasClass('itemref')){\n                    $parent = $target.parents('.itemrefs');\n                    actions.disable($parent.find('.itemref'), '.actions');\n                }\n            })\n            .on('add change undo.deleter deleted.deleter', '.itemrefs',  function(e){\n                var $parent;\n                var $target = $(e.target);\n                if($target.hasClass('itemref') || $target.hasClass('itemrefs')){\n                    $parent = $('.itemref', $target.hasClass('itemrefs') ? $target : $target.parents('.itemrefs'));\n                    actions.enable($parent, '.actions');\n                    actions.movable($parent, 'itemref', '.actions');\n                }\n            });\n    }\n\n    /**\n     * The itemrefView setup itemref related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/itemref\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState,\n        resize : resize\n    };\n\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/encoders/dom2qti',[\n    'jquery',\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/qtiElement',\n    'taoQtiTest/controller/creator/helpers/baseType'\n], function ($, _, qtiElementHelper, baseType) {\n    'use strict';\n\n    /**\n     * A mapping of QTI-XML node and attributes names in order to keep the camel case form\n     * @type {Object}\n     */\n    var normalizedNodes = {\n        feedbackblock: 'feedbackBlock',\n        outcomeidentifier: 'outcomeIdentifier',\n        showhide: 'showHide',\n        printedvariable: 'printedVariable',\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    /**\n     * Some Nodes have attributes that needs typing during decoding.\n     * @type {Object}\n     */\n    var typedAttributes = {\n        printedVariable: {\n            identifier:       baseType.getConstantByName('identifier'),\n            powerForm:        baseType.getConstantByName('boolean'),\n            base:             baseType.getConstantByName('intOrIdentifier'),\n            index:            baseType.getConstantByName('intOrIdentifier'),\n            delimiter:        baseType.getConstantByName('string'),\n            field:            baseType.getConstantByName('string'),\n            mappingIndicator: baseType.getConstantByName('string')\n        }\n    };\n\n    /**\n     * Get the list of objects attributes to encode\n     * @param {Object} object\n     * @returns {Array}\n     */\n    function getAttributes(object) {\n        return _.omit(object, [\n            'qti-type',\n            'content',\n            'xmlBase',\n            'lang',\n            'label'\n        ]);\n    }\n\n    /**\n     * Encode object's properties to xml/html string attributes\n     * @param {Object} attributes\n     * @returns {String}\n     */\n    function attrToStr(attributes) {\n        return _.reduce(attributes, function (acc, value, key) {\n            if (_.isNumber(value) || _.isBoolean(value) || (_.isString(value) && !_.isEmpty(value))) {\n                return acc + ' ' + key + '=\"' + value + '\" ';\n            }\n            return acc;\n        }, '');\n    }\n\n    /**\n     * Ensures the nodeName has a normalized form:\n     * - standard HTML tags are in lower case\n     * - QTI-XML tags are in the right form\n     * @param {String} nodeName\n     * @returns {String}\n     */\n    function normalizeNodeName(nodeName) {\n        var normalized = (nodeName) ? nodeName.toLocaleLowerCase() : '';\n        return normalizedNodes[normalized] || normalized;\n    }\n\n    /**\n     * This encoder is used to transform DOM to JSON QTI and JSON QTI to DOM.\n     * It works now for the rubricBlocks components.\n     * @exports creator/encoders/dom2qti\n     */\n    return {\n\n        /**\n         * Encode an object to a dom string\n         * @param {Object} modelValue\n         * @returns {String}\n         */\n        encode: function (modelValue) {\n            var self = this,\n                startTag;\n\n            if (_.isArray(modelValue)) {\n                return _.reduce(modelValue, function (result, value) {\n                    return result + self.encode(value);\n                }, '');\n            } else if (_.isObject(modelValue) && modelValue['qti-type']) {\n                if (modelValue['qti-type'] === 'textRun') {\n                    return modelValue.content;\n                }\n                startTag = '<' + modelValue['qti-type'] + attrToStr(getAttributes(modelValue));\n                if (modelValue.content) {\n                    return startTag + '>' + self.encode(modelValue.content) + '</' + modelValue['qti-type'] + '>';\n                } else {\n                    return startTag + '/>';\n                }\n            }\n            return '' + modelValue;\n        },\n\n        /**\n         * Decode a string that represents a DOM to a QTI formatted object\n         * @param {String} nodeValue\n         * @returns {Array}\n         */\n        decode: function (nodeValue) {\n            var self = this;\n            var $nodeValue = (nodeValue instanceof $) ? nodeValue : $(nodeValue);\n            var result = [];\n            var nodeName;\n\n            _.forEach($nodeValue, function (elt) {\n                var object;\n                if (elt.nodeType === 3) {\n                    if (!_.isEmpty($.trim(elt.nodeValue))) {\n                        result.push(qtiElementHelper.create('textRun', {\n                            'content': elt.nodeValue,\n                            'xmlBase': ''\n                        }));\n                    }\n                } else if (elt.nodeType === 1) {\n                    nodeName = normalizeNodeName(elt.nodeName);\n\n                    object = _.merge(qtiElementHelper.create(nodeName, {\n                        'id': '',\n                        'class': '',\n                        'xmlBase': '',\n                        'lang': '',\n                        'label': ''\n                    }),\n                    _.transform(elt.attributes, function (acc, value) {\n                        var attrName = normalizeNodeName(value.nodeName);\n                        if (attrName) {\n                            if (typedAttributes[nodeName] && typedAttributes[nodeName][attrName]) {\n                                acc[attrName] = baseType.getValue(typedAttributes[nodeName][attrName], value.nodeValue);\n                            } else {\n                                acc[attrName] = value.nodeValue;\n                            }\n                        }\n                    }));\n                    if (elt.childNodes.length > 0) {\n                        object.content = self.decode(elt.childNodes);\n                    }\n                    result.push(object);\n                }\n            });\n            return result;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * Common basic util functions\n */\ndefine('taoQtiItem/qtiItem/helper/util',['lodash'], function(_){\n    'use strict';\n\n    var util = {\n\n        buildSerial : function buildSerial(prefix){\n            var id = prefix || '';\n            var chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n            for(var i = 0; i < 22; i++){\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n\n        /**\n         * Generates an id for a Qti element (the generation is different from identifier)\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildId : function buildId(item, prefix){\n            var id;\n            var usedIds;\n            var i = 1;\n            var suffix = '';\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            usedIds   = item.getUsedIds();\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(_.contains(usedIds, id)){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        /**\n         * Generates an identifier for a Qti element\n         * @param {Object} item - the element related item\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {String} the identifier\n         * @throws {TypeError} if there is no item\n         */\n        buildIdentifier : function buildIdentifier(item, prefix, useSuffix){\n\n            var id;\n            var usedIds;\n            var suffix = '';\n            var i = 1;\n            var exists = false;\n\n            if(!item){\n                throw new TypeError('A item is required to generate a unique identifier');\n            }\n\n            if(!prefix){\n                throw new TypeError('Prefix is required to build an identifier');\n            }\n\n            usedIds   = item.getUsedIdentifiers();\n            useSuffix = _.isUndefined(useSuffix) ? true : useSuffix;\n\n            if(prefix){\n                prefix = prefix.replace(/_[0-9]+$/ig, '_') //detect incremental id of type choice_12, response_3, etc.\n                               .replace(/[^a-zA-Z0-9_]/ig, '_')\n                               .replace(/(_)+/ig, '_');\n                if(useSuffix){\n                    suffix = '_' + i;\n                }\n            }\n\n            do{\n                exists = false;\n                id = prefix + suffix;\n                if(usedIds[id]){\n                    exists = true;\n                    suffix = '_' + i;\n                    i++;\n                }\n            } while(exists);\n\n            return id;\n        },\n\n        findInCollection : function findInCollection(element, collectionNames, searchedSerial){\n\n            var found = null;\n\n            if(_.isString(collectionNames)){\n                collectionNames = [collectionNames];\n            }\n\n            if(_.isArray(collectionNames)){\n\n                _.each(collectionNames, function(collectionName){\n\n                    //get collection to search in (resolving case like interaction.choices.0\n                    var collection = element;\n                    _.each(collectionName.split('.'), function(nameToken){\n                        collection = collection[nameToken];\n                    });\n                    var elt = collection[searchedSerial];\n\n                    if(elt){\n                        found = {'parent' : element, 'element' : elt};\n                        return false;//break the each loop\n                    }\n\n                    //search inside each elements:\n                    _.each(collection, function(elt){\n\n                        if(_.isFunction(elt.find)){\n                            found = elt.find(searchedSerial);\n                            if(found){\n                                return false;//break the each loop\n                            }\n                        }\n\n                    });\n\n                    if(found){\n                        return false;//break the each loop\n                    }\n\n                });\n\n            }else{\n\n                throw new Error('invalid argument : collectionNames must be an array or a string');\n            }\n\n            return found;\n        },\n        addMarkupNamespace : function addMarkupNamespace(markup, ns){\n            if(ns) {\n                markup = markup.replace(/<(\\/)?([a-z:]+)(\\s?)([^><]*)>/g, function($0, $1, $2, $3, $4){\n                    if($2.indexOf(':')>0){\n                        return $0;\n                    }\n                    $1 = $1 || '';\n                    $3 = $3 || '';\n                    return '<'+ $1 + ns + ':'+$2+$3+$4+'>';\n                });\n                return markup;\n            }\n            return markup;\n\n        },\n        removeMarkupNamespaces : function removeMarkupNamespace(markup){\n            return markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, '<$1$3>');\n        },\n        getMarkupUsedNamespaces : function getMarkupUsedNamespaces(markup){\n            var namespaces = [];\n            markup.replace(/<(\\/)?(\\w*):([^>]*)>/g, function(original, slash, ns, node){\n                namespaces.push(ns);\n                return '<'+slash+node+'>';\n            });\n            return _.uniq(namespaces);\n        }\n    };\n\n    return util;\n});\n\n","define('taoQtiItem/qtiItem/helper/rendererConfig',['lodash', 'jquery'], function(_, $){\n\n    var rendererConfigHelper = {};\n\n    rendererConfigHelper.getOptionsFromArguments = function(args){\n\n        var options = {\n            data : {},\n            placeholder : null,\n            subclass : '',\n            renderer : null\n        };\n        \n        _.each(args, function(arg){\n            if(arg){\n                if(arg.isRenderer){\n                    options.renderer = arg;\n                }else if(arg instanceof $ && arg.length){\n                    options.placeholder = arg;\n                }else if(_.isString(arg)){\n                    options.subclass = arg;\n                }else if(_.isPlainObject(arg)){\n                    options.data = arg;\n                }else{\n                    console.log('invalid arg', arg, args);\n                }\n            }\n        });\n        \n        return options;\n    };\n    \n    return rendererConfigHelper;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiItem/core/Element',[\n    'jquery',\n    'lodash',\n    'class',\n    'core/logger',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, Class, loggerFactory, util, rendererConfig){\n    'use strict';\n\n    var _instances = {};\n\n    /**\n     * Create a logger\n     */\n    var logger = loggerFactory('taoQtiItem/qtiItem/core/Element');\n\n    var Element = Class.extend({\n        qtiClass : '',\n        serial : '',\n        rootElement : null,\n        init : function(serial, attributes){\n\n            //init own attributes\n            this.attributes = {};\n\n            //system properties, for item creator internal use only\n            this.metaData = {};\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            if(!serial){\n                serial = util.buildSerial(this.qtiClass + '_');\n            }\n\n            if(serial && (typeof serial !== 'string' || !serial.match(/^[a-z_0-9]*$/i))){\n                throw 'invalid QTI serial : (' + (typeof serial) + ') ' + serial;\n            }\n\n            if(!_instances[serial]){\n                _instances[serial] = this;\n                this.serial = serial;\n                this.setAttributes(attributes || {});\n            }else{\n                throw 'a QTI Element with the same serial already exists ' + serial;\n            }\n\n            if(typeof this.initContainer === 'function'){\n                this.initContainer(arguments[2] || '');\n            }\n            if(typeof this.initObject === 'function'){\n                this.initObject();\n            }\n        },\n        is : function(qtiClass){\n            return (qtiClass === this.qtiClass);\n        },\n        placeholder : function(){\n            return '{{' + this.serial + '}}';\n        },\n        getSerial : function(){\n            return this.serial;\n        },\n        getUsedIdentifiers : function(){\n            var usedIds = {};\n            var elts = this.getComposingElements();\n            for(var i in elts){\n                var elt = elts[i];\n                var id = elt.attr('identifier');\n                if(id){\n                    //warning: simplistic implementation, allow only one unique identifier in the item no matter the element class/type\n                    usedIds[id] = elt;\n                }\n            }\n            return usedIds;\n        },\n\n        /**\n         * Get the ids in use. (id is different from identifier)\n         * @returns {Array} of the ids in use\n         */\n        getUsedIds : function getUsedIds(){\n            var usedIds = [];\n            _.forEach(this.getComposingElements(), function(elt){\n                var id = elt.attr('id');\n                if(id && !_.contains(usedIds, id)){\n                    usedIds.push(id);\n                }\n            });\n            return usedIds;\n        },\n\n        attr : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.attributes[name] = value;\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.attr(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.attributes[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.attributes[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        data : function(name, value){\n            if(name){\n                if(value !== undefined){\n                    this.metaData[name] = value;\n                    $(document).trigger('metaChange.qti-widget', {element : this, key : name, value : value});\n                }else{\n                    if(typeof (name) === 'object'){\n                        for(var prop in name){\n                            this.data(prop, name[prop]);\n                        }\n                    }else if(typeof (name) === 'string'){\n                        if(this.metaData[name] === undefined){\n                            return undefined;\n                        }else{\n                            return this.metaData[name];\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeData : function(name){\n            delete this.metaData[name];\n            return this;\n        },\n        removeAttr : function(name){\n            return this.removeAttributes(name);\n        },\n        setAttributes : function(attributes){\n            if (!_.isPlainObject(attributes)) {\n                logger.warn('attributes should be a plain object');\n            }\n            this.attributes = attributes;\n            return this;\n        },\n        getAttributes : function(){\n            return _.clone(this.attributes);\n        },\n        removeAttributes : function(attrNames){\n            if(typeof (attrNames) === 'string'){\n                attrNames = [attrNames];\n            }\n            for(var i in attrNames){\n                delete this.attributes[attrNames[i]];\n            }\n            return this;\n        },\n        getComposingElements : function(){\n            var elts = {};\n            function append(element){\n                elts[element.getSerial()] = element;//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, element.getComposingElements());\n            }\n            if(typeof this.initContainer === 'function'){\n                append(this.getBody());\n            }\n            if(typeof this.initObject === 'function'){\n                append(this.getObject());\n            }\n            _.each(this.metaData, function(v){\n                if(Element.isA(v, '_container')){\n                    append(v);\n                }else if(_.isArray(v)){\n                    _.each(v, function(v){\n                        if(Element.isA(v, '_container')){\n                            append(v);\n                        }\n                    });\n                }\n            });\n            return elts;\n        },\n        getUsedClasses : function(){\n\n            var ret = [this.qtiClass],\n                composingElts = this.getComposingElements();\n\n            _.each(composingElts, function(elt){\n                ret.push(elt.qtiClass);\n            });\n\n            return _.uniq(ret);\n        },\n        find : function(serial){\n\n            var found = null;\n            var object,\n                body;\n\n            if(typeof this.initObject === 'function'){\n                object = this.getObject();\n                if(object.serial === serial){\n                    found = {'parent' : this, 'element' : object, 'location' : 'object'};\n                }\n            }\n\n            if(!found && typeof this.initContainer === 'function'){\n                body = this.getBody();\n                if (body.serial === serial) {\n                    found = {'parent' : this, 'element' : body, 'location' : 'body'};\n                } else {\n                    found = this.getBody().find(serial, this);\n                }\n            }\n\n            return found;\n        },\n        parent : function(){\n            var item = this.getRootElement();\n            if(item){\n                var found = item.find(this.getSerial());\n                if(found){\n                    return found.parent;\n                }\n            }\n            return null;\n        },\n        /**\n         * @deprecated - use setRootElement() instead\n         */\n        setRelatedItem : function(item) {\n            logger.warn('Deprecated use of setRelatedItem()');\n            this.setRootElement(item);\n        },\n        setRootElement : function(item){\n            var composingElts,\n                i;\n\n            if(Element.isA(item, 'assessmentItem')){\n                this.rootElement = item;\n                composingElts = this.getComposingElements();\n                for(i in composingElts){\n                    composingElts[i].setRootElement(item);\n                }\n            }\n\n        },\n        /**\n         * @deprecated - use getRootElement() instead\n         */\n        getRelatedItem : function(){\n            logger.warn('Deprecated use of getRelatedItem()');\n            return this.getRootElement();\n        },\n        getRootElement : function(){\n            var ret = null;\n            if(Element.isA(this.rootElement, 'assessmentItem')){\n                ret = this.rootElement;\n            }\n            return ret;\n        },\n        setRenderer : function(renderer){\n            if(renderer && renderer.isRenderer){\n                this.renderer = renderer;\n                var elts = this.getComposingElements();\n                for(var serial in elts){\n                    elts[serial].setRenderer(renderer);\n                }\n            }else{\n                throw 'invalid qti rendering engine';\n            }\n        },\n        getRenderer : function(){\n            return this.renderer;\n        },\n        /**\n         * Render the element. Arguments are all optional and can be given in any order.\n         * Argument parsing is based on argument type and is done by taoQtiItem/qtiItem/core/helpers/rendererConfig\n         * @param {Renderer} renderer - specify which renderer to use\n         * @param {jQuery} placeholder - DOM element that will be replaced by the rendered element\n         * @param {Object} data - template data for the rendering\n         * @param {String} subclass - subclass enables different behaviour of the same qti class in different contexts (eg. we could have different rendering for simpleChoice according to where it is being used: simpleChoice.orderInteraction, simpleChoice.choiceInteraction...)\n         * @returns {String} - the rendered element as an HTML string\n         */\n        render : function render(){\n            var args = rendererConfig.getOptionsFromArguments(arguments);\n            var _renderer = args.renderer || this.getRenderer();\n            var rendering;\n\n            var tplData = {},\n                defaultData = {\n                    'tag' : this.qtiClass,\n                    'serial' : this.serial,\n                    'attributes' : this.getAttributes()\n                };\n\n            if(!_renderer){\n                throw new Error('render: no renderer found for the element ' + this.qtiClass + ':' + this.serial);\n            }\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                defaultData.body = this.getBody().render(args.renderer);\n            }\n            if(typeof this.initObject === 'function'){\n                defaultData.object = {\n                    attributes : this.object.getAttributes()\n                };\n                defaultData.object.attributes.data = _renderer.resolveUrl(this.object.attr('data'));\n            }\n\n            tplData = _.merge(defaultData, args.data || {});\n            tplData = _renderer.getData(this, tplData, args.subclass);\n            rendering = _renderer.renderTpl(this, tplData, args.subclass);\n            if(args.placeholder){\n                args.placeholder.replaceWith(rendering);\n            }\n\n            return rendering;\n        },\n        postRender : function(data, altClassName, renderer){\n\n            var postRenderers = [];\n            var _renderer = renderer || this.getRenderer();\n\n            if(typeof this.initContainer === 'function'){\n                //allow body to have a different renderer if it has its own renderer set\n                postRenderers = this.getBody().postRender(data, '', renderer);\n            }\n\n            if(_renderer){\n                postRenderers.push(_renderer.postRender(this, data, altClassName));\n            }else{\n                throw 'postRender: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n\n            return _.compact(postRenderers);\n        },\n        getContainer : function($scope, subclass){\n            var renderer = this.getRenderer();\n            if(renderer){\n                return renderer.getContainer(this, $scope, subclass);\n            }else{\n                throw 'getContainer: no renderer found for the element ' + this.qtiClass + ':' + this.serial;\n            }\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                type : this.qtiClass,\n                attributes : this.getAttributes()\n            };\n\n            if(typeof this.initContainer === 'function'){\n                arr.body = this.getBody().toArray();\n            }\n            if(typeof this.initObject === 'function'){\n                arr.object = this.object.toArray();\n            }\n\n            return arr;\n        },\n        isEmpty : function(){\n            //tells whether the element should be considered empty or not, from the rendering point of view\n            return false;\n        },\n        addClass : function(className){\n            var clazz = this.attr('class') || '';\n            if(!_containClass(clazz, className)){\n                this.attr('class', clazz + (clazz.length ? ' ' : '') + className);\n            }\n        },\n        hasClass : function(className){\n            return _containClass(this.attr('class'), className);\n        },\n        removeClass : function(className){\n\n            var clazz = this.attr('class') || '';\n            if(clazz){\n\n                var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n                clazz = clazz.replace(regex, ' ').trim();\n\n                if(clazz){\n                    this.attr('class', clazz);\n                }else{\n                    this.removeAttr('class');\n                }\n            }\n        },\n        /**\n         * Add or remove class. Setting the optional state will force addition/removal.\n         * State is here to keep the jQuery syntax\n         *\n         * @param {String} className\n         * @param {Boolean} [state]\n         */\n        toggleClass : function(className, state) {\n\n            if(typeof state === 'boolean') {\n                return state ? this.addClass(className) : this.removeClass(className);\n            }\n\n            if(this.hasClass(className)) {\n                return this.removeClass(className);\n            }\n            return this.addClass(className);\n        },\n        isset : function(){\n            return Element.issetElement(this.serial);\n        },\n        unset : function(){\n            return Element.unsetElement(this.serial);\n        }\n    });\n\n    var _containClass = function(allClassStr, className){\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', '');\n        return allClassStr && regex.test(allClassStr);\n    };\n\n    //helpers\n    Element.isA = function(qtiElement, qtiClass){\n        return (qtiElement instanceof Element && qtiElement.is(qtiClass));\n    };\n\n    Element.getElementBySerial = function(serial){\n        return _instances[serial];\n    };\n\n    Element.issetElement = function(serial){\n        return !!_instances[serial];\n    };\n\n    /**\n     * Unset a registered element from it's serial\n     * @param {String} serial - the element serial\n     * @returns {Boolean} true if unset\n     */\n    Element.unsetElement = function(serial){\n\n        var element = Element.getElementBySerial(serial);\n\n        if(element){\n\n            var composingElements = element.getComposingElements();\n            _.each(composingElements, function(elt){\n                delete _instances[elt.serial];\n            });\n            delete _instances[element.serial];\n\n            return true;\n        }\n        return false;\n    };\n\n    return Element;\n});\n\n\n\n","/**\n * Common helper functions\n */\ndefine('taoQtiItem/qtiItem/helper/interactionHelper',['lodash', 'taoQtiItem/qtiItem/core/Element'], function(_, Element){\n    return {\n        convertChoices : function(choices, outputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                if(Element.isA(c, 'choice')){\n                    switch(outputType){\n                        case 'serial':\n                            ret.push(c.getSerial());\n                            break;\n                        case 'identifier':\n                            ret.push(c.id());\n                            break;\n                        default:\n                            ret.push(c);\n                    }\n\n                }else if(_.isArray(c)){\n                    ret.push(_this.convertChoices(c, outputType));\n                }\n            });\n\n            return ret;\n        },\n        findChoices : function(interaction, choices, inputType){\n\n            var ret = [], _this = this;\n\n            _.each(choices, function(c){\n                var choice;\n                if(_.isString(c)){\n                    if(inputType === 'serial'){\n                        choice = interaction.getChoice(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else if(inputType === 'identifier'){\n                        choice = interaction.getChoiceByIdentifier(c);\n                        if(choice){\n                            ret.push(choice);\n                        }\n                    }else{\n                        ret.push(c);\n                    }\n                }else if(_.isArray(c)){\n                    ret.push(_this.findChoices(interaction, c, inputType));\n                }else{\n                    ret.push(c);\n                }\n            });\n\n            return ret;\n        },\n        shuffleChoices : function(choices){\n            var r = [], //returned array\n                f = {}, //fixed choices array\n                j = 0;\n\n            for(var i in choices){\n                if(Element.isA(choices[i], 'choice')){\n                    var choice = choices[i];\n                    if(choice.attr('fixed')){\n                        f[j] = choice;\n                    }\n                    r.push(choice);\n                    j++;\n                }else{\n                    throw 'invalid element in array: is not a qti choice';\n                }\n            }\n\n            for(var n = 0; n < r.length - 1; n++){\n                if(f[n]){\n                    continue;\n                }\n                var k = -1;\n                do{\n                    k = n + Math.floor(Math.random() * (r.length - n));\n                }while(f[k]);\n                var tmp = r[k];\n                r[k] = r[n];\n                r[n] = tmp;\n            }\n\n            return r;\n        },\n        serialToIdentifier : function(interaction, choiceSerial){\n            var choice = interaction.getChoice(choiceSerial);\n            if(choice){\n                return choice.id();\n            }else{\n                return '';\n            }\n        }\n    }\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * A factory to create a QTI renderer.\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiRunner/core/Renderer',[\n    'lodash',\n    'jquery',\n    'handlebars',\n    'core/promise',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/interactionHelper',\n    'ui/themeLoader'\n], function(_, $, Handlebars, Promise, Element, interactionHelper, themeLoader){\n    'use strict';\n\n    var _isValidRenderer = function(renderer){\n\n        var valid = true;\n\n        if(typeof (renderer) !== 'object'){\n            return false;\n        }\n\n        var classCorrect = false;\n        if(renderer.qtiClass){\n            if(_.indexOf(_renderableClasses, renderer.qtiClass) >= 0){\n                classCorrect = true;\n            }else{\n                var pos = renderer.qtiClass.indexOf('.');\n                if(pos > 0){\n                    var qtiClass = renderer.qtiClass.slice(0, pos);\n                    var subClass = renderer.qtiClass.slice(pos + 1);\n                    if(_renderableSubclasses[qtiClass] && _.indexOf(_renderableSubclasses[qtiClass], subClass) >= 0){\n                        classCorrect = true;\n                    }\n                }\n            }\n        }\n        if(!classCorrect){\n            valid = false;\n            throw new Error('invalid qti class name in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        if(!renderer.template){\n            valid = false;\n            throw new Error('missing template in renderer declaration : ' + renderer.qtiClass);\n        }\n\n        return valid;\n    };\n\n    var _renderableClasses = [\n        '_container',\n        'assessmentItem',\n        'stylesheet',\n        'responseDeclaration',\n        'outcomeDeclaration',\n        'responseProcessing',\n        '_simpleFeedbackRule',\n        '_tooltip',\n        'img',\n        'math',\n        'object',\n        'table',\n        'modalFeedback',\n        'rubricBlock',\n        'associateInteraction',\n        'choiceInteraction',\n        'extendedTextInteraction',\n        'gapMatchInteraction',\n        'graphicAssociateInteraction',\n        'graphicGapMatchInteraction',\n        'graphicOrderInteraction',\n        'hotspotInteraction',\n        'hottextInteraction',\n        'inlineChoiceInteraction',\n        'matchInteraction',\n        'mediaInteraction',\n        'orderInteraction',\n        'selectPointInteraction',\n        'sliderInteraction',\n        'textEntryInteraction',\n        'uploadInteraction',\n        'endAttemptInteraction',\n        'customInteraction',\n        'prompt',\n        'associableHotspot',\n        'gap',\n        'gapImg',\n        'gapText',\n        'hotspotChoice',\n        'hottext',\n        'inlineChoice',\n        'simpleAssociableChoice',\n        'simpleChoice',\n        'infoControl',\n        'include',\n        'printedVariable'\n    ];\n\n    /**\n     * The list of qti element dependencies. It is used internally to load dependent qti classes\n     */\n    var _dependencies = {\n        assessmentItem : ['stylesheet', '_container', 'prompt', 'modalFeedback'],\n        rubricBlock : ['_container'],\n        associateInteraction : ['simpleAssociableChoice'],\n        choiceInteraction : ['simpleChoice'],\n        gapMatchInteraction : ['gap', 'gapText'],\n        graphicAssociateInteraction : ['associableHotspot'],\n        graphicGapMatchInteraction : ['associableHotspot', 'gapImg'],\n        graphicOrderInteraction : ['hotspotChoice'],\n        hotspotInteraction : ['hotspotChoice'],\n        hottextInteraction : ['hottext'],\n        inlineChoiceInteraction : ['inlineChoice'],\n        matchInteraction : ['simpleAssociableChoice'],\n        orderInteraction : ['simpleChoice']\n    };\n\n    /**\n     * The list of supported qti subclasses.\n     */\n    var _renderableSubclasses = {\n        'simpleAssociableChoice' : ['associateInteraction', 'matchInteraction'],\n        'simpleChoice' : ['choiceInteraction', 'orderInteraction']\n    };\n\n    /**\n     * List of the default properties for the item\n     */\n    var _defaults = {\n        shuffleChoices : true\n    };\n\n    /**\n     * Get the location of the document, useful to define a baseUrl for the required context\n     * @returns {String}\n     */\n    function getDocumentBaseUrl(){\n        return window.location.protocol + '//' + window.location.host + window.location.pathname.replace(/([^\\/]*)$/, '');\n    }\n\n    /**\n     * The built Renderer class\n     * @constructor\n     * @param {Object} [options] - the renderer options\n     * @param {AssetManager} [options.assetManager] - The renderer needs an AssetManager to resolve URLs (see {@link taoItems/assets/manager})\n     * @param {Boolean} [options.shuffleChoices = true] - Does the renderer take care of the shuffling\n     * @param {Object} [options.decorators] - to set up rendering decorator\n     * @param {preRenderDecorator} [options.decorators.before] - to set up a pre decorator\n     * @param {postRenderDecorator} [options.decorators.after] - to set up a post decorator\n     */\n    var Renderer = function(options){\n\n        /**\n         * Store the registered renderer location\n         */\n        var _locations = {};\n\n        /**\n         * Store loaded renderers\n         */\n        var _renderers = {};\n\n        options = _.defaults(options || {}, _defaults);\n\n        this.isRenderer = true;\n\n        this.name = '';\n\n        //store shuffled choice here\n        this.shuffledChoices = [];\n\n        /**\n         * Get the actual renderer of the give qti class or subclass:\n         * e.g. simplceChoice, simpleChoice.choiceInteraction, simpleChoice.orderInteraction\n         */\n        var _getClassRenderer = function(qtiClass){\n            var ret = null;\n            if(_renderers[qtiClass]){\n                ret = _renderers[qtiClass];\n            }else{\n                var pos = qtiClass.indexOf('.');\n                if(pos > 0){\n                    qtiClass = qtiClass.slice(0, pos);\n                    if(_renderers[qtiClass]){\n                        ret = _renderers[qtiClass];\n                    }\n                }\n            }\n            return ret;\n        };\n\n        /**\n         * Registers a QTI renderer class\n         * @param {String} qtiClass\n         * @param {Array} list\n         * @returns {Boolean} `true` if the class has been successfully registered\n         */\n        function registerRendererClass(qtiClass, list) {\n            var success = false;\n            if (_locations[qtiClass] === false) {\n                //mark this class as not renderable\n                _renderers[qtiClass] = false;\n                success = true;\n            } else if (_locations[qtiClass]) {\n                list.push(_locations[qtiClass]);\n                success = true;\n            }\n            return success;\n        }\n\n        /**\n         * Set the renderer options\n         * @param {String} key - the name of the option\n         * @param {*} value - the option vallue\n         * @returns {Renderer} for chaining\n         */\n        this.setOption = function(key, value){\n            if(typeof (key) === 'string'){\n                options[key] = value;\n            }\n            return this;\n        };\n\n        /**\n         * Set the renderer options\n         * @param {Object} opts - the options\n         * @returns {Renderer} for chaining\n         */\n        this.setOptions = function(opts){\n            options = _.extend(options, opts);\n            return this;\n        };\n\n        /**\n         * Get the renderer option\n         * @param {String} key - the name of the option\n         * @returns {*|null} the option vallue\n         */\n        this.getOption = function(key){\n            if(typeof (key) === 'string' && options[key]){\n                return options[key];\n            }\n            return null;\n        };\n\n        this.getCustomMessage = function getCustomMessage(elementName, messageKey){\n            var messages = this.getOption('messages');\n            if(messages &&\n                elementName &&\n                messages[elementName] &&\n                _.isString(messages[elementName][messageKey])){\n                //currently not translatable but potentially could be if the need raises\n                return Handlebars.compile(messages[elementName][messageKey]);\n            }else{\n                return null;\n            }\n        };\n\n        /**\n         * Get the bound assetManager\n         * @returns {AssetManager} the assetManager\n         */\n        this.getAssetManager = function getAssetManager(){\n            return options.assetManager;\n        };\n\n        /**\n         * Get the bound theme loader\n         * @returns {Object} the themeLoader\n         */\n        this.getThemeLoader = function getThemeLoader(){\n            return this.themeLoader;\n        };\n\n\n        /**\n         * Renders the template\n         * @param {Object} element - the QTI model element\n         * @param {Object} data - the data to give to the template\n         * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n         * @returns {String} the template results\n         * @throws {Error} if the renderer is not set or has no template bound\n         */\n        this.renderTpl = function(element, data, qtiSubclass){\n\n            var res;\n            var ret        = '';\n            var tplFound   = false;\n            var qtiClass   = qtiSubclass || element.qtiClass;\n            var renderer   = _getClassRenderer(qtiClass);\n            var decorators = this.getOption('decorators');\n\n            if(!renderer || !_.isFunction(renderer.template)){\n                throw new Error('no renderer template loaded under the class name : ' + qtiClass);\n            }\n\n            //pre rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.before)){\n\n                /**\n                 * @callback preRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.before(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n\n            //render the template\n            ret += renderer.template(data);\n\n\n            //post rendering decoration\n            if(_.isObject(decorators) && _.isFunction(decorators.after)){\n\n                /**\n                 * @callback postRenderDecoractor\n                 * @param {Object} element - the QTI model element\n                 * @param {String} [qtiSubclass] - to get the render of the element subclass (when element's qtiClass is abstract)\n                 * @returns {String} the decorator result\n                 */\n                res = decorators.after(element, qtiSubclass);\n                if(_.isString(res)){\n                    ret += res;\n                }\n            }\n            return ret;\n        };\n\n        this.getData = function(element, data, qtiSubclass){\n\n            var ret = data,\n                qtiClass = qtiSubclass || element.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getData) === 'function'){\n                    ret = renderer.getData.call(this, element, data);\n                }\n            }\n\n            return ret;\n        };\n\n        this.renderDirect = function(tpl, data){\n            return Handlebars.compile(tpl)(data);\n        };\n\n        this.getContainer = function(qtiElement, $scope, qtiSubclass){\n\n            var ret = null,\n                qtiClass = qtiSubclass || qtiElement.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                ret = renderer.getContainer(qtiElement, $scope);\n            }else{\n                throw 'no renderer found for the class : ' + qtiElement.qtiClass;\n            }\n            return ret;\n        };\n\n        this.postRender = function(qtiElement, data, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiElement.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer && typeof (renderer.render) === 'function') {\n                return renderer.render.call(this, qtiElement, data);\n            }\n        };\n\n        this.setResponse = function(qtiInteraction, response, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.setResponse) === 'function'){\n                    ret = renderer.setResponse.call(this, qtiInteraction, response);\n                    var $container = renderer.getContainer.call(this, qtiInteraction);\n                    if($container instanceof $ && $container.length){\n                        $container.trigger('responseSet', [qtiInteraction, response]);\n                    }\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.getResponse) === 'function'){\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.resetResponse = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(typeof (renderer.resetResponse) === 'function'){\n                    ret = renderer.resetResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         * @returns {Object} the interaction's state\n         *\n         * @throws {Error} if no renderer is registered\n         */\n        this.getState = function(qtiInteraction, qtiSubclass){\n\n            var ret = false;\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.getState)){\n                    ret = renderer.getState.call(this, qtiInteraction);\n                } else {\n                    ret = renderer.getResponse.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        /**\n         * Retrieve the state of the interaction.\n         * If the renderer has no state management, it falls back to the response management.\n         *\n         * @param {Object} qtiInteraction - the interaction\n         * @param {Object} state - the interaction's state\n         * @param {String} [qtiSubClass] - (not sure of the type and how it is used - Sam ? )\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.setState =  function(qtiInteraction, state, qtiSubclass){\n\n            var qtiClass = qtiSubclass || qtiInteraction.qtiClass;\n            var renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.setState)){\n                    renderer.setState.call(this, qtiInteraction, state);\n                } else {\n                    renderer.resetResponse.call(this, qtiInteraction);\n                    renderer.setResponse.call(this, qtiInteraction, state);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n        };\n\n        /**\n         * Calls the renderer destroy.\n         * Ask the renderer to run destroy if exists.\n         *\n         * @throws {Error} if no renderer is found\n         */\n        this.destroy = function(qtiInteraction, qtiSubclass){\n\n            var ret = false,\n                qtiClass = qtiSubclass || qtiInteraction.qtiClass,\n                renderer = _getClassRenderer(qtiClass);\n\n            if(renderer){\n                if(_.isFunction(renderer.destroy)){\n                    ret = renderer.destroy.call(this, qtiInteraction);\n                }\n            }else{\n                throw 'no renderer registered under the name : ' + qtiClass;\n            }\n            return ret;\n        };\n\n        this.getLoadedRenderers = function(){\n            return _renderers;\n        };\n\n        this.register = function(renderersLocations){\n            _.extend(_locations, renderersLocations);\n        };\n\n        this.load = function(callback, requiredClasses){\n           var self = this;\n            var required = [];\n\n            if(options.themes){\n\n                //resolve themes paths\n                options.themes.base = this.resolveUrl(options.themes.base);\n                _.forEach(options.themes.available, function(theme, index){\n                    options.themes.available[index].path = self.resolveUrl(theme.path);\n                });\n                this.themeLoader = themeLoader(options.themes).load();\n            }\n\n            if(requiredClasses){\n                if(_.isArray(requiredClasses)){\n\n                    //exclude abstract classes\n                    requiredClasses = _.intersection(requiredClasses, _renderableClasses);\n\n                    //add dependencies\n                    _.each(requiredClasses, function(reqClass){\n                        var deps = _dependencies[reqClass];\n                        if(deps){\n                            requiredClasses = _.union(requiredClasses, deps);\n                        }\n                    });\n\n                    _.forEach(requiredClasses, function(qtiClass){\n\n                        if(_renderableSubclasses[qtiClass]){\n                            var requiredSubClasses = _.intersection(requiredClasses, _renderableSubclasses[qtiClass]);\n                            _.each(requiredSubClasses, function(subclass){\n                                if (!registerRendererClass(qtiClass + '.' + subclass, required) && !registerRendererClass(qtiClass, required)) {\n                                    throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass + ', subclass: ' + subclass);\n                                }\n                            });\n                        } else {\n                            if (!registerRendererClass(qtiClass, required)) {\n                                throw new Error(self.name + ' : missing qti class location declaration: ' + qtiClass);\n                            }\n                        }\n                    });\n                } else {\n                    throw new Error('invalid argument type: expected array for arg \"requireClasses\"');\n                }\n\n            }else{\n                required = _.values(_locations);\n            }\n\n            var _this = this;\n            require(required, function(){\n\n                _.each(arguments, function(clazz){\n                    if(_isValidRenderer(clazz)){\n                        _renderers[clazz.qtiClass] = clazz;\n                    }\n                });\n\n                if(typeof (callback) === 'function'){\n                    callback.call(_this, _renderers);\n                }\n            });\n\n            return this;\n        };\n\n        /**\n         * Unload the renderer\n         */\n        this.unload = function unload(){\n            if(this.themeLoader){\n                themeLoader(options.themes).unload();\n            }\n            return this;\n        };\n\n        /**\n         * Define the shuffling manually\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Array} choices - the shuffled choices\n         * @param {String} identificationType -\n         */\n        this.setShuffledChoices = function(interaction, choices, identificationType){\n            if(Element.isA(interaction, 'interaction')){\n                this.shuffledChoices[interaction.getSerial()] = _.pluck(interactionHelper.findChoices(interaction, choices, identificationType), 'serial');\n            }\n        };\n\n        /**\n         * Get the choices shuffled for this interaction.\n         *\n         * @param {Object} interaction - the interaction\n         * @param {Boolean} reshuffle - by default choices are shuffled only once and store, but if true you can force shuffling again\n         * @param {String} returnedType - the choice type\n         * @returns {Array} the choices\n         */\n        this.getShuffledChoices = function(interaction, reshuffle, returnedType){\n            var choices = [];\n            var shuffled = [];\n            var serial, i;\n\n            if(Element.isA(interaction, 'interaction')){\n                serial = interaction.getSerial();\n\n                //1st time, we shuffle (or asked to force shuffling)\n                if(!this.shuffledChoices[serial] || reshuffle){\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        this.shuffledChoices[serial] = [];\n                        for(i = 0; i < 2; i++){\n                            choices[i] = interactionHelper.shuffleChoices(interaction.getChoices(i));\n                            this.shuffledChoices[serial][i] = _.pluck(choices[i], 'serial');\n                        }\n                    } else {\n                        choices = interactionHelper.shuffleChoices(interaction.getChoices());\n                        this.shuffledChoices[serial] = _.pluck(choices, 'serial');\n                    }\n\n                //otherwise get the choices from the serials\n                } else {\n                    if(Element.isA(interaction, 'matchInteraction')){\n                        _.forEach(choices, function(choice, index){\n                            if(index < 2){\n                                _.forEach(this.shuffledChoices[serial][i], function(choiceSerial){\n                                    choice.push(interaction.getChoice(choiceSerial));\n                                });\n                            }\n                        });\n                    } else {\n                        _.forEach(this.shuffledChoices[serial], function(choiceSerial){\n                            choices.push(interaction.getChoice(choiceSerial));\n                        });\n                    }\n                }\n\n                //do some type convertion\n                if(returnedType === 'serial' || returnedType === 'identifier'){\n                    return interactionHelper.convertChoices(choices, returnedType);\n                }\n\n                //pass value only, not ref\n                return _.clone(choices);\n            }\n\n            return [];\n        };\n\n        this.getRenderers = function(){\n            return _renderers;\n        };\n\n        this.getLocations = function(){\n            return _locations;\n        };\n\n        /**\n         * Resolve URLs using the defined assetManager's strategies\n         * @param {String} url - the URL to resolve\n         * @returns {String} the resolved URL\n         */\n        this.resolveUrl = function resolveUrl(url){\n            if(!options.assetManager){\n                return url;\n            }\n            if(typeof url === 'string' && url.length > 0){\n                return options.assetManager.resolve(url);\n            }\n        };\n\n        /**\n         * @deprecated in favor of resolveUrl\n         */\n        this.getAbsoluteUrl = function(relUrl){\n\n            //let until method is removed\n            console.warn('DEPRECATED used getAbsoluteUrl with ', arguments);\n\n            //allow relative url output only if explicitely said so\n            if(this.getOption('userRelativeUrl')){\n                return relUrl.replace(/^\\.?\\//, '');\n            }\n\n            if(/^http(s)?:\\/\\//i.test(relUrl) || /^data:[^\\/]+\\/[^;]+(;charset=[\\w]+)?;base64,/.test(relUrl)){\n                //already absolute or base64 encoded\n                return relUrl;\n            }else{\n\n                var absUrl = '';\n                var runtimeLocations = this.getOption('runtimeLocations');\n\n                if(runtimeLocations && _.size(runtimeLocations)){\n                    _.forIn(runtimeLocations, function(runtimeLocation, typeIdentifier){\n                        if(relUrl.indexOf(typeIdentifier) === 0){\n                            absUrl = relUrl.replace(typeIdentifier, runtimeLocation);\n                            return false;//break\n                        }\n                    });\n                }\n\n                if(absUrl){\n                    return absUrl;\n                }else{\n                    var baseUrl = this.getOption('baseUrl') || getDocumentBaseUrl();\n                    return baseUrl + relUrl;\n                }\n\n            }\n        };\n\n        this.setAreaBroker = function setAreaBroker(areaBroker) {\n            this._areaBroker = areaBroker;\n        };\n\n        this.getAreaBroker = function getAreaBroker() {\n            if (this._areaBroker) {\n                return this._areaBroker;\n            }\n        };\n\n        this.getItemCreator = function getItemCreator() {\n            return this.getOption('itemCreator');\n        };\n    };\n\n    /**\n     * Expose the renderer's factory\n     * @exports taoQtiItem/qtiRunner/core/Renderer\n     */\n    return {\n\n        /**\n         * Creates a new Renderer by extending the Renderer's prototype\n         * @param {Object} renderersLocations -\n         * @param {String} [name] - the new renderer name\n         * @param {Object} [defaultOptions] - the renderer options\n         */\n        build : function(renderersLocations, name, defaultOptions){\n            var NewRenderer = function(){\n                var options = _.isPlainObject(arguments[0]) ? arguments[0] : {};\n\n                Renderer.apply(this);\n\n                this.register(renderersLocations);\n                this.name = name || '';\n                this.setOptions(_.defaults(options, defaultOptions || {}));\n            };\n            NewRenderer.prototype = Renderer.prototype;\n            return NewRenderer;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2017 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * The asset manager proposes you to resolve your asset URLs for you!\n * You need to add the resolution strategies, it will then evaluate each strategy until the right one is found\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoItems/assets/manager',[\n    'lodash',\n    'util/url'\n], function(_, urlUtil){\n    'use strict';\n\n    /**\n     * @typedef AssetStrategy Defines a way to resolve an asset path\n     * @property {String} name - the strategy name\n     * @property {assetStrategyHandle} handle - how to resolve the strategy.\n     */\n\n    /**\n     * @callback assetStrategyHandle\n     * @param {String|Object} url - the URL to resolved. If parseUrl, it's an object that contains host, port, search, queryString, etc.\n     * @param {Object} data - the context data\n     * @returns {String?} falsy if not resolved otherwise the resolved URL\n     */\n\n    /**\n     * Check if the given object is a valid AssetStrategy\n     * @param {AssetStrategy} strategy\n     * @throws {TypeError}\n     */\n    var checkStrategy = function checkStrategy(strategy){\n        if(!_.isPlainObject(strategy) || !_.isFunction(strategy.handle) || !_.isString(strategy.name)){\n            throw new TypeError('An asset resolution strategy is an object with a handle method and a name');\n        }\n    };\n\n    /**\n     * The assetManagerFactory create a new assetManager with the given resolution strategies and a data context.\n     *\n     * @example\n     *   //define AssetStrategies with a name and a handle method\n     *   var strategies = [{\n     *       name : 'external',\n     *       handle : function(url, data){\n     *           if(/^http/.test(url)){\n     *               return path;\n     *           }\n     *       }\n     *   }, {\n     *       name : 'relative',\n     *       handle : function(url, data){\n     *           if(/^((\\.\\/)|(\\w\\/))/){\n     *               return data.baseUrl + '/' + url ;\n     *           }\n     *       }\n     *   }]);\n     *\n     *   var assetManager = assetManagerFactory(strategies, { baseUrl : 'http://t.oa/public/assets/' });\n     *   assetManager.resolve('http://foo/bar.png'); //will resolved using external\n     *   assetManager.resolve('bar.png'); //will resolved using relative strategy\n     *\n     * @param {AssetStrategy[]} strategies - the strategies\n     * @param {Object} data - the context data\n     * @param {Object} [options] - the manager options\n     * @param {Boolean} [options.parseUrl = true] - If the URL to give to the strategies should be parsed or given as it is.\n     * @param {Boolean} [options.cache] - resolve the same URL only once and store the result in memory.\n     *\n     * @exports taoItems/assets/manager\n     * @namespace assetManagerFactory\n     */\n    var assetManagerFactory = function assetManagerFactory(strategies, data, options) {\n\n        var cache  = {};\n\n        strategies = _.isArray(strategies) ? strategies : [strategies];\n        data       = data || {};\n        options    = _.defaults(options || {}, {\n            parseUrl : true\n        });\n\n        /**\n         * A brand new asset manager is created by the factory\n         */\n        var assetManager = {\n\n            /**\n             * The stack of strategies that would be used to resolve the asset path\n             * @type {AssetStrategy[]}\n             */\n            _strategies : [],\n\n            /**\n             * Add an asset resolution strategy at the end of the stack.\n             * The strategies will be evaluated in the order they've been added.\n             * @param {AssetStrategy} strategy - the strategy to add\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            addStrategy : function addStrategy (strategy){\n\n                checkStrategy(strategy);\n\n                this._strategies.push(strategy);\n            },\n\n            /**\n             * Add an asset resolution strategy at the beginning of the stack.\n             * The strategies will be evaluated in the order they've been added.\n             * @param {AssetStrategy} strategy - the strategy to add\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            prependStrategy : function prependStrategy(strategy){\n\n                checkStrategy(strategy);\n\n                this._strategies.unshift(strategy);\n            },\n\n            /**\n             * Change the strategies\n             * @param {AssetStrategy[]} strategies - the strategies\n             * @throws {TypeError} if the strategy isn't defined correctly\n             */\n            setStrategies : function setStrategies(newStrategies){\n                var self = this;\n\n                this._strategies = [];\n\n                //assign the strategies to the assetManager\n                _.forEach(newStrategies, function(strategy){\n\n                    //if it's an object we add it directly\n                    if(_.isPlainObject(strategy)){\n                        assetManager.addStrategy(strategy);\n\n                    //if it's a function, we create the strategy with a generated name\n                    } else if(_.isFunction(strategy)){\n                        self.addStrategy({\n                            name   : 'strategy_' + (self._strategies.length + 1),\n                            handle : strategy\n                        });\n                    }\n                });\n            },\n\n            /**\n             * Set context data\n             * @param {String|Object} [key] - the key of the data to set or the data values if it's an object\n             * @param {*} [value] - the value to set if a key is given\n             */\n            setData : function setData(key, value){\n                if(_.isString(key) && typeof value !== 'undefined'){\n                    data[key] = value;\n                } else if(_.isPlainObject(key)){\n                    data = key;\n                }\n            },\n\n            /**\n             * Get context data\n             * @param {String} [key] - if we want the value of a particular key\n             * @returns {Object|*} all the data or the propriety value if key is given\n             */\n            getData : function getData(key){\n                if(_.isString(key)){\n                    return data[key];\n                }\n                return data;\n            },\n\n            /**\n             * Resolve the given URL against the strategies\n             * @param {String} url - the URL to resolve\n             * @returns {String?} the resolved URL or nothing\n             */\n            resolve : function resolve(url){\n                var resolved;\n                var inputUrl;\n\n                //if caching try to load the value from the cache\n                if(options.cache && cache.hasOwnProperty(url)){\n                    return cache[url];\n                }\n\n                //parse the URL ?\n                inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\n\n                //call strategies handlers, in their order until once returns something\n                _.forEach(this._strategies, function(strategy){\n                    var result = strategy.handle(inputUrl, data);\n                    if(result){\n                        resolved = result;\n                        return false;\n                    }\n                });\n\n                resolved = resolved || '';\n\n                if(options.cache){\n                    cache[url] = resolved;\n                }\n\n                return resolved;\n            },\n\n            /**\n             * Resolve the given URL against the strategy identified by the given name\n             * @param {String} name - the strategy name\n             * @param {String} url - the URL to resolve\n             * @returns {String?} the resolved URL or nothing\n             */\n            resolveBy : function resolveBy(name, url){\n                var inputUrl;\n                var resolved = '';\n                var strategy = _.find(this._strategies, {name : name});\n                if(strategy){\n                    //parse the URL ?\n                    inputUrl = options.parseUrl ? urlUtil.parse(url) : url;\n                    resolved = strategy.handle(inputUrl, data);\n                }\n                return resolved;\n            },\n\n            /**\n             * When the cache is used, it could be useful to clear the cache\n             */\n            clearCache : function clearCache(){\n                if(options.cache){\n                    cache = {};\n                }\n            }\n        };\n\n        assetManager.setStrategies(strategies);\n\n        return assetManager;\n    };\n\n    return assetManagerFactory;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Provides common strategies to resolved assets\n * that may be used by any type of items.\n *\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoItems/assets/strategies',[\n    'util/url'\n], function(urlUtil){\n    'use strict';\n\n    /**\n     * Prepend a base to an URL\n     * @param {Object} url - a parsed URL\n     * @param {String} base - the base to prepend\n     * @param {Boolean} [slashcat = false] - remove dots, double slashes, etc.\n     * @returns {String} the URL\n     */\n    var prependToUrl = function prependToUrl(url, base, slashcat){\n\n        //is slashcat we manage slash concact\n        if(slashcat === true){\n            return base.replace(/\\/$/, '') + '/' + url.directory.replace(/^\\.\\//, '').replace(/^\\//, '')\n                + encodeURIComponent(url.file.replace(/^\\.\\//, '').replace(/^\\//, ''));\n        }\n\n        return base + url.directory.replace(/^\\.?\\//, '') + encodeURIComponent(url.file.replace(/^\\.?\\//, ''));\n    };\n\n    /**\n     * Unrelated strategies accessible by there name.\n     * Remember to not use the whole object, but each one in an array since the order matters.\n     *\n     * @exports taoItems/assets/strategies\n     */\n    var strategies = {\n\n        //the baseUrl concats the baseUrl in data if the url is relative\n        baseUrl : {\n            name : 'baseUrl',\n            handle : function handleBaseUrl(url, data){\n                if(typeof data.baseUrl === 'string' && (urlUtil.isRelative(url)) ){\n                    return prependToUrl(url, data.baseUrl, data.slashcat);\n                }\n            }\n        },\n\n        //bust the cache for item CSS\n        itemCssNoCache : {\n            name : 'itemCssNoCache',\n            handle : function handleItemCss(url, data){\n                if(typeof data.baseUrl === 'string' && (urlUtil.isRelative(url)) && /\\.css$/.test(url.file)) {\n                    return urlUtil.build(prependToUrl(url, data.baseUrl, data.slashcat), { bust : Date.now() });\n                }\n            }\n        },\n\n        //absolute URL are just left intact\n        external : {\n            name : 'external',\n            handle : function handleExternal(url){\n                if(urlUtil.isAbsolute(url)){\n                    return url.toString();\n                }\n            }\n        },\n\n        //the base64 encoded resources are also left intact\n        base64 : {\n            name : 'base64',\n            handle : function handleB64(url){\n                if(urlUtil.isBase64(url)){\n                    return url.toString();\n                }\n            }\n        },\n\n        //special tao media protocol\n        taomedia : {\n            name : 'taomedia',\n            handle : function handleTaoMedia(url, data){\n                //either a baseUrl is given or if empty, taomedia resources are managed as relative resources\n                var baseUrl = data.baseUrl || './';\n                if( (typeof url === 'object' && url.protocol === 'taomedia') ||\n                    (/^taomedia:\\/\\//.test(url.toString())) ){\n                    return baseUrl + url.toString();\n                }\n            }\n        }\n    };\n    return strategies;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/factory',['lodash', 'core/promise', 'core/eventifier'], function (_, Promise, eventifier){\n    'use strict';\n\n    var _requirejs = window.require;\n    var _defaultLoadingOptions = {\n        reload: false,\n        enabledOnly : false,\n        runtimeOnly : []\n    };\n\n    var loadModuleConfig = function loadModuleConfig(manifest){\n        return new Promise(function(resolve, reject){\n            var requireConfigAliases = {};\n            var baseUrl;\n            var reqConfigs = [];\n            var modules = {};\n\n            if(!manifest || !manifest.runtime){\n                return reject('invalid manifest');\n            }\n\n            baseUrl = manifest.baseUrl;\n\n            if(_.isArray(manifest.runtime.config) && manifest.runtime.config.length){\n                _.forEach(manifest.runtime.config, function(pciConfig){\n                    if(_.isString(pciConfig)){\n                        reqConfigs.push('json!' + baseUrl + '/' + pciConfig);\n                    }else{\n                        if(pciConfig.data){\n                            modules = _.defaults(modules, pciConfig.data.paths || {});\n                        }else if(pciConfig.file){\n                            reqConfigs.push('json!' + baseUrl + '/' + pciConfig.file);\n                        }\n                    }\n                });\n            }\n\n            require(reqConfigs, function(){\n\n                var runtimeModules = {};\n\n                requireConfigAliases[manifest.typeIdentifier] = baseUrl;\n\n                if(manifest.model === 'IMSPCI'){\n\n                    modules = _.reduce(arguments, function(acc, conf){\n                        return _.defaults(acc, conf.paths || {});\n                    }, modules);\n\n                    _.forEach(manifest.runtime.modules || {}, function(paths, id){\n                        if(paths && (_.isString(paths) || (_.isArray(paths) && paths.length))){\n                            runtimeModules[id] = paths;\n                        }\n                    });\n\n                    modules = _.merge(modules, runtimeModules);\n\n                    _.forEach(modules, function(paths, id){\n                        paths = _.isArray(paths) ? paths : [paths];\n                        requireConfigAliases[id] = _.map(paths, function(path){\n                            return baseUrl+'/'+path.replace(/\\.js$/, '');\n                        });\n                    });\n                }\n\n                resolve(requireConfigAliases);\n\n            }, reject);\n\n\n        });\n    };\n\n    return function portableElementRegistry(methods){\n\n        var _loaded = false;\n        var __providers = {};\n\n        return eventifier(_.defaults(methods || {}, {\n            _registry : {},\n            get : function get(typeIdentifier, version){\n\n                if(this._registry[typeIdentifier]){\n                    //check version\n                    if(version){\n                        return _.find(this._registry[typeIdentifier], version);\n                    }else{\n                        //latest\n                        return _.last(this._registry[typeIdentifier]);\n                    }\n                }\n            },\n            registerProvider : function registerProvider(moduleName){\n                __providers[moduleName] = null;\n                return this;\n            },\n            resetProviders : function resetProviders(){\n                __providers = {};\n                return this;\n            },\n            loadProviders : function loadProviders(){\n                var self = this;\n                return new Promise(function(resolve, reject) {\n                    var providerLoadingStack = [];\n                    _.forIn(__providers, function(provider, id){\n                        if(provider === null){\n                            providerLoadingStack.push(id);\n                        }\n                    });\n                    _requirejs(providerLoadingStack, function(){\n                        _.each([].slice.call(arguments), function(provider){\n                            if(provider && _.isFunction(provider.load)){\n                                __providers[providerLoadingStack.shift()] = provider;\n                            }\n                        });\n                        resolve();\n                        self.trigger('providersloaded');\n                    }, reject);\n                });\n            },\n            getAllVersions : function getAllVersions(){\n                var all = {};\n                _.forIn(this._registry, function (versions, id){\n                    all[id] = _.map(versions, 'version');\n                });\n                return all;\n            },\n            getRuntime : function getRuntime(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci){\n                    return _.assign(pci.runtime, {\n                        id : pci.typeIdentifier,\n                        label : pci.label,\n                        baseUrl : pci.baseUrl,\n                        model : pci.model\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n            getCreator : function getCreator(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci && pci.creator){\n                    return _.assign(pci.creator, {\n                        id : pci.typeIdentifier,\n                        label : pci.label,\n                        baseUrl : pci.baseUrl,\n                        response : pci.response,\n                        model : pci.model,\n                        xmlns : pci.xmlns\n                    });\n                }else{\n                    this.trigger('error', {\n                        message : 'no portable element runtime found',\n                        typeIdentifier : typeIdentifier,\n                        version : version\n                    });\n                }\n            },\n            getBaseUrl : function getBaseUrl(typeIdentifier, version){\n                var runtime = this.get(typeIdentifier, version);\n                if(runtime){\n                    return runtime.baseUrl;\n                }\n                return '';\n            },\n            loadRuntimes : function loadRuntimes(options){\n                var self = this;\n                var loadPromise;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                if(_loaded && !options.reload){\n                    loadPromise = Promise.resolve();\n                } else {\n                    loadPromise = self.loadProviders().then(function(){\n\n                        var loadStack = [];\n\n                        _.forEach(__providers, function (provider){\n                            if(provider){//check that the provider is loaded\n                                loadStack.push(provider.load());\n                            }\n                        });\n\n                        //performs the loadings in parallel\n                        return new Promise(function(resolve, reject){\n                            Promise.all(loadStack).then(function (results){\n\n                                var configLoadingStack = [];\n\n                                //update registry\n                                self._registry = _.reduce(results, function (acc, _pcis){\n                                    return _.merge(acc, _pcis);\n                                }, {});\n\n                                //pre-configuring the baseUrl of the portable element's source\n                                _.forIn(self._registry, function (versions, typeIdentifier){\n                                    //currently use latest runtime only\n                                    configLoadingStack.push(loadModuleConfig(self.get(typeIdentifier)));\n                                });\n\n                                return Promise.all(configLoadingStack).then(function(moduleConfigs){\n                                    var requireConfigAliases = _.reduce(moduleConfigs, function(acc, paths){\n                                        return _.merge(acc, paths);\n                                    }, {});\n\n                                    //save the required libs name => path to global require alias\n                                    //TODO in future planned user story : change this to a local require context to solve conflicts in third party module naming\n                                    _requirejs.config({paths : requireConfigAliases});\n\n                                    _loaded = true;\n\n                                    resolve();\n                                }).catch(function(err){\n                                    reject('error loading module config ' + err);\n                                });\n                            });\n                        });\n\n                    });\n                }\n\n                loadPromise\n                    .then(function() {\n                        self.trigger('runtimesloaded');\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n            loadCreators : function loadCreators(options){\n                var loadPromise;\n                var self = this;\n\n                options = _.defaults(options||{}, _defaultLoadingOptions);\n\n                loadPromise = self.loadRuntimes(options).then(function(){\n                    var requiredCreatorHooks = [];\n                    var requiredCreators = _.isArray(options.runtimeOnly) ? options.runtimeOnly : [];\n\n                    _.forIn(self._registry, function (versions, typeIdentifier){\n                        var pciModel = self.get(typeIdentifier);//currently use the latest version only\n                        if(pciModel.creator && pciModel.creator.hook && (pciModel.enabled || requiredCreators.indexOf(typeIdentifier) !== -1)){\n                            requiredCreatorHooks.push(pciModel.creator.hook.replace(/\\.js$/, ''));\n                        }\n                    });\n\n                    if(requiredCreatorHooks.length){\n                        return new Promise(function(resolve, reject){\n                            //@todo support caching?\n                            _requirejs(requiredCreatorHooks, function (){\n                                var creators = {};\n                                _.each(arguments, function (creatorHook){\n                                    var id = creatorHook.getTypeIdentifier();\n                                    var pciModel = self.get(id);\n                                    var i = _.findIndex(self._registry[id], {version : pciModel.version});\n                                    if(i < 0){\n                                        self.trigger('error', 'no creator found for id/version ' + id + '/' + pciModel.version);\n                                    }else{\n                                        self._registry[id][i].creator.module = creatorHook;\n                                        creators[id] = creatorHook;\n                                    }\n                                });\n                                resolve(creators);\n                            }, reject);\n                        });\n                    }else{\n                        return Promise.resolve({});\n                    }\n\n                });\n\n                loadPromise\n                    .then(function(creators) {\n                        self.trigger('creatorsloaded', creators);\n                        return creators;\n                    })\n                    .catch(function(err) {\n                        self.trigger('error', err);\n                    });\n\n                return loadPromise;\n            },\n            enable: function enable(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci){\n                    pci.enabled = true;\n                }\n            },\n            disable: function disable(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                if(pci){\n                    pci.enabled = false;\n                }\n            },\n            isEnabled: function isEnabled(typeIdentifier, version){\n                var pci = this.get(typeIdentifier, version);\n                return (pci && pci.enabled === true);\n            }\n        }));\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Sam <sams@taotesting.com>\n * @requires jquery\n * @requires lodash\n */\ndefine('taoQtiItem/qtiCreator/helper/qtiElements',['jquery', 'lodash', 'i18n'], function($, _, __){\n    \"use strict\";\n\n    var QtiElements = {};\n\n    QtiElements.classes = {\n        //abstract classes:\n        'itemBody' : {'parents' : ['bodyElement'], 'contains' : ['block'], 'abstract' : true},\n        'atomicBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['inline'], 'abstract' : true},\n        'atomicInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\n        'simpleBlock' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['block'], 'abstract' : true},\n        'simpleInline' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['inline'], 'abstract' : true},\n        'flowStatic' : {'parents' : ['flow'], 'abstract' : true},\n        'blockStatic' : {'parents' : ['block'], 'abstract' : true},\n        'inlineStatic' : {'parents' : ['inline'], 'abstract' : true},\n        'flow' : {'parents' : ['objectFlow'], 'abstract' : true},\n        'tableCell' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'abstract' : true},\n        //html-derived qti elements:\n        'caption' : {'parents' : ['bodyElement'], 'contains' : ['inline'], 'xhtml' : true},\n        'col' : {'parents' : ['bodyElement'], 'xhtml' : true},\n        'colgroup' : {'parents' : ['bodyElement'], 'contains' : ['col'], 'xhtml' : true},\n        'div' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['flow'], 'xhtml' : true},\n        'dl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['dlElement'], 'xhtml' : true},\n        'dt' : {'parents' : ['dlElement'], 'contains' : ['inline'], 'xhtml' : true},\n        'dd' : {'parents' : ['dlElement'], 'contains' : ['flow'], 'xhtml' : true},\n        'hr' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'xhtml' : true},\n        'math' : {'parents' : ['blockStatic', 'flowStatic', 'inlineStatic'], 'xhtml' : true},\n        'li' : {'parents' : ['bodyElement'], 'contains' : ['flow'], 'xhtml' : true},\n        'ol' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\n        'ul' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['li'], 'xhtml' : true},\n        'object' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic'], 'contains' : ['objectFlow'], 'xhtml' : true},\n        'param' : {'parents' : ['objectFlow'], 'xhtml' : true},\n        'table' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'contains' : ['caption', 'col', 'colgroup', 'thead', 'tfoot', 'tbody'], 'xhtml' : true},\n        'tbody' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\n        'tfoot' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\n        'thead' : {'parents' : ['bodyElement'], 'contains' : ['tr'], 'xhtml' : true},\n        'td' : {'parents' : ['tableCell'], 'xhtml' : true},\n        'th' : {'parents' : ['tableCell'], 'xhtml' : true},\n        'tr' : {'parents' : ['bodyElement'], 'contains' : ['tableCell'], 'xhtml' : true},\n        'a' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'abbr' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'acronym' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'b' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'big' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'cite' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'code' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'dfn' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'em' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'i' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'kbd' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'q' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'samp' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'small' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'span' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'strong' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'sub' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'sup' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'tt' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'var' : {'parents' : ['simpleInline'], 'xhtml' : true},\n        'blockquote' : {'parents' : ['simpleBlock'], 'xhtml' : true},\n        'address' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h1' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h2' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h3' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h4' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h5' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'h6' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'p' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'pre' : {'parents' : ['atomicBlock'], 'xhtml' : true},\n        'img' : {'parents' : ['atomicInline'], 'xhtml' : true, attributes : ['src', 'alt', 'longdesc', 'height', 'width']},\n        'br' : {'parents' : ['atomicInline'], 'xhtml' : true},\n        //qti elements:\n        'infoControl' : {'parents' : ['blockStatic', 'bodyElement', 'flowStatic'], 'qti' : true},\n        'textRun' : {'parents' : ['inlineStatic', 'flowstatic'], 'qti' : true},\n        'feedbackInline' : {'parents' : ['simpleInline', 'feedbackElement'], 'qti' : true},\n        'feedbackBlock' : {'parents' : ['simpleBlock'], 'qti' : true},\n        'rubricBlock' : {'parents' : ['simpleBlock'], 'qti' : true}, //strange qti 2.1 exception, marked as simpleBlock instead of\n        'blockInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\n        'inlineInteraction' : {'parents' : ['inline', 'flow', 'interaction'], 'qti' : true},\n        'gap' : {'parents' : ['inlineStatic'], 'qti' : true},\n        'hottext' : {'parents' : ['flowstatic', 'inlineStatic'], 'contains' : ['inlineStatic'], 'qti' : true},\n        'printedVariable' : {'parents' : ['bodyElement', 'flowStatic', 'inlineStatic', 'textOrVariable'], 'qti' : true},\n        'prompt' : {'parents' : ['bodyElement'], 'contains' : ['inlineStatic'], 'qti' : true},\n        'templateElement' : {'parents' : ['bodyElement'], 'qti' : true},\n        'templateBlock' : {'parents' : ['blockStatic', 'flowStatic', 'templateElement'], 'contains' : ['blockStatic'], 'qti' : true},\n        'templateInline' : {'parents' : ['inlineStatic', 'flowStatic', 'templateElement'], 'contains' : ['inlineStatic'], 'qti' : true},\n        'choiceInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'associateInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'orderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'matchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'hottextInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'gapMatchInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'mediaInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'sliderInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'uploadInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'drawingInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'graphicInteraction' : {'parents' : ['blockInteraction'], 'qti' : true},\n        'hotspotInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'graphicAssociateInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'graphicOrderInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'graphicGapMatchInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'selectPointInteraction' : {'parents' : ['graphicInteraction'], 'qti' : true},\n        'textEntryInteraction' : {'parents' : ['stringInteraction', 'inlineInteraction'], 'qti' : true},\n        'extendedTextInteraction' : {'parents' : ['stringInteraction', 'blockInteraction'], 'qti' : true},\n        'inlineChoiceInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\n        'endAttemptInteraction' : {'parents' : ['inlineInteraction'], 'qti' : true},\n        'customInteraction' : {'parents' : ['block', 'flow', 'interaction'], 'qti' : true},\n        '_container' : {'parents' : ['block'], 'qti' : true}//a pseudo class introduced in TAO\n    };\n\n    QtiElements.cache = {containable : {}, children : {}, parents : {}};\n\n    QtiElements.getAllowedContainersElements = function(qtiClass, $container){\n        var classes = QtiElements.getAllowedContainers(qtiClass);\n        var jqSelector = '';\n        for(var i in classes){\n            if(!classes[i].qti){\n                //html element:\n                jqSelector += classes[i] + ', ';\n            }\n        }\n\n        if(jqSelector){\n            jqSelector = jqSelector.substring(0, jqSelector.length - 2);\n        }\n\n        return $(jqSelector, $container ? $container : $(document)).filter(':not([data-qti-type])');\n    };\n\n    QtiElements.getAllowedContainers = function(qtiClass){\n        var ret;\n        if(QtiElements.cache.containable[qtiClass]){\n            ret = QtiElements.cache.containable[qtiClass];\n        }else{\n            ret = [];\n            var parents = QtiElements.getParentClasses(qtiClass, true);\n            for(var aClass in QtiElements.classes){\n                var model = QtiElements.classes[aClass];\n                if(model.contains){\n                    var intersect = _.intersection(model.contains, parents);\n                    if(intersect.length){\n                        if(!model.abstract){\n                            ret.push(aClass);\n                        }\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, true));\n                    }\n                }\n            }\n            QtiElements.cache.containable[qtiClass] = ret;\n        }\n\n        return ret;\n    };\n\n    QtiElements.getAllowedContents = function(qtiClass, recursive, checked){\n\n        var ret = [];\n        checked = checked || {};\n\n        var model = QtiElements.classes[qtiClass];\n        if(model && model.contains){\n            for(var i in model.contains){\n                var contain = model.contains[i];\n                if(!checked[contain]){\n                    checked[contain] = true;\n\n                    //qtiClass can contain everything defined as its contents\n                    ret.push(contain);\n\n                    //qtiClass can also contain subclass of its contents\n                    var children = QtiElements.getChildClasses(contain, true);\n                    for(var i in children){\n                        var child = children[i];\n                        if(!checked[child]){\n                            checked[child] = true;\n\n                            ret.push(child);\n\n                            //adding children allowed contents depends on the option \"recursive\"\n                            if(recursive){\n                                ret = _.union(ret, QtiElements.getAllowedContents(child, true, checked));\n                            }\n                        }\n                    }\n\n                    //adding allowed contents of qtiClass' allowed contents depends on the option \"recursive\"\n                    if(recursive){\n                        ret = _.union(ret, QtiElements.getAllowedContents(contain, true, checked));\n                    }\n\n                }\n            }\n        }\n\n        //qtiClass can contain all allowed contents of its parents:\n        var parents = QtiElements.getParentClasses(qtiClass, true);\n        for(var i in parents){\n            ret = _.union(ret, QtiElements.getAllowedContents(parents[i], recursive, checked));\n        }\n\n        return _.uniq(ret, false);\n    };\n\n    QtiElements.isAllowedClass = function(qtiContainerClass, qtiContentClass){\n        var allowedClasses = QtiElements.getAllowedContents(qtiContainerClass);\n        return (_.indexOf(allowedClasses, qtiContentClass) >= 0);\n    };\n\n    QtiElements.getParentClasses = function(qtiClass, recursive){\n        var ret;\n        if(recursive && QtiElements.cache.parents[qtiClass]){\n            ret = QtiElements.cache.parents[qtiClass];\n        }else{\n            ret = [];\n            if(QtiElements.classes[qtiClass]){\n                ret = QtiElements.classes[qtiClass].parents;\n                if(recursive){\n                    for(var i in ret){\n                        ret = _.union(ret, QtiElements.getParentClasses(ret[i], recursive));\n                    }\n                    ret = _.uniq(ret, false);\n                }\n            }\n            QtiElements.cache.parents[qtiClass] = ret;\n        }\n\n        return ret;\n    };\n\n    QtiElements.getChildClasses = function(qtiClass, recursive, type){\n        var ret;\n        var cacheType = type ? type : 'all';\n        if(recursive && QtiElements.cache.children[qtiClass] && QtiElements.cache.children[qtiClass][cacheType]){\n            ret = QtiElements.cache.children[qtiClass][cacheType];\n        }else{\n            ret = [];\n            for(var aClass in QtiElements.classes){\n                var model = QtiElements.classes[aClass];\n                if(_.indexOf(model.parents, qtiClass) >= 0){\n                    if(type){\n                        if(model[type]){\n                            ret.push(aClass);\n                        }\n                    }else{\n                        ret.push(aClass);\n                    }\n                    if(recursive){\n                        ret = _.union(ret, QtiElements.getChildClasses(aClass, recursive, type));\n                    }\n                }\n            }\n            if(!QtiElements.cache.children[qtiClass]){\n                QtiElements.cache.children[qtiClass] = {};\n            }\n            QtiElements.cache.children[qtiClass][cacheType] = ret;\n        }\n\n        return ret;\n    };\n\n    QtiElements.isBlock = function(qtiClass){\n        return QtiElements.is(qtiClass, 'block');\n    };\n\n    QtiElements.isInline = function(qtiClass){\n        return QtiElements.is(qtiClass, 'inline');\n    };\n\n    QtiElements.is = function(qtiClass, topClass){\n        if(qtiClass === topClass){\n            return true;\n        }else{\n            var parents = QtiElements.getParentClasses(qtiClass, true);\n            return (_.indexOf(parents, topClass) >= 0);\n        }\n    };\n\n    QtiElements.getAvailableAuthoringElements = function(){\n\n        return {\n            choiceInteraction : {\n                label : __('Choice Interaction'),\n                description : __('Select a single (radio buttons) or multiple (check boxes) responses among a set of choices.'),\n                icon : 'icon-choice',\n                short : __('Choice'),\n                qtiClass : 'choiceInteraction',\n                tags:['Common Interactions', 'mcq']\n            },\n            orderInteraction : {\n                label : __('Order Interaction'),\n                icon : 'icon-order',\n                description : __('Arrange a list of choices in the correct order.'),\n                short : __('Order'),\n                qtiClass : 'orderInteraction',\n                tags:['Common Interactions', 'ordering']\n            },\n            associateInteraction : {\n                label : __('Associate Interaction'),\n                icon : 'icon-associate',\n                description : __('Create pair(s) from a series of choices.'),\n                short : __('Associate'),\n                qtiClass : 'associateInteraction',\n                tags:['Common Interactions', 'association']\n            },\n            matchInteraction : {\n                label : __('Match Interaction'),\n                icon : 'icon-match',\n                description : __('Create association(s) between two sets of choices displayed in a table (row and column).'),\n                short : __('Match'),\n                qtiClass : 'matchInteraction',\n                tags:['Common Interactions', 'association']\n            },\n            hottextInteraction : {\n                label : __('Hottext Interaction'),\n                icon : 'icon-hottext',\n                description : __('Select one or more text parts (hottext) within a text.'),\n                short : __('Hottext'),\n                qtiClass : 'hottextInteraction',\n                tags:['Common Interactions', 'text']\n            },\n            gapMatchInteraction : {\n                label : __('Gap Match Interaction'),\n                icon : 'icon-gap-match',\n                description : __(' Fill in the gaps in a text from a set of choices.'),\n                short : __('Gap Match'),\n                qtiClass : 'gapMatchInteraction',\n                tags:['Common Interactions', 'text', 'association']\n            },\n            sliderInteraction : {\n                label : __('Slider Interaction'),\n                icon : 'icon-slider',\n                description :__('Select a value within a numerical range.'),\n                short : __('Slider'),\n                qtiClass : 'sliderInteraction',\n                tags:['Common Interactions', 'special']\n            },\n            extendedTextInteraction : {\n                label : __('Extended Text Interaction'),\n                icon : 'icon-extended-text',\n                description : __('Collect open-ended information in one or more text area(s) (strings or numeric values).'),\n                short : __('Extended Text'),\n                qtiClass : 'extendedTextInteraction',\n                tags:['Common Interactions', 'text']\n            },\n            uploadInteraction : {\n                label : __('File Upload Interaction'),\n                icon : 'icon-upload',\n                description : __('Upload a file (e.g. document, picture...) as a response.'),\n                short : __('File Upload'),\n                qtiClass : 'uploadInteraction',\n                tags:['Common Interactions', 'special']\n            },\n            mediaInteraction : {\n                label : __('Media Interaction'),\n                icon : 'icon-media',\n                description : __('Control the playing parameters (auto-start, loop) of a video or audio file and report the number of time it has been played.'),\n                short : __('Media'),\n                qtiClass : 'mediaInteraction',\n                tags:['Common Interactions', 'media']\n            },\n            _container : {\n                label : __('Text Block'),\n                icon : 'icon-font',\n                description : __('Block contains the content (stimulus) of the item such as text or image. It is also required for Inline Interactions.'),\n                short : __('Block'),\n                qtiClass : '_container',\n                tags:['Inline Interactions', 'text']\n            },\n            inlineChoiceInteraction : {\n                label : __('Inline Choice Interaction'),\n                icon : 'icon-inline-choice',\n                description : __('Select a choice from a drop-down list.'),\n                short : __('Inline Choice'),\n                qtiClass : 'inlineChoiceInteraction',\n                tags:['Inline Interactions', 'inline-interactions', 'mcq']\n            },\n            textEntryInteraction : {\n                label : __('Text Entry Interaction'),\n                icon : 'icon-text-entry',\n                description : __('Collect open-ended information in a short text input (strings or numeric values).'),\n                short : __('Text Entry'),\n                qtiClass : 'textEntryInteraction',\n                tags:['Inline Interactions', 'inline-interactions', 'text']\n            },\n            endAttemptInteraction : {\n                label : __('End Attempt Interaction'),\n                icon : 'icon-end-attempt',\n                description : __('Trigger the end of the item attempt.'),\n                short : __('End Attempt'),\n                qtiClass : 'endAttemptInteraction',\n                tags:['Inline Interactions', 'inline-interactions', 'button', 'submit']\n            },\n            hotspotInteraction : {\n                label : __('Hotspot Interaction'),\n                icon : 'icon-hotspot',\n                description : __('Select one or more areas (hotspots) displayed on an picture.'),\n                short : __('Hotspot'),\n                qtiClass : 'hotspotInteraction',\n                tags:['Graphic Interactions', 'mcq']\n            },\n            graphicOrderInteraction : {\n                label : __('Graphic Order Interaction'),\n                icon : 'icon-graphic-order',\n                description : __('Order the areas (hotspots) displayed on a picture.'),\n                short : __('Order'),\n                qtiClass : 'graphicOrderInteraction',\n                tags:['Graphic Interactions', 'ordering']\n            },\n            graphicAssociateInteraction : {\n                label : __('Graphic Associate Interaction'),\n                icon : 'icon-graphic-associate',\n                description : __('Create association(s) between areas (hotspots) displayed on a picture.'),\n                short : __('Associate'),\n                qtiClass : 'graphicAssociateInteraction',\n                tags:['Graphic Interactions', 'association']\n            },\n            graphicGapMatchInteraction : {\n                label : __('Graphic Gap Match Interaction'),\n                icon : 'icon-graphic-gap',\n                description : __('Fill in the gaps on a picture with a set of image choices.'),\n                short : __('Gap Match'),\n                qtiClass : 'graphicGapMatchInteraction',\n                tags:['Graphic Interactions', 'association']\n            },\n            selectPointInteraction : {\n                label : __('Select Point Interaction'),\n                icon : 'icon-select-point',\n                description : __('Position one or more points on a picture (response areas are not displayed).'),\n                short : __('Select Point'),\n                qtiClass : 'selectPointInteraction',\n                tags:['Graphic Interactions']\n            }\n        };\n    };\n\n    return QtiElements;\n\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/ciRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory',\n    'taoQtiItem/qtiCreator/helper/qtiElements'\n], function (_, portableElementRegistry, qtiElements){\n    'use strict';\n\n    /**\n     * Create a ney interaction registry instance\n     * interaction registry need to register newly loaded creator hooks in the list of available qti authoring elements\n     *\n     * @returns {Object} registry instance\n     */\n    return function customInteractionRegistry(){\n\n        return portableElementRegistry({\n            getAuthoringData : function getAuthoringData(typeIdentifier, options){\n                var pciModel;\n                options = _.defaults(options || {}, {version : 0, enabledOnly : false});\n                pciModel = this.get(typeIdentifier, options.version);\n                if(pciModel && pciModel.creator && pciModel.creator.hook && pciModel.creator.icon && (pciModel.enabled || !options.enabledOnly)){\n                    return {\n                        label : pciModel.label, //currently no translation available\n                        icon : pciModel.creator.icon.replace(new RegExp('^' + typeIdentifier + '\\/'), pciModel.baseUrl),\n                        short : pciModel.short,\n                        description : pciModel.description,\n                        qtiClass : 'customInteraction.' + pciModel.typeIdentifier, //custom interaction is block type\n                        tags : _.union(['Custom Interactions'], pciModel.tags)\n                    };\n                }\n            }\n        }).on('creatorsloaded', function(creators){\n            _.each(creators, function(creator){\n                qtiElements.classes['customInteraction.' + creator.getTypeIdentifier()] = {parents : ['customInteraction'], qti : true};\n            });\n        });\n    };\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/ciRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/ciRegistry', 'module'], function (_, ciRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of ciRegistry\n    var registry = ciRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/factory/icRegistry',[\n    'lodash',\n    'taoQtiItem/portableElementRegistry/factory/factory'\n], function (_, portableElementRegistry){\n    'use strict';\n\n    /**\n     * Info control registry has currently no additonal fonctionalities than the basic portable element registry\n     *\n     * @returns {Object} registry instance\n     */\n    return function infoControlRegistry(){\n        return portableElementRegistry();\n    }\n\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableElementRegistry/icRegistry',['lodash', 'taoQtiItem/portableElementRegistry/factory/icRegistry', 'module'], function (_, icRegistry, module){\n    'use strict';\n\n    //create a preregistered singleton of icRegistry\n    var registry = icRegistry();\n    var providers = [];\n    var config = module.config();\n\n    if(config && config.providers){\n        providers = config.providers;\n    }\n\n    _.each(providers, function(provider){\n        if(provider.name && provider.module){\n            registry.registerProvider(provider.module);\n        }\n    });\n\n    return registry;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy',[\n    'taoQtiItem/portableElementRegistry/ciRegistry',\n    'taoQtiItem/portableElementRegistry/icRegistry'\n], function (ciRegistry, icRegistry) {\n    'use strict';\n\n    function getBaseUrlByIdentifier(typeIdentifier) {\n        if (ciRegistry.get(typeIdentifier)) {\n            return ciRegistry.getBaseUrl(typeIdentifier);\n        }\n        if (icRegistry.get(typeIdentifier)) {\n            return icRegistry.getBaseUrl(typeIdentifier);\n        }\n        return typeIdentifier;\n    }\n\n    //strategy to resolve portable info control and portable interactions paths.\n    //It should never be reached in the stack the usual way and should be called only using resolveBy.\n    return {\n        name: 'portableElementLocation',\n        handle: function handlePortableElementLocation(url) {\n\n            if (url.file === url.path) {\n                return getBaseUrlByIdentifier(url.file);\n            } else if (url.source === url.relative) {\n                return url.relative.replace(/^(\\.\\/)?([a-z_0-9]+)\\/(.*)/i, function (fullmatch, $1, typeIdentifier, relPath) {\n                    var runtimeLocation = getBaseUrlByIdentifier(typeIdentifier);\n                    if (runtimeLocation) {\n                        return runtimeLocation + '/' + relPath;\n                    }\n                    return fullmatch;\n                });\n            }\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoQtiItem/qtiCommonRenderer/renderers/config',[\n    'lodash',\n    'context',\n    'ui/themes',\n    'taoItems/assets/manager',\n    'taoItems/assets/strategies',\n    'module',\n    'taoQtiItem/portableElementRegistry/assetManager/portableAssetStrategy'\n], function(_, context, themes, assetManagerFactory, assetStrategies, module, portableAssetStrategy){\n    'use strict';\n\n    var itemThemes = themes.get('items');\n    var moduleConfig = module.config();\n\n    //Create asset manager stack\n    var assetManager = assetManagerFactory([\n        {\n            name : 'theme',\n            handle : function handleTheme(url){\n                if(itemThemes && url.path && (url.path === itemThemes.base || _.contains(_.pluck(itemThemes.available, 'path'), url.path))){\n                    return context.root_url + url.toString();\n                }\n            }\n        },\n        assetStrategies.taomedia,\n        assetStrategies.external,\n        assetStrategies.base64,\n        assetStrategies.itemCssNoCache,\n        assetStrategies.baseUrl,\n        portableAssetStrategy\n    ], {baseUrl : ''});//baseUrl is not predefined in the config, but should be set upon renderer instantiating\n\n    //renderers locations\n    var locations = {\n        'assessmentItem' : 'taoQtiItem/qtiCommonRenderer/renderers/Item',\n        '_container' : 'taoQtiItem/qtiCommonRenderer/renderers/Container',\n        '_simpleFeedbackRule' : false,\n        '_tooltip' : 'taoQtiItem/qtiCommonRenderer/renderers/Tooltip',\n        'stylesheet' : 'taoQtiItem/qtiCommonRenderer/renderers/Stylesheet',\n        'outcomeDeclaration' : false,\n        'responseDeclaration' : false,\n        'responseProcessing' : false,\n        'img' : 'taoQtiItem/qtiCommonRenderer/renderers/Img',\n        'math' : 'taoQtiItem/qtiCommonRenderer/renderers/Math',\n        'object' : 'taoQtiItem/qtiCommonRenderer/renderers/Object',\n        'table' : 'taoQtiItem/qtiCommonRenderer/renderers/Table',\n        'printedVariable' : 'taoQtiItem/qtiCommonRenderer/renderers/PrintedVariable',\n        'rubricBlock' : 'taoQtiItem/qtiCommonRenderer/renderers/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCommonRenderer/renderers/ModalFeedback',\n        'prompt' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/Prompt',\n        'choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ChoiceInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/ExtendedTextInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MatchInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SliderInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/InlineChoiceInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleChoice.OrderInteraction',\n        'hottext' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Hottext',\n        'gap' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapText',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'inlineChoice' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/InlineChoice',\n        'hottextInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HottextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/HotspotInteraction',\n        'hotspotChoice' : false,\n        'gapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GapMatchInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicOrderInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/UploadInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicGapMatchInteraction',\n        'gapImg' : 'taoQtiItem/qtiCommonRenderer/renderers/choices/GapImg',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/GraphicAssociateInteraction',\n        'associableHotspot' : false,\n        'customInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/PortableCustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiCommonRenderer/renderers/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiCommonRenderer/renderers/Include',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCommonRenderer/renderers/interactions/EndAttemptInteraction'\n    };\n\n    return {\n        name:'commonRenderer',\n        locations: locations,\n        options:   {\n            assetManager: assetManager,\n            themes : itemThemes,\n            enableDragAndDrop: {\n                associate: !!moduleConfig.associateDragAndDrop,\n                gapMatch: !!moduleConfig.gapMatchDragAndDrop,\n                graphicGapMatch: !!moduleConfig.graphicGapMatchDragAndDrop,\n                order: !!moduleConfig.orderDragAndDrop\n            },\n            messages : moduleConfig.messages\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Define the Qti Item Common Renderer\n */\ndefine('taoQtiItem/qtiCommonRenderer/renderers/Renderer',[\n    'taoQtiItem/qtiRunner/core/Renderer',\n    'taoQtiItem/qtiCommonRenderer/renderers/config'\n], function(Renderer, config){\n    'use strict';\n\n    return Renderer.build(config.locations, config.name, config.options);\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCommonRenderer/helpers/container',[\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/core/Element'\n], function(_, $, Element){\n    'use strict';\n\n    //containers are cached, so do not forget to remove them.\n    var _containers = {};\n    var _$containerContext = $();\n\n    /**\n     * Build the selector for your element (from the element serial)\n     * @private\n     * @param {QtiElement} element\n     * @returns {String} the selector\n     */\n    var _getSelector = function(element){\n\n        var serial = element.getSerial(),\n            selector = '[data-serial=' + serial + ']';\n\n        if(Element.isA(element, 'choice')){\n            selector = '.qti-choice' + selector;\n        }else if(Element.isA(element, 'interaction')){\n            selector = '.qti-interaction' + selector;\n        }\n\n        return selector;\n    };\n\n    /**\n     * Helps you to retrieve the DOM element (as a jquery element)\n     * @exports taoQtiItem/qtiCommonRenderer/helpers/containerHelper\n     */\n    var containerHelper =  {\n\n        /**\n         * Set a global scope to look for element container\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         */\n        setContext : function($scope){\n            _$containerContext = $scope;\n        },\n\n        /**\n         * Get the container of the given element\n         * @param {QtiElement} element - the QTI Element to find the container for\n         * @param {jQueryElement} [$scope] - if you want to retrieve the element in a particular scope or context\n         * @returns {jQueryElement} the container\n         */\n        get : function(element, $scope){\n\n            var serial = element.getSerial();\n            if($scope instanceof $ && $scope.length){\n\n                //find in the given context\n                return $scope.find(_getSelector(element));\n\n            }else if(_$containerContext instanceof $ && _$containerContext.length){\n\n                //find in the globally set context\n                return _$containerContext.find(_getSelector(element));\n\n            }else if(!_containers[serial] || !_containers[serial].length){\n\n                //find in the global context\n                _containers[serial] = $(_getSelector(element));\n            }\n\n            return _containers[serial];\n        },\n\n        /**\n         * getContainer use a cache to store elements. This methods helps you to purge it.\n         * @param {Element} element - find the container of this element\n         */\n        reset : function(element){\n            if(element instanceof Element && _containers[element.getSerial()]){\n                _containers = _.omit(_containers, element.getSerial());\n            }\n        },\n\n        /**\n         * Clear the containers cache\n         */\n        clear : function clear(){\n            _containers = {};\n            _$containerContext = $();\n        },\n\n        /**\n         * Trigger an event on the element's container\n         * @param {String} eventType - the name of the event\n         * @param {QtiElement} element - find the container of this element\n         * @param {Array} [data] - data to give to the event\n         */\n        trigger : function(eventType, element, data){\n            if(eventType){\n                if(data && !_.isArray(data)){\n                    data = [data];\n                }\n                this.get(element).trigger(eventType, data);\n\n            }\n        },\n\n        /**\n         * Alias to trigger a responseChange Event from an interaction\n         * @param {QtiElement} interaction - the interaction that had a response changed\n         * @param {Object} [extraData] - additionnal data to give to the event\n         */\n        triggerResponseChangeEvent : function(interaction, extraData){\n            this.trigger('responseChange', interaction, [{\n                    interaction : interaction,\n                    response : interaction.getResponse()\n                },\n                extraData\n            ]);\n        },\n\n        /**\n         * Make all links to opens in another tab/window\n         * @param {jQueryElement} $container\n         */\n        targetBlank : function($container){\n\n            $container.on('click', 'a', function(e) {\n                e.preventDefault();\n                var href = $(this).attr('href');\n                if(href && href.match(/^http/i)){\n                    window.open(href, '_blank');\n                }\n            });\n        }\n    };\n\n    return containerHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCreator/helper/commonRenderer',[\n    'lodash',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'taoQtiItem/qtiCommonRenderer/helpers/container'\n], function(_, Renderer, containerHelper){\n    \"use strict\";\n\n    //store the current execution context of the common renderer (preview)\n    var _$previousContext = null;\n\n    //configure and instanciate once only:\n    var _renderer;\n\n    var commonRenderer = {\n        render : function(item, $container){\n\n            commonRenderer.setContext($container);\n\n            return _renderer.load(function(){\n\n                $container.append(item.render(this));\n                item.postRender({}, '', this);\n\n            }, item.getUsedClasses());\n        },\n        get : function(reset, config){\n            if(!_renderer || reset){\n\n                //create new instance of common renderer\n                _renderer = new Renderer({\n                    shuffleChoices : true\n                });\n\n                if(config){\n                    //update the resolver baseUrl\n                    _renderer.getAssetManager().setData({baseUrl : config.properties.baseUrl || '' });\n                }\n            }\n            return _renderer;\n        },\n        getOption : function(name){\n            return _renderer.getOption(name);\n        },\n        setOption : function(name, value){\n            return _renderer.setOption(name, value);\n        },\n        setOptions : function(options){\n            return _renderer.setOptions(options);\n        },\n        setContext : function($context){\n            _$previousContext = $context;\n            return containerHelper.setContext($context);\n        },\n        restoreContext : function(){\n            containerHelper.setContext(_$previousContext);\n             _$previousContext = null;\n        },\n        load : function(qtiClasses, done){\n            var renderer = _renderer || this.get();\n            return renderer.load(function(){\n                if(_.isFunction(done)){\n                    done.apply(this, arguments);\n                }\n            }, qtiClasses);\n        }\n    };\n\n    return commonRenderer;\n\n});\n\n","define('taoQtiItem/qtiItem/core/qtiClasses',[], function(){\n    return {\n        '_container' : 'taoQtiItem/qtiItem/core/Container',\n        'assessmentItem' : 'taoQtiItem/qtiItem/core/Item',\n        'responseProcessing' : 'taoQtiItem/qtiItem/core/ResponseProcessing',\n        '_simpleFeedbackRule' : 'taoQtiItem/qtiItem/core/response/SimpleFeedbackRule',\n        'stylesheet' : 'taoQtiItem/qtiItem/core/Stylesheet',\n        'math' : 'taoQtiItem/qtiItem/core/Math',\n        'img' : 'taoQtiItem/qtiItem/core/Img',\n        'object' : 'taoQtiItem/qtiItem/core/Object',\n        'outcomeDeclaration' : 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',\n        'responseDeclaration' : 'taoQtiItem/qtiItem/core/variables/ResponseDeclaration',\n        'rubricBlock' : 'taoQtiItem/qtiItem/core/RubricBlock',\n        'associableHotspot' : 'taoQtiItem/qtiItem/core/choices/AssociableHotspot',\n        'gap' : 'taoQtiItem/qtiItem/core/choices/Gap',\n        'gapImg' : 'taoQtiItem/qtiItem/core/choices/GapImg',\n        'gapText' : 'taoQtiItem/qtiItem/core/choices/GapText',\n        'hotspotChoice' : 'taoQtiItem/qtiItem/core/choices/HotspotChoice',\n        'hottext' : 'taoQtiItem/qtiItem/core/choices/Hottext',\n        'inlineChoice' : 'taoQtiItem/qtiItem/core/choices/InlineChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleAssociableChoice',\n        'simpleChoice' : 'taoQtiItem/qtiItem/core/choices/SimpleChoice',\n        'associateInteraction' : 'taoQtiItem/qtiItem/core/interactions/AssociateInteraction',\n        'choiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/ChoiceInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiItem/core/interactions/EndAttemptInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiItem/core/interactions/ExtendedTextInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GapMatchInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiItem/core/interactions/GraphicOrderInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiItem/core/interactions/HotspotInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiItem/core/interactions/HottextInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiItem/core/interactions/InlineChoiceInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiItem/core/interactions/MatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiItem/core/interactions/MediaInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiItem/core/interactions/OrderInteraction',\n        'prompt' : 'taoQtiItem/qtiItem/core/interactions/Prompt',\n        'selectPointInteraction' : 'taoQtiItem/qtiItem/core/interactions/SelectPointInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiItem/core/interactions/SliderInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiItem/core/interactions/TextEntryInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiItem/core/interactions/UploadInteraction',\n        'feedbackBlock' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackBlock',\n        'feedbackInline' : 'taoQtiItem/qtiItem/core/feedbacks/FeedbackInline',\n        'modalFeedback' : 'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',\n        'customInteraction' : 'taoQtiItem/qtiItem/core/interactions/CustomInteraction',\n        'infoControl' : 'taoQtiItem/qtiItem/core/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiItem/core/Include',\n        'table' : 'taoQtiItem/qtiItem/core/Table',\n        'printedVariable' : 'taoQtiItem/qtiItem/core/PrintedVariable',\n        '_tooltip' : 'taoQtiItem/qtiItem/core/Tooltip'\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA\n */\n\n/**\n * XML namespace handling\n */\ndefine('taoQtiItem/qtiItem/helper/xmlNsHandler',[], function(){\n    'use strict';\n\n    /**\n     * Elements that need to be prefixed\n     *\n     * @see http://www.imsglobal.org/xsd/qti/qtiv2p2/imsqti_v2p2.xsd\n     * @type {string}\n     */\n    var prefixed = 'article|aside|bdi|figure|footer|header|nav|rb|rp|rt|rtc|ruby|section';\n\n\n    /**\n     * Find a possibly existing prefix\n     *\n     * @param namespaces\n     * @param html5Ns\n     * @returns {*}\n     */\n    function getPrefix(namespaces, html5Ns) {\n        var key;\n        for(key in namespaces) {\n            if(namespaces[key] === html5Ns) {\n                return key;\n            }\n        }\n        return 'qh5';\n    }\n\n    return {\n\n        /**\n         * Remove prefix to make sure elements are properly displayed\n         *\n         * @param body\n         */\n        stripNs : function stripNs(body) {\n            var pattern    = '([\\\\w]+)\\\\:(' + prefixed + ')';\n            var openRegEx  = new RegExp('(<' + pattern + ')', 'gi');\n            var closeRegEx = new RegExp('(<\\\\/' + pattern + '>)', 'gi');\n            return body.replace(openRegEx, '<$3').replace(closeRegEx, '</$3>');\n        },\n\n        /**\n         * Add a prefix to those elements that require one\n         *\n         * @param xml\n         * @param namespaces\n         * @returns {*}\n         */\n        restoreNs : function restoreNs(xml, namespaces) {\n            var xmlRe     = new RegExp('(<(' + prefixed + ')[^>]*>|<\\\\/(' + prefixed + ')>)', 'gi');\n            var tagRe     = new RegExp('((<)(' + prefixed + ')([^>]*)(>)|(<\\\\/)(' + prefixed + ')(>))', 'i');\n            var xmlMatch  = xml.match(xmlRe);\n            var imsXsd    = 'http://www.imsglobal.org/xsd';\n            var html5Ns   = imsXsd + '/imsqtiv2p2_html5_v1p0';\n            var prefix    = getPrefix(namespaces, html5Ns);\n            var prefixAtt = 'xmlns:' + prefix + '=\"' + html5Ns + '\"';\n            var i         = xmlMatch ? xmlMatch.length : 0;\n            var tagMatch;\n\n            if(!xmlMatch) {\n                return xml;\n            }\n\n            while(i--) {\n                tagMatch = xmlMatch[i].match(tagRe);\n                xml = xml.replace(xmlMatch[i],\n                    tagMatch[5]\n                        ? '<' + prefix + ':' + tagMatch[3] + tagMatch[4] + '>'\n                        : '</' + prefix + ':' + tagMatch[7] + '>'\n                );\n            }\n\n            // we found matches but no namespace has been set\n            if(xmlMatch.length && xml.indexOf(prefixAtt) === -1) {\n                xml = xml.replace('<assessmentItem', '<assessmentItem ' + prefixAtt);\n            }\n\n            // make sure the item is set to qti 2.2\n            xml = xml.replace('xmlns=\"' + imsXsd + '/imsqti_v2p1\"', 'xmlns=\"' + imsXsd + '/imsqti_v2p2\"');\n            xml = xml.replace(\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p1 imsqti_v2p1.xsd\"',\n                'xsi:schemaLocation=\"' + imsXsd + '/imsqti_v2p2 ' + imsXsd + '/qti/qtiv2p2/imsqti_v2p2.xsd\"'\n            );\n\n            return xml;\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n//@todo : move this to the ../helper directory\ndefine('taoQtiItem/qtiItem/core/Loader',[\n    'lodash',\n    'class',\n    'taoQtiItem/qtiItem/core/qtiClasses',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/xmlNsHandler'\n], function(_, Class, qtiClasses, Element, xmlNsHandler){\n    'use strict';\n\n    var Loader = Class.extend({\n        init : function(item, classesLocation){\n\n            this.qti = {}; //loaded qti classes are store here\n            this.classesLocation = {};\n\n            this.item = item || null;//starts either from scratch or with an existing item object\n            this.setClassesLocation(classesLocation || qtiClasses);//load default location for qti classes model\n        },\n        setClassesLocation : function(qtiClasses){\n            _.extend(this.classesLocation, qtiClasses);\n            return this;\n        },\n        getRequiredClasses : function(data){\n            var ret = [], i;\n            for(i in data){\n                if(i === 'qtiClass' && data[i] !== '_container' && i !== 'rootElement'){//although a _container is a concrete class in TAO, it is not defined in QTI standard\n                    ret.push(data[i]);\n                }else if(typeof(data[i]) === 'object' && i !== 'responseRules'){    //responseRules should'nt be part of the parsing\n                    ret = _.union(ret, this.getRequiredClasses(data[i]));\n                }\n            }\n            return ret;\n        },\n        loadRequiredClasses : function(data, callback, reload){\n            var i;\n            var requiredClass,\n                requiredClasses = this.getRequiredClasses(data, reload), required = [];\n\n            for(i in requiredClasses){\n                requiredClass = requiredClasses[i];\n                if(this.classesLocation[requiredClass]){\n                    required.push(this.classesLocation[requiredClass]);\n                }else{\n                    throw new Error('missing qti class location declaration : ' + requiredClass);\n                }\n            }\n\n            var _this = this;\n            require(required, function(){\n                _.each(arguments, function(QtiClass){\n                    _this.qti[QtiClass.prototype.qtiClass] = QtiClass;\n                });\n                callback.call(_this, _this.qti);\n            });\n        },\n        getLoadedClasses : function(){\n            return _.keys(this.qti);\n        },\n        loadItemData : function(data, callback){\n\n            var _this = this;\n            _this.loadRequiredClasses(data, function(Qti){\n                var i;\n                if(typeof(data) === 'object' && data.qtiClass === 'assessmentItem'){\n\n                    //unload an item from it's serial (in case of a reload)\n                    if(data.serial){\n                        Element.unsetElement(data.serial);\n                    }\n\n                    _this.item = new Qti.assessmentItem(data.serial, data.attributes || {});\n                    _this.loadContainer(_this.item.getBody(), data.body);\n\n                    for(i in data.outcomes){\n                        var outcome = _this.buildOutcome(data.outcomes[i]);\n                        if(outcome){\n                            _this.item.addOutcomeDeclaration(outcome);\n                        }\n                    }\n                    for(i in data.feedbacks){\n                        var feedback = _this.buildElement(data.feedbacks[i]);\n                        if(feedback){\n                            _this.item.addModalFeedback(feedback);\n                        }\n                    }\n                    for(i in data.stylesheets){\n                        var stylesheet = _this.buildElement(data.stylesheets[i]);\n                        if(stylesheet){\n                            _this.item.addStylesheet(stylesheet);\n                        }\n                    }\n\n                    //important : build responses after all modal feedbacks and outcomes has been loaded, because the simple feedback rules need to reference them\n                    for(i in data.responses){\n                        var response = _this.buildResponse(data.responses[i]);\n                        if(response){\n                            _this.item.addResponseDeclaration(response);\n\n                            var feedbackRules = data.responses[i].feedbackRules;\n                            if(feedbackRules){\n                                _.forIn(feedbackRules, function(fbData, serial){\n                                    response.feedbackRules[serial] = _this.buildSimpleFeedbackRule(fbData, response);\n                                });\n                            }\n                        }\n                    }\n\n                    if(data.responseProcessing){\n                        _this.item.setResponseProcessing(_this.buildResponseProcessing(data.responseProcessing));\n                    }\n                    _this.item.setNamespaces(data.namespaces);\n                    _this.item.setSchemaLocations(data.schemaLocations);\n                    _this.item.setApipAccessibility(data.apipAccessibility);\n                }\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, _this.item);\n                }\n            });\n        },\n        loadAndBuildElement : function(data, callback){\n\n            var _this = this;\n\n            _this.loadRequiredClasses(data, function(Qti){\n\n                var element = _this.buildElement(data);\n\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        loadElement : function(element, data, callback){\n\n            var _this = this;\n            this.loadRequiredClasses(data, function(){\n                _this.loadElementData(element, data);\n                if(typeof(callback) === 'function'){\n                    callback.call(_this, element);\n                }\n            });\n        },\n        /**\n         * Load ALL given elements into existing loaded item\n         *\n         * @todo to be renamed to loadItemElements\n         * @param {object} data\n         * @param {function} callback\n         * @returns {undefined}\n         */\n        loadElements : function(data, callback){\n\n            var _this = this;\n\n            if(_this.item){\n\n                this.loadRequiredClasses(data, function(){\n\n                    var allElements = _this.item.getComposingElements();\n\n                    for(var i in data){\n                        var elementData = data[i];\n                        if(elementData && elementData.qtiClass && elementData.serial){\n                            //find and update element\n                            if(allElements[elementData.serial]){\n                                _this.loadElementData(allElements[elementData.serial], elementData);\n                            }\n                        }\n                    }\n\n                    if(typeof(callback) === 'function'){\n                        callback.call(_this, _this.item);\n                    }\n                });\n            }else{\n                throw 'QtiLoader : cannot load elements in empty item';\n            }\n\n        },\n        buildResponse : function(data){\n\n            var response = this.buildElement(data);\n\n            response.template = data.howMatch || null;\n            response.defaultValue = data.defaultValue || null;\n            response.correctResponse = data.correctResponses || null;\n\n            if(_.size(data.mapping)){\n                response.mapEntries = data.mapping;\n            }else if(_.size(data.areaMapping)){\n                response.mapEntries = data.areaMapping;\n            }else{\n                response.mapEntries = {};\n            }\n\n            response.mappingAttributes = data.mappingAttributes || {};\n\n            return response;\n        },\n        buildSimpleFeedbackRule : function(data, response){\n\n            var feedbackRule = this.buildElement(data);\n\n            feedbackRule.setCondition(response, data.condition, data.comparedValue || null);\n\n//            feedbackRule.comparedOutcome = this.item.responses[data.comparedOutcome] || null;\n            feedbackRule.feedbackOutcome = this.item.outcomes[data.feedbackOutcome] || null;\n            feedbackRule.feedbackThen = this.item.modalFeedbacks[data.feedbackThen] || null;\n            feedbackRule.feedbackElse = this.item.modalFeedbacks[data.feedbackElse] || null;\n\n            //associate the compared outcome to the feedbacks if applicable\n            var response = feedbackRule.comparedOutcome;\n            if(feedbackRule.feedbackThen){\n                feedbackRule.feedbackThen.data('relatedResponse', response);\n            }\n            if(feedbackRule.feedbackElse){\n                feedbackRule.feedbackElse.data('relatedResponse', response);\n            }\n\n            return feedbackRule;\n        },\n        buildOutcome : function(data){\n            var outcome = this.buildElement(data);\n            outcome.defaultValue = data.defaultValue || null;\n            return outcome;\n        },\n        buildResponseProcessing : function(data){\n            var rp = this.buildElement(data);\n            if(data && data.processingType){\n                if(data.processingType === 'custom'){\n                    rp.xml = data.data;\n                    rp.processingType = 'custom';\n                }else{\n                    rp.processingType = 'templateDriven';\n                }\n            }\n            return rp;\n        },\n        loadContainer : function(bodyObject, bodyData){\n            if(!Element.isA(bodyObject, '_container')){\n                throw 'bodyObject must be a QTI Container';\n            }\n\n            if(bodyData && typeof bodyData.body === 'string' && (typeof bodyData.elements === 'array' || typeof bodyData.elements === 'object')){\n                for(var serial in bodyData.elements){\n                    var eltData = bodyData.elements[serial];\n                    //check if class is loaded:\n                    var element = this.buildElement(eltData);\n                    if(element){\n                        bodyObject.setElement(element, bodyData.body);\n                    }\n                }\n                bodyObject.body(xmlNsHandler.stripNs(bodyData.body));\n            }else{\n                throw 'wrong bodydata format';\n            }\n        },\n        buildElement : function(elementData){\n            var elt = null;\n            if(elementData && elementData.qtiClass && elementData.serial){\n                var className = elementData.qtiClass;\n                if(this.qti[className]){\n                    elt = new this.qti[className](elementData.serial);\n                    this.loadElementData(elt, elementData);\n                }else{\n                    throw 'the qti element class does not exist: ' + className;\n                }\n            }else{\n                throw 'wrong elementData format';\n            }\n            return elt;\n        },\n        loadElementData : function(element, data){\n\n            //merge attributes when loading element data\n            var attributes = _.defaults(data.attributes || {}, element.attributes || {});\n            element.setAttributes(attributes);\n\n            if(element.body && data.body){\n                if(element.bdy){\n                    this.loadContainer(element.getBody(), data.body);\n                }\n            }\n\n            if(element.object && data.object){\n                if(element.object){\n                    this.loadObjectData(element.object, data.object);\n                }\n            }\n\n            if(Element.isA(element, 'interaction')){\n                this.loadInteractionData(element, data);\n            }else if(Element.isA(element, 'choice')){\n                this.loadChoiceData(element, data);\n            }else if(Element.isA(element, 'math')){\n                this.loadMathData(element, data);\n            }else if(Element.isA(element, 'infoControl')){\n                this.loadPicData(element, data);\n            }else if(Element.isA(element, '_tooltip')){\n                this.loadTooltipData(element, data);\n            }\n\n            return element;\n        },\n        loadInteractionData : function(interaction, data){\n            if(Element.isA(interaction, 'blockInteraction')){\n                if(data.prompt){\n                    this.loadContainer(interaction.prompt.getBody(), data.prompt);\n                }\n            }\n\n            this.buildInteractionChoices(interaction, data);\n\n            if(Element.isA(interaction, 'customInteraction')){\n                this.loadPciData(interaction, data);\n            }\n        },\n        buildInteractionChoices : function(interaction, data){\n\n            //note: Qti.ContainerInteraction (Qti.GapMatchInteraction and Qti.HottextInteraction) has already been parsed by builtElement(interacionData);\n            if(data.choices){\n                if(Element.isA(interaction, 'matchInteraction')){\n                    for(var set = 0; set < 2; set++){\n                        if(!data.choices[set]){\n                            throw 'missing match set #' + set;\n                        }\n                        var matchSet = data.choices[set];\n                        for(var serial in matchSet){\n                            var choice = this.buildElement(matchSet[serial]);\n                            if(choice){\n                                interaction.addChoice(choice, set);\n                            }\n                        }\n                    }\n                }else{\n                    for(var serial in data.choices){\n                        var choice = this.buildElement(data.choices[serial]);\n                        if(choice){\n                            interaction.addChoice(choice);\n                        }\n                    }\n                }\n\n                if(Element.isA(interaction, 'graphicGapMatchInteraction')){\n                    if(data.gapImgs){\n                        for(var serial in data.gapImgs){\n                            var gapImg = this.buildElement(data.gapImgs[serial]);\n                            if(gapImg){\n                                interaction.addGapImg(gapImg);\n                            }\n                        }\n                    }\n                }\n\n            }\n\n        },\n        loadChoiceData : function(choice, data){\n            if(Element.isA(choice, 'textVariableChoice')){\n                choice.val(data.text);\n            }else if(Element.isA(choice, 'gapImg')){\n                //has already been taken care of in buildElement()\n            }else if(Element.isA(choice, 'gapText')){\n                // this ensure compatibility of Qti 2.1 items\n                if (! choice.body()) {\n                    choice.body(data.text);\n                }\n            }else if(Element.isA(choice, 'containerChoice')){\n                //has already been taken care of in buildElement()\n            }\n        },\n        loadObjectData : function(object, data){\n            object.setAttributes(data.attributes);\n            //@todo: manage object like a container\n            if(data._alt){\n                if(data._alt.qtiClass === 'object'){\n                    object._alt = Loader.buildElement(data._alt);\n                }else{\n                    object._alt = data._alt;\n                }\n            }\n        },\n        loadMathData : function(math, data){\n            math.ns = data.ns || {};\n            math.setMathML(data.mathML || '');\n            _.forIn(data.annotations || {}, function(value, encoding){\n                math.setAnnotation(encoding, value);\n            });\n        },\n        loadTooltipData : function(tooltip, data){\n            tooltip.content(data.content);\n        },\n        loadPciData : function(pci, data){\n            loadPortableCustomElementData(pci, data);\n        },\n        loadPicData : function(pic, data){\n            loadPortableCustomElementData(pic, data);\n        }\n    });\n\n    function loadPortableCustomElementData(portableElement, data){\n        portableElement.typeIdentifier = data.typeIdentifier;\n        portableElement.markup = data.markup;\n        portableElement.entryPoint = data.entryPoint;\n        portableElement.libraries = data.libraries;\n        portableElement.setNamespace('', data.xmlns);\n\n        loadPortableCustomElementProperties(portableElement, data.properties);\n    }\n\n    /**\n     * If a property is given as a serialized JSON object, parse it directly to a JS object\n     */\n    function loadPortableCustomElementProperties(portableElement, rawProperties) {\n        var properties = {};\n\n        _.forOwn(rawProperties, function(value, key) {\n            try {\n                properties[key] = JSON.parse(value);\n            } catch (e) {\n                properties[key] = value;\n            }\n        });\n        portableElement.properties = properties;\n    }\n\n    return Loader;\n});\n\n","define('taoQtiItem/qtiCreator/model/helper/event',['jquery', 'lodash'], function($, _){\n    \"use strict\";\n    var _ns = '.qti-creator';\n    var _ns_model = '.qti-creator';\n    var eventList = [\n        'containerBodyChange',\n        'containerElementAdded',\n        'elementCreated.qti-widget',\n        'attributeChange.qti-widget',\n        'choiceCreated.qti-widget',\n        'correctResponseChange.qti-widget',\n        'mapEntryChange.qti-widget',\n        'mapEntryRemove.qti-widget',\n        'deleted.qti-widget',\n        'choiceTextChange.qti-widget',\n        'responseTemplateChange.qti-widget',\n        'mappingAttributeChange.qti-widget',\n        'feedbackRuleConditionChange.qti-widget',\n        'feedbackRuleCreated.qti-widget',\n        'feedbackRuleRemoved.qti-widget',\n        'feedbackRuleElseCreated.qti-widget',\n        'feedbackRuleElseRemoved.qti-widget'\n    ];\n\n    var event = {\n        choiceCreated : function(choice, interaction){\n            $(document).trigger('choiceCreated.qti-widget', {choice : choice, interaction : interaction});\n        },\n        deleted : function(element, parent){\n\n            if(element.isset()){\n                element.unset();\n            }\n\n            $(document).off('.' + element.getSerial());\n            $(document).trigger('deleted.qti-widget', {element : element, parent : parent});\n        },\n        getList : function(addedNamespace){\n            var events = _.clone(eventList);\n            if(addedNamespace){\n                return _.map(events, function(e){\n                    return e + '.' + addedNamespace;\n                });\n            }else{\n                return events;\n            }\n        },\n        initElementToWidgetListeners : function(){\n\n            var ns = '.widget-container';\n\n            //forward all event to the widget $container\n            $(document).off(ns).on(event.getList(ns).join(' '), function(e, data){\n                var element = data.element || data.container || null,\n                    widget = data && element && element.data('widget');\n\n                // for backward compatibility reasons, we only look for the widget in parent as the last resort\n                if (!widget && data.parent) {\n                    element = data.parent;\n                    widget = element.data('widget');\n                }\n\n                if(widget){\n                    widget.$container.trigger(e.type + _ns + _ns_model, data);\n                }\n            });\n\n        },\n        getNs : function(){\n            return _ns;\n        },\n        getNsModel : function(){\n            return _ns_model;\n        }\n    };\n\n    return event;\n});\n","define('taoQtiItem/qtiCreator/model/helper/invalidator',['lodash'], function(_){\n    \"use strict\";\n    var invalidator = {\n        completelyValid : function(element){\n\n            var item = element.getRootElement();\n            var serial, invalidElements;\n            if(item){\n                serial = element.getSerial();\n                invalidElements = item.data('invalid') || {};\n\n                delete invalidElements[serial];\n                item.data('invalid', invalidElements);\n            }\n        },\n        valid : function(element, key){\n\n            var item = element.getRootElement();\n            var serial = element.getSerial();\n            var invalidElements;\n\n            if(item){\n                invalidElements = item.data('invalid') || {};\n\n                if(key){\n\n                    if(invalidElements[serial] && invalidElements[serial][key]){\n                        delete invalidElements[serial][key];\n                        if(!_.size(invalidElements[serial])){\n                            delete invalidElements[serial];\n                        }\n\n                        item.data('invalid', invalidElements);\n                    }\n\n                }else{\n                    throw new Error('missing required argument \"key\"');\n                }\n            }\n        },\n        invalid : function(element, key, message, stateName){\n\n            var item = element.getRootElement();\n            var serial = element.getSerial();\n            var invalidElements;\n\n            if(item){\n                invalidElements = item.data('invalid') || {};\n\n                if(key){\n\n                    if(!invalidElements[serial]){\n                        invalidElements[serial] = {};\n                    }\n\n                    invalidElements[serial][key] = {\n                        message : message || '',\n                        stateName : stateName || 'active'\n                    };\n                    item.data('invalid', invalidElements);\n\n                }else{\n                    throw new Error('missing required arguments \"key\"');\n                }\n            }\n        },\n        isValid : function(element){\n\n            var item = element.getRootElement();\n            var serial = element.getSerial();\n            var invalidElements;\n\n            if(item){\n                invalidElements = item.data('invalid') || {};\n                return !invalidElements[serial];\n            }\n            return true;\n        }\n    };\n\n    return invalidator;\n});\n\n\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiCreator/model/mixin/editable',[\n    'lodash',\n    'jquery',\n    'core/encoder/entity',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiCreator/model/helper/event',\n    'taoQtiItem/qtiCreator/model/helper/invalidator'\n], function(_, $, entity, Element, event, invalidator){\n    \"use strict\";\n\n    var _removeSelf = function(element){\n\n        var removed = false;\n        var related = element.getRootElement();\n        var found;\n        var parent;\n\n        if(related){\n\n            found = related.find(element.getSerial());\n\n            if(found){\n\n                parent = found.parent;\n                if(Element.isA(parent, 'interaction')){\n\n                    if(element.qtiClass === 'gapImg'){\n                        parent.removeGapImg(element);\n                    }else if(Element.isA(element, 'choice')){\n                        parent.removeChoice(element);\n                    }\n                    removed = true;\n\n                }else if(found.location === 'body' && _.isFunction(parent.initContainer)){\n\n                    if(_.isFunction(element.beforeRemove)){\n                        element.beforeRemove();\n                    }\n\n                    parent.getBody().removeElement(element);\n                    removed = true;\n\n                }else if(Element.isA(parent, '_container')){\n\n                    if(_.isFunction(element.beforeRemove)){\n                        element.beforeRemove();\n                    }\n\n                    parent.removeElement(element);\n                    removed = true;\n                }\n\n                if(removed){\n                    //mark it instantly as removed in case its is being used somewhere else\n                    element.data('removed', true);\n                    invalidator.completelyValid(element);\n                    event.deleted(element, parent);\n                }\n            }\n        } else {\n            throw new Error('no related item found');\n        }\n\n        return removed;\n    };\n\n    var _removeElement = function(element, containerPropName, eltToBeRemoved){\n        var targetSerial = '',\n            targetElt;\n\n        if(element[containerPropName]){\n\n            if(typeof (eltToBeRemoved) === 'string'){\n                targetSerial = eltToBeRemoved;\n                targetElt = Element.getElementBySerial(targetSerial);\n            }else if(eltToBeRemoved instanceof Element){\n                targetSerial = eltToBeRemoved.getSerial();\n                targetElt = eltToBeRemoved;\n            }\n\n            if(targetSerial){\n                invalidator.completelyValid(targetElt);\n                delete element[containerPropName][targetSerial];\n                Element.unsetElement(targetSerial);\n            }\n        }\n\n        return element;\n    };\n\n    var methods = {\n        init : function(serial, attributes){\n            var attr = {};\n\n            //init call in the format init(attributes)\n            if(typeof (serial) === 'object'){\n                attributes = serial;\n                serial = '';\n            }\n\n            if(_.isFunction(this.getDefaultAttributes)){\n                _.extend(attr, this.getDefaultAttributes());\n            }\n            _.extend(attr, attributes);\n\n            this._super(serial, attr);\n        },\n\n        /**\n         * Get or set an attribute\n         * @param {String} key - the attribute name\n         * @param {String} [value] - only to set the new value, let empty for a get\n         * @returns {String} the attribute value\n         */\n        attr : function(key, value){\n            var ret = this._super(key, value);\n\n            if(typeof key !== 'undefined' && typeof value !== 'undefined'){\n                $(document).trigger('attributeChange.qti-widget', {\n                    'element' : this,\n                    'key' : key,\n                    'value' : entity.encode(value)\n                });\n            }\n            return _.isString(ret) ? entity.decode(ret) : ret;\n        },\n\n        removeAttr : function(key){\n            var ret = this._super(key);\n            $(document).trigger('attributeChange.qti-widget', {'element' : this, 'key' : key, 'value' : null});\n            return ret;\n        },\n        remove : function(){\n            if(arguments.length === 0){\n                return _removeSelf(this);\n            }else if(arguments.length === 2){\n                return _removeElement(this, arguments[0], arguments[1]);\n            }else{\n                throw new Error('invalid number of argument given');\n            }\n        }\n    };\n\n    return methods;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiItem/core/Container',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/rendererConfig'\n], function($, _, Element, rendererConfig){\n    'use strict';\n\n    var Container = Element.extend({\n        qtiClass : '_container',\n        init : function(body){\n            this._super();//generate serial, attributes array always empty\n            if(body && typeof body !== 'string'){\n                throw 'the body of a container must be a string';\n            }\n            this.bdy = body || '';\n            this.elements = {};\n        },\n        body : function(body){\n            if(typeof body === 'undefined'){\n                return this.bdy;\n            }else{\n                if(typeof body === 'string'){\n                    this.bdy = body;\n                    $(document).trigger('containerBodyChange', {\n                        body : body,\n                        container : this,\n                        parent : this.parent()\n                    });\n                }else{\n                    throw 'body must be a string';\n                }\n            }\n        },\n        setElements : function(elements, body){\n            var returnValue = false;\n\n            for(var i in elements){\n                var elt = elements[i];\n                if(elt instanceof Element){\n\n                    body = body || this.bdy;\n                    if(body.indexOf(elt.placeholder()) === -1){\n                        body += elt.placeholder();//append the element if no placeholder found\n                    }\n\n                    elt.setRootElement(this.getRootElement() || null);\n                    this.elements[elt.getSerial()] = elt;\n                    $(document).trigger('containerElementAdded', {\n                        element : elt,\n                        container : this\n                    });\n\n                    returnValue = true;\n                }else{\n                    returnValue = false;\n                    throw 'expected a qti element';\n                }\n            }\n\n            this.body(body);\n\n            return returnValue;\n        },\n        setElement : function(element, body){\n            return this.setElements([element], body);\n        },\n        removeElement : function(element){\n            var serial = '';\n            if(typeof(element) === 'string'){\n                serial = element;\n            }else if(element instanceof Element){\n                serial = element.getSerial();\n            }\n            delete this.elements[serial];\n            this.body(this.body().replace('{{' + serial + '}}', ''));\n            return this;\n        },\n        getElements : function(qtiClass){\n            var elts = {};\n            if(typeof(qtiClass) === 'string'){\n                for(var serial in this.elements){\n                    if(Element.isA(this.elements[serial], qtiClass)){\n                        elts[serial] = this.elements[serial];\n                    }\n                }\n            }else{\n                elts = _.clone(this.elements);\n            }\n            return elts;\n        },\n        getElement : function(serial){\n            return this.elements[serial] ? this.elements[serial] : null;\n        },\n        getComposingElements : function(){\n            var elements = this.getElements();\n            var elts = {};\n            for(var serial in elements){\n                elts[serial] = elements[serial];//pass individual object by ref, instead of the whole list(object)\n                elts = _.extend(elts, elements[serial].getComposingElements());\n            }\n            return elts;\n        },\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                elementsData = [],\n                tpl = this.body();\n\n            for(var serial in this.elements){\n                var elt = this.elements[serial];\n                if(typeof elt.render === 'function'){\n                    if(elt.qtiClass === '_container'){\n                        //@todo : container rendering merging, to be tested\n                        tpl = tpl.replace(elt.placeholder(), elt.render(renderer));\n                    }else{\n                        tpl = tpl.replace(elt.placeholder(), '{{{' + serial + '}}}');\n                        elementsData[serial] = elt.render(renderer);\n                    }\n                }else{\n                    throw 'render() is not defined for the qti element: ' + serial;\n                }\n            }\n\n            if(renderer.isRenderer){\n                return this._super({\n                    body : renderer.renderDirect(tpl, elementsData),\n                    contentModel : this.contentModel || 'flow'\n                }, renderer, args.placeholder);\n            }else{\n                throw 'invalid qti renderer for qti container';\n            }\n        },\n        postRender : function(data, altClassName, renderer){\n            renderer = renderer || this.getRenderer();\n\n            var res = _(this.elements)\n                .filter( function(elt){\n                    return typeof elt.postRender === 'function';\n                })\n                .map(function(elt){\n                    return elt.postRender(data, '', renderer);\n                })\n                .flatten(true)\n                .value()\n                .concat(this._super(data, altClassName, renderer));\n            return res;\n        },\n        toArray : function(){\n            var arr = {\n                serial : this.serial,\n                body : this.bdy,\n                elements : {}\n            };\n\n            for(var serial in this.elements){\n                arr.elements[serial] = this.elements[serial].toArray();\n            }\n\n            return arr;\n        },\n        find : function(serial, parent){\n\n            var found = null;\n\n            if(this.elements[serial]){\n\n                found = {parent : parent || this, element : this.elements[serial], location : 'body'};\n\n            }else{\n\n                _.each(this.elements, function(elt){\n\n                    found = elt.find(serial);\n                    if(found){\n                        return false;//break loop\n                    }\n                });\n            }\n\n            return found;\n        },\n        isEmpty : function(){\n            return !this.bdy;\n        }\n    });\n\n    return Container;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\ndefine('taoQtiItem/qtiCreator/model/Container',[\n    'lodash',\n    'taoQtiItem/qtiCreator/model/mixin/editable',\n    'taoQtiItem/qtiItem/core/Container'\n], function(_, editable, Container){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    _.extend(methods, {\n        afterCreate : function(){\n            this.body('<p>Lorem ipsum dolor sit amet, consectetur adipisicing ...</p>');\n        },\n        beforeRemove : function(){\n            _.each(this.getComposingElements(), function(element){\n                if(_.isFunction(element.beforeRemove)){\n                    element.beforeRemove();\n                }\n            });\n        }\n    });\n    return Container.extend(methods);\n});\n","/**\n * Define the location of all qti classes used in the QTI Creator\n */\ndefine('taoQtiItem/qtiCreator/model/qtiClasses',['lodash', 'taoQtiItem/qtiItem/core/qtiClasses'], function(_, qtiClasses){\n    \"use strict\";\n    //clone the qtiClasses instead of modifying it by direct extend:\n    return _.defaults({\n        'assessmentItem' : 'taoQtiItem/qtiCreator/model/Item',\n        '_container' : 'taoQtiItem/qtiCreator/model/Container',\n        'img' : 'taoQtiItem/qtiCreator/model/Img',\n        'math' : 'taoQtiItem/qtiCreator/model/Math',\n        'object' : 'taoQtiItem/qtiCreator/model/Object',\n        'table' : 'taoQtiItem/qtiCreator/model/Table',\n        'rubricBlock' : 'taoQtiItem/qtiCreator/model/RubricBlock',\n        'modalFeedback' : 'taoQtiItem/qtiCreator/model/feedbacks/ModalFeedback',\n        'choiceInteraction' : 'taoQtiItem/qtiCreator/model/interactions/ChoiceInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCreator/model/interactions/OrderInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCreator/model/interactions/AssociateInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCreator/model/interactions/MatchInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCreator/model/interactions/InlineChoiceInteraction',\n        'simpleChoice' : 'taoQtiItem/qtiCreator/model/choices/SimpleChoice',\n        'simpleAssociableChoice' : 'taoQtiItem/qtiCreator/model/choices/SimpleAssociableChoice',\n        'inlineChoice' : 'taoQtiItem/qtiCreator/model/choices/InlineChoice',\n        'mediaInteraction' : 'taoQtiItem/qtiCreator/model/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCreator/model/interactions/UploadInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCreator/model/interactions/TextEntryInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCreator/model/interactions/SliderInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCreator/model/interactions/ExtendedTextInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCreator/model/interactions/HotspotInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCreator/model/interactions/SelectPointInteraction',\n        'graphicInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicOrderInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicGapMatchInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GraphicOrderInteraction',\n        'hotspotChoice' : 'taoQtiItem/qtiCreator/model/choices/HotspotChoice',\n        'gapImg' : 'taoQtiItem/qtiCreator/model/choices/GapImg',\n        'associableHotspot' : 'taoQtiItem/qtiCreator/model/choices/AssociableHotspot',\n        'gapMatchInteraction' : 'taoQtiItem/qtiCreator/model/interactions/GapMatchInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiCreator/model/interactions/HottextInteraction',\n        'hottext' : 'taoQtiItem/qtiCreator/model/choices/Hottext',\n        'gapText' : 'taoQtiItem/qtiCreator/model/choices/GapText',\n        'gap' : 'taoQtiItem/qtiCreator/model/choices/Gap',\n        'responseDeclaration' : 'taoQtiItem/qtiCreator/model/variables/ResponseDeclaration',\n        'responseProcessing' : 'taoQtiItem/qtiCreator/model/ResponseProcessing',\n        'customInteraction' : 'taoQtiItem/qtiCreator/model/interactions/PortableCustomInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCreator/model/interactions/EndAttemptInteraction',\n        'infoControl' : 'taoQtiItem/qtiCreator/model/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiCreator/model/Include',\n        'printedVariable' : 'taoQtiItem/qtiCreator/model/PrintedVariable',\n        '_tooltip' : 'taoQtiItem/qtiCreator/model/Tooltip'\n    }, qtiClasses);\n\n});\n\n","define('taoQtiItem/qtiCreator/model/helper/container',['jquery', 'lodash', 'taoQtiItem/qtiCreator/model/qtiClasses'], function($, _, qtiClasses){\n    \"use strict\";\n    var methods = {\n        createElements : function(container, body, callback){\n\n            var regex = /{{([a-z_]+)\\.?([a-z_]*):new}}/ig;\n\n            //first pass to get required qti classes, but do not replace\n            var required = {};\n            body.replace(regex,\n                function(original, qtiClass, subClass){\n                    if(qtiClasses[qtiClass]){\n                        required[qtiClass] = qtiClasses[qtiClass];\n                    }else{\n                        throw 'missing required class : ' + qtiClass;\n                    }\n                });\n                \n            //second pass after requiring classes:\n            require(_.values(required), function(){\n\n                //register and name all loaded classes:\n                var Qti = _.reduce([].slice.call(arguments), function (acc, qtiClassElt) {\n                    acc[qtiClassElt.prototype.qtiClass] = qtiClassElt;\n\n                    return acc;\n                }, {});\n                \n                //create new elements\n                var newElts = {};\n                var newBody = body.replace(regex,\n                    function(original, qtiClass, subClass){\n                        if(Qti[qtiClass]){\n                            //create new element\n                            var elt = new Qti[qtiClass]();\n                            if(container.getRenderer()){\n                                elt.setRenderer(container.getRenderer());\n                            }\n                            newElts[elt.getSerial()] = elt;\n\n                            //manage sub-classed qtiClass\n                            if(subClass){\n                                //@todo generalize it from customInteraction\n                                elt.typeIdentifier = subClass;\n                            }\n\n                            return elt.placeholder();\n                        }else{\n                            return original;\n                        }\n                    });\n\n                //insert them:\n                container.setElements(newElts, newBody);\n                \n                //operations after insertions:\n                var $doc = $(document);\n                _.each(newElts, function(elt){\n                    if(_.isFunction(elt.buildIdentifier)){\n                        elt.buildIdentifier();\n                    }\n                    if(_.isFunction(elt.afterCreate)){\n                        elt.afterCreate();\n                    }\n                    $doc.trigger('elementCreated.qti-widget', {parent : container.parent(), element : elt});\n                });\n\n                if(typeof(callback) === 'function'){\n                    callback.call(container, newElts);\n                }\n            });\n\n        }\n    };\n\n    return methods;\n});\n\n","define('taoQtiItem/qtiCreator/model/mixin/editableContainer',['taoQtiItem/qtiCreator/model/helper/container'], function(containerHelper){\n    \"use strict\";\n    var methods = {\n        createElements : function(body, callback){\n            \n            var _this = this;\n            containerHelper.createElements(_this.getBody(), body, function(newElts){\n                callback.call(_this, newElts);\n            });\n\n        }\n    };\n\n    return methods;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA\n *\n */\n\n/**\n * IdentifiedElement model\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiItem/core/IdentifiedElement',[\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/helper/util'\n], function(Element, util){\n    'use strict';\n\n    /**\n     * IdentifiedElement model\n     */\n    var IdentifiedElement = Element.extend({\n\n        /**\n         * Generates and assign an identifier\n         * @param {String} prefix - identifier prefix\n         * @param {Boolean} [useSuffix = true] - add a \"_ + index\" to the identifier\n         * @returns {Object} for chaining\n         */\n        buildIdentifier : function buildIdentifier(prefix, useSuffix){\n            var item = this.getRootElement();\n            var id = util.buildIdentifier(item, prefix || this.qtiClass, useSuffix);\n            if(id){\n                this.attr('identifier', id);\n            }\n            return this;\n        },\n\n        /**\n         * Get/set and identifier. It will be generated if it doesn't exists.\n         * @param {String} [value] - set the value or get it if not set.\n         * @returns {String} the identifier\n         */\n        id : function id(value){\n            if(!value && !this.attr('identifier')){\n                this.buildIdentifier(this.qtiClass, true);\n            }\n            return this.attr('identifier', value);\n        }\n    });\n\n    /**\n     * @exports taoQtiItem/qtiItem/core/IdentifiableElement\n     */\n    return IdentifiedElement;\n});\n\n\n","define('taoQtiItem/qtiItem/mixin/Mixin',[],function(){\n    \n    //@todo : need refactoring of qti item mixin with lodash.mixin()\n    return {\n        augment : function(targetClass, methods, options){\n            if(typeof(targetClass) === 'function' && typeof(methods) === 'object'){\n                for(var methodName in methods){\n                    if(!Object.hasOwnProperty(targetClass.prototype, methodName)){\n                        targetClass.prototype[methodName] = methods[methodName];\n                    }else{\n                        if(options && options.append){\n                            var _parent = targetClass.prototype[methodName];\n                            targetClass.prototype[methodName] = function(){\n                                methods[methodName].apply(this, arguments);\n                                return _parent.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n","define('taoQtiItem/qtiItem/mixin/Container',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/core/Container'], function(Mixin, Container){\n\n    var methods = {\n        initContainer : function(body){\n            this.bdy = new Container(body || '');\n            this.bdy.setRootElement(this.getRootElement() || null);\n            this.bdy.contentModel = 'blockStatic';\n        },\n        getBody : function(){\n            return this.bdy;\n        },\n        body : function(body){\n            var ret = this.bdy.body(body);\n            return (body) ? this : ret;//for method chaining on get\n        },\n        setElement : function(element, body){\n            this.bdy.setElement(element, body);\n            return this;\n        },\n        removeElement : function(element){\n            return this.bdy.removeElement(element);\n        },\n        getElements : function(qtiClass){\n            return this.bdy.getElements(qtiClass);\n        },\n        getElement : function(serial){\n            return this.bdy.getElement(serial);\n        }\n    };\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","define('taoQtiItem/qtiItem/mixin/ContainerItemBody',['taoQtiItem/qtiItem/mixin/Mixin', 'taoQtiItem/qtiItem/mixin/Container', 'lodash'], function(Mixin, Container, _){\n    \n    var methods = {};\n    _.extend(methods, Container.methods);\n    _.extend(methods, {\n        initContainer:function(body){\n            Container.methods.initContainer.call(this, body);\n            this.bdy.contentModel = 'itemBody';\n        }\n    });\n\n    return {\n        augment : function(targetClass){\n            Mixin.augment(targetClass, methods);\n        },\n        methods : methods\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);\n *\n */\n\n/**\n * QTI Item Element model\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiItem/core/Item',[\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiItem/core/IdentifiedElement',\n    'taoQtiItem/qtiItem/mixin/ContainerItemBody',\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/helper/util'\n], function(Element, IdentifiedElement, Container, _, $, util){\n    'use strict';\n\n    var Item = IdentifiedElement.extend({\n        qtiClass : 'assessmentItem',\n        init : function init(serial, attributes){\n            this._super(serial, attributes);\n            this.rootElement = this;\n            this.stylesheets = {};\n            this.responses = {};\n            this.outcomes = {};\n            this.modalFeedbacks = {};\n            this.namespaces = {};\n            this.schemaLocations = {};\n            this.responseProcessing = null;\n            this.apipAccessibility = null;\n        },\n        getInteractions : function getInteractions(){\n            var interactions = [];\n            var elts = this.getComposingElements();\n            for(var serial in elts){\n                if(Element.isA(elts[serial], 'interaction')){\n                    interactions.push(elts[serial]);\n                }\n            }\n            return interactions;\n        },\n        addResponseDeclaration : function addResponseDeclaration(response){\n            if(Element.isA(response, 'responseDeclaration')){\n                response.setRootElement(this);\n                this.responses[response.getSerial()] = response;\n            }else{\n                throw 'is not a qti response declaration';\n            }\n            return this;\n        },\n        getResponseDeclaration : function getResponseDeclaration(identifier){\n            for(var i in this.responses){\n                if(this.responses[i].attr('identifier') === identifier){\n                    return this.responses[i];\n                }\n            }\n            return null;\n        },\n        addOutcomeDeclaration : function addOutcomeDeclaration(outcome){\n            if(Element.isA(outcome, 'outcomeDeclaration')){\n                outcome.setRootElement(this);\n                this.outcomes[outcome.getSerial()] = outcome;\n            }else{\n                throw 'is not a qti outcome declaration';\n            }\n            return this;\n        },\n        getOutcomeDeclaration : function getOutcomeDeclaration(identifier){\n            var found;\n            _.forEach(this.outcomes, function (outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        getOutcomes : function getOutcomes(){\n            return _.clone(this.outcomes);\n        },\n        removeOutcome : function removeOutcome(identifier){\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if(outcome){\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        addModalFeedback : function addModalFeedback(feedback){\n            if(Element.isA(feedback, 'modalFeedback')){\n                feedback.setRootElement(this);\n                this.modalFeedbacks[feedback.getSerial()] = feedback;\n            }else{\n                throw 'is not a qti modal feedback';\n            }\n            return this;\n        },\n        getComposingElements : function getComposingElements(){\n            var elts = this._super(), _this = this;\n            _.forEach(['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], function(elementCollection){\n                for(var i in _this[elementCollection]){\n                    var elt = _this[elementCollection][i];\n                    elts[i] = elt;\n                    elts = _.extend(elts, elt.getComposingElements());\n                }\n            });\n            if(this.responseProcessing instanceof Element){\n                elts[this.responseProcessing.getSerial()] = this.responseProcessing;\n            }\n            return elts;\n        },\n        find : function find(serial){\n\n            var found = this._super(serial);\n\n            if(!found){\n                found = util.findInCollection(this, ['responses', 'outcomes', 'modalFeedbacks', 'stylesheets'], serial);\n            }\n\n            return found;\n        },\n        getResponses : function getResponses(){\n            return _.clone(this.responses);\n        },\n        getRootElement : function getRootElement(){\n            return this;\n        },\n        addNamespace : function addNamespace(name, uri){\n            this.namespaces[name] = uri;\n        },\n        setNamespaces : function setNamespaces(namespaces){\n            this.namespaces = namespaces;\n        },\n        getNamespaces : function getNamespaces(){\n            return _.clone(this.namespaces);\n        },\n        setSchemaLocations : function setSchemaLocations(locations){\n            this.schemaLocations = locations;\n        },\n        getSchemaLocations : function getSchemaLocations(){\n            return _.clone(this.schemaLocations);\n        },\n        setApipAccessibility : function setApipAccessibility(apip){\n            this.apipAccessibility = apip || null;\n        },\n        getApipAccessibility : function getApipAccessibility(){\n            return this.apipAccessibility;\n        },\n        addStylesheet : function addStylesheet(stylesheet){\n            if(Element.isA(stylesheet, 'stylesheet')){\n                stylesheet.setRootElement(this);\n                this.stylesheets[stylesheet.getSerial()] = stylesheet;\n            }else{\n                throw 'is not a qti stylesheet declaration';\n            }\n            return this;\n        },\n        removeStyleSheet : function removeStyleSheet(stylesheet){\n            delete this.stylesheets[stylesheet.getSerial()];\n            return this;\n        },\n        stylesheetExists : function stylesheetExists(href){\n            var exists = false;\n            _.forEach(this.stylesheets, function(stylesheet){\n                if(stylesheet.attr('href') === href){\n                    exists = true;\n                    return false;//break each loop\n                }\n            });\n            return exists;\n        },\n        setResponseProcessing : function setResponseProcessing(rp){\n            if(Element.isA(rp, 'responseProcessing')){\n                rp.setRootElement(this);\n                this.responseProcessing = rp;\n            }else{\n                throw 'is not a response processing';\n            }\n            return this;\n        },\n        toArray : function toArray(){\n            var arr = this._super();\n            var toArray = function(elt){\n                return elt.toArray();\n            };\n            arr.namespaces = this.namespaces;\n\t\t\tarr.schemaLocations = this.schemaLocations;\n            arr.outcomes = _.map(this.outcomes, toArray);\n            arr.responses = _.map(this.responses, toArray);\n            arr.stylesheets = _.map(this.stylesheets, toArray);\n            arr.modalFeedbacks = _.map(this.modalFeedbacks, toArray);\n            arr.responseProcessing = this.responseProcessing.toArray();\n            return arr;\n        },\n        isEmpty : function isEmpty(){\n\n            var body = this.body().trim();\n\n            if(body){\n\n                //hack to fix #2652\n                var $dummy = $('<div>').html(body),\n                    $children = $dummy.children();\n\n                if($children.length === 1 && $children.hasClass('empty')){\n                    return true;\n                }else{\n                    return false;\n                }\n            }else{\n                return true;\n            }\n        },\n\n        /**\n         * Clean up an item rendering.\n         * Ask the renderer to run destroy if exists.\n         */\n        clear : function clear(){\n            var renderer = this.getRenderer();\n            if(renderer){\n                if(_.isFunction(renderer.destroy)){\n                    renderer.destroy(this);\n                }\n            }\n        },\n    });\n\n    Container.augment(Item);\n\n    return Item;\n});\n\n","define('taoQtiItem/qtiItem/core/Stylesheet',['taoQtiItem/qtiItem/core/Element', 'lodash', 'taoQtiItem/qtiItem/helper/rendererConfig'], function(Element, _, rendererConfig){\n\n    var Stylesheet = Element.extend({\n        qtiClass : 'stylesheet',\n        render : function(){\n\n            var args = rendererConfig.getOptionsFromArguments(arguments),\n                renderer = args.renderer || this.getRenderer(),\n                defaultData = {};\n\n            defaultData.attributes = {href : renderer.resolveUrl(this.attr('href'))};\n\n            return this._super(_.merge(defaultData, args.data), args.placeholder, args.subclass, renderer);\n        }\n    });\n\n    return Stylesheet;\n});\n\n","define('taoQtiItem/qtiCreator/model/Stylesheet',[\n    'lodash',\n    'taoQtiItem/qtiCreator/model/mixin/editable',\n    'taoQtiItem/qtiItem/core/Stylesheet'\n], function(_, editable, Stylesheet){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    _.extend(methods, {\n        getDefaultAttributes : function(){\n            return {\n                href : 'css/tao-user-styles.css',\n                title : '',\n                type:'text/css',\n                media:'all'\n            };\n        }\n    });\n\n    return Stylesheet.extend(methods);\n});\n","define('taoQtiItem/qtiItem/core/ResponseProcessing',['taoQtiItem/qtiItem/core/Element', 'lodash'], function(Element, _){\n    \n    var ResponseProcessing = Element.extend({\n        qtiClass : 'responseProcessing',\n        processingType : '',\n        xml : '',\n        toArray : function(){\n            var arr = this._super();\n            arr.processingType = this.processingType;\n            arr.xml = this.xml;\n            return arr;\n        }\n    });\n    \n    return ResponseProcessing;\n});\n","define('taoQtiItem/qtiCreator/model/ResponseProcessing',[\n    'lodash',\n    'taoQtiItem/qtiCreator/model/mixin/editable',\n    'taoQtiItem/qtiItem/core/ResponseProcessing'\n], function(_, editable, ResponseProcessing){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    _.extend(methods, {\n        getDefaultAttributes : function(){\n            return {};\n        },\n        setProcessingType : function(processingType){\n\n            if(this.processingType !== processingType){\n\n                if(this.processingType === 'custom'){\n\n                    //change all response template to default : \"correct\"\n                    _.each(this.getRootElement().getResponses(), function(r){\n                         r.setTemplate('MATCH_CORRECT');\n                    });\n                }\n\n                this.processingType = processingType;\n            }\n\n        }\n    });\n\n    return ResponseProcessing.extend(methods);\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiItem/core/variables/VariableDeclaration',['taoQtiItem/qtiItem/core/IdentifiedElement'], function(IdentifiedElement){\n    'use strict';\n    /**\n     * It is the top abstract class for all variable classes\n     * (so not renderable and qtiClass undefined)\n     */\n    var VariableDeclaration = IdentifiedElement.extend({\n        init : function init(serial, attributes){\n            this._super(serial, attributes);\n            this.defaultValue = null;\n        },\n        is : function is(qtiClass){\n            return (qtiClass === 'variableDeclaration') || this._super(qtiClass);\n        },\n        toArray : function toArray(){\n            var arr = this._super();\n            arr.defaultValue = this.defaultValue;\n            return arr;\n        },\n        setDefaultValue : function setDefaultValue(value){\n            this.defaultValue = value;\n        },\n        getDefaultValue : function getDefaultValue(){\n            return this.defaultValue;\n        },\n    });\n\n    return VariableDeclaration;\n});\n","define('taoQtiItem/qtiItem/core/variables/OutcomeDeclaration',['taoQtiItem/qtiItem/core/variables/VariableDeclaration'], function(VariableDeclaration){\n    return  VariableDeclaration.extend({\n        qtiClass : 'outcomeDeclaration'\n    });\n});\n","define('taoQtiItem/qtiCreator/model/variables/OutcomeDeclaration',['lodash', 'taoQtiItem/qtiCreator/model/mixin/editable', 'taoQtiItem/qtiItem/core/variables/OutcomeDeclaration'], function(_, editable, OutcomeDeclaration){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    return OutcomeDeclaration.extend(methods);\n});\n\n","define('taoQtiItem/qtiItem/core/feedbacks/ModalFeedback',['taoQtiItem/qtiItem/core/IdentifiedElement', 'taoQtiItem/qtiItem/mixin/Container'], function(IdentifiedElement, Container){\n    \n    var ModalFeedback = IdentifiedElement.extend({\n        'qtiClass' : 'modalFeedback',\n        is : function(qtiClass){\n            return (qtiClass === 'feedback') || this._super(qtiClass);\n        }\n    });\n    \n    Container.augment(ModalFeedback);\n    \n    return ModalFeedback;\n});\n","define('taoQtiItem/qtiCreator/model/feedbacks/ModalFeedback',[\n    'lodash',\n    'taoQtiItem/qtiCreator/model/mixin/editable',\n    'taoQtiItem/qtiItem/core/feedbacks/ModalFeedback'\n], function(_,editable,ModalFeedback){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    _.extend(methods, {\n        getDefaultAttributes : function(){\n            return {\n                title : 'modal feedback title',\n                showHide : 'show'\n            };\n        }\n    });\n    \n    return ModalFeedback.extend(methods);\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\ndefine('taoQtiItem/qtiCreator/model/Item',[\n    'lodash',\n    'taoQtiItem/qtiCreator/model/mixin/editable',\n    'taoQtiItem/qtiCreator/model/mixin/editableContainer',\n    'taoQtiItem/qtiItem/core/Item',\n    'taoQtiItem/qtiCreator/model/Stylesheet',\n    'taoQtiItem/qtiCreator/model/ResponseProcessing',\n    'taoQtiItem/qtiCreator/model/variables/OutcomeDeclaration',\n    'taoQtiItem/qtiCreator/model/feedbacks/ModalFeedback'\n], function(_, editable, editableContainer, Item, Stylesheet, ResponseProcessing, OutcomeDeclaration, ModalFeedback){\n    \"use strict\";\n    var methods = {};\n    _.extend(methods, editable);\n    _.extend(methods, editableContainer);\n    _.extend(methods, {\n        getDefaultAttributes : function(){\n            return {\n                identifier : 'myItem_1',\n                title : 'Item title',\n                adaptive : false,\n                timeDependent : false,\n                'xml:lang' : 'en-US'\n            };\n        },\n        createResponseProcessing : function(){\n            var rp = new ResponseProcessing();\n            rp.processingType = 'templateDriven';\n            this.setResponseProcessing(rp);\n            return rp;\n        },\n        createStyleSheet : function(href){\n            if(href && _.isString(href)){\n                var stylesheet = new Stylesheet({href : href});\n                stylesheet.setRenderer(this.getRenderer());\n                this.addStylesheet(stylesheet);\n                return stylesheet;\n            }else{\n                throw 'missing or invalid type for the required arg \"href\"';\n                return null;\n            }\n        },\n        createOutcomeDeclaration : function(attributes){\n\n            var identifier = attributes.identifier || '';\n            delete attributes.identifier;\n            var outcome = new OutcomeDeclaration(attributes);\n\n            this.addOutcomeDeclaration(outcome);\n            outcome.buildIdentifier(identifier);\n\n            return outcome;\n        },\n        getOutcomeDeclaration : function getOutcomeDeclaration(identifier){\n            var found;\n            _.forEach(this.outcomes, function (outcome) {\n                if (outcome.id() === identifier) {\n                    found = outcome;\n                    return false;\n                }\n            });\n            return found;\n        },\n        removeOutcome : function removeOutcome(identifier){\n            var outcome = this.getOutcomeDeclaration(identifier);\n            if(outcome){\n                this.outcomes = _.omit(this.outcomes, outcome.getSerial());\n            }\n        },\n        createModalFeedback : function(attributes, response){\n\n            var identifier = attributes.identifier || '';\n            delete attributes.identifier;\n            var modalFeedback = new ModalFeedback(attributes);\n\n            this.addModalFeedback(modalFeedback);\n            modalFeedback.buildIdentifier(identifier);\n            modalFeedback.body('Some feedback text.');\n            if(response && response.qtiClass === 'responseDeclaration'){\n                modalFeedback.data('relatedResponse', response);\n            }\n        \n            return modalFeedback;\n        },\n        deleteResponseDeclaration : function(response){\n            var self = this;\n            var serial;\n            if(_.isString(response)){\n                serial = response;\n            }else if(response && response.qtiClass === 'responseDeclaration'){\n                serial = response.getSerial();\n            }\n            if(this.responses[serial]){\n                //remove feedback rules:\n                _.each(this.responses[serial].feedbackRules, function(rule){\n                    var feedbacks = [];\n                    if(rule.feedbackThen && rule.feedbackThen.is('modalFeedback')){\n                        feedbacks.push(rule.feedbackThen.serial);  \n                    }\n                    if(rule.feedbackElse && rule.feedbackElse.is('modalFeedback')){\n                        feedbacks.push(rule.feedbackElse.serial);\n                    }\n                    self.modalFeedbacks = _.omit(self.modalFeedbacks, feedbacks);\n                    \n                    if(rule.feedbackOutcome && rule.feedbackOutcome.is('outcomeDeclaration')){\n                        self.outcomes = _.omit(self.outcomes, rule.feedbackOutcome.serial);\n                    }\n                });\n                this.responses = _.omit(this.responses, serial);\n            }\n            return this;\n        }\n    });\n    return Item.extend(methods);\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2015 (original work) Open Assessment Technlogies SA;\n *\n */\n\n/**\n * Config of the QTI XML renderer\n *\n * @author Sam Sipasseuth <sam@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiItem/qtiXmlRenderer/renderers/config',[\n    'taoItems/assets/manager'\n], function(assetManagerFactory){\n    'use strict';\n\n    //all assets are normalized (relative)\n    var assetManager = assetManagerFactory([{\n        name : 'nomalize',\n        handle: function normalizeStrategy(url){\n            if(url){\n                return url.toString().replace(/^\\.?\\//, '');\n            }\n        }\n    }]);\n\n    /**\n     * The XML Renderer config\n     */\n    return {\n        name : 'xmlRenderer',\n        locations : {\n            '_container' : 'taoQtiItem/qtiXmlRenderer/renderers/Container',\n            'assessmentItem' : 'taoQtiItem/qtiXmlRenderer/renderers/Item',\n            'stylesheet' : 'taoQtiItem/qtiXmlRenderer/renderers/Stylesheet',\n            'responseDeclaration' : 'taoQtiItem/qtiXmlRenderer/renderers/ResponseDeclaration',\n            'outcomeDeclaration' : 'taoQtiItem/qtiXmlRenderer/renderers/OutcomeDeclaration',\n            'responseProcessing' : 'taoQtiItem/qtiXmlRenderer/renderers/ResponseProcessing',\n            '_simpleFeedbackRule' : 'taoQtiItem/qtiXmlRenderer/renderers/responses/SimpleFeedbackRule',\n            '_tooltip' : 'taoQtiItem/qtiXmlRenderer/renderers/Tooltip',\n            'math' : 'taoQtiItem/qtiXmlRenderer/renderers/Math',\n            'img' : 'taoQtiItem/qtiXmlRenderer/renderers/Img',\n            'object' : 'taoQtiItem/qtiXmlRenderer/renderers/Object',\n            'table' : 'taoQtiItem/qtiXmlRenderer/renderers/Table',\n            'modalFeedback' : 'taoQtiItem/qtiXmlRenderer/renderers/feedbacks/ModalFeedback',\n            'rubricBlock' : 'taoQtiItem/qtiXmlRenderer/renderers/RubricBlock',\n            'associateInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/AssociateInteraction',\n            'choiceInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/ChoiceInteraction',\n            'extendedTextInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/ExtendedTextInteraction',\n            'gapMatchInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GapMatchInteraction',\n            'graphicAssociateInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GraphicAssociateInteraction',\n            'graphicGapMatchInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GraphicGapMatchInteraction',\n            'graphicOrderInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/GraphicOrderInteraction',\n            'hotspotInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/HotspotInteraction',\n            'hottextInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/HottextInteraction',\n            'inlineChoiceInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/InlineChoiceInteraction',\n            'matchInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/MatchInteraction',\n            'mediaInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/MediaInteraction',\n            'orderInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/OrderInteraction',\n            'selectPointInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/SelectPointInteraction',\n            'sliderInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/SliderInteraction',\n            'textEntryInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/TextEntryInteraction',\n            'uploadInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/UploadInteraction',\n            'prompt' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/Prompt',\n            'associableHotspot' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/AssociableHotspot',\n            'gap' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/Gap',\n            'gapImg' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/GapImg',\n            'gapText' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/GapText',\n            'hotspotChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/HotspotChoice',\n            'hottext' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/Hottext',\n            'inlineChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/InlineChoice',\n            'simpleAssociableChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/SimpleAssociableChoice',\n            'simpleChoice' : 'taoQtiItem/qtiXmlRenderer/renderers/choices/SimpleChoice',\n            'customInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/PortableCustomInteraction',\n            'endAttemptInteraction' : 'taoQtiItem/qtiXmlRenderer/renderers/interactions/EndAttemptInteraction',\n            'infoControl' : 'taoQtiItem/qtiXmlRenderer/renderers/PortableInfoControl',\n            'include' : 'taoQtiItem/qtiXmlRenderer/renderers/Include',\n            'printedVariable' : 'taoQtiItem/qtiXmlRenderer/renderers/PrintedVariable'\n        },\n        options : {\n            assetManager : assetManager\n        }\n    };\n});\n\n","define('taoQtiItem/qtiXmlRenderer/renderers/Renderer',['taoQtiItem/qtiRunner/core/Renderer', 'taoQtiItem/qtiXmlRenderer/renderers/config'], function(Renderer, config){\n    'use strict';\n\n    return Renderer.build(config.locations, config.name, config.options);\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n */\ndefine('taoQtiItem/qtiItem/helper/response',['lodash'], function(_) {\n    'use strict';\n\n    var _templateNames = {\n        'MATCH_CORRECT': 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/match_correct',\n        'MAP_RESPONSE': 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response',\n        'MAP_RESPONSE_POINT': 'http://www.imsglobal.org/question/qti_v2p1/rptemplates/map_response_point',\n        'NONE': 'no_response_processing'\n    };\n\n    return {\n        isUsingTemplate: function isUsingTemplate(response, tpl) {\n            if (_.isString(tpl)) {\n                if (tpl === response.template || _templateNames[tpl] === response.template) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isValidTemplateName: function isValidTemplateName(tplName) {\n            return !!this.getTemplateUriFromName(tplName);\n        },\n        getTemplateUriFromName: function getTemplateUriFromName(tplName) {\n            if (_templateNames[tplName]) {\n                return _templateNames[tplName];\n            }\n            return '';\n        },\n        getTemplateNameFromUri: function getTemplateNameFromUri(tplUri) {\n            var tplName = '';\n            _.forIn(_templateNames, function (uri, name) {\n                if (uri === tplUri) {\n                    tplName = name;\n                    return false;\n                }\n            });\n            return tplName;\n        }\n    };\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiItem/helper/maxScore',[\n    'lodash',\n    'lib/gamp/gamp',\n    'taoQtiItem/qtiItem/helper/response',\n    'taoQtiItem/qtiCreator/model/variables/OutcomeDeclaration'\n], function(_, gamp, responseHelper, OutcomeDeclaration) {\n    'use strict';\n\n    /**\n     * This variable allow to globally define if the minCHoice needs to be taken into consideration.\n     * Standard-wise, it must definitely be considered.\n     * However, the item delivery lifecycle currently does not consider the minChoice constraint during delivery.\n     * It is thus currently set to true. After the correct behaviour is implemented, we should remove this variables.\n     * @type {boolean}\n     * @private\n     */\n    var _ignoreMinChoice = true;\n\n    var pairExists = function pairExists(collection, pair){\n        if(pair.length !== 2){\n            return false;\n        }\n        return (collection[pair[0]+' '+pair[1]] || collection[pair[1]+' '+pair[0]]);\n    };\n\n    return {\n        /**\n         * Set the normal maximum to the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setNormalMaximum : function setNormalMaximum(item) {\n            var normalMaximum,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE');\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n                normalMaximum = _.reduce(item.getInteractions(), function (acc, interaction) {\n                    var interactionMaxScore = interaction.getNormalMaximum();\n                    if(_.isNumber(interactionMaxScore)){\n                        return gamp.add(acc, interactionMaxScore);\n                    }else{\n                        return false;\n                    }\n                }, 0);\n\n                if(_.isNumber(normalMaximum)){\n                    scoreOutcome.attr('normalMaximum', normalMaximum);\n                }else{\n                    scoreOutcome.removeAttr('normalMaximum');\n                }\n            }\n        },\n\n        /**\n         * Set the maximum score of the item\n         * @param {Object} item - the standard qti item model object\n         */\n        setMaxScore : function setMaxScore(item) {\n            var hasInvalidInteraction = false,\n                scoreOutcome = item.getOutcomeDeclaration('SCORE'),\n                customOutcomes,\n                maxScore,\n                maxScoreOutcome;\n\n            //try setting the computed normal maximum only if the processing type is known, i.e. 'templateDriven'\n            if (scoreOutcome && item.responseProcessing && item.responseProcessing.processingType === 'templateDriven') {\n\n                maxScore = _.reduce(item.getInteractions(), function (acc, interaction) {\n                    var interactionMaxScore = interaction.getNormalMaximum();\n                    if(_.isNumber(interactionMaxScore)){\n                        return gamp.add(acc, interactionMaxScore);\n                    }else{\n                        hasInvalidInteraction = true;\n                        return acc;\n                    }\n                }, 0);\n\n                customOutcomes =  _(item.getOutcomes()).filter(function(outcome){\n                    return (outcome.id() !== 'SCORE' && outcome.id() !== 'MAXSCORE');\n                });\n\n                if(customOutcomes.size()){\n                    maxScore = customOutcomes.reduce(function (acc, outcome) {\n                        return gamp.add(acc, parseFloat(outcome.attr('normalMaximum')||0));\n                    }, maxScore);\n                }\n\n                if(!hasInvalidInteraction || customOutcomes.size()){\n                    maxScoreOutcome = item.getOutcomeDeclaration('MAXSCORE');\n                    if(!maxScoreOutcome){\n                        //add new outcome\n                        maxScoreOutcome = new OutcomeDeclaration({\n                            cardinality : 'single',\n                            baseType : 'float'\n                        });\n\n                        //attach the outcome to the item before generating item-level unique id\n                        item.addOutcomeDeclaration(maxScoreOutcome);\n                        maxScoreOutcome.buildIdentifier('MAXSCORE', false);\n                    }\n                    maxScoreOutcome.setDefaultValue(maxScore);\n                }else{\n                    //remove MAXSCORE:\n                    item.removeOutcome('MAXSCORE');\n                }\n            }\n        },\n\n        /**\n         * Sort an array of associable choices by its matchMax attr value\n         * @param {Array} choiceCollection\n         * @returns {Array}\n         */\n        getMatchMaxOrderedChoices : function getMatchMaxOrderedChoices(choiceCollection){\n            return _(choiceCollection).map(function(choice){\n                var matchMax = parseInt(choice.attr('matchMax'), 10);\n                if(_.isNaN(matchMax)){\n                    matchMax = 0;\n                }\n                return {\n                    matchMax : matchMax === 0 ? Infinity : matchMax,\n                    id: choice.id()\n                };\n            }).sortBy('matchMax').reverse().valueOf();\n        },\n\n        /**\n         * Compute the maximum score of a \"choice\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        choiceInteractionBased : function choiceInteractionBased(interaction, options){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue||0);\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, maxChoice, minChoice, scoreMaps, requiredChoiceCount, totalAnswerableResponse, sortedMapEntries, i, missingMapsCount;\n\n            options = _.defaults(options || {}, {maxChoices : 0, minChoices: 0});\n            maxChoice = parseInt(interaction.attr('maxChoices')||options.maxChoices, 10);\n            minChoice = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minChoices')||options.minChoices, 10);\n            if(maxChoice && minChoice && maxChoice < minChoice){\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if(maxChoice && _.isArray(responseDeclaration.correctResponse) && (responseDeclaration.correctResponse.length > maxChoice || responseDeclaration.correctResponse.length < minChoice)){\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                }else if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                //prepare constraint params\n                requiredChoiceCount = minChoice;\n                totalAnswerableResponse = (maxChoice === 0) ? Infinity : maxChoice;\n\n                //sort the score map entries by the score\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                sortedMapEntries = _(scoreMaps).map(function (v) {\n                    return parseFloat(v);\n                }).sortBy().reverse().first(totalAnswerableResponse);\n\n                //if there is not enough map defined, compared to the minChoice constraint, fill in the rest of required choices with the default map\n                missingMapsCount = minChoice - sortedMapEntries.size();\n                _.times(missingMapsCount, function(){\n                    sortedMapEntries.push(mapDefault);\n                });\n\n                //if the map default is positive, the optimal strategy involves using as much mapDefault as possible\n                if(mapDefault && mapDefault > 0){\n                    if(maxChoice){\n                        missingMapsCount = maxChoice - sortedMapEntries.size();\n                    }else{\n                        missingMapsCount = _.size(interaction.getChoices()) - sortedMapEntries.size();\n                    }\n                    if(missingMapsCount > 0){\n                        _.times(missingMapsCount, function(){\n                            sortedMapEntries.push(mapDefault);\n                        });\n                    }\n                }\n\n                //calculate the maximum reachable score by choice map\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v;\n                    if(score < 0 && requiredChoiceCount <= 0){\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredChoiceCount--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                //map point response processing does not work on choice based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"order\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        orderInteractionBased : function orderInteractionBased(interaction){\n            var minChoice = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minChoices')||0, 10);\n            var maxChoice = parseInt(interaction.attr('maxChoices')||0, 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max;\n\n            if(maxChoice && minChoice && maxChoice < minChoice){\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if(_.isArray(responseDeclaration.correctResponse) && (maxChoice && responseDeclaration.correctResponse.length > maxChoice) || (minChoice && responseDeclaration.correctResponse.length < minChoice)){\n                    //max choice does not enable selecting the correct responses\n                    max = 0;\n                }else if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;\n                }\n            }else if(template === 'MAP_RESPONSE' || template === 'MAP_RESPONSE_POINT') {\n                //map response processing does not work on order based interaction\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"associate\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        associateInteractionBased : function associateInteractionBased(interaction, options){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = parseInt(interaction.attr('maxAssociations')||0, 10);\n            var minAssoc = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minAssociations')||0, 10);\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue||0);\n            var max, requiredAssoc, totalAnswerableResponse, usedChoices, choicesIdentifiers, sortedMapEntries, i, allPossibleMapEntries, infiniteScoringPair;\n\n            options = _.defaults(options || {}, {possiblePairs : [], checkInfinitePair: false});\n\n            if(maxAssoc && minAssoc && maxAssoc < minAssoc){\n                return 0;\n            }\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse\n                    || (_.isArray(responseDeclaration.correctResponse)\n                    && (!responseDeclaration.correctResponse.length || maxAssoc && responseDeclaration.correctResponse.length > maxAssoc || minAssoc && responseDeclaration.correctResponse.length < minAssoc) )){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;//is possible until proven otherwise\n\n                    //get the list of choices used in map entries\n                    choicesIdentifiers = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair){\n                        var choices;\n                        if(!_.isString(pair)){\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if(_.isArray(choices) && choices.length === 2){\n                            choicesIdentifiers.push(choices[0].trim());\n                            choicesIdentifiers.push(choices[1].trim());\n                        }\n                    });\n\n                    //check if the choices usage are possible within the constraint defined in the interaction\n                    _.forEach(_.countBy(choicesIdentifiers), function(count, identifier){\n                        var matchMax;\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        if(!choice){\n                            max = 0;\n                            return false;\n                        }\n                        matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if(matchMax && matchMax < count){\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                requiredAssoc = minAssoc;\n                totalAnswerableResponse = (maxAssoc === 0) ? Infinity : maxAssoc;\n                usedChoices = {};\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if(mapDefault && mapDefault > 0){\n                    _.forEachRight(options.possiblePairs, function(pair){\n                        if(!pairExists(allPossibleMapEntries, pair)){\n                            allPossibleMapEntries[pair[0]+' '+pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                //get the sorted list of mapentries ordered by the score\n                sortedMapEntries = _(allPossibleMapEntries).map(function(score, pair){\n                    return {\n                        score : parseFloat(score),\n                        pair : pair\n                    };\n                }).sortBy('score').reverse().filter(function(mapEntry){\n                    var pair = mapEntry.pair;\n                    var choices, choiceId, choice, _usedChoices;\n\n                    if(!_.isString(pair)){\n                        return false;\n                    }\n\n                    //check that the pair is possible in term of matchMax\n                    choices = pair.trim().split(' ');\n                    if(_.isArray(choices) && choices.length === 2){\n                        //clone the global used choices array to brings the changes in that object first before storing in the actual object\n                        _usedChoices = _.cloneDeep(usedChoices);\n\n                        for(i = 0; i < 2; i++){\n                            choiceId = choices[i];\n\n                            //collect choices usage to check if the pair is possible\n                            if(!_usedChoices[choiceId]){\n                                choice = interaction.getChoiceByIdentifier(choiceId);\n                                if(!choice){\n                                    //unexisting choice, skip\n                                    return false;\n                                }\n                                _usedChoices[choiceId] = {\n                                    used : 0,\n                                    max: parseInt(choice.attr('matchMax'), 10)\n                                };\n                            }\n                            if(_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max){\n                                //skip\n                                return false;\n                            }else{\n                                _usedChoices[choiceId].used ++;\n                            }\n                        }\n\n                        //identify the edge case when we can get infinite association pair that create an infinite score\n                        infiniteScoringPair = infiniteScoringPair || (options.checkInfinitePair\n                            && mapEntry.score > 0\n                            && _usedChoices[choices[0]].max === 0\n                            && _usedChoices[choices[1]].max === 0);\n\n                        //update the global used choices array\n                        _.assign(usedChoices, _usedChoices);\n                        return true;\n                    }else{\n                        //is not a correct response pair\n                        return false;\n                    }\n                }).first(totalAnswerableResponse);\n\n                //infinite score => no normalMaximum should be generated for it\n                if(infiniteScoringPair){\n                    return false;\n                }\n\n                //reduce the ordered list of map entries to calculate the max score\n                max = sortedMapEntries.reduce(function (acc, v) {\n                    var score = v.score;\n                    if(v.score < 0 && requiredAssoc <= 0){\n                        //if the score is negative check if we have the choice not to pick it\n                        score = 0;\n                    }\n                    requiredAssoc--;\n                    return gamp.add(acc, score);\n                }, 0);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"gap match\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        gapMatchInteractionBased : function gapMatchInteractionBased(interaction){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var maxAssoc = 0;\n            var minAssoc = 0;\n            var mapDefault = parseFloat(responseDeclaration.mappingAttributes.defaultValue||0);\n            var max, skippableWrongResponse, totalAnswerableResponse, usedChoices, usedGaps, group1, group2, allPossibleMapEntries;\n            var getMatchMaxOrderedChoices = function getMatchMaxOrderedChoices(choiceCollection){\n                return _(choiceCollection).map(function(choice){\n                    return {\n                        matchMax : choice.attr('matchMax') === 0 ? Infinity : choice.attr('matchMax') || 0,\n                        id: choice.id()\n                    };\n                }).sortBy('matchMax').reverse().valueOf();\n            };\n            var calculatePossiblePairs = function calculatePossiblePairs(gapMatchInteraction){\n                //get max number of pairs\n                var pairs = [];\n                var matchSet1 = getMatchMaxOrderedChoices(gapMatchInteraction.getChoices());\n                var matchSet2 = getMatchMaxOrderedChoices(gapMatchInteraction.getGaps());\n\n                _.forEach(matchSet1, function(choice1){\n                    _.forEach(matchSet2, function(choice2){\n                        pairs.push([choice1.id, choice2.id]);\n                    });\n                });\n\n                return pairs;\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;//is possible until proven otherwise\n                    group1 = [];\n                    group2 = [];\n                    _.forEach(responseDeclaration.correctResponse, function(pair){\n                        var choices;\n                        if(!_.isString(pair)){\n                            return;\n                        }\n                        choices = pair.trim().split(' ');\n                        if(_.isArray(choices) && choices.length === 2){\n                            group1.push(choices[0].trim());\n                            group2.push(choices[1].trim());\n                        }\n                    });\n\n                    _.forEach(_.countBy(group1), function(count, identifier){\n                        var choice = interaction.getChoiceByIdentifier(identifier);\n                        var matchMax = parseInt(choice.attr('matchMax'), 10);\n                        if(matchMax && matchMax < count){\n                            max = 0;\n                            return false;\n                        }\n                    });\n\n                    _.forEach(_.countBy(group2), function(count){\n                        var matchMax = 1;//match max for a gap is always 1\n                        if(matchMax && matchMax < count){\n                            max = 0;\n                            return false;\n                        }\n                    });\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                skippableWrongResponse = (minAssoc === 0) ? Infinity : minAssoc;\n                totalAnswerableResponse = (maxAssoc === 0) ? Infinity : maxAssoc;\n                usedChoices = {};\n                usedGaps = {};\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                allPossibleMapEntries = _.clone(responseDeclaration.mapEntries);\n                if(mapDefault && mapDefault > 0){\n                    _.forEachRight(calculatePossiblePairs(interaction), function(pair){\n                        if(!pairExists(allPossibleMapEntries, pair)){\n                            allPossibleMapEntries[pair[0]+' '+pair[1]] = mapDefault;\n                        }\n                    });\n                }\n\n                max = _(allPossibleMapEntries).map(function(score, pair){\n                    return {\n                        score : parseFloat(score),\n                        pair : pair\n                    };\n                }).sortBy('score').reverse().filter(function(mapEntry){\n                    var pair = mapEntry.pair;\n                    var _usedChoices = _.cloneDeep(usedChoices);\n                    var choices, choiceId, gapId, choice;\n\n                    if(!_.isString(pair)){\n                        return false;\n                    }\n\n                    choices = pair.trim().split(' ');\n                    if(_.isArray(choices) && choices.length === 2){\n                        choiceId = choices[0];\n                        gapId = choices[1];\n                        if(!_usedChoices[choiceId]){\n                            choice = interaction.getChoiceByIdentifier(choiceId);\n                            if(!choice){\n                                //inexisting choice, skip\n                                return false;\n                            }\n                            _usedChoices[choiceId] = {\n                                used : 0,\n                                max: parseInt(choice.attr('matchMax'), 10)\n                            };\n                        }\n                        if(_usedChoices[choiceId].max && _usedChoices[choiceId].used === _usedChoices[choiceId].max){\n                            //skip\n                            return false;\n                        }\n                        _usedChoices[choiceId].used ++;\n\n                        if(!usedGaps[gapId]){\n                            usedGaps[gapId] = {\n                                used : 0,\n                                max: 1\n                            };\n                        }\n                        if(usedGaps[gapId].max && usedGaps[gapId].used === usedGaps[gapId].max){\n                            //skip\n                            return false;\n                        }\n                        usedGaps[gapId].used ++;\n\n                        //if an only if it is ok, we merge the temporary used choices array into the global one\n                        _.assign(usedChoices, _usedChoices);\n                        return true;\n                    }else{\n                        //is not a correct response pair\n                        return false;\n                    }\n                }).first(totalAnswerableResponse).reduce(function (acc, v) {\n                    var score = v.score;\n                    if (score >= 0) {\n                        return acc + score;\n                    } else if (skippableWrongResponse > 0) {\n                        skippableWrongResponse--;\n                        return acc;\n                    } else {\n                        return acc + score;\n                    }\n                }, 0);\n\n                //console.log(usedChoices, allPossibleMapEntries, sortedMaps);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = false;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"select point\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        selectPointInteractionBased : function selectPointInteractionBased(interaction){\n            var maxChoice = parseInt(interaction.attr('maxChoices'), 10);\n            var minChoice = _ignoreMinChoice ? 0 : parseInt(interaction.attr('minChoices'), 10);\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, skippableWrongResponse, totalAnswerableResponse;\n\n            if (template === 'MATCH_CORRECT' || template === 'MAP_RESPONSE') {\n                //such templates are not allowed\n                return 0;\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                //calculate the maximum reachable score by choice map\n                skippableWrongResponse = (minChoice === 0) ? Infinity : minChoice;\n                totalAnswerableResponse = (maxChoice === 0) ? Infinity : maxChoice;\n\n                max = _(responseDeclaration.mapEntries).map(function (v) {\n                    return parseFloat(v.mappedValue);\n                }).sortBy().reverse().first(totalAnswerableResponse).reduce(function (acc, v) {\n                    if (v >= 0) {\n                        return acc + v;\n                    } else if (skippableWrongResponse > 0) {\n                        skippableWrongResponse--;\n                        return acc;\n                    } else {\n                        return acc + v;\n                    }\n                }, 0);\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"slider\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        sliderInteractionBased : function sliderInteractionBased(interaction){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = 1;\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(responseDeclaration.mapEntries);\n                max = _(scoreMaps).map(function (v) {\n                    return parseFloat(v);\n                }).max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = 0;\n            }\n            return max;\n        },\n\n        /**\n         * Compute the maximum score of a \"text entry\" typed interaction\n         * @param {Object} interaction - a standard interaction model object\n         * @returns {Number}\n         */\n        textEntryInteractionBased : function textEntryInteractionBased(interaction){\n            var responseDeclaration = interaction.getResponseDeclaration();\n            var template = responseHelper.getTemplateNameFromUri(responseDeclaration.template);\n            var max, scoreMaps;\n\n            /**\n             * Check that a response is possible or not according to the defined patternmask\n             * @param {String} value\n             * @returns {Boolean}\n             */\n            var isPossibleResponse = function isPossibleResponse(value){\n                var patternMask = interaction.attr('patternMask');\n                if(patternMask){\n                    return !!value.match(new RegExp(patternMask));\n                }else{\n                    //no restriction by pattern so always possible\n                    return true;\n                }\n            };\n\n            if (template === 'MATCH_CORRECT') {\n                if(!responseDeclaration.correctResponse || (_.isArray(responseDeclaration.correctResponse) && !responseDeclaration.correctResponse.length)){\n                    //no correct response defined -> score always zero\n                    max = 0;\n                }else{\n                    max = isPossibleResponse(responseDeclaration.correctResponse[0]) ? 1 : 0;\n                }\n            }else if(template === 'MAP_RESPONSE') {\n\n                //at least a map entry is required to be valid QTI\n                if(!responseDeclaration.mapEntries || !_.size(responseDeclaration.mapEntries)){\n                    return 0;\n                }\n\n                //calculate the maximum reachable score by choice map\n                scoreMaps = _.values(_.filter(responseDeclaration.mapEntries, function(score, key){\n                    return isPossibleResponse(key);\n                }));\n                max = _(scoreMaps).map(function (v) {\n                    return parseFloat(v);\n                }).max();\n                max = parseFloat(max);\n\n                //compare the calculated maximum with the mapping upperbound\n                if (responseDeclaration.mappingAttributes.upperBound) {\n                    max = Math.min(max, parseFloat(responseDeclaration.mappingAttributes.upperBound||0));\n                }\n            }else if(template === 'MAP_RESPONSE_POINT'){\n                max = 0;\n            }\n            return max;\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCreator/helper/xmlRenderer',[\n    'core/logger',\n    'taoQtiItem/qtiXmlRenderer/renderers/Renderer',\n    'taoQtiItem/qtiItem/helper/maxScore',\n    'taoQtiItem/qtiItem/core/Element'\n], function(loggerFactory, XmlRenderer, maxScore, Element){\n    'use strict';\n\n    var logger = loggerFactory('taoQtiItem/qtiCreator/helper/xmlRenderer');\n\n    var _xmlRenderer = new XmlRenderer({\n        shuffleChoices : false\n    }).load();\n\n    var _render = function(element){\n        var xml = '';\n        try{\n            if(element instanceof Element) {\n                if (element.is('assessmentItem')) {\n                    maxScore.setNormalMaximum(element);\n                    maxScore.setMaxScore(element);\n                }\n                xml = element.render(_xmlRenderer);\n            }\n        }catch(e){\n            logger.error(e);\n        }\n        return xml;\n    };\n\n    return {\n        render : _render,\n        get : function(){\n            return _xmlRenderer;\n        }\n    };\n});\n\n","define('taoQtiItem/qtiItem/helper/simpleParser',[\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiItem/helper/util',\n    'taoQtiItem/qtiItem/core/Loader'\n], function(_, $, util, Loader){\n    \"use strict\";\n\n    var _parsableElements = ['img', 'object', 'printedVariable'];\n    var _qtiClassNames = {\n        rubricblock : 'rubricBlock',\n        printedvariable : 'printedVariable'\n    };\n    var _qtiAttributesNames = {\n        powerform: 'powerForm',\n        mappingindicator: 'mappingIndicator'\n    };\n\n    var _defaultOptions = {\n        ns : {\n            math : '',\n            include : 'xi'\n        },\n        loaded : null,\n        model : null\n    };\n\n    var parser;\n\n    function _getElementSelector(qtiClass, ns){\n        return ns ? ns + \"\\\\:\" + qtiClass + ','+qtiClass : qtiClass;\n    }\n\n    function getQtiClassFromXmlDom($node){\n\n        var qtiClass = $node.prop('tagName').toLowerCase();\n\n        //remove ns :\n        qtiClass = qtiClass.replace(/.*:/, '');\n\n        return _qtiClassNames[qtiClass] ? _qtiClassNames[qtiClass] : qtiClass;\n    }\n\n    function buildElement($elt){\n\n        var qtiClass = getQtiClassFromXmlDom($elt);\n\n        var elt = {\n            qtiClass : qtiClass,\n            serial : util.buildSerial(qtiClass + '_'),\n            attributes : {}\n        };\n\n        $.each($elt[0].attributes, function(){\n            var attrName;\n            if(this.specified){\n                attrName = _qtiAttributesNames[this.name] || this.name;\n                elt.attributes[attrName] = this.value;\n            }\n        });\n\n        return elt;\n    }\n\n    function buildMath($elt, options){\n\n        var elt = buildElement($elt);\n\n        //set annotations:\n        elt.annotations = {};\n        $elt.find(_getElementSelector('annotation', options.ns.math)).each(function(){\n            var $annotation = $(this);\n            var encoding = $annotation.attr('encoding');\n            if(encoding){\n                elt.annotations[encoding] = _.unescape($annotation.html());\n            }\n            $annotation.remove();\n        });\n\n        //set math xml\n        elt.mathML = $elt.html();\n\n        //set ns:\n        elt.ns = {\n            name : 'm',\n            uri : 'http://www.w3.org/1998/Math/MathML'//@todo : remove hardcoding there\n        };\n\n        return elt;\n    }\n\n    function buildTooltip(targetHtml, contentId, contentHtml){\n        var qtiClass = '_tooltip';\n\n        return {\n            elements : {},\n            qtiClass : qtiClass,\n            serial : util.buildSerial(qtiClass + '_'),\n            attributes : {\n                'aria-describedby': contentId\n            },\n            content: contentHtml,\n            body: {\n                elements : {},\n                serial: util.buildSerial('container'),\n                body: targetHtml\n            }\n\n        };\n    }\n\n    function parseContainer($container, options){\n\n        var ret = {\n            serial : util.buildSerial('_container_'),\n            body : '',\n            elements : {}\n        };\n\n        _.each(_parsableElements, function(qtiClass){\n\n            $container.find(qtiClass).each(function(){\n\n                var $qtiElement = $(this);\n                var element = buildElement($qtiElement, options);\n\n                ret.elements[element.serial] = element;\n                $qtiElement.replaceWith(_placeholder(element));\n\n            });\n\n        });\n\n        $container.find(_getElementSelector('math', options.ns.math)).each(function(){\n\n            var $qtiElement = $(this);\n            var element = buildMath($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n\n        });\n\n        $container.find(_getElementSelector('include', options.ns.include)).each(function(){\n\n            var $qtiElement = $(this);\n            var element = buildElement($qtiElement, options);\n\n            ret.elements[element.serial] = element;\n            $qtiElement.replaceWith(_placeholder(element));\n\n        });\n\n        $container.find('[data-role=\"tooltip-target\"]').each(function(){\n            var element,\n                $target = $(this),\n                $content,\n                contentId = $target.attr('aria-describedBy'),\n                contentHtml;\n\n            if (contentId) {\n                $content = $container.find('#' + contentId);\n                if ($content.length) {\n                    contentHtml = $content.html();\n\n                    element = buildTooltip($target.html(), contentId, contentHtml);\n\n                    ret.elements[element.serial] = element;\n                    $target.replaceWith(_placeholder(element));\n                    $content.remove();\n                }\n            }\n        });\n\n        ret.body = $container.html();\n\n        return ret;\n    }\n\n    function _placeholder(element){\n        return '{{' + element.serial + '}}';\n    }\n\n    parser = {\n        parse : function(xmlStr, opts){\n            var options = _.merge(_.clone(_defaultOptions), opts || {});\n\n            var $container = $(xmlStr);\n\n            var element = buildElement($container, options);\n\n            var data = parseContainer($container, options);\n\n            var loader;\n\n            if(!_.isUndefined(data.body)){\n                element.body = data;\n            }\n\n            if(_.isFunction(options.loaded) && options.model){\n                loader = new Loader().setClassesLocation(options.model);\n                loader.loadAndBuildElement(element, options.loaded);\n            }\n\n            return element;\n        }\n    };\n\n    return parser;\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiItem/qtiCreator/renderers/config',[\n    'lodash',\n    'context',\n    'taoQtiItem/qtiCommonRenderer/renderers/config',\n    'taoItems/assets/manager',\n    'taoItems/assets/strategies'\n], function(_,  context, commonRenderConfig, assetManagerFactory, assetStrategies){\n    'use strict';\n\n    //asset manager using base url\n    var assetManager = assetManagerFactory([\n        assetStrategies.taomedia,\n        assetStrategies.external,\n        assetStrategies.base64,\n        assetStrategies.baseUrl\n    ], {baseUrl : ''});\n\n    var locations = _.defaults({\n        '_container' : 'taoQtiItem/qtiCreator/renderers/Container',\n        '_tooltip' : 'taoQtiItem/qtiCreator/renderers/Tooltip',\n        'assessmentItem' : 'taoQtiItem/qtiCreator/renderers/Item',\n        'rubricBlock' : 'taoQtiItem/qtiCreator/renderers/RubricBlock',\n        'img' : 'taoQtiItem/qtiCreator/renderers/Img',\n        'math' : 'taoQtiItem/qtiCreator/renderers/Math',\n        'object' : 'taoQtiItem/qtiCreator/renderers/Object',\n        'table' : 'taoQtiItem/qtiCreator/renderers/Table',\n        'modalFeedback' : 'taoQtiItem/qtiCreator/renderers/ModalFeedback',\n        'choiceInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/ChoiceInteraction',\n        'orderInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/OrderInteraction',\n        'matchInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/MatchInteraction',\n        'associateInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/AssociateInteraction',\n        'inlineChoiceInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/InlineChoiceInteraction',\n        'textEntryInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/TextEntryInteraction',\n        'hotspotInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/HotspotInteraction',\n        'selectPointInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/SelectPointInteraction',\n        'graphicOrderInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GraphicOrderInteraction',\n        'graphicAssociateInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GraphicAssociateInteraction',\n        'graphicGapMatchInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GraphicGapMatchInteraction',\n        'mediaInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/MediaInteraction',\n        'uploadInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/UploadInteraction',\n        'sliderInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/SliderInteraction',\n        'extendedTextInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/ExtendedTextInteraction',\n        'simpleChoice.choiceInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleChoice.ChoiceInteraction',\n        'simpleChoice.orderInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleChoice.OrderInteraction',\n        'simpleAssociableChoice.associateInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleAssociableChoice.AssociateInteraction',\n        'simpleAssociableChoice.matchInteraction' : 'taoQtiItem/qtiCreator/renderers/choices/SimpleAssociableChoice.MatchInteraction',\n        'gapMatchInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/GapMatchInteraction',\n        'hottextInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/HottextInteraction',\n        'customInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/PortableCustomInteraction',\n        'endAttemptInteraction' : 'taoQtiItem/qtiCreator/renderers/interactions/EndAttemptInteraction',\n        'infoControl' : 'taoQtiItem/qtiCreator/renderers/PortableInfoControl',\n        'include' : 'taoQtiItem/qtiCreator/renderers/Include',\n        'gap' : 'taoQtiItem/qtiCreator/renderers/choices/Gap',\n        'gapText' : 'taoQtiItem/qtiCreator/renderers/choices/GapText',\n        'hottext' : 'taoQtiItem/qtiCreator/renderers/choices/Hottext',\n        'printedVariable' : 'taoQtiItem/qtiCreator/renderers/PrintedVariable'\n    }, commonRenderConfig.locations);\n\n    return {\n        name : 'creatorRenderer',\n        locations : locations,\n        options : {\n            assetManager : assetManager\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA;\n */\n\n/**\n * Define the Qti Item Creator Renderer\n */\ndefine('taoQtiItem/qtiCreator/renderers/Renderer',[\n    'taoQtiItem/qtiRunner/core/Renderer',\n    'taoQtiItem/qtiCreator/renderers/config'\n], function(Renderer, config){\n    'use strict';\n\n    return Renderer.build(config.locations, config.name, config.options);\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCreator/helper/creatorRenderer',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiCreator/renderers/Renderer',\n    'taoItems/assets/manager',\n    'taoItems/assets/strategies',\n    'util/dom'\n], function($, _, Renderer, assetManagerFactory, assetStrategies, dom){\n    \"use strict\";\n\n    //configure and instanciate once only:\n    var _creatorRenderer = null;\n\n    //list of configurable interactions\n    //some interactions allow additional non-standard but sometimes useful configuration\n    var _configurableInteractions = ['endAttempt'];\n\n    /**\n     * Extract interaction-specific configuration from the main one\n     *\n     * @param {object} config - the configuration object of the creatorRenderer\n     * @returns {module.exports.properties|Function.properties|config.properties}\n     */\n    var _extractInteractionsConfig = function _extractInteractionsConfig(config){\n        var ret = {};\n        if(config && config.properties){\n            _.each(_configurableInteractions, function(interactionName){\n                if(config.properties[interactionName]){\n                    ret[interactionName] = config.properties[interactionName];\n                }\n            });\n        }\n        return ret;\n    };\n\n    /**\n     * Get a preconfigured renderer singleton\n     *\n     * @param {Boolean} reset\n     * @param {Object} config\n     * @param {Object} areaBroker - the QtiCreator area broker\n     * @returns {Object} - a configured instance of creatorRenderer\n     */\n    var get = function(reset, config, areaBroker){\n        var $bodyEltForm;\n\n        config = config || {};\n        config.properties = config.properties || {};\n\n        if(!_creatorRenderer || reset){\n\n            $bodyEltForm = _creatorRenderer ? _creatorRenderer.getOption('bodyElementOptionForm') : null;\n            if(reset ||\n                !$bodyEltForm ||\n                !$bodyEltForm.length ||\n                !dom.contains($bodyEltForm)){\n\n                _creatorRenderer = new Renderer({\n                    //assetManager : assetManager,\n                    lang : '',\n                    uri : '',\n                    shuffleChoices : false,\n                    itemOptionForm : $('#item-editor-item-property-bar .panel'),\n                    interactionOptionForm : $('#item-editor-interaction-property-bar .panel'),\n                    choiceOptionForm : $('#item-editor-choice-property-bar .panel'),\n                    responseOptionForm : $('#item-editor-response-property-bar .panel'),\n                    bodyElementOptionForm : areaBroker.getElementPropertyPanelArea(),\n                    textOptionForm : $('#item-editor-text-property-bar .panel'),\n                    modalFeedbackOptionForm : $('#item-editor-modal-feedback-property-bar .panel'),\n                    mediaManager : {\n                        appendContainer : '#mediaManager',\n                        browseUrl : config.properties.getFilesUrl,\n                        uploadUrl : config.properties.fileUploadUrl,\n                        deleteUrl : config.properties.fileDeleteUrl,\n                        downloadUrl : config.properties.fileDownloadUrl,\n                        fileExistsUrl : config.properties.fileExistsUrl,\n                        mediaSourcesUrl : config.properties.mediaSourcesUrl\n                    },\n                    interactions : _extractInteractionsConfig(config),\n                    qtiCreatorContext : config.qtiCreatorContext\n                });\n\n                //update the resolver baseUrl\n                _creatorRenderer.getAssetManager().setData({baseUrl : config.properties.baseUrl || '' });\n\n                _creatorRenderer.setAreaBroker(areaBroker);\n\n                // extend creator renderer to give access to the creator context\n                _.assign(_creatorRenderer, {\n                    getCreatorContext: function getCreatorContext() {\n                        return this.getOption('qtiCreatorContext');\n                    }\n                });\n            }\n        }\n\n        return _creatorRenderer;\n    };\n\n\n    return {\n        get : get,\n\n        setOption : function(name, value){\n            return get().setOption(name, value);\n        },\n        setOptions : function(options){\n            return get().setOptions(options);\n        },\n        load : function(qtiClasses, done){\n            return get().load(function(){\n                if(_.isFunction(done)){\n                    done.apply(this, arguments);\n                }\n            }, qtiClasses);\n        }\n    };\n\n});\n\n","define('taoQtiItem/qtiItem/helper/xincludeLoader',[\n    'jquery',\n    'lodash', \n    'taoQtiItem/qtiItem/helper/simpleParser',\n    'taoQtiItem/qtiItem/core/Loader'\n], function($, _, simpleParser, Loader){\n\n    function load(xinclude, baseUrl, callback){\n\n        var href = xinclude.attr('href');\n        if(href && baseUrl){\n\n            //require xml :\n            require(['text!' + baseUrl + href], function(stimulusXml){\n\n                var $wrapper = $('<div>').html(stimulusXml);\n                var $sampleXMLrootNode = $wrapper.children();\n                var $stimulus = $('<include>').append($sampleXMLrootNode);\n                var mathNs = 'm';//for 'http://www.w3.org/1998/Math/MathML'\n                var data = simpleParser.parse($stimulus, {\n                    ns : {\n                        math : mathNs\n                    }\n                });\n\n                (new Loader()).loadElement(xinclude, data, function(){\n                    if(_.isFunction(callback)){\n                        var loadedClasses = this.getLoadedClasses();\n                        loadedClasses.push('_container');//the _container class is always required\n                        callback(xinclude, data, loadedClasses);\n                    }\n                });\n\n            }, function(err){\n                //in case the file does not exist\n                callback(xinclude, false, []);\n            });\n\n        }\n    }\n\n    return {\n        load : load\n    };\n\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoQtiItem/qtiCreator/helper/xincludeRenderer',[\n    'lodash',\n    'taoQtiItem/qtiCreator/helper/commonRenderer',\n    'taoQtiItem/qtiItem/helper/xincludeLoader'\n], function(_, commonRenderer, xincludeLoader){\n    'use strict';\n\n    return {\n        /**\n         * Render (or re-render) the xinclude widget based on the current href and givenBaseUrl\n         *\n         * @param {Object} xincludeWidget\n         * @param {String} baseUrl\n         * @returns {undefined}\n         */\n        render : function render(xincludeWidget, baseUrl, newHref){\n\n            var xinclude = xincludeWidget.element;\n            if(newHref){\n                xinclude.attr('href', newHref);\n            }\n\n            xincludeLoader.load(xinclude, baseUrl, function(xi, data, loadedClasses){\n                if(data){\n                    //loading success :\n                    commonRenderer.get().load(function(){\n\n                        //set commonRenderer to the composing elements only (because xinclude is \"read-only\")\n                        _.each(xinclude.getComposingElements(), function(elt){\n                            elt.setRenderer(commonRenderer.get());\n                        });\n\n                        //reload the wiget to rfresh the rendering with the new href\n                        xincludeWidget.refresh();\n\n                    }, loadedClasses);\n                }else{\n                    //loading failure :\n                    xinclude.removeAttr('href');\n                }\n            });\n        }\n    };\n});\n\n","define('taoQtiItem/qtiCreator/editor/gridEditor/config',[],function(){\n    \"use strict\";\n    return {\n        min : {\n            interaction : 2,\n            text : 1,\n            rubricBlock : 12\n        },\n        throttle : {\n            resize : 100\n        }\n    };\n});\n\n\n\n","define('taoQtiItem/qtiCreator/editor/gridEditor/helper',[],function(){\n    \"use strict\";\n    var helpers = {\n        getColUnits : function getColUnits($elt){\n\n            var cssClasses = $elt.attr('class');\n            if(!cssClasses){\n                throw new Error('the element has no css class');\n            }\n\n            var colMatch = cssClasses.match(/col-([\\d]+)/);\n            if(colMatch && colMatch.length){\n                return parseInt(colMatch.pop());\n            }else{\n                throw 'the element has no col-* class';\n            }\n        },\n        setUnitsFromClass : function setUnitsFromClass($el){\n            var units = helpers.getColUnits($el);\n            $el.attr('data-units', units);\n            return units;\n        }\n    };\n\n    return helpers;\n});\n\n","define('taoQtiItem/qtiCreator/editor/gridEditor/resizable',[\n    'lodash',\n    'jquery',\n    'taoQtiItem/qtiCreator/editor/gridEditor/config',\n    'taoQtiItem/qtiCreator/editor/gridEditor/helper',\n    'taoQtiItem/qtiCreator/helper/qtiElements',\n    'jqueryui'\n], function(_, $, config, helper, qtiElements){\n    \"use strict\";\n    var _syncHandleHeight = function($row){\n        var h = $row.height() - parseFloat($row.children('[class^=\"col-\"], [class*=\" col-\"]').css('margin-bottom'));\n        $row.find('.grid-edit-resizable-zone').height(h);\n    };\n\n    var _createResizables = function createResizables($el){\n\n        var marginWidth = parseFloat($el.find('[class^=\"col-\"]:last, [class*=\" col-\"]:last').css('margin-left')),\n            activeWidth = 20;\n\n\n\n        $el.find('[class^=\"col-\"], [class*=\" col-\"]').each(function(){\n\n            var $col = $(this);\n\n            //@todo this should be more generic\n            //see draggable etc for more references\n            if($col.parent().hasClass('fixed-grid-row')) {\n                return true;\n            }\n\n            if($col.children('.grid-edit-resizable-zone').length){\n                //already created, next !\n                return true;\n            }\n\n            var $nextCol = $col.next(),\n                $row = $col.parent('.grid-row'),\n                offset = $col.offset(),\n                max = 12,\n                min = qtiElements.is($col.data('qti-class'), 'interaction') ? config.min.interaction : config.min.text,\n                nextMin = qtiElements.is($nextCol.data('qti-class'), 'interaction') ? config.min.interaction : config.min.text,\n                unitWidth = $row.width() / max;\n\n            var activeHeight = $row.height() - parseFloat($col.css('margin-bottom'));\n            var $activeZone = $('<div>', {'class' : 'grid-edit-resizable-zone grid-edit-resizable-zone-active'}).css({top : 0, right : -(marginWidth + (activeWidth - marginWidth) / 2), width : activeWidth, height : activeHeight});\n            var $handle = $('<span>', {'class' : 'grid-edit-resizable-handle'});\n            $activeZone.append($handle);\n            $col.append($activeZone);\n\n            var _syncOutlineHeight = function(){\n                var h = $row.height() - parseFloat($col.css('margin-bottom'));\n                $col.find('.grid-edit-resizable-outline').height(h);\n                $activeZone.height(h);\n            };\n\n            $activeZone.draggable({\n                containment : $nextCol.length ? [\n                    offset.left + min * unitWidth - marginWidth * 2 + 10,\n                    offset.top,\n                    offset.left + $col.outerWidth() + marginWidth + $nextCol.outerWidth() - nextMin * unitWidth - activeWidth / 2 - 10,\n                    offset.top + $col.height()\n                ] : [\n                    offset.left + min * unitWidth - marginWidth - activeWidth / 2 - 10,\n                    offset.top,\n                    $row.offset().left + $row.outerWidth() - marginWidth - activeWidth / 2 - 12,\n                    offset.top + $col.height()\n                ],\n                axis : 'x',\n                cursor : 'col-resize',\n                start : function(){\n\n                    $col.trigger('resizestart.gridEdit');\n\n                    var $overlay = $('<div>', {'class' : 'grid-edit-resizable-outline'});\n                    if($nextCol.length){\n                        $overlay.width(parseFloat($col.outerWidth()) + marginWidth + parseFloat($nextCol.outerWidth()));\n                    }else{\n                        $overlay.css({'width' : '100%', 'border-right-width' : 0});\n                    }\n                    //store in memory for quick access during resize:\n                    $(this).data('overlay', $overlay);\n                    $col.append($overlay);\n                    $handle.addClass('grid-edit-resizable-active');\n                    $el.find('.grid-edit-resizable-zone-active').removeClass('grid-edit-resizable-zone-active');\n                    _syncOutlineHeight();\n\n                },\n                drag : _.throttle(function(){\n\n                    var width = ($(this).offset().left + activeWidth / 2) - offset.left,\n                        units = helper.getColUnits($col),\n                        nextUnits = $nextCol.length ? helper.getColUnits($nextCol) : 0;\n\n                    if(!$nextCol.length){\n                        //need to resize the outline element:\n                        $col.find('.grid-edit-resizable-outline').width($handle.offset().left - offset.left);\n                    }\n\n                    if(width + marginWidth * 0 < (units - 1) * unitWidth){//need to compensate for the width of the active zone\n                        \n                        units--;\n                        _setColUnits($col, units);\n\n                        if($nextCol.length){\n                            nextUnits++;\n                            _setColUnits($nextCol, nextUnits);\n                        }\n\n                        _syncOutlineHeight();\n                        \n                        $col.trigger('resize.gridEdit');\n                        \n                    }else if(width + marginWidth + 20 > (units + 1) * unitWidth){//need to compensate for the width of the active zone\n                        \n                        units++;\n                        _setColUnits($col, units);\n\n                        if($nextCol.length){\n                            nextUnits--;\n                            _setColUnits($nextCol, nextUnits);\n                        }\n\n                        _syncOutlineHeight();\n                        \n                        $col.trigger('resize.gridEdit');\n                    }\n\n                }, config.throttle.resize),\n                stop : function(){\n\n                    $col.find('.grid-edit-resizable-outline').remove();\n\n                    _deleteResizables($el);\n                    _createResizables($el);\n\n                    $col.trigger('resizestop.gridEdit');\n                }\n            }).css('position', 'absolute');\n\n        });\n\n        $el.off('.gridEdit.resizable').on('dragoverstart.gridEdit.resizable', function(){\n\n            _deleteResizables($el);\n\n        }).on('dragoverstop.gridEdit.resizable', function(){\n\n            _createResizables($el);\n\n        }).on('contentChange.gridEdit.resizable', '.grid-row', function(){\n\n            _deleteResizables($el);\n            _createResizables($el);\n        });\n\n    };\n\n    var _deleteResizables = function _deleteResizables($el){\n        \n        $el.find('.grid-edit-resizable-zone').remove();\n    };\n\n    var _setColUnits = function _setColUnits($elt, newUnits){\n        \n        if($elt.attr('class').match(/col-([\\d]+)/)){\n            \n            var oldUnits = $elt.attr('data-units');\n            var $parentRow = $elt.parent('.grid-row');\n            var totalUnits = $parentRow.attr('data-units');\n            $parentRow.attr('data-units', totalUnits - oldUnits + newUnits);//update parent\n            $elt.attr('data-units', newUnits);//update element\n            $elt.removeClass('col-' + oldUnits).addClass('col-' + newUnits);\n            \n        }else{\n            \n            throw $.error('the element is not a grid column');\n        }\n    };\n\n    return {\n        create : function($element){\n            \n            _createResizables($element);\n            \n            $(window).off('resize.qtiEdit.resizable').on('resize.qtiEdit.resizable', function(){\n                \n                _deleteResizables($element);\n                _createResizables($element);\n            });\n        },\n        destroy : function($element, preserveGlobalEvents){\n            \n            _deleteResizables($element);\n            \n            if(!preserveGlobalEvents){\n                \n                $(window).off('resize.qtiEdit.resizable');\n            }\n        },\n        syncHandleHeight : function($row){\n        \n            if($row.hasClass('grid-row')){\n                _syncHandleHeight($row);\n            }else{\n                $row.find('.grid-row').each(function(){\n                    _syncHandleHeight($(this));\n                });\n            }\n        }\n\n    };\n});\n","define('taoQtiItem/qtiCreator/widgets/helpers/textWrapper',['jquery'], function($){\n\n    function getSelection(){\n\n        var selection;\n\n        if(window.getSelection){\n            selection = window.getSelection();\n        }else if(document.selection){\n            selection = document.selection.createRange();\n        }\n\n        return selection;\n    }\n\n    function containElement(selection, range){\n\n        if(range.commonAncestorContainer.nodeType === 1){\n            var selectedChildNodes = range.cloneContents().childNodes;\n            for (var i = 0; i < selectedChildNodes.length; i++){\n                if(selectedChildNodes[i].className && \n                   selectedChildNodes[i].className.indexOf(\"qti-choice\") > -1){\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    function wrapSelection(wrap){\n\n        var sel = getSelection();\n        if(sel.rangeCount){\n            var range = sel.getRangeAt(0).cloneRange();\n            if(range.startOffset !== range.endOffset && //prevent empty selection\n                range.toString().trim() && //prevent empty selection\n                !containElement(sel, range)\n                ){\n                        \n                range.surroundContents(wrap);\n                sel.removeAllRanges();\n                sel.addRange(range);\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function unwrapSelection($editable){\n\n        var $wrapper = $editable.find('#selection-wrapper');\n\n        $editable.trigger('beforeunwrap');\n\n        $wrapper.find('[data-role]').remove();\n        $wrapper.replaceWith(function(){\n            return $(this).html();\n        });\n\n        $editable.trigger('unwrapped');\n    }\n\n    var textWrapper = {\n        create : function($editable){\n\n            //reset it first:\n            textWrapper.destroy($editable);\n\n            //add listeners:\n            $editable.on('mouseup.textwrapper', function(e){\n\n                var $target = $(e.target);\n                if($target.hasClass('html-editable-shield') || $target.hasClass('widget-box')){\n                    return;\n                }\n\n                var $wrapper = $('<span>', {id : 'selection-wrapper', 'class' : 'inline-text-wrapper'});\n                if(wrapSelection($wrapper[0])){\n                    var wrappedText = $wrapper.text().trim();\n                    $editable.trigger('wrapped', [$wrapper, wrappedText]);\n                }\n\n            }).on('mousedown.textwrapper', function(){\n\n                unwrapSelection($editable);\n\n            });\n\n        },\n        destroy : function($editable){\n\n            unwrapSelection($editable);\n            $editable.off('.textwrapper');\n        },\n        unwrap : function($editable){\n            unwrapSelection($editable);\n        }\n    };\n\n    return textWrapper;\n});\n","define('taoQtiItem/qtiCreator/editor/gridEditor/content',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiCreator/editor/gridEditor/resizable',\n    'taoQtiItem/qtiCreator/widgets/helpers/textWrapper'\n], function($, _, resizable, textWrapper){\n    \"use strict\";\n    var contentHelper = {};\n\n    /**\n     * Get html string content for a qti container\n     * \n     * @param {string|domelement|jquery} element\n     * @returns {string}\n     */\n    contentHelper.getContent = function(element, opts){\n\n        var options = _.defaults({\n            inner : true\n        }, opts);\n\n        var $body = options.inner ? $(element).clone() : $('<div>', {'class' : 'col-fictive content-helper-wrapper'}).append($(element).clone());\n\n        contentHelper.destroyGridWidgets($body, true);//working on clone only, so destroyGridWidgetsClone\n\n        contentHelper.serializeElements($body);\n        \n        return $body.html();\n    };\n\n    /**\n     * Create a callback function for the ck edit:\n     * \n     * @param {object} container\n     */\n    contentHelper.getChangeCallback = function(container){\n\n        return _.throttle(function(data){\n\n            var $pseudoContainer = $('<div>').html(data),\n                newBody = contentHelper.getContent($pseudoContainer);\n\n            container.body(newBody);\n\n        }, 800);\n    };\n\n    /**\n     * Create a callback function for the ck edit (special case of blockstatic content\n     * \n     * @param {object} container\n     */\n    contentHelper.getChangeCallbackForBlockStatic = function(container){\n\n        return _.throttle(function(data){\n\n            var $pseudoContainer = $('<div>').html(data);\n            \n            $pseudoContainer.contents().each(function(){\n                \n                if(this.nodeType === 3 && this.nodeValue.trim()){\n                    \n                    //use jquery to wrap all content by a <p> \n                    $pseudoContainer.wrapInner('<p>');\n                    \n                    //... transform it into valid html :  <p><p>aaa</p></p> becomes <p></p><p>aaa</p><p></p>\n                    $pseudoContainer = $('<div>').html($pseudoContainer.html());\n                    \n                    return false;//breaks jquery each loop\n                }\n            });\n\n            textWrapper.unwrap($pseudoContainer);\n\n            container.body(contentHelper.getContent($pseudoContainer));\n\n        }, 800);\n    };\n\n    contentHelper.serializeElements = function($el){\n\n        var existingElements = [];\n\n        //select only the first level of \".widget-box\" found\n        $el.find('.widget-box:not(.widget-box *)').each(function(){\n\n            var $qtiElementWidget = $(this);\n\n            if($qtiElementWidget.data('serial')){\n\n                //an existing qti element:\n                var serial = $qtiElementWidget.data('serial');\n                $qtiElementWidget.replaceWith('{{' + serial + '}}');\n\n                //store existing element\n                existingElements.push(serial);\n\n            }else if($qtiElementWidget.data('new') && $qtiElementWidget.data('qti-class')){\n\n                //a newly inserted qti element\n                var qtiClass = $qtiElementWidget.data('qti-class');\n                $qtiElementWidget.replaceWith('{{' + qtiClass + ':new}}');\n\n            }else{\n\n                throw 'unknown qti-widget type';\n            }\n\n        });\n\n        return existingElements;\n    };\n\n    contentHelper.destroyGridWidgets = function($elt, inClone){\n\n        $elt.removeData('qti-grid-options');\n\n        $elt.find('.grid-row, [class*=\" col-\"], [class^=\"col-\"]')\n            .removeAttr('style')\n            .removeAttr('data-active')\n            .removeAttr('data-units');\n\n        $elt.children('.ui-draggable-dragging').remove();\n\n        resizable.destroy($elt, inClone);\n        \n        $elt.find('.contextual-popup').remove();\n    };\n\n    return contentHelper;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiItem/qtiCreator/helper/ckConfigurator',['lodash', 'ui/ckeditor/ckConfigurator', 'mathJax'], function(_, ckConfigurator, mathJax) {\n    'use strict';\n\n    var _defaults = {\n        qtiImage : true,\n        qtiMedia : true,\n        qtiInclude : true,\n        underline : true,\n        mathJax : !!mathJax\n    };\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options){\n        return ckConfigurator.getConfig(editor, toolbarType, _.defaults(options || {}, _defaults));\n    };\n\n    return {\n        getConfig : getConfig\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCreator/widgets/helpers/content',[\n    'jquery',\n    'lodash',\n    'taoQtiItem/qtiCreator/helper/creatorRenderer',\n    'taoQtiItem/qtiCreator/model/helper/container',\n    'taoQtiItem/qtiCreator/editor/gridEditor/content'\n], function($, _, creatorRenderer, containerHelper, gridContentHelper){\n    'use strict';\n\n    var contentHelper = {};\n\n    /**\n     * Create elements from a widget box having the 'data-new=true' attribute\n     *  - render the elements at their placeholder in $container\n     *  - apply callback on each widget\n     * @param container - element that will contain the new ones\n     * @param $container - DOM container where the new elements are created\n     * @param data - corresponding HTML (?)\n     * @param callback - will be triggered for each new created element\n     */\n    contentHelper.createElements = function(container, $container, data, callback){\n\n        var $dummy = $('<div>').html(data);\n\n        containerHelper.createElements(container, gridContentHelper.getContent($dummy), function(newElts){\n\n            creatorRenderer.get().load(function(){\n                var serial,\n                    elt,\n                    $placeholder,\n                    $widget,\n                    widget;\n\n                for(serial in newElts){\n\n                    elt = newElts[serial];\n                    $placeholder = $container.find('.widget-box[data-new][data-qti-class=' + elt.qtiClass + ']');\n\n                    elt.setRenderer(this);\n                    elt.render($placeholder);\n\n                    //render widget\n                    elt.postRender();\n\n                    widget = elt.data('widget');\n                    $widget = widget.$original;\n\n                    //inform height modification\n                    $widget.trigger('contentChange.gridEdit');\n\n                    if(_.isFunction(callback)){\n                        callback(widget);\n                    }\n                }\n\n            }, this.getUsedClasses());\n        });\n\n    };\n\n    contentHelper.changeInnerWidgetState = function _changeInnerWidgetState(outerWidget, state){\n\n         var selector = [];\n        _.each(['img', 'math', 'object', 'include'], function(qtiClass){\n            selector.push('[data-html-editable] .widget-'+qtiClass);\n        });\n\n        outerWidget.$container.find(selector.join(',')).each(function(){\n            var innerWidget = $(this).data('widget');\n            if(innerWidget){\n                innerWidget.changeState(state);\n            }\n        });\n    };\n\n    return contentHelper;\n});\n\n","\ndefine('tpl!taoQtiItem/qtiCreator/tpl/notifications/deletingInfoBox', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"You have deleted an element\", options) : helperMissing.call(depth0, \"__\", \"You have deleted an element\", options)))\n    + \".\\n    \";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"You have deleted\", options) : helperMissing.call(depth0, \"__\", \"You have deleted\", options)))\n    + \" \";\n  if (helper = helpers.count) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.count); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"elements\", options) : helperMissing.call(depth0, \"__\", \"elements\", options)))\n    + \".\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"feedback-info popup\\\" data-for=\\\"\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span class=\\\"icon-info\\\"></span>\\n    \";\n  stack1 = (helper = helpers.equal || (depth0 && depth0.equal),options={hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data},helper ? helper.call(depth0, (depth0 && depth0.count), 1, options) : helperMissing.call(depth0, \"equal\", (depth0 && depth0.count), 1, options));\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <a class=\\\"undo\\\" href=\\\"#\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"undo\", options) : helperMissing.call(depth0, \"__\", \"undo\", options)))\n    + \"</a>\\n    <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove Message\", options) : helperMissing.call(depth0, \"__\", \"Remove Message\", options)))\n    + \"\\\" class=\\\"icon-close close-trigger\\\"></span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technlogies SA\n *\n */\ndefine('taoQtiItem/qtiCreator/widgets/helpers/deletingState',['lodash', 'jquery', 'tpl!taoQtiItem/qtiCreator/tpl/notifications/deletingInfoBox'], function(_, $, deletingInfoTpl){\n    'use strict';\n\n    var _timeout = 10000;\n\n    var _destroy = function _destroy($messageBox){\n        $('body').off('.deleting');\n        $messageBox.remove();\n    };\n\n    var undo = function undo($messageBox){\n        $messageBox.trigger('undo.deleting');\n        _destroy($messageBox);\n    };\n\n    var _bindEvents = function _bindEvents($messageBox){\n\n        $('body').on('mousedown.deleting keydown.deleting', function(e){\n\n            if(e.ctrlKey || e.metaKey){\n                //trigger undo callback if the standard keyboard shortcut ctrl+z is triggered\n                if(e.keyCode == 90){//z-key\n                    undo($messageBox);\n                }\n                e.preventDefault();\n                return;\n            }\n\n            //confirm deleting whenever user interact with another object\n            if(e.target !== $messageBox[0] && !$.contains($messageBox[0], e.target)){\n                _confirmDeletion($messageBox, 400);\n            }\n        });\n        \n        $messageBox.find('a.undo').on('click', function(e){\n            e.preventDefault();\n            undo($messageBox);\n        });\n\n        $messageBox.find('.close-trigger').on('click', function(e){\n            e.preventDefault();\n            _confirmDeletion($messageBox, 0);\n        });\n\n        setTimeout(function(){\n            _confirmDeletion($messageBox, 1000);\n        }, _timeout);\n    };\n\n    var _confirmDeletion = function($messageBox, fadeDelay){\n        //only allow deletion if the message has not already been deleted yet\n        if($messageBox.length && $.contains(document, $messageBox[0])){\n            $messageBox.trigger('confirm.deleting');\n            $messageBox.fadeOut(fadeDelay, function(){\n                _destroy($messageBox);\n            });\n        }\n    };\n    \n    var deletingHelper = {\n        createInfoBox : function(widgets){\n\n            var $messageBox = $(deletingInfoTpl({\n                serial : 'widgets',\n                count : widgets.length\n            }));\n\n            $('body').append($messageBox);\n\n            $messageBox.css({\n                'display' : 'block',\n                'position' : 'fixed',\n                'top' : '50px',\n                'left' : '50%',\n                'margin-left' : '-200px',\n                'width' : '400px',\n                zIndex : 999999\n            });\n            \n            _bindEvents($messageBox);\n            \n            _.each(widgets, function(w){\n                w.on('beforeStateInit', function(){\n                    _confirmDeletion($messageBox, 400);\n                });\n            });\n        \n            return $messageBox;\n        }\n    };\n\n    return deletingHelper;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoQtiItem/qtiCreator/editor/ckEditor/htmlEditor',[\n    'lodash',\n    'i18n',\n    'jquery',\n    'ckeditor',\n    'core/promise',\n    'taoQtiItem/qtiCreator/helper/ckConfigurator',\n    'taoQtiItem/qtiItem/core/Element',\n    'taoQtiItem/qtiCreator/widgets/helpers/content',\n    'taoQtiItem/qtiCreator/widgets/helpers/deletingState'\n], function(\n    _,\n    __,\n    $,\n    CKEditor,\n    Promise,\n    ckConfigurator,\n    Element,\n    contentHelper,\n    deletingHelper\n){\n    \"use strict\";\n\n    var _defaults = {\n        placeholder : __('some text ...'),\n        shieldInnerContent : true,\n        passthroughInnerContent : false,\n        autofocus : true\n    };\n\n    var placeholderClass = 'cke-placeholder';\n\n    var editorFactory;\n\n    //prevent auto inline editor creation:\n    CKEditor.disableAutoInline = true;\n\n    /**\n     * @param {JQuery} $editable - the element to be transformed into an editor\n     * @param {JQuery} $editableContainer - the container of the editor\n     * @param {Object} [options]\n     * @param {String} [options.placeholder] - the place holder text\n     * @param {Boolean} [options.shieldInnerContent] - define if the inner widget content should be protected or not\n     * @param {Boolean} [options.passthroughInnerContent] - define if the inner widget content should be accessible directly or not\n     * @param {String} [options.removePlugins] - a coma-separated list of plugins that should not be loaded: 'plugin1,plugin2,plugin3'\n     * @param {Boolean} [options.autofocus] - automatically focus\n     */\n    function _buildEditor($editable, $editableContainer, options){\n\n        var ckConfig,\n            widget = (options.data || {}).widget,\n            areaBroker = widget && widget.getAreaBroker && widget.getAreaBroker(),\n            $toolbarArea = areaBroker && areaBroker.getToolbarArea && areaBroker.getToolbarArea();\n\n        options = _.defaults(options, _defaults);\n\n        if( !($editable instanceof $) || !$editable.length){\n            throw new Error('invalid jquery element for $editable');\n        }\n        if( !($editableContainer instanceof $) || !$editableContainer.length){\n            throw new Error('invalid jquery element for $editableContainer');\n        }\n\n        if (options.placeholder && options.placeholder !== '') {\n            if ($editable.is('input')) {\n                $editable.attr('placeholder', options.placeholder);\n            } else {\n                $editable.attr('data-placeholder', options.placeholder);\n            }\n        }\n\n        ckConfig = {\n            dtdMode : 'qti',\n            autoParagraph : false,\n            removePlugins : options.removePlugins || '',\n            enterMode : options.enterMode || CKEditor.ENTER_P,\n            floatSpaceDockedOffsetY : 10,\n            sharedSpaces : {\n                top: ($toolbarArea && $toolbarArea.attr('id')) || 'toolbar-top'\n            },\n            taoQtiItem : {\n                /**\n                 * @param {DOM} tempWidget - this contains the DOM nodes created by a ckEditor plugin,\n                 *                           wrapped in a temporary widget container (= a widget container with a [data-new=\"true\"] attribute)\n                 */\n                insert : function(tempWidget){\n                    var $newContent = $(tempWidget).clone(); // we keep the original content for later use\n                    if(options.data && options.data.container && options.data.widget){\n                        contentHelper.createElements(options.data.container, $editable, _htmlEncode(this.getData()), function(createdWidget){\n                            var createdElement = createdWidget.element;\n\n                            if (_.isFunction(createdElement.initContainer)) {\n                                createdElement.body($newContent.html());\n                                createdWidget.rebuild();\n                                createdWidget = createdElement.data('widget');\n                            }\n                            _activateInnerWidget(options.data.widget, createdWidget);\n                        });\n                    }\n                }\n            },\n            on : {\n                instanceReady : function(e){\n                    var widgets = {},\n                        editor = e.editor;\n\n                    //store it in editable elt data attr\n                    $editable.data('editor', editor);\n                    $editable.data('editor-options', options);\n\n                    //need to debounce the callback to prevent the changes made by undo to trigger the event change twice\n                    editor.on('change', _.debounce(function markupChanged(){\n                        _detectWidgetDeletion($editable, widgets, editor);\n                        if(_.isFunction(options.change)){\n                            options.change.call(editor, _htmlEncode(editor.getData()));\n                        }\n                    }, 100, {\n                        leading: true\n                    }));\n\n                    managePlaceholder($editable, editor);\n\n                    if(options.data && options.data.container){\n\n                        //store in data-qti-container attribute the editor instance as soon as it is ready\n                        $editable.data('qti-container', options.data.container);\n\n                        //init editable\n                        widgets = _rebuildWidgets(options.data.container, $editable, {\n                            restoreState : true\n                        });\n                        if(options.shieldInnerContent){\n                            _shieldInnerContent($editable, options.data.widget);\n                        }\n                    }\n\n                    if (options.autofocus) {\n                        _focus(editor);\n                    }\n\n                    $editable.trigger('editorready', [editor]);\n\n                    $('.qti-item').trigger('toolbarchange');\n                },\n                blur : function() {\n                    if ($toolbarArea) {\n                        $toolbarArea.hide();\n                    }\n                },\n                focus : function(){\n                    if ($toolbarArea) {\n                        $toolbarArea.show();\n                    }\n\n                    //callback:\n                    if(_.isFunction(options.focus)){\n                        options.focus.call(this, _htmlEncode(this.getData()));\n                    }\n\n                    $editable.trigger('editorfocus');\n\n                    $('.qti-item').trigger('toolbarchange');\n                },\n                configLoaded : function(e){\n                    //@todo : do we really have to wait here to initialize the config?\n                    var toolbarType = '';\n                    if(options.toolbar && _.isArray(options.toolbar)){\n                        ckConfig.toolbar = options.toolbar;\n                    }else{\n                        toolbarType = getTooltypeFromContainer($editableContainer);\n                    }\n\n                    if(typeof options.qtiMedia !== 'undefined'){\n                        ckConfig.qtiMedia = options.qtiMedia;\n                    }\n                    if(typeof options.qtiImage !== 'undefined'){\n                        ckConfig.qtiImage = options.qtiImage;\n                    }\n                    if(typeof options.qtiInclude !== 'undefined'){\n                        ckConfig.qtiInclude = options.qtiInclude;\n                    }\n                    if(typeof options.highlight !== 'undefined'){\n                        ckConfig.highlight = options.highlight;\n                    }\n\n                    e.editor.config = ckConfigurator.getConfig(e.editor, toolbarType, ckConfig);\n                },\n                afterPaste : function(){\n                    //@todo : we may add some processing on the editor after paste\n                }\n            }\n        };\n\n        return CKEditor.inline($editable[0], ckConfig);\n    }\n\n    /**\n     * Handle the placeholder for non-input elements.\n     * To avoid CK nasty side-effects of using the placeholder attribute on non-input elements,\n     * we handle the placeholder with css.\n     */\n    function managePlaceholder($editable, editor) {\n        if (!$editable.is('input')) {\n            togglePlaceholder($editable);\n\n            editor.on('change', function() {\n                togglePlaceholder($editable);\n            });\n        }\n    }\n\n    /**\n     * Toggle the placeholder class on the editable depending on its content\n     */\n    function togglePlaceholder($editable) {\n        var nonEmptyContent = ['img', 'table', 'math', 'object', 'printedVariable', '.tooltip-target'];\n\n        if ($editable.text().trim() === ''\n            && ! $editable.find(nonEmptyContent.join(',')).length\n        ) {\n            $editable.addClass(placeholderClass);\n        } else {\n            removePlaceholder($editable);\n        }\n    }\n\n    function removePlaceholder($editable) {\n        $editable.removeClass(placeholderClass);\n    }\n\n    /**\n     * Assess\n     * @param {type} $editableContainer\n     * @returns {String}\n     */\n    function getTooltypeFromContainer($editableContainer){\n\n        var toolbarType = 'qtiFlow';\n        // build parameter for toolbar\n        if($editableContainer.hasClass('widget-blockInteraction') || $editableContainer.hasClass('widget-textBlock') || $editableContainer.hasClass('widget-rubricBlock')){\n            toolbarType = 'qtiBlock';\n        }else if($editableContainer.hasClass('qti-prompt-container') || $editableContainer.hasClass('widget-hottext')){\n            toolbarType = 'qtiInline';\n        }\n        return toolbarType;\n    }\n\n    /**\n     * Find an inner element by its data attribute name\n     * @param {JQuery} $container\n     * @param {String} dataAttribute\n     */\n    function _find($container, dataAttribute){\n\n        var $collection;\n\n        if($container.data(dataAttribute)){\n            $collection = $container;\n        }else{\n            $collection = $container.find('[data-' + dataAttribute + '=true]');\n        }\n        return $collection;\n    }\n\n    /**\n     * Rebuild all innerwidgets located inside a container\n     *\n     * @param {Object} container\n     * @param {JQuery} $container\n     * @param {Object} options\n     */\n    function _rebuildWidgets(container, $container, options){\n        var widgets = {};\n        options = options || {};\n\n        //re-init all widgets:\n        _.each(_.values(container.elements), function(elt){\n\n            var widget = elt.data('widget'),\n                currentState = widget.getCurrentState().name;\n\n            widgets[elt.serial] = widget.rebuild({\n                context : $container,\n                ready : function(widget){\n                    if(options.restoreState){\n                        //restore current state\n                        widget.changeState(currentState);\n                    }\n                }\n            });\n        });\n\n        $container.trigger('widgetCreated', [widgets, container]);\n\n        return widgets;\n    }\n\n    /**\n     * Find the widget container by its serial\n     *\n     * @param {JQuery} $container\n     * @param {String} serial\n     */\n    function _findWidgetContainer($container, serial){\n        return $container.find('.widget-box[data-serial=' + serial + ']');\n    }\n\n    /**\n     * Detect if an inner widget has been removed\n     *\n     * @param {JQuery} $container\n     * @param {Array} widgets\n     * @param {Object} editor\n     * @returns {undefined}\n     */\n    function _detectWidgetDeletion($container, widgets, editor){\n\n        var deleted = [];\n        var container = $container.data('qti-container');\n        var $widget;\n\n        _.each(widgets, function(w){\n\n            if(!w.element.data('removed')){\n                $widget = _findWidgetContainer($container, w.serial);\n                if(!$widget.length){\n                    deleted.push(w);\n                }\n            }\n\n        });\n\n        if(deleted.length){\n            var undoCmd = editor.getCommand( 'undo');\n            var $messageBox = deletingHelper.createInfoBox(deleted);\n\n            $messageBox.on('confirm.deleting', function(){\n\n                _.each(deleted, function(w){\n                    w.element.remove();\n                    w.destroy();\n                });\n\n                editor.resetUndo();\n\n            }).on('undo.deleting', function(){\n\n                editor.undoManager.undo();\n\n                //need to rebuild the inner widgets in case the undo restored some qti elements\n                _rebuildWidgets(container, $container, {\n                    restoreState : true\n                });\n\n                _shieldInnerContent($container, container.data('widget'));\n            });\n\n            if (undoCmd){\n                //catch ckeditor's undo event to trigger the same behaviour as the undo action dialog\n                undoCmd.on('afterUndo', function(){\n                    $messageBox.find('a.undo').click();\n                });\n            }\n\n        }\n    }\n\n    /**\n     * @param {JQuery} $widget - the widget to be protected\n     * @returns {JQuery} The added layer (shield)\n     */\n    function addShield($widget){\n        var $shield = $('<button>', {\n            'class' : 'html-editable-shield'\n        });\n\n        $widget.attr('contenteditable', false);\n        $widget.append($shield);\n        return $shield;\n    }\n\n    /**\n     * Protect the inner widgets of a container\n     *\n     * @param {JQuery} $container\n     * @param {Object} containerWidget\n     * @returns {undefined}\n     */\n    function _shieldInnerContent($container, containerWidget){\n\n        $container.find('.widget-box').each(function(){\n            var $widget = $(this);\n\n            addShield($widget).on('click', function(e){\n                var innerWidget;\n\n                //click on shield:\n                //1. this.widget.changeState('sleep');\n                //2. clicked widget.changeState('active');\n\n                e.stopPropagation();\n\n                innerWidget = $widget.data('widget');\n                _activateInnerWidget(containerWidget, innerWidget);\n            });\n        });\n\n    }\n\n    /**\n     * Activate the inner widget\n     *\n     * @param {Object} containerWidget\n     * @param {Object} innerWidget\n     * @returns {undefined}\n     */\n    function _activateInnerWidget(containerWidget, innerWidget){\n        var listenToWidgetCreation;\n\n        if(containerWidget && containerWidget.element && containerWidget.element.qtiClass){\n\n            listenToWidgetCreation = function(){\n                containerWidget.$container\n                    .off('widgetCreated')\n                    .one('widgetCreated', function(e, widgets){\n                        var targetWidget = widgets[innerWidget.serial];\n                        if(targetWidget){\n                            //FIXME potential race condition ? (debounce the enclosing event handler ?)\n                            _.delay(function(){\n                                if(Element.isA(targetWidget.element, 'interaction')){\n                                    targetWidget.changeState('question');\n                                } else{\n                                    targetWidget.changeState('active');\n                                }\n                            }, 100);\n                        }\n                    });\n\n            };\n\n            if(Element.isA(containerWidget.element, '_container') && !containerWidget.element.data('stateless')){\n\n                //only _container that are NOT stateless need to change its state to sleep before activating the new one.\n                listenToWidgetCreation();\n                containerWidget.changeState('sleep');\n\n            }else if(Element.isA(containerWidget.element, 'interaction')){\n\n                listenToWidgetCreation();\n                containerWidget.changeState('sleep');\n\n            }else if(Element.isA(containerWidget.element, 'choice')){\n\n                listenToWidgetCreation();\n                containerWidget.changeState('question');\n\n            }else if(Element.isA(containerWidget.element, 'table')){\n\n                listenToWidgetCreation();\n                containerWidget.changeState('sleep');\n\n            }else if(Element.isA(innerWidget.element, 'choice')){\n\n                innerWidget.changeState('choice');\n\n            }else{\n\n                innerWidget.changeState('active');\n            }\n\n        }else{\n\n            innerWidget.changeState('active');\n        }\n    }\n\n    /**\n     * Special encoding of ouput html generated from ie8 : moved to xmlRenderer\n     */\n    function _htmlEncode(encodedStr){\n        return encodedStr;\n    }\n\n    /**\n     * Focus the editor and set the cursor to the end\n     *\n     * @param {Object} editor - the ckeditor instance\n     * @returns {undefined}\n     */\n    function _focus(editor){\n        var range;\n        if (editor.editable() && editor.editable().$.parentNode){\n            editor.focus();\n            range = editor.createRange();\n            range.moveToElementEditablePosition(editor.editable(), true);\n            editor.getSelection().selectRanges([range]);\n        }\n    }\n\n    editorFactory = {\n        /**\n         * Check if all data-html-editable has an editor\n         *\n         * @param {type} $container\n         * @returns {undefined}\n         */\n        hasEditor : function($container){\n\n            var hasEditor = false;\n\n            _find($container, 'html-editable').each(function(){\n                hasEditor = !!$(this).data('editor');\n                return hasEditor; //continue if true, break if false\n            });\n\n            return hasEditor;\n        },\n        /**\n         * Instanciate the editor\n         *\n         * @param {JQuery} $container\n         * @param {Object} [editorOptions]\n         * @param {String} [editorOptions.placeholder] - the place holder text\n         * @param {Boolean} [editorOptions.shieldInnerContent] - define if the inner widget content should be protected or not\n         * @param {Boolean} [editorOptions.passthroughInnerContent] - define if the inner widget content should be accessible directly or not\n         * @param {Boolean} [editorOptions.enterMode] - what is the behavior of the \"Enter\" key (see ENTER_MODE_xxx in ckEditor configuration)\n         * @returns {undefined}\n         */\n        buildEditor : function($container, editorOptions){\n            var buildTasks = [];\n            _find($container, 'html-editable-container').each(function(){\n\n                var $editableContainer = $(this),\n                    $editable = $editableContainer.find('[data-html-editable]');\n\n                buildTasks.push(new Promise(function (resolve) {\n                    //need to make the element html editable to enable ck inline editing:\n                    $editable.attr('contenteditable', true);\n\n                    //build it\n                    _buildEditor($editable, $editableContainer, editorOptions);\n\n                    $editable.on('editorready', resolve);\n                }));\n            });\n            return Promise.all(buildTasks);\n        },\n        /**\n         * Destroy the editor\n         *\n         * @param {JQuery} $container\n         * @returns {undefined}\n         */\n        destroyEditor : function($container){\n            var destructTasks = [];\n            _find($container, 'html-editable-container').each(function(){\n\n                var editor,\n                    options,\n                    $editableContainer = $(this),\n                    $editable = $editableContainer.find('[data-html-editable]');\n\n                $editable.removeAttr('contenteditable');\n                if($editable.data('editor')){\n\n                    destructTasks.push(new Promise(function (resolve) {\n                        editor = $editable.data('editor');\n                        options = $editable.data('editor-options');\n\n                        //before destroying, ensure that data is stored\n                        if(_.isFunction(options.change)){\n                            options.change.call(editor, _htmlEncode(editor.getData()));\n                        }\n\n                        removePlaceholder($editable);\n\n                        editor.on('destroy', function () {\n                            $editable.removeData('editor').removeData('editor-options');\n                            if($editable.data('qti-container')){\n                                _rebuildWidgets($editable.data('qti-container'), $editable);\n                            }\n\n                            $editable.trigger('editordestroyed');\n                            resolve();\n                        });\n\n                        editor.focusManager.blur(true);\n                        editor.destroy();\n                    }));\n                }\n            });\n            return Promise.all(destructTasks);\n        },\n        /**\n         * Get the editor content\n         *\n         * @param {JQuery} $editable\n         */\n        getData : function($editable){\n            var editor = $editable.data('editor');\n            if(editor){\n                return _htmlEncode(editor.getData());\n            }else{\n                throw new Error('no editor attached to the DOM element');\n            }\n        },\n        /**\n         * Allow to set the editor content. Works only with plain text for now.\n         *\n         * @param {JQuery} $editable\n         * @param {String} data\n         */\n        setData : function($editable, data) {\n            var editor = $editable.data('editor');\n            if(editor){\n                if (_.isString(data)) {\n                    editor.setData(_.escape(data));\n                }\n            }else{\n                throw new Error('no editor attached to the DOM element');\n            }\n        },\n        /**\n         * Focus all the editors found in the given container\n         *\n         * @param {JQuery} $editable\n         * @returns {undefined}\n         */\n        focus : function($editable){\n            _find($editable, 'html-editable').each(function(){\n                var editor = $(this).data('editor');\n                if(editor){\n                    _focus(editor);\n                }\n            });\n        }\n    };\n\n    return editorFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014-2017 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/qtiCreator/editor/containerEditor',[\n    'lodash',\n    'jquery',\n    'core/promise',\n    'taoQtiItem/qtiItem/core/Loader',\n    'taoQtiItem/qtiCreator/model/Container',\n    'taoQtiItem/qtiCreator/model/Item',\n    'taoQtiItem/qtiCreator/model/helper/event',\n    'taoQtiItem/qtiCreator/model/qtiClasses',\n    'taoQtiItem/qtiCreator/helper/commonRenderer',\n    'taoQtiItem/qtiCreator/helper/xmlRenderer',\n    'taoQtiItem/qtiItem/helper/simpleParser',\n    'taoQtiItem/qtiCreator/helper/creatorRenderer',\n    'taoQtiItem/qtiCreator/helper/xincludeRenderer',\n    'taoQtiItem/qtiCreator/editor/gridEditor/content',\n    'taoQtiItem/qtiCreator/editor/ckEditor/htmlEditor'\n], function(_, $, Promise, Loader, Container, Item, event, allQtiClasses, commonRenderer, xmlRenderer, simpleParser, creatorRenderer, xincludeRenderer, content, htmlEditor){\n    \"use strict\";\n\n    var _ns = 'containereditor';\n\n    var _defaults = {\n        change : _.noop,\n        markup : '',\n        markupSelector : '',\n        qtiMedia : false\n    };\n\n    event.initElementToWidgetListeners();\n\n    function parser($container){\n\n        //detect math ns :\n        var mathNs = 'm';//for 'http://www.w3.org/1998/Math/MathML'\n\n        //parse qti xml content to build a data object\n        var data = simpleParser.parse($container.clone(), {\n            ns : {\n                math : mathNs\n            }\n        });\n\n        if(data.body){\n            return data.body;\n        }else{\n            throw new Error('invalid content for qti container');\n        }\n    }\n\n    /**\n     * Transform the given dom element into a rich-text editor\n     *\n     * @param {JQuery} $container - the container of the DOM element that is going to editable\n     * @param {Object} [options]\n     * @param {String} [options.markup] - the markup to be use as the initial editor content\n     * @param {String} [options.markupSelector] - the element in $xontainer that holds the html to be used as the initial editor content\n     * @param {Object} [options.related] - define the qti element object this editor is attached too. Very important to edit a picture or math element inside it because prevents leaving the editing state of the related element.\n     * @param {Function} [options.change] - the callback called when the editor content has been modified\n     * @param {String} [options.placeholder] - the placeholder text of the container editor when\n     * @param {Array} [options.toolbar] - the ck toolbar\n     * @param {Boolean} [options.qtiMedia=false] - allow insert media object\n     * @param {Object} [options.areaBroker] - allow to set a custom areaBroker on the renderer\n     * @param {String} [options.removePlugins] - a coma-separated plugin list that should not be loaded\n     * @param {Object} [options.metadata] - some metadata to attach to the root element (ex: { myDataName: 'myDataValue' })\n     * @param {Boolean} [options.resetRenderer] - force resetting the renderer\n     * @param {Boolean} [options.autofocus] - automatically focus the editor\n     * @returns {undefined}\n     */\n    function create($container, options){\n\n        var html, htmls, data, loader;\n\n        options = _.defaults(options || {}, _defaults);\n\n        //assign proper markup\n        if(options.markup){\n            html = options.markup;\n            if(options.markupSelector){\n                htmls = extractHtmlFromMarkup(html, options.markupSelector);\n                html = htmls[0] || '';\n            }\n            $container.html(html);\n        }\n\n        data = parser($container);\n        loader = new Loader().setClassesLocation(allQtiClasses);\n        loader.loadRequiredClasses(data, function(){\n\n            var item,\n                containerEditors,\n                renderer,\n                qtiClasses = ['img', 'object', 'math', 'include', 'printedVariable', '_container', '_tooltip'];\n\n            //create a new container object\n            var container = new Container();\n\n            //tag the new container as statelss, which means that its state is not supposed to change\n            container.data('stateless', true);\n\n            $container.data('container', container);\n\n            //need to attach a container to the item to enable innserElement.remove()\n            //@todo fix this\n            item = new Item().setElement(container);\n            container.setRootElement(item);\n\n            if (options.metadata) {\n                _.each(options.metadata, function (value, name) {\n                    item.data(name, value);\n                });\n            }\n\n            //associate it to the interaction?\n            if(options.related){\n                containerEditors = options.related.data('container-editors') || [];\n                containerEditors.push(container);\n                options.related.data('container-editors', containerEditors);\n            }\n\n            this.loadContainer(container, data);\n\n            //apply common renderer :\n            renderer = creatorRenderer.get(options.resetRenderer, {}, options.areaBroker);\n            renderer.load(function(){\n\n                var baseUrl = this.getOption('baseUrl');\n                container.setRenderer(this);\n                $container.html(container.render());\n                container.postRender();\n\n                //resolve xinclude\n                _.each(container.getComposingElements(), function(element){\n                    if(element.qtiClass === 'include'){\n                        xincludeRenderer.render(element.data('widget'), baseUrl);\n                    }\n                });\n\n                buildContainer($container);\n                buildEditor($container, container, {\n                    placeholder : options.placeholder || undefined,\n                    toolbar : options.toolbar || undefined,\n                    qtiMedia : options.qtiMedia,\n                    highlight : options.highlight,\n                    removePlugins : options.removePlugins || '',\n                    areaBroker : options.areaBroker,\n                    autofocus : options.autofocus || false\n                });\n\n                $container\n                    .off('.' + _ns)\n                    .on(event.getList(_ns + event.getNs() + event.getNsModel()).join(' '), _.throttle(function(){\n                        var editorContent = container.render(xmlRenderer.get());\n                        $container.trigger('containerchange.' + _ns, [editorContent]);\n\n                        if(_.isFunction(options.change)){\n                            options.change(editorContent);\n                        }\n                    }, 600));\n\n                $container.trigger('editorready.containereditor');\n\n            }, qtiClasses);\n\n        });\n\n    }\n\n    function buildContainer($container){\n\n        $container.wrapInner($('<div>', {'class' : 'container-editor', 'data-html-editable' : true}));\n    }\n\n    function cleanup($container){\n        var container = $container.data('container');\n        return new Promise(function (resolve) {\n            if(container){\n                $(document).off('.' + container.serial);\n                commonRenderer.load(['img', 'object', 'math', 'include', '_container', 'printedVariable', '_tooltip'], function(){\n                    $container.html(container.render(this));\n                    resolve();\n                });\n\n                $container.removeData('container');\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * create a false widget that is required in html editor\n     *\n     * @param {JQuery} $editableContainer\n     * @param {Object} container\n     * @param {Object} options\n     * @param {Object} options.areaBroker\n     * @returns {Object} The fake widget object\n     */\n    function createFakeWidget($editableContainer, container, options){\n\n        var widget = {\n            $container : $editableContainer,\n            element : container,\n            changeState : _.noop,\n            getAreaBroker : function getAreaBroker() {\n                return options.areaBroker;\n            }\n        };\n        //associate the widget to the container\n        container.data('widget', widget);\n\n        return widget;\n    }\n\n    function buildEditor($editableContainer, container, options){\n\n        $editableContainer.attr('data-html-editable-container', true);\n\n        if(!htmlEditor.hasEditor($editableContainer)){\n\n            htmlEditor.buildEditor($editableContainer, _.defaults(options || {}, {\n                shieldInnerContent : false,\n                passthroughInnerContent : false,\n                change : content.getChangeCallback(container),\n                data : {\n                    widget : createFakeWidget($editableContainer, container, options),\n                    container : container\n                }\n            }));\n        }\n    }\n\n    function destroy($editableContainer){\n        return htmlEditor.destroyEditor($editableContainer)\n            .then(function() {\n                $editableContainer.removeAttr('data-html-editable-container');\n                return cleanup($editableContainer);\n            });\n    }\n\n    function extractHtmlFromMarkup(markupStr, selector){\n        var $found = $('<div>').html(markupStr).find(selector);\n        var ret = [];\n        $found.each(function(){\n            ret.push($(this).html());\n        });\n        return ret;\n    }\n\n    return {\n        create : create,\n        destroy : destroy\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\n/**\n * Instanciate a Wysiwyg editor to create QTI content.\n *\n * @author Christophe Noël <christophe@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/qtiContentCreator',[\n    'lodash',\n    'jquery',\n    'lib/uuid',\n    'taoQtiItem/qtiCreator/helper/commonRenderer',\n    'taoQtiItem/qtiCreator/editor/containerEditor'\n], function(_, $, uuid, qtiCommonRenderer, containerEditor) {\n    'use strict';\n\n    return {\n        create: function create(creatorContext, $container, options) {\n            var self = this,\n                editorId = uuid(),\n                areaBroker = creatorContext.getAreaBroker(),\n                modelOverseer = creatorContext.getModelOverseer();\n\n            var removePlugins = [\n                    'magicline',\n                    'taoqtiimage',\n                    'taoqtimedia',\n                    'taoqtimaths',\n                    'taoqtiinclude',\n                    'taoqtitable',\n                    'sharedspace' // That Ck instance still use floatingspace to position the toolbar, whereas the sharedspace plugin is used by the Item creator\n                ].join(','),\n\n                toolbar = [\n                    {\n                        name : 'basicstyles',\n                        items : ['Bold', 'Italic', 'Subscript', 'Superscript']\n                    }, {\n                        name : 'insert',\n                        items : ['SpecialChar', 'TaoQtiPrintedVariable']\n                    }, {\n                        name : 'links',\n                        items : ['Link']\n                    },\n                    '/',\n                    {\n                        name : 'styles',\n                        items : ['Format']\n                    }, {\n                        name : 'paragraph',\n                        items : ['NumberedList', 'BulletedList', '-', 'Blockquote', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']\n                    }\n                ];\n\n            qtiCommonRenderer.setContext(areaBroker.getContentCreatorPanelArea());\n\n            containerEditor.create($container, {\n                areaBroker: areaBroker,\n                removePlugins: removePlugins,\n                toolbar: toolbar,\n                metadata: {\n                    getOutcomes: function getOutcomes() {\n                        return modelOverseer.getOutcomesNames();\n                    }\n                },\n                change: options.change || _.noop,\n                resetRenderer: true,\n                autofocus: false\n            });\n\n            // destroying ckInstance on editor close\n            creatorContext.on('creatorclose.' + editorId, function() {\n                self.destroy(creatorContext, $container);\n            });\n\n            $container.data('editorId', editorId);\n        },\n\n        /**\n         * @returns {Promise} - when editor is destroyed\n         */\n        destroy: function destroy(creatorContext, $container) {\n            var editorId = $container.data('editorId');\n            if (editorId) {\n                creatorContext.off('.' + editorId);\n            }\n            return containerEditor.destroy($container);\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/rubricblock',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/dialog/alert',\n    'util/namespace',\n    'taoQtiTest/controller/creator/views/actions',\n    'helpers',\n    'taoQtiTest/controller/creator/encoders/dom2qti',\n    'taoQtiTest/controller/creator/helpers/qtiElement',\n    'taoQtiTest/controller/creator/qtiContentCreator',\n    'ckeditor',\n], function ($, _, __, hider, dialogAlert, namespaceHelper, actions, helpers, Dom2QtiEncoder, qtiElementHelper, qtiContentCreator) {\n    'use strict';\n\n    /**\n     * The rubriclockView setup RB related components and behavior\n     *\n     * @exports taoQtiTest/controller/creator/views/rubricblock\n     */\n    return {\n        /**\n         * Set up a rubric block: init action behaviors. Called for each one.\n         *\n         * @param {Object} creatorContext\n         * @param {Object} rubricModel - the rubric block data\n         * @param {jQueryElement} $rubricBlock - the rubric block to set up\n         */\n        setUp: function setUp(creatorContext, rubricModel, $rubricBlock) {\n            var modelOverseer = creatorContext.getModelOverseer();\n            var areaBroker = creatorContext.getAreaBroker();\n            var $rubricBlockContent = $('.rubricblock-content', $rubricBlock);\n\n            /**\n             * Bind a listener only related to this rubric.\n             * @param {jQuery} $el\n             * @param {String} eventName\n             * @param {Function} cb\n             * @returns {jQuery}\n             */\n            function bindEvent($el, eventName, cb) {\n                eventName = namespaceHelper.namespaceAll(eventName, rubricModel.uid);\n                return $el.off(eventName).on(eventName, cb);\n            }\n\n            /**\n             * Ensures an html content is wrapped by a container tag.\n             * @param {String} html\n             * @returns {String}\n             */\n            function ensureWrap(html) {\n                html = (html || '').trim();\n                if (html.charAt(0) !== '<' || html.charAt(html.length - 1) !== '>') {\n                    html = '<div>' + html + '</div>';\n                }\n                if ($(html).length > 1) {\n                    html = '<div>' + html + '</div>';\n                }\n                return html;\n            }\n\n            /**\n             * Forwards the editor content into the model\n             */\n            function editorToModel(html) {\n                var rubric = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock', 'content');\n                var wrapper = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content');\n                var content = Dom2QtiEncoder.decode(ensureWrap(html));\n\n                if (wrapper) {\n                    wrapper.content = content;\n                } else {\n                    rubric.content = content;\n                }\n            }\n\n            /**\n             * Forwards the model content into the editor\n             */\n            function modelToEditor() {\n                var rubric = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock', 'content') || {};\n                var wrapper = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content');\n                var content = wrapper ? wrapper.content : rubric.content;\n                var html = ensureWrap(Dom2QtiEncoder.encode(content));\n\n                // Destroy any existing CKEditor instance\n                qtiContentCreator.destroy(creatorContext, $rubricBlockContent).then(function() {\n                    // update the editor content\n                    $rubricBlockContent.html(html);\n\n                    // Re-create the Qti-ckEditor instance\n                    qtiContentCreator.create(creatorContext, $rubricBlockContent, {\n                        change: function change(editorContent) {\n                            editorToModel(editorContent);\n                        }\n                    });\n                });\n            }\n\n            /**\n             * Wrap/unwrap the rubric block in a feedback according to the user selection\n             * @param {Object} feedback\n             * @returns {Boolean}\n             */\n            function updateFeedback(feedback) {\n                var activated = feedback && feedback.activated;\n                var wrapper = qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content');\n\n                if (activated) {\n                    // wrap the actual content into a feedbackBlock if needed\n                    if (!wrapper) {\n                        rubricModel.content = [qtiElementHelper.create('div', {\n                            content: [qtiElementHelper.create('feedbackBlock', {\n                                outcomeIdentifier: feedback.outcome,\n                                identifier: feedback.matchValue,\n                                content: rubricModel.content\n                            })]\n                        })];\n                    } else {\n                        wrapper.outcomeIdentifier = feedback.outcome;\n                        wrapper.identifier = feedback.matchValue;\n                    }\n                    modelToEditor();\n                } else {\n                    // remove the feedbackBlock wrapper, just keep the actual content\n                    if (wrapper) {\n                        rubricModel.content = wrapper.content;\n                        modelToEditor();\n                    }\n                }\n\n                return activated;\n            }\n\n            /**\n             * Perform some binding once the property view is created\n             * @private\n             * @param {propView} propView - the view object\n             */\n            function propHandler(propView) {\n                var $view = propView.getView();\n                var $feedbackOutcomeLine = $('.rubric-feedback-outcome', $view);\n                var $feedbackMatchLine = $('.rubric-feedback-match-value', $view);\n                var $feedbackOutcome = $('[name=feedback-outcome]', $view);\n                var $feedbackActivated = $('[name=activated]', $view);\n\n                // toggle the feedback panel\n                function changeFeedback(activated) {\n                    hider.toggle($feedbackOutcomeLine, activated);\n                    hider.toggle($feedbackMatchLine, activated);\n                }\n\n                // should be called when the properties panel is removed\n                function removePropHandler() {\n                    rubricModel.feedback = {};\n                    if (propView !== null) {\n                        propView.destroy();\n                    }\n                }\n\n                // take care of changes in the properties view\n                function changeHandler(e, changedModel) {\n                    if (e.namespace === 'binder' && changedModel['qti-type'] === 'rubricBlock') {\n                        changeFeedback(updateFeedback(changedModel.feedback));\n                    }\n                }\n\n                // update the list of outcomes the feedback can target\n                function updateOutcomes() {\n                    var activated = rubricModel.feedback && rubricModel.feedback.activated;\n                    // build the list of outcomes in a way select2 can understand\n                    var outcomes = _.map(modelOverseer.getOutcomesNames(), function(name) {\n                        return {\n                            id: name,\n                            text: name\n                        };\n                    });\n\n                    // create/update the select field\n                    $feedbackOutcome.select2({\n                        minimumResultsForSearch: -1,\n                        width: '100%',\n                        data: outcomes\n                    });\n\n                    // update the UI to reflect the data\n                    if (!activated) {\n                        $feedbackActivated.removeAttr('checked');\n                    }\n                    changeFeedback(activated);\n                }\n\n                $('[name=type]', $view).select2({\n                    minimumResultsForSearch: -1,\n                    width: '100%'\n                });\n\n                $view.on('change.binder', changeHandler);\n                bindEvent($rubricBlock.parents('.testpart'), 'delete', removePropHandler);\n                bindEvent($rubricBlock.parents('.section'), 'delete', removePropHandler);\n                bindEvent($rubricBlock, 'delete', removePropHandler);\n                bindEvent($rubricBlock, 'outcome-removed', function() {\n                    $feedbackOutcome.val('');\n                    updateOutcomes();\n                });\n                bindEvent($rubricBlock, 'outcome-updated', function() {\n                    updateFeedback(rubricModel.feedback);\n                    updateOutcomes();\n                });\n\n                changeFeedback(rubricModel.feedback);\n                updateOutcomes();\n                rbViews($view);\n            }\n\n            /**\n             * Set up the views select box\n             * @private\n             * @param {jQueryElement} $propContainer - the element container\n             */\n            function rbViews($propContainer) {\n                var $select = $('[name=view]', $propContainer);\n\n                bindEvent($select.select2({'width': '100%'}), \"select2-removed\", function () {\n                    if ($select.select2('val').length === 0) {\n                        $select.select2('val', [1]);\n                    }\n                });\n\n                if ($select.select2('val').length === 0) {\n                    $select.select2('val', [1]);\n                }\n            }\n\n            rubricModel.orderIndex = (rubricModel.index || 0) + 1;\n            rubricModel.uid = _.uniqueId('rb');\n            rubricModel.feedback = {\n                activated: !!qtiElementHelper.lookupElement(rubricModel, 'rubricBlock.div.feedbackBlock', 'content'),\n                outcome: qtiElementHelper.lookupProperty(rubricModel, 'rubricBlock.div.feedbackBlock.outcomeIdentifier', 'content'),\n                matchValue: qtiElementHelper.lookupProperty(rubricModel, 'rubricBlock.div.feedbackBlock.identifier', 'content')\n            };\n\n            modelOverseer\n                .before('scoring-write.' + rubricModel.uid, function() {\n                    var feedbackOutcome = rubricModel.feedback && rubricModel.feedback.outcome;\n                    if (feedbackOutcome && _.indexOf(modelOverseer.getOutcomesNames(), feedbackOutcome) < 0) {\n                        // the targeted outcome has been removed, so remove the feedback\n                        modelOverseer.changedRubricBlock = (modelOverseer.changedRubricBlock || 0) + 1;\n                        rubricModel.feedback.activated = false;\n                        rubricModel.feedback.outcome = '';\n                        updateFeedback(rubricModel.feedback);\n                        $rubricBlock.trigger('outcome-removed');\n                    } else {\n                        // the tageted outcome is still here, just notify the properties panel to update the list\n                        $rubricBlock.trigger('outcome-updated');\n                    }\n                })\n                .on('scoring-write.' + rubricModel.uid, function() {\n                    // will notify the user of any removed feedbacks\n                    if (modelOverseer.changedRubricBlock) {\n                        /** @todo: provide a way to cancel changes */\n                        dialogAlert(__('Some rubric blocks have been updated to reflect the changes in the list of outcomes.'));\n                        modelOverseer.changedRubricBlock = 0;\n                    }\n                });\n\n            actions.properties($rubricBlock, 'rubricblock', rubricModel, propHandler);\n\n            modelToEditor();\n\n            // destroy CK instance on rubric bloc deletion.\n            // todo: find a way to destroy CK upon destroying rubric bloc parent section/part\n            bindEvent($rubricBlock, 'delete', function() {\n                qtiContentCreator.destroy(creatorContext, $rubricBlockContent);\n            });\n\n            $rubricBlockContent.on('editorfocus', function() {\n                // close all properties forms and turn off their related button\n                areaBroker.getPropertyPanelArea().children('.props').hide().trigger('propclose.propview');\n            });\n\n            //change position of CKeditor toolbar on scroll\n            areaBroker.getContentCreatorPanelArea().find('.test-content').on('scroll', function () {\n                CKEDITOR.document.getWindow().fire('scroll');\n            });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n */\ndefine('taoQtiTest/controller/creator/helpers/sectionBlueprints',[\n    'lodash',\n    'i18n',\n    'core/errorHandler'\n], function (_, __, errorHandler){\n\n    'use strict';\n\n    var _ns = '.sectionBlueprint';\n\n\n    /**\n     * Set an array of categories to the section model (affect the childen itemRef)\n     *\n     * @param {object} model\n     * @param {string} blueprint\n     * @returns {undefined}\n     */\n    function setBlueprint(model, blueprint){\n        model.blueprint = blueprint;\n    }\n\n    /**\n     * Get the categories assign to the section model, infered by its interal itemRefs\n     *\n     * @param {string} getUrl\n     * @param {object} model\n     * @returns {object}\n     */\n    function getBlueprint(getUrl, model){\n\n        return $.ajax({\n            url: getUrl,\n            type: 'GET',\n            data: {\n                section: model.identifier\n            },\n            dataType: 'json'\n\n        })\n        .fail(function () {\n            errorHandler.throw(_ns, 'invalid tool config format');\n        });\n\n    }\n\n    return {\n        setBlueprint : setBlueprint,\n        getBlueprint : getBlueprint\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/section',[\n    'jquery',\n    'lodash',\n    'uri',\n    'i18n',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/views/rubricblock',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'taoQtiTest/controller/creator/helpers/categorySelector',\n    'taoQtiTest/controller/creator/helpers/sectionCategory',\n    'taoQtiTest/controller/creator/helpers/sectionBlueprints'\n],\nfunction(\n    $,\n    _,\n    uri,\n    __,\n    actions,\n    itemRefView,\n    rubricBlockView,\n    templates,\n    qtiTestHelper,\n    categorySelectorFactory,\n    sectionCategory,\n    sectionBlueprint\n){\n    'use strict';\n\n    /**\n     * Set up a section: init action behaviors. Called for each section.\n     *\n     * @param {Object} creatorContext\n     * @param {Object} sectionModel - the data model to bind to the test section\n     * @param {Object} partModel - the parent data model to inherit\n     * @param {jQueryElement} $section - the section to set up\n     */\n    function setUp (creatorContext, sectionModel, partModel, $section) {\n\n        var $actionContainer = $('h2', $section);\n        var modelOverseer = creatorContext.getModelOverseer();\n        var config = modelOverseer.getConfig();\n\n        // set item session control to use test part options if section level isn't set\n        if (!sectionModel.itemSessionControl) {\n            sectionModel.itemSessionControl = {};\n        }\n        _.defaults(sectionModel.itemSessionControl, partModel.itemSessionControl);\n\n        if(!_.isEmpty(config.routes.blueprintsById)){\n            sectionModel.hasBlueprint = true;\n        }\n        actions.properties($actionContainer, 'section', sectionModel, propHandler);\n        actions.move($actionContainer, 'sections', 'section');\n        itemRefs();\n        acceptItemRefs();\n        rubricBlocks();\n        addRubricBlock();\n\n        //trigger for the case the section is added an a selection is ongoing\n\n        /**\n         * Perform some binding once the property view is create\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $title;\n            var $view = propView.getView();\n\n            //enable/disable selection\n            var $selectionSwitcher = $('[name=section-enable-selection]', $view);\n            var $selectionSelect = $('[name=section-select]', $view);\n            var $selectionWithRep = $('[name=section-with-replacement]', $view);\n\n            var switchSelection = function switchSelection(){\n                if($selectionSwitcher.prop('checked') === true){\n                    $selectionSelect.incrementer('enable');\n                    $selectionWithRep.removeClass('disabled');\n                } else {\n                    $selectionSelect.incrementer('disable');\n                    $selectionWithRep.addClass('disabled');\n                }\n            };\n            $selectionSwitcher.on('change', switchSelection);\n            $selectionSwitcher.on('change', function updateModel(){\n                if(!$selectionSwitcher.prop('checked')){\n                    $selectionSelect.val(0);\n                    $selectionWithRep.prop('checked', false);\n                    delete sectionModel.selection;\n                }\n            });\n\n            $selectionSwitcher.prop('checked', !!sectionModel.selection).trigger('change');\n\n            //listen for databinder change to update the test part title\n            $title =  $('[data-bind=title]', $section);\n            $view.on('change.binder', function(e){\n                if(e.namespace === 'binder' && sectionModel['qti-type'] === 'assessmentSection'){\n                    $title.text(sectionModel.title);\n                }\n            });\n\n            $section.parents('.testpart').on('deleted.deleter', removePropHandler);\n            $section.on('deleted.deleter', removePropHandler);\n\n            //section level category configuration\n            categoriesProperty($view);\n\n            if(typeof sectionModel.hasBlueprint !== 'undefined'){\n                blueprintProperty($view);\n            }\n\n            function removePropHandler(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            }\n        }\n\n        /**\n         * Set up the item refs that already belongs to the section\n         * @private\n         */\n        function itemRefs(){\n\n            if(!sectionModel.sectionParts){\n                sectionModel.sectionParts = [];\n            }\n            $('.itemref', $section).each(function(){\n                var $itemRef = $(this);\n                var index = $itemRef.data('bind-index');\n                if(!sectionModel.sectionParts[index]){\n                    sectionModel.sectionParts[index] = {};\n                }\n\n                itemRefView.setUp(creatorContext, sectionModel.sectionParts[index], sectionModel, $itemRef);\n                $itemRef.find('.title').text(\n                    config.labels[uri.encode($itemRef.data('uri'))]\n                );\n            });\n        }\n\n        /**\n         * Make the section to accept the selected items\n         * @private\n         * @fires modelOverseer#item-add\n         */\n        function acceptItemRefs(){\n            var $itemsPanel = $('.test-creator-items .item-selection');\n\n            //the item selector trigger a select event\n            $itemsPanel.on('itemselect.creator', function(e, selection){\n\n                var $placeholder = $('.itemref-placeholder', $section);\n                var $placeholders = $('.itemref-placeholder');\n\n                if(_.size(selection) > 0){\n                    $placeholder.show().off('click').on('click', function(){\n\n                        //prepare the item data\n                        var categories,\n                            defaultItemData = {};\n\n                        if(sectionModel.itemSessionControl && !_.isUndefined(sectionModel.itemSessionControl.maxAttempts)){\n\n                            //for a matter of consistency, the itemRef will \"inherit\" the itemSessionControl configuration from its parent section\n                            defaultItemData.itemSessionControl = _.clone(sectionModel.itemSessionControl);\n                        }\n\n                        //the itemRef should also \"inherit\" the categories set at the item level\n                        categories = sectionCategory.getCategories(sectionModel);\n                        defaultItemData.categories = _.clone(categories.propagated) || [];\n\n                        _.forEach(selection, function(item){\n                            var itemData = _.defaults({\n                                href        : item.uri,\n                                label       : item.label,\n                                'qti-type'  : 'assessmentItemRef'\n                            }, defaultItemData);\n\n                            if(_.isArray(item.categories)){\n                                itemData.categories = item.categories.concat(itemData.categories);\n                            }\n\n                            addItemRef($('.itemrefs', $section), null, itemData);\n                        });\n\n                        $itemsPanel.trigger('itemselected.creator');\n\n                        $placeholders.hide().off('click');\n                    });\n                } else {\n                    $placeholders.hide().off('click');\n                }\n            });\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n                .off('add.binder', '#' + $section.attr('id') + ' .itemrefs')\n                .on('add.binder', '#' + $section.attr('id') + ' .itemrefs', function(e, $itemRef){\n                    var index, itemRefModel;\n                    if(e.namespace === 'binder' && $itemRef.hasClass('itemref')){\n                        index = $itemRef.data('bind-index');\n                        itemRefModel = sectionModel.sectionParts[index];\n\n                        //initialize the new item ref\n                        itemRefView.setUp(creatorContext, itemRefModel, sectionModel, $itemRef);\n\n                        /**\n                         * @event modelOverseer#item-add\n                         * @param {Object} itemRefModel\n                         */\n                        modelOverseer.trigger('item-add', itemRefModel);\n                    }\n                });\n        }\n\n        /**\n         * Add a new item ref to the section\n         * @param {jQueryElement} $refList - the element to add the item to\n         * @param {Number} [index] - the position of the item to add\n         * @param {Object} [itemData] - the data to bind to the new item ref\n         */\n        function addItemRef($refList, index, itemData){\n            var $itemRef;\n            var $items = $refList.children('li');\n            index = index || $items.length;\n            itemData.identifier = qtiTestHelper.getIdentifier('item', config.identifiers);\n            itemData.index = index + 1;\n            $itemRef = $(templates.itemref(itemData));\n            if(index > 0){\n                $itemRef.insertAfter($items.eq(index - 1));\n            } else {\n                $itemRef.appendTo($refList);\n            }\n            $refList.trigger('add', [$itemRef, itemData]);\n        }\n\n\n        /**\n         * Set up the rubric blocks that already belongs to the section\n         * @private\n         */\n        function rubricBlocks () {\n            if(!sectionModel.rubricBlocks){\n                sectionModel.rubricBlocks = [];\n            }\n            $('.rubricblock', $section).each(function(){\n                var $rubricBlock = $(this);\n                var index = $rubricBlock.data('bind-index');\n                if(!sectionModel.rubricBlocks[index]){\n                    sectionModel.rubricBlocks[index] = {};\n                }\n\n                rubricBlockView.setUp(creatorContext, sectionModel.rubricBlocks[index], $rubricBlock);\n            });\n\n            //opens the rubric blocks section if they are there.\n            if(sectionModel.rubricBlocks.length > 0){\n                $('.rub-toggler', $section).trigger('click');\n            }\n        }\n\n        /**\n         * Enable to add new rubric block\n         * @private\n         * @fires modelOverseer#rubric-add\n         */\n        function addRubricBlock () {\n\n            $('.rublock-adder', $section).adder({\n                target: $('.rubricblocks', $section),\n                content : templates.rubricblock,\n                templateData : function(cb){\n                    cb({\n                        'qti-type' : 'rubricBlock',\n                        index  : $('.rubricblock', $section).length,\n                        content : [],\n                        views : [1]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document).on('add.binder', '#' + $section.attr('id') + ' .rubricblocks', function(e, $rubricBlock){\n                var index, rubricModel;\n                if(e.namespace === 'binder' && $rubricBlock.hasClass('rubricblock')){\n                    index = $rubricBlock.data('bind-index');\n                    rubricModel = sectionModel.rubricBlocks[index] || {};\n\n                    $('.rubricblock-binding', $rubricBlock).html('<p>&nbsp;</p>');\n                    rubricBlockView.setUp(creatorContext, rubricModel, $rubricBlock);\n\n                    /**\n                     * @event modelOverseer#rubric-add\n                     * @param {Object} rubricModel\n                     */\n                    modelOverseer.trigger('rubric-add', rubricModel);\n                }\n            });\n        }\n\n        /**\n         * Set up the category property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         * @fires modelOverseer#category-change\n         */\n        function categoriesProperty($view){\n            var categories = sectionCategory.getCategories(sectionModel),\n                categorySelector = categorySelectorFactory($view);\n\n            categorySelector.createForm(categories.all);\n            updateFormState(categorySelector);\n\n            $view.on('propopen.propview', function(){\n                updateFormState(categorySelector);\n            });\n\n            categorySelector.on('category-change', function(selected, indeterminate) {\n                sectionCategory.setCategories(sectionModel, selected, indeterminate);\n\n                modelOverseer.trigger('category-change');\n            });\n        }\n\n        function updateFormState(categorySelector) {\n            var categories = sectionCategory.getCategories(sectionModel);\n            categorySelector.updateFormState(categories.propagated, categories.partial);\n        }\n\n        /**\n         * Set up the Blueprint property\n         * @private\n         * @param {jQueryElement} $view - the $view object containing the $select\n         */\n        function blueprintProperty($view){\n            var $select = $('[name=section-blueprint]', $view);\n            $select.select2({\n                ajax:{\n                    url: config.routes.blueprintsById,\n                    dataType: 'json',\n                    delay: 350,\n                    method: 'POST',\n                    data: function (params) {\n                        return {\n                            identifier: params // search term\n                        };\n                    },\n                    results: function (data) {\n                        return data;\n                    }\n                },\n                minimumInputLength: 3,\n                width: '100%',\n                multiple : false,\n                allowClear: true,\n                placeholder: __('Select a blueprint'),\n                formatNoMatches : function(){\n                    return __('Enter a blueprint');\n                },\n                maximumInputLength : 32\n            }).on('change', function(e){\n                setBlueprint(e.val);\n            });\n\n            initBlueprint();\n            $view.on('propopen.propview', function(){\n                initBlueprint();\n            });\n\n            /**\n             * Start the blueprint editing\n             * @private\n             */\n            function initBlueprint(){\n\n                if(typeof sectionModel.blueprint === 'undefined'){\n                    sectionBlueprint\n                        .getBlueprint(config.routes.blueprintByTestSection, sectionModel)\n                        .success(function(data){\n                            if(!_.isEmpty(data)){\n                                if(sectionModel.blueprint !== \"\"){\n                                    sectionModel.blueprint = data.uri;\n                                    $select.select2('data', {id: data.uri, text: data.text});\n                                    $select.trigger('change');\n                                }\n                            }\n                        });\n                }\n            }\n\n            /**\n             * save the categories into the model\n             * @private\n             */\n            function setBlueprint(blueprint){\n                sectionBlueprint.setBlueprint(sectionModel, blueprint);\n            }\n\n        }\n    }\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    function listenActionState (){\n\n        var $sections;\n\n        $('.sections').each(function(){\n            $sections = $('.section', $(this));\n\n            actions.removable($sections, 'h2');\n            actions.movable($sections, 'section', 'h2');\n        });\n\n        $(document)\n            .on('delete', function(e){\n                var $parent;\n                var $target = $(e.target);\n                if($target.hasClass('section')){\n                    $parent = $target.parents('.sections');\n                    actions.disable($parent.find('.section'), 'h2');\n                }\n            })\n            .on('add change undo.deleter deleted.deleter', function(e){\n                var $target = $(e.target);\n                if($target.hasClass('section') || $target.hasClass('sections')){\n                    $sections = $('.section', $target.hasClass('sections') ? $target : $target.parents('.sections'));\n                    actions.removable($sections, 'h2');\n                    actions.movable($sections, 'section', 'h2');\n                }\n            })\n            .on('open.toggler', '.rub-toggler', function(e){\n                if(e.namespace === 'toggler'){\n                    $(this).parents('h2').addClass('active');\n                }\n            })\n            .on('close.toggler', '.rub-toggler', function(e){\n                if(e.namespace === 'toggler'){\n                    $(this).parents('h2').removeClass('active');\n                }\n            });\n    }\n\n    /**\n     * The sectionView setup section related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/section\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/testpart',[\n    'jquery', 'lodash',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/section',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest'],\nfunction($, _, actions, sectionView, templates, qtiTestHelper){\n    'use strict';\n\n    /**\n     * Set up a test part: init action behaviors. Called for each test part.\n     *\n     * @param {Object} creatorContext\n     * @param {Object} partModel - the data model to bind to the test part\n     * @param {jQueryElement} $testPart - the testpart container to set up\n     */\n    function setUp (creatorContext, partModel, $testPart){\n        var $actionContainer = $('h1', $testPart);\n        var modelOverseer = creatorContext.getModelOverseer();\n        var config = modelOverseer.getConfig();\n\n        //run setup methods\n        actions.properties($actionContainer, 'testpart', partModel, propHandler);\n        actions.move($actionContainer, 'testparts', 'testpart');\n        sections();\n        addSection();\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         */\n        function propHandler (propView) {\n\n            var $view = propView.getView();\n\n            //listen for databinder change to update the test part title\n            var $identifier =  $('[data-bind=identifier]', $testPart);\n            $view.on('change.binder', function(e, model){\n                if(e.namespace === 'binder' && model['qti-type'] === 'testPart'){\n                    $identifier.text(model.identifier);\n                }\n            });\n\n            //destroy it when it's testpart is removed\n            $testPart.on('delete', function(){\n                if(propView !== null){\n                    propView.destroy();\n                }\n            });\n        }\n\n        /**\n         * Set up sections that already belongs to the test part\n         * @private\n         */\n        function sections(){\n            if(!partModel.assessmentSections){\n                partModel.assessmentSections = [];\n            }\n            $('.section', $testPart).each(function(){\n                var $section = $(this);\n                var index = $section.data('bind-index');\n                if(!partModel.assessmentSections[index]){\n                    partModel.assessmentSections[index] = {};\n                }\n\n                sectionView.setUp(creatorContext, partModel.assessmentSections[index], partModel, $section);\n            });\n        }\n\n        /**\n         * Enable to add new sections\n         * @private\n         * @fires modelOverseer#section-add\n         */\n        function addSection(){\n            $('.section-adder', $testPart).adder({\n                target: $('.sections', $testPart),\n                content : templates.section,\n                templateData : function(cb){\n\n                    //create a new section model object to be bound to the template\n                    var sectionIndex = $('.section', $testPart).length;\n                    cb({\n                        'qti-type' : 'assessmentSection',\n                        identifier : qtiTestHelper.getIdentifier('assessmentSection',  config.identifiers),\n                        title : 'Section ' + (sectionIndex + 1),\n                        index : 0,\n                        sectionParts : []\n                    });\n                }\n            });\n\n\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n                .off('add.binder', '#' + $testPart.attr('id') + ' .sections')\n                .on ('add.binder', '#' + $testPart.attr('id') + ' .sections', function(e, $section){\n                    var index, sectionModel;\n                    if(e.namespace === 'binder' && $section.hasClass('section')){\n                        index = $section.data('bind-index');\n                        sectionModel = partModel.assessmentSections[index];\n\n                        //initialize the new test part\n                        sectionView.setUp(creatorContext, sectionModel, partModel, $section);\n\n                        /**\n                         * @event modelOverseer#section-add\n                         * @param {Object} sectionModel\n                         */\n                        modelOverseer.trigger('section-add', sectionModel);\n                    }\n                });\n        }\n    }\n\n    /**\n     * Listen for state changes to enable/disable . Called globally.\n     */\n    function listenActionState (){\n\n        var $testParts = $('.testpart');\n\n        actions.removable($testParts, 'h1');\n        actions.movable($testParts, 'testpart', 'h1');\n\n        $('.testparts')\n            .on('delete', function(e){\n                var $target = $(e.target);\n                if($target.hasClass('testpart')){\n                    actions.disable($('.testpart'), 'h1');\n                }\n            })\n            .on('add change undo.deleter deleted.deleter', function(e){\n                var $target = $(e.target);\n\n                if($target.hasClass('testpart') || $target.hasClass('testparts')){\n\n                    //refresh\n                    $testParts = $('.testpart');\n\n                    //check state\n                    actions.removable($testParts, 'h1');\n                    actions.movable($testParts, 'testpart', 'h1');\n                }\n            });\n    }\n\n    /**\n     * The testPartView setup testpart related components and beahvior\n     *\n     * @exports taoQtiTest/controller/creator/views/testpart\n     */\n    return {\n        setUp : setUp,\n        listenActionState: listenActionState\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/views/test',[\n    'jquery', 'lodash', 'i18n', 'ui/hider', 'ui/feedback',\n    'taoQtiTest/controller/creator/views/actions',\n    'taoQtiTest/controller/creator/views/testpart',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest'\n],\nfunction($, _, __, hider, feedback, actions, testPartView, templates, qtiTestHelper){\n    'use strict';\n\n    /**\n     * The TestView setup test related components and behavior\n     *\n     * @exports taoQtiTest/controller/creator/views/test\n     * @param {Object} creatorContext\n     */\n    function testView (creatorContext) {\n        var modelOverseer = creatorContext.getModelOverseer();\n        var testModel = modelOverseer.getModel();\n        var config = modelOverseer.getConfig();\n\n        actions.properties($('.test-creator-test > h1'), 'test', testModel, propHandler);\n        testParts();\n        addTestPart();\n\n        /**\n         * set up the existing test part views\n         * @private\n         */\n        function testParts () {\n            if(!testModel.testParts){\n                testModel.testParts = [];\n            }\n            $('.testpart').each(function(){\n                var $testPart = $(this);\n                var index = $testPart.data('bind-index');\n                if(!testModel.testParts[index]){\n                    testModel.testParts[index] = {};\n                }\n\n                testPartView.setUp(creatorContext, testModel.testParts[index], $testPart);\n            });\n        }\n\n        /**\n         * Perform some binding once the property view is created\n         * @private\n         * @param {propView} propView - the view object\n         * @fires modelOverseer#scoring-change\n         */\n        function propHandler(propView) {\n\n            var $view = propView.getView();\n            var $categoryScoreLine = $('.test-category-score', $view);\n            var $cutScoreLine = $('.test-cut-score', $view);\n            var $weightIdentifierLine = $('.test-weight-identifier', $view);\n            var $descriptions = $('.test-outcome-processing-description', $view);\n            var $generate = $('[data-action=\"generate-outcomes\"]', $view);\n            var $title = $('.test-creator-test > h1 [data-bind=title]');\n            var scoringState = JSON.stringify(testModel.scoring);\n\n            function changeScoring(scoring) {\n                var noOptions = !!scoring && ['none', 'custom'].indexOf(scoring.outcomeProcessing) === -1;\n                var newScoringState = JSON.stringify(scoring);\n\n                hider.toggle($cutScoreLine, !!scoring && scoring.outcomeProcessing === 'cut');\n                hider.toggle($categoryScoreLine, noOptions);\n                hider.toggle($weightIdentifierLine, noOptions);\n                hider.hide($descriptions);\n                hider.show($descriptions.filter('[data-key=\"' + scoring.outcomeProcessing + '\"]'));\n\n                if (scoringState !== newScoringState) {\n                    /**\n                     * @event modelOverseer#scoring-change\n                     * @param {Object} testModel\n                     */\n                    modelOverseer.trigger('scoring-change', testModel);\n                }\n                scoringState = newScoringState;\n            }\n\n            function updateOutcomes() {\n                var $panel = $('.outcome-declarations', $view);\n\n                $panel.html(templates.outcomes(modelOverseer.getOutcomesList()));\n            }\n\n            $('[name=test-outcome-processing]', $view).select2({\n                minimumResultsForSearch: -1,\n                width: '100%'\n            });\n\n            $generate.on('click', function() {\n                $generate.addClass('disabled').attr('disabled', true);\n                modelOverseer\n                    .on('scoring-write.regenerate', function() {\n                        modelOverseer.off('scoring-write.regenerate');\n                        feedback().success(__('The outcomes have been regenerated!')).on('destroy', function() {\n                            $generate.removeClass('disabled').removeAttr('disabled');\n                        });\n                    })\n                    .trigger('scoring-change');\n            });\n\n            $view.on('change.binder', function (e, model) {\n                if (e.namespace === 'binder' && model['qti-type'] === 'assessmentTest') {\n                    changeScoring(model.scoring);\n\n                    //update the test part title when the databinder has changed it\n                    $title.text(model.title);\n                }\n            });\n\n            modelOverseer.on('scoring-write', updateOutcomes);\n\n            changeScoring(testModel.scoring);\n            updateOutcomes();\n        }\n\n        /**\n         * Enable to add new test parts\n         * @private\n         * @fires modelOverseer#part-add\n         */\n        function addTestPart () {\n\n            $('.testpart-adder').adder({\n                target: $('.testparts'),\n                content : templates.testpart,\n                templateData : function(cb){\n\n                    //create an new testPart model object to be bound to the template\n                    var testPartIndex = $('.testpart').length;\n                    cb({\n                        'qti-type' : 'testPart',\n                        identifier : qtiTestHelper.getIdentifier('testPart', config.identifiers),\n                        index  : testPartIndex,\n                        navigationMode : 0,\n                        submissionMode : 0,\n                        assessmentSections : [{\n                            'qti-type' : 'assessmentSection',\n                            identifier : qtiTestHelper.getIdentifier('assessmentSection',  config.identifiers),\n                            title : 'Section 1',\n                            index : 0,\n                            sectionParts : []\n                        }]\n                    });\n                }\n            });\n\n            //we listen the event not from the adder but  from the data binder to be sure the model is up to date\n            $(document)\n                .off('add.binder', '.testparts')\n                .on ('add.binder', '.testparts', function(e, $testPart, added){\n                    var partModel;\n                    if(e.namespace === 'binder' && $testPart.hasClass('testpart')){\n                        partModel = testModel.testParts[added.index];\n\n                        //initialize the new test part\n                        testPartView.setUp(creatorContext, partModel, $testPart);\n\n                        /**\n                         * @event modelOverseer#part-add\n                         * @param {Object} partModel\n                         */\n                        modelOverseer.trigger('part-add', partModel);\n                    }\n                });\n        }\n    }\n\n    return testView;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Basic helper that is intended to generate outcomes processing rules for a test model.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/processingRule',[\n    'lodash',\n    'taoQtiTest/controller/creator/helpers/outcomeValidator',\n    'taoQtiTest/controller/creator/helpers/qtiElement',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/cardinality'\n], function (_, outcomeValidator, qtiElementHelper, baseTypeHelper, cardinalityHelper) {\n    'use strict';\n\n    var processingRuleHelper = {\n        /**\n         * Creates a basic processing rule\n         * @param {String} type\n         * @param {String} [identifier]\n         * @param {Array|Object} [expression]\n         * @returns {Object}\n         * @throws {TypeError} if the type is empty or is not a string\n         * @throws {TypeError} if the identifier is not valid\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        create: function create(type, identifier, expression) {\n            var processingRule = qtiElementHelper.create(type, identifier && validateIdentifier(identifier));\n\n            if (expression) {\n                processingRuleHelper.setExpression(processingRule, expression);\n            }\n\n            return processingRule;\n        },\n\n        /**\n         * Sets an expression to a processing rule\n         * @param {Object} processingRule\n         * @param {Object|Array} expression\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        setExpression: function setExpression(processingRule, expression) {\n            if (processingRule) {\n                if (_.isArray(expression)) {\n                    if (processingRule.expression) {\n                        processingRule.expression = null;\n                    }\n                    processingRule.expressions = validateOutcomeList(expression);\n                } else {\n                    if (processingRule.expressions) {\n                        processingRule.expressions = null;\n                    }\n                    if (expression) {\n                        processingRule.expression = validateOutcome(expression);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Adds an expression to a processing rule\n         * @param {Object} processingRule\n         * @param {Object|Array} expression\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        addExpression: function addExpression(processingRule, expression) {\n            if (processingRule && expression) {\n                if (processingRule.expression) {\n                    processingRule.expressions = forceArray(processingRule.expression);\n                    processingRule.expression = null;\n                }\n\n                if (_.isArray(expression)) {\n                    processingRule.expressions = forceArray(processingRule.expressions).concat(validateOutcomeList(expression));\n                } else {\n                    if (processingRule.expressions) {\n                        processingRule.expressions.push(expression);\n                    } else {\n                        processingRule.expression = validateOutcome(expression);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Creates a `setOutcomeValue` rule\n         * @param {String} identifier\n         * @param {Object|Array} [expression]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         * @throws {TypeError} if the expression does not contain valid QTI elements\n         */\n        setOutcomeValue: function setOutcomeValue(identifier, expression) {\n            return processingRuleHelper.create('setOutcomeValue',  validateIdentifier(identifier), expression);\n        },\n\n        /**\n         * Creates a `gte` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        gte: function gte(left, right) {\n            return binaryOperator('gte', left, right);\n        },\n\n        /**\n         * Creates a `lte` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        lte: function lte(left, right) {\n            return binaryOperator('lte', left, right);\n        },\n\n        /**\n         * Creates a `divide` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        divide: function divide(left, right) {\n            return binaryOperator('divide', left, right);\n        },\n\n        /**\n         * Creates a `sum` rule\n         * @param {Object|Array} terms\n         * @returns {Object}\n         * @throws {TypeError} if the terms are not valid QTI elements\n         */\n        sum: function sum(terms) {\n            var processingRule = processingRuleHelper.create('sum', null, forceArray(terms));\n\n            processingRule.minOperands = 1;\n            processingRule.maxOperands = -1;\n            processingRule.acceptedCardinalities = [cardinalityHelper.SINGLE, cardinalityHelper.MULTIPLE, cardinalityHelper.ORDERED];\n            processingRule.acceptedBaseTypes = [baseTypeHelper.INTEGER, baseTypeHelper.FLOAT];\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `testVariables` rule\n         * @param {String} identifier\n         * @param {String|Number} [type]\n         * @param {String} weightIdentifier\n         * @param {String|String[]} [includeCategories]\n         * @param {String|String[]} [excludeCategories]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         */\n        testVariables: function testVariables(identifier, type, weightIdentifier, includeCategories, excludeCategories) {\n            var processingRule = processingRuleHelper.create('testVariables');\n\n            processingRule.variableIdentifier = validateIdentifier(identifier);\n            processingRule.baseType = baseTypeHelper.getValid(type);\n            addWeightIdentifier(processingRule, weightIdentifier);\n            addSectionIdentifier(processingRule, '');\n            addCategories(processingRule, includeCategories, excludeCategories);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `outcomeMaximum` rule\n         * @param {String} identifier\n         * @param {String} weightIdentifier\n         * @param {String|String[]} [includeCategories]\n         * @param {String|String[]} [excludeCategories]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is empty or is not a string\n         */\n        outcomeMaximum: function outcomeMaximum(identifier, weightIdentifier, includeCategories, excludeCategories) {\n            var processingRule = processingRuleHelper.create('outcomeMaximum');\n\n            processingRule.outcomeIdentifier = validateIdentifier(identifier);\n\n            addWeightIdentifier(processingRule, weightIdentifier);\n            addSectionIdentifier(processingRule, '');\n            addCategories(processingRule, includeCategories, excludeCategories);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `numberPresented` rule\n         * @param {String|String[]} [includeCategories]\n         * @param {String|String[]} [excludeCategories]\n         * @returns {Object}\n         */\n        numberPresented: function numberPresented(includeCategories, excludeCategories) {\n            var processingRule = processingRuleHelper.create('numberPresented');\n\n            addSectionIdentifier(processingRule, '');\n            addCategories(processingRule, includeCategories, excludeCategories);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `baseValue` rule\n         * @param {*} [value]\n         * @param {String|Number} [type]\n         * @returns {Object}\n         */\n        baseValue: function baseValue(value, type) {\n            var processingRule = processingRuleHelper.create('baseValue');\n\n            processingRule.baseType = baseTypeHelper.getValid(type, baseTypeHelper.FLOAT);\n            processingRule.value = baseTypeHelper.getValue(processingRule.baseType, value);\n\n            return processingRule;\n        },\n\n        /**\n         ** Creates a `variable` rule\n         * @param {String} identifier\n         * @param {String} [weightIdentifier]\n         * @returns {Object}\n         * @throws {TypeError} if the identifier is not valid\n         * @throws {TypeError} if the weight identifier is not valid\n         */\n        variable: function variable(identifier, weightIdentifier) {\n            var processingRule = processingRuleHelper.create('variable', validateIdentifier(identifier));\n\n            addWeightIdentifier(processingRule, weightIdentifier);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `match` rule\n         * @param {Object|Array} left - the left operand\n         * @param {Object|Array} right - the right operand\n         * @returns {Object}\n         * @throws {TypeError} if the left and right operands are not valid QTI elements\n         */\n        match: function match(left, right) {\n            return binaryOperator('match', left, right, cardinalityHelper.SAME, cardinalityHelper.SAME);\n        },\n\n        /**\n         * Creates a `isNull` rule\n         * @param {Object|Array} expression - the operand\n         * @returns {Object}\n         * @throws {TypeError} if the operand is not valid QTI element\n         */\n        isNull: function isNull(expression) {\n            return unaryOperator('isNull', expression, baseTypeHelper.ANY, cardinalityHelper.ANY);\n        },\n\n        /**\n         * Creates a `outcomeCondition` rule\n         * @param {Object} outcomeIf\n         * @param {Object} outcomeElse\n         * @returns {Object}\n         * @throws {TypeError} if the outcomeIf and outcomeElse operands are not valid QTI elements\n         */\n        outcomeCondition: function outcomeCondition(outcomeIf, outcomeElse) {\n            var processingRule = processingRuleHelper.create('outcomeCondition');\n\n            if (!outcomeValidator.validateOutcome(outcomeIf, false, 'outcomeIf')) {\n                throw new TypeError('You must provide a valid outcomeIf element!');\n            }\n\n            if (outcomeElse && !outcomeValidator.validateOutcome(outcomeElse, false, 'outcomeElse')) {\n                throw new TypeError('You must provide a valid outcomeElse element!');\n            }\n\n            processingRule.outcomeIf = outcomeIf;\n            processingRule.outcomeElseIfs = [];\n\n            if (outcomeElse) {\n                processingRule.outcomeElse = outcomeElse;\n            }\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `outcomeIf` rule\n         * @param {Object} expression\n         * @param {Object|Object[]} instruction\n         * @returns {Object}\n         * @throws {TypeError} if the expression and instruction operands are not valid QTI elements\n         */\n        outcomeIf: function outcomeIf(expression, instruction) {\n            var processingRule = processingRuleHelper.create('outcomeIf');\n\n            if (!_.isArray(instruction)) {\n                instruction = [instruction];\n            }\n\n            processingRule.expression = validateOutcome(expression);\n            processingRule.outcomeRules = validateOutcomeList(instruction);\n\n            return processingRule;\n        },\n\n        /**\n         * Creates a `outcomeElse` rule\n         * @param {Object|Object[]} instruction\n         * @returns {Object}\n         * @throws {TypeError} if the instruction is not a valid QTI element\n         */\n        outcomeElse: function outcomeElse(instruction) {\n            var processingRule = processingRuleHelper.create('outcomeElse');\n\n            if (!_.isArray(instruction)) {\n                instruction = [instruction];\n            }\n\n            processingRule.outcomeRules = validateOutcomeList(instruction);\n\n            return processingRule;\n        }\n\n    };\n\n    /**\n     * Creates a unary operator rule\n     * @param {String} type - The rule type\n     * @param {Object|Array} expression - The operand\n     * @param {Number|Array} [baseType] - The accepted base type\n     * @param {Number|Array} [cardinality] - The accepted cardinality\n     * @returns {Object}\n     * @throws {TypeError} if the type is empty or is not a string\n     * @throws {TypeError} if the operand is not valid QTI element\n     */\n    function unaryOperator(type, expression, baseType, cardinality) {\n        var processingRule = processingRuleHelper.create(type, null, [expression]);\n\n        processingRule.minOperands = 1;\n        processingRule.maxOperands = 1;\n\n        addTypeAndCardinality(processingRule, baseType, cardinality);\n\n        return processingRule;\n    }\n\n    /**\n     * Creates a binary operator rule\n     * @param {String} type - The rule type\n     * @param {Object|Array} left - The left operand\n     * @param {Object|Array} right - The right operand\n     * @param {Number|Array} [baseType] - The accepted base type\n     * @param {Number|Array} [cardinality] - The accepted cardinality\n     * @returns {Object}\n     * @throws {TypeError} if the type is empty or is not a string\n     * @throws {TypeError} if the left and right operands are not valid QTI elements\n     */\n    function binaryOperator(type, left, right, baseType, cardinality) {\n        var processingRule = processingRuleHelper.create(type, null, [left, right]);\n\n        processingRule.minOperands = 2;\n        processingRule.maxOperands = 2;\n\n        addTypeAndCardinality(processingRule, baseType, cardinality);\n\n        return processingRule;\n    }\n\n    /**\n     * Appends the base type and the cardinality on a processing rule\n     * @param {Object} processingRule\n     * @param {Number|Array} [baseType] - The accepted base type\n     * @param {Number|Array} [cardinality] - The accepted cardinality\n     * @returns {Object}\n     */\n    function addTypeAndCardinality(processingRule, baseType, cardinality) {\n        if (_.isUndefined(baseType)) {\n            baseType = [baseTypeHelper.INTEGER, baseTypeHelper.FLOAT];\n        }\n\n        if (_.isUndefined(cardinality)) {\n            cardinality = [cardinalityHelper.SINGLE];\n        }\n\n        processingRule.acceptedCardinalities = forceArray(cardinality);\n        processingRule.acceptedBaseTypes = forceArray(baseType);\n\n        return processingRule;\n    }\n\n    /**\n     * Extends a processing rule with categories\n     * @param {Object} processingRule\n     * @param {Array|String} [includeCategories]\n     * @param {Array|String} [excludeCategories]\n     * @returns {Object}\n     */\n    function addCategories(processingRule, includeCategories, excludeCategories) {\n        processingRule.includeCategories = forceArray(includeCategories);\n        processingRule.excludeCategories = forceArray(excludeCategories);\n\n        return processingRule;\n    }\n\n    /**\n     * Appends the section identifier on a processing rule\n     * @param {Object} processingRule\n     * @param {String} [sectionIdentifier]\n     * @returns {Object}\n     * @throws {TypeError} if the weight identifier is not valid\n     */\n    function addSectionIdentifier(processingRule, sectionIdentifier) {\n        if (sectionIdentifier) {\n            if (!outcomeValidator.validateIdentifier(sectionIdentifier)) {\n                throw new TypeError('You must provide a valid weight identifier!');\n            }\n            processingRule.sectionIdentifier = sectionIdentifier;\n        } else {\n            processingRule.sectionIdentifier = '';\n        }\n\n        return processingRule;\n    }\n\n    /**\n     * Appends the weight identifier on a processing rule\n     * @param {Object} processingRule\n     * @param {String} [weightIdentifier]\n     * @returns {Object}\n     * @throws {TypeError} if the weight identifier is not valid\n     */\n    function addWeightIdentifier(processingRule, weightIdentifier) {\n        if (weightIdentifier) {\n            if (!outcomeValidator.validateIdentifier(weightIdentifier)) {\n                throw new TypeError('You must provide a valid weight identifier!');\n            }\n            processingRule.weightIdentifier = weightIdentifier;\n        } else {\n            processingRule.weightIdentifier = '';\n        }\n\n        return processingRule;\n    }\n\n    /**\n     * Validates an identifier\n     * @param {String} identifier\n     * @returns {String}\n     * @throws {TypeError} if the identifier is not valid\n     */\n    function validateIdentifier(identifier) {\n        if (!outcomeValidator.validateIdentifier(identifier)) {\n            throw new TypeError('You must provide a valid identifier!');\n        }\n        return identifier;\n    }\n\n    /**\n     * Validates an outcome\n     * @param {Object} outcome\n     * @returns {Object}\n     * @throws {TypeError} if the outcome is not valid\n     */\n    function validateOutcome(outcome) {\n        if (!outcomeValidator.validateOutcome(outcome)) {\n            throw new TypeError('You must provide a valid QTI element!');\n        }\n        return outcome;\n    }\n\n    /**\n     * Validates a list of outcomes\n     * @param {Array} outcomes\n     * @returns {Array}\n     * @throws {TypeError} if an outcome is not valid\n     */\n    function validateOutcomeList(outcomes) {\n        if (!outcomeValidator.validateOutcomes(outcomes)) {\n            throw new TypeError('You must provide a valid list of QTI elements!');\n        }\n        return outcomes;\n    }\n\n    /**\n     * Ensures a value is an array\n     * @param {*} value\n     * @returns {Array}\n     */\n    function forceArray(value) {\n        if (!value) {\n            value = [];\n        }\n        if (!_.isArray(value)) {\n            value = [value];\n        }\n        return value;\n    }\n\n    return processingRuleHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * Basic helper that is intended to manage the score processing declaration in a test model.\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/scoring',[\n    'lodash',\n    'i18n',\n    'core/format',\n    'taoQtiTest/controller/creator/helpers/baseType',\n    'taoQtiTest/controller/creator/helpers/outcome',\n    'taoQtiTest/controller/creator/helpers/processingRule'\n], function (_, __, format, baseTypeHelper, outcomeHelper, processingRuleHelper) {\n    'use strict';\n\n    /**\n     * The default cut score\n     * @todo Move this to a config file\n     * @type {Number}\n     */\n    var defaultCutScore = 0.5;\n\n    /**\n     * The name of the variable containing the score\n     * @type {String}\n     */\n    var defaultScoreIdentifier = 'SCORE';\n\n    /**\n     * The list of supported processing modes, indexed by mode identifier\n     * @type {Object}\n     */\n    var processingModes = {\n        none: {\n            key: 'none',\n            label: __('None'),\n            description: __('No outcome processing. Erase the existing rules, if any.')\n        },\n        custom: {\n            key: 'custom',\n            label: __('Custom'),\n            description: __('Custom outcome processing. No changes will be made to the existing rules.')\n        },\n        total: {\n            key: 'total',\n            label: __('Total score'),\n            description: __('The score will be processed for the entire test. A sum of all SCORE outcomes will be computed, the result will take place in the SCORE_TOTAL outcome.')\n                         + ' ' +\n                         __('If the category option is set, the score will also be processed per categories, and each results will take place in the SCORE_xxx outcome, where xxx is the name of the category.')\n        },\n        cut: {\n            key: 'cut',\n            label: __('Cut score'),\n            description: __('The score will be processed for the entire test. A sum of all SCORE outcomes will be computed and divided by the sum of MAX SCORE, the result will be compared to the cut score (or pass ratio), then the PASS_TOTAL outcome will be set accordingly.')\n                         + ' ' +\n                         __('If the category option is set, the score will also be processed per categories, and each results will take place in the PASS_xxx outcome, where xxx is the name of the category.')\n        }\n    };\n\n    /**\n     * The list of recipes to generate the outcomes\n     * @type {Object}\n     */\n    var outcomesRecipes = {\n        none: {\n            key: 'none',\n            clean: true\n        },\n        custom: {\n            key: 'custom',\n            clean: false\n        },\n        total: {\n            key: 'total',\n            signature: /^SCORE_([a-zA-Z][a-zA-Z0-9_\\.-]*)$/,\n            outcomes: [{\n                writer: 'total',\n                identifier: 'SCORE_TOTAL',\n                weighted: 'SCORE_TOTAL_WEIGHTED',\n                categoryIdentifier: 'SCORE_CATEGORY_%s',\n                categoryWeighted: 'SCORE_CATEGORY_WEIGHTED_%s'\n            }, {\n                writer: 'max',\n                identifier: 'SCORE_TOTAL_MAX',\n                weighted: 'SCORE_TOTAL_MAX_WEIGHTED',\n                categoryIdentifier: 'SCORE_CATEGORY_MAX_%s',\n                categoryWeighted: 'SCORE_CATEGORY_WEIGHTED_MAX_%s'\n            }, {\n                writer: 'ratio',\n                identifier: 'SCORE_RATIO',\n                weighted: 'SCORE_RATIO_WEIGHTED',\n                scoreIdentifier: {\n                    total : 'SCORE_TOTAL',\n                    max : 'SCORE_TOTAL_MAX'\n                },\n                scoreWeighted : {\n                    total : 'SCORE_TOTAL_WEIGHTED',\n                    max : 'SCORE_TOTAL_MAX_WEIGHTED',\n                },\n            }],\n            clean: true\n        },\n        cut: {\n            key: 'cut',\n            include: 'total',\n            signature: /^PASS_([a-zA-Z][a-zA-Z0-9_\\.-]*)$/,\n            outcomes: [{\n                writer: 'cut',\n                identifier: 'PASS_ALL',\n                feedback: 'PASS_ALL_RENDERING',\n                feedbackOk: \"passed\",\n                feedbackFailed: \"not_passed\",\n                categoryIdentifier: 'PASS_CATEGORY_%s',\n                categoryFeedback: 'PASS_CATEGORY_%s_RENDERING'\n            }],\n            clean: true\n        }\n    };\n\n    /**\n     * List of writers that provide the outcomes for each score processing mode.\n     * @type {Object}\n     */\n    var outcomesWriters = {\n        /**\n         * Generates the outcomes that compute the \"Score ratio\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         */\n        ratio : function writerRatio(descriptor, scoring, outcomes){\n            addRatioOutcomes(outcomes, descriptor.identifier, descriptor.scoreIdentifier.total, descriptor.scoreIdentifier.max);\n            if(scoring.weightIdentifier){\n                //add weighted ratio outcome only when the scoring outcome processing rule uses a weight\n                addRatioOutcomes(outcomes, descriptor.weighted, descriptor.scoreWeighted.total, descriptor.scoreWeighted.max);\n            }\n        },\n\n        /**\n         * Generates the outcomes that compute the \"Total score\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         * @param {Array} [categories]\n         */\n        total: function writerTotal(descriptor, scoring, outcomes, categories) {\n            // create the outcome and the rule that process the overall score\n            addTotalScoreOutcomes(outcomes, scoring, descriptor.identifier, false);\n            if (descriptor.weighted && scoring.weightIdentifier) {\n                addTotalScoreOutcomes(outcomes, scoring, descriptor.weighted, true);\n            }\n\n            // create an outcome per categories\n            if (descriptor.categoryIdentifier && categories) {\n                _.forEach(categories, function (category) {\n                    addTotalScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryIdentifier), false, category);\n                    if (descriptor.categoryWeighted && scoring.weightIdentifier) {\n                        addTotalScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryWeighted), true, category);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Generates the outcomes that compute the \"Max score\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         * @param {Array} [categories]\n         */\n        max: function writerMax(descriptor, scoring, outcomes, categories) {\n            // create the outcome and the rule that process the maximum overall score\n            addMaxScoreOutcomes(outcomes, scoring, descriptor.identifier, false);\n            if (descriptor.weighted && scoring.weightIdentifier) {\n                addMaxScoreOutcomes(outcomes, scoring, descriptor.weighted, true);\n            }\n\n            // create an outcome per categories\n            if (descriptor.categoryIdentifier && categories) {\n                _.forEach(categories, function (category) {\n                    addMaxScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryIdentifier), false, category);\n                    if (descriptor.categoryWeighted && scoring.weightIdentifier) {\n                        addMaxScoreOutcomes(outcomes, scoring, formatCategoryOutcome(category, descriptor.categoryWeighted), true, category);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Generates the outcomes that compute the \"Cut score\"\n         * @param {Object} descriptor\n         * @param {Object} scoring\n         * @param {Object} outcomes\n         * @param {Array} [categories]\n         */\n        cut: function writerCut(descriptor, scoring, outcomes, categories) {\n            var cutScore = scoring.cutScore;\n            var totalModeOutcomes = outcomesRecipes.total.outcomes;\n            var total = _.find(totalModeOutcomes, {writer: 'total'});\n            var max = _.find(totalModeOutcomes, {writer: 'max'});\n            var ratio = _.find(totalModeOutcomes, {writer: 'ratio'});\n            var whichOutcome = scoring.weightIdentifier ? 'weighted' : 'identifier';\n            var ratioIdentifier = ratio[whichOutcome];\n\n            // create the outcome and the rule that process the overall score\n            addGlobalCutScoreOutcomes(outcomes, descriptor.identifier, ratioIdentifier, cutScore);\n\n            // create the outcome and the rule that process the score feedback\n            if (descriptor.feedback) {\n                addFeedbackScoreOutcomes(\n                    outcomes,\n                    descriptor.feedback,\n                    descriptor.identifier,\n                    descriptor.feedbackOk,\n                    descriptor.feedbackFailed\n                );\n            }\n\n            // create an outcome per category\n            if (descriptor.categoryIdentifier && categories) {\n                _.forEach(categories, function (category) {\n                    var categoryOutcome = scoring.weightIdentifier ? 'categoryWeighted' : 'categoryIdentifier';\n                    var categoryOutcomeIdentifier = formatCategoryOutcome(category, descriptor.categoryIdentifier);\n                    var categoryScoreIdentifier = formatCategoryOutcome(category, total[categoryOutcome]);\n                    var categoryCountIdentifier = formatCategoryOutcome(category, max[categoryOutcome]);\n\n                    addCutScoreOutcomes(outcomes, categoryOutcomeIdentifier, categoryScoreIdentifier, categoryCountIdentifier, cutScore);\n\n                    if (descriptor.categoryFeedback) {\n                        addFeedbackScoreOutcomes(\n                            outcomes,\n                            formatCategoryOutcome(category, descriptor.categoryFeedback),\n                            categoryOutcomeIdentifier,\n                            descriptor.feedbackOk,\n                            descriptor.feedbackFailed\n                        );\n                    }\n                });\n            }\n\n            return outcomes;\n        }\n    };\n\n    var scoringHelper = {\n        /**\n         * Checks the test model against outcome processing mode.\n         * Initializes the scoring property accordingly.\n         *\n         * @param {modelOverseer} modelOverseer\n         * @throws {TypeError} if the modelOverseer is invalid\n         * @fires modelOverseer#scoring-init\n         * @fires modelOverseer#scoring-generate\n         * @fires modelOverseer#scoring-write\n         */\n        init: function init(modelOverseer) {\n            var model;\n\n            if (!modelOverseer || !_.isFunction(modelOverseer.getModel)) {\n                throw new TypeError(\"You must provide a valid modelOverseer\");\n            }\n\n            model = modelOverseer.getModel();\n\n            // detect the score processing mode and build the descriptor used to manage the UI\n            model.scoring = detectScoring(modelOverseer);\n\n            modelOverseer\n                .on('scoring-change category-change delete', function () {\n                    /**\n                     * Regenerates the outcomes on any significant changes.\n                     * After the outcomes have been generated a write is needed to actually apply the data.\n                     * Other component can listen to this event and eventually prevent the write to happen.\n                     * @event modelOverseer#scoring-generate\n                     * @param {Object} outcomes\n                     */\n                    modelOverseer.trigger('scoring-generate', scoringHelper.generate(modelOverseer));\n                })\n                .on('scoring-generate', function (outcomes) {\n                    outcomeHelper.replaceOutcomes(model, outcomes);\n\n                    /**\n                     * The generated outcome have just been applied on the model.\n                     * @event modelOverseer#scoring-write\n                     * @param {Object} testModel\n                     */\n                    modelOverseer.trigger('scoring-write', model);\n                })\n\n                /**\n                 * @event modelOverseer#scoring-init\n                 * @param {Object} testModel\n                 */\n                .trigger('scoring-init', model);\n        },\n\n        /**\n         * If the processing mode has been set, generates the outcomes that define the scoring.\n         *\n         * @param {modelOverseer} modelOverseer\n         * @returns {Object}\n         * @throws {TypeError} if the modelOverseer is invalid or the processing mode is unknown\n         */\n        generate: function generate(modelOverseer) {\n            var model, scoring, outcomes, outcomeRecipe, recipes, categories;\n\n            if (!modelOverseer || !_.isFunction(modelOverseer.getModel)) {\n                throw new TypeError(\"You must provide a valid modelOverseer\");\n            }\n\n            model = modelOverseer.getModel();\n            scoring = model.scoring;\n            outcomes = getOutcomes(model);\n\n            // write the score processing mode by generating the outcomes variables, but only if the mode has been set\n            if (scoring) {\n                outcomeRecipe = outcomesRecipes[scoring.outcomeProcessing];\n                if (outcomeRecipe) {\n\n                    if (outcomeRecipe.clean) {\n                        // erase the existing rules, they will be replaced by those that are defined here\n                        removeScoring(outcomes);\n                    }\n\n                    // get the recipes that define the outcomes, include sub-recipes if any\n                    recipes = getRecipes(outcomeRecipe);\n\n                    // only get the categories if requested\n                    if (handleCategories(modelOverseer)) {\n                        categories = modelOverseer.getCategories();\n                    }\n\n                    // will generate outcomes based of the defined recipe\n                    _.forEach(recipes, function(recipe) {\n                        var writer = outcomesWriters[recipe.writer];\n                        writer(recipe, scoring, outcomes, categories);\n                    });\n\n                } else {\n                    throw new Error('Unknown score processing mode: ' + scoring.outcomeProcessing);\n                }\n            }\n\n            return outcomes;\n        }\n    };\n\n    /**\n     * Creates an outcome and the rule that process the total score\n     *\n     * @param {Object} model\n     * @param {Object} scoring\n     * @param {String} identifier\n     * @param {Boolean} [weight]\n     * @param {String} [category]\n     */\n    function addTotalScoreOutcomes(model, scoring, identifier, weight, category) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.FLOAT);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.sum(\n                processingRuleHelper.testVariables(scoring.scoreIdentifier, -1, weight && scoring.weightIdentifier, category)\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the maximum score\n     *\n     * @param {Object} model\n     * @param {Object} scoring\n     * @param {String} identifier\n     * @param {Boolean} [weight]\n     * @param {String} [category]\n     */\n    function addMaxScoreOutcomes(model, scoring, identifier, weight, category) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.FLOAT);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.sum(\n                processingRuleHelper.testVariables('MAXSCORE', -1, weight && scoring.weightIdentifier, category)\n            )\n        );\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n    }\n\n    /**\n     * Create an outcome and the rule that process the score ratio\n     *\n     * @param model\n     * @param identifier\n     * @param identifierTotal\n     * @param identifierMax\n     */\n    function addRatioOutcomes(model, identifier, identifierTotal, identifierMax) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.FLOAT);\n        var outcomeCondition = processingRuleHelper.outcomeCondition(\n            processingRuleHelper.outcomeIf(\n                processingRuleHelper.isNull(\n                    processingRuleHelper.variable(identifierMax)\n                ),\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.baseValue(0, baseTypeHelper.FLOAT)\n                )\n            ),\n            processingRuleHelper.outcomeElse(\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.divide(\n                        processingRuleHelper.variable(identifierTotal),\n                        processingRuleHelper.variable(identifierMax)\n                    )\n                )\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome);\n        outcomeHelper.addOutcomeProcessing(model, outcomeCondition);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the cut score by category\n     *\n     * @param {Object} model\n     * @param {String} identifier\n     * @param {String} scoreIdentifier\n     * @param {String} countIdentifier\n     * @param {String|Number} cutScore\n     */\n    function addCutScoreOutcomes(model, identifier, scoreIdentifier, countIdentifier, cutScore) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.BOOLEAN);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.gte(\n                processingRuleHelper.divide(\n                    processingRuleHelper.variable(scoreIdentifier),\n                    processingRuleHelper.variable(countIdentifier)\n                ),\n                processingRuleHelper.baseValue(cutScore, baseTypeHelper.FLOAT)\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the global cut score\n     *\n     * @param {Object} model\n     * @param {String} identifier\n     * @param {String} scoreIdentifier\n     * @param {String} countIdentifier\n     * @param {String|Number} cutScore\n     */\n    function addGlobalCutScoreOutcomes(model, identifier, ratioIdentifier, cutScore) {\n        var outcome = outcomeHelper.createOutcome(identifier, baseTypeHelper.BOOLEAN);\n        var processingRule = processingRuleHelper.setOutcomeValue(identifier,\n            processingRuleHelper.gte(\n                processingRuleHelper.variable(ratioIdentifier),\n                processingRuleHelper.baseValue(cutScore, baseTypeHelper.FLOAT)\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome, processingRule);\n    }\n\n    /**\n     * Creates an outcome and the rule that process the score feedback\n     *\n     * @param {Object} model\n     * @param {String} identifier\n     * @param {String} variable\n     * @param {String} passed\n     * @param {String} notPassed\n     */\n    function addFeedbackScoreOutcomes(model, identifier, variable, passed, notPassed) {\n        var type = baseTypeHelper.IDENTIFIER;\n        var outcome = outcomeHelper.createOutcome(identifier, type);\n        var processingRule = processingRuleHelper.outcomeCondition(\n            processingRuleHelper.outcomeIf(\n                processingRuleHelper.match(\n                    processingRuleHelper.variable(variable),\n                    processingRuleHelper.baseValue(true, baseTypeHelper.BOOLEAN)\n                ),\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.baseValue(passed, type)\n                )\n            ),\n            processingRuleHelper.outcomeElse(\n                processingRuleHelper.setOutcomeValue(identifier,\n                    processingRuleHelper.baseValue(notPassed, type)\n                )\n            )\n        );\n\n        outcomeHelper.addOutcome(model, outcome);\n        outcomeHelper.addOutcomeProcessing(model, processingRule);\n    }\n\n    /**\n     * Formats the identifier of a category outcome\n     * @param {String} category\n     * @param {String} template\n     * @returns {String}\n     */\n    function formatCategoryOutcome(category, template) {\n        return format(template, category.toUpperCase());\n    }\n\n    /**\n     * Checks whether an identifier belongs to a particular recipe\n     * @param {String} identifier\n     * @param {Object} recipe\n     * @param {Boolean} [onlyCategories]\n     * @returns {Boolean}\n     */\n    function belongToRecipe(identifier, recipe, onlyCategories) {\n        var match = false;\n        if (recipe.signature && recipe.signature.test(identifier)) {\n            match = true;\n            if (onlyCategories) {\n                _.forEach(recipe.outcomes, function(outcome) {\n                    if (outcome.identifier === identifier ||\n                        (outcome.weighted && outcome.weighted === identifier) ||\n                        (outcome.feedback && outcome.feedback === identifier)) {\n                        match = false;\n                        return false;\n                    }\n                });\n            }\n        }\n        return match;\n    }\n\n    /**\n     * Checks if all the outcomes are related to the recipe\n     * @param {Object} outcomeRecipe\n     * @param {Array} outcomes\n     * @param {Array} categories\n     * @returns {Boolean}\n     */\n    function matchRecipe(outcomeRecipe, outcomes, categories) {\n        var signatures = getSignatures(outcomeRecipe);\n        var match = true;\n\n        // check the outcomes definitions against the provided identifier\n        function matchRecipeOutcome(recipe, identifier) {\n            var outcomeMatch = false;\n\n            // first level, the signature must match\n            if (recipe.signature && recipe.signature.test(identifier)) {\n                _.forEach(recipe.outcomes, function(outcome) {\n                    // second level, the main identifier must match\n                    if (outcome.identifier !== identifier &&\n                        (!outcome.weighted || (outcome.weighted && outcome.weighted !== identifier)) &&\n                        (!outcome.feedback || (outcome.feedback && outcome.feedback !== identifier))) {\n\n                        if (categories) {\n                            // third level, a category must match\n                            _.forEach(categories, function(category) {\n                                if (outcome.categoryIdentifier &&\n                                    identifier === formatCategoryOutcome(category, outcome.categoryIdentifier)) {\n                                    outcomeMatch = true;\n                                } else if (outcome.categoryWeighted &&\n                                    identifier === formatCategoryOutcome(category, outcome.categoryWeighted)) {\n                                    outcomeMatch = true;\n                                } else if (outcome.categoryFeedback &&\n                                    identifier === formatCategoryOutcome(category, outcome.categoryFeedback)) {\n                                    outcomeMatch = true;\n                                }\n                                // found something?\n                                if (outcomeMatch) {\n                                    return false;\n                                }\n                            });\n                        }\n                    } else {\n                        outcomeMatch = true;\n                    }\n\n                    // found something?\n                    if (outcomeMatch) {\n                        return false;\n                    }\n                });\n            }\n\n            if (!outcomeMatch && recipe.include) {\n                outcomeMatch = matchRecipeOutcome(outcomesRecipes[recipe.include], identifier);\n            }\n\n            return outcomeMatch;\n        }\n\n        // only check the outcomes that are related to the scoring mode\n        _.forEach(outcomes, function(identifier) {\n            var signatureMatch = false;\n            _.forEach(signatures, function(signature) {\n                if (signature.test(identifier)) {\n                    signatureMatch = true;\n                    return false;\n                }\n            });\n\n            if (signatureMatch) {\n                match = matchRecipeOutcome(outcomeRecipe, identifier);\n\n                if (!match) {\n                    return false;\n                }\n            }\n        });\n\n        return match;\n    }\n\n    /**\n     * Gets all the outcomes signatures related to a scoring mode\n     * @param {Object} recipe\n     * @returns {Array}\n     */\n    function getSignatures(recipe) {\n        var signatures = [];\n\n        // list the signatures for each processing mode, taking care of includes\n        while(recipe) {\n            if (recipe.signature) {\n                signatures.push(recipe.signature);\n            }\n            recipe = recipe.include && outcomesRecipes[recipe.include];\n        }\n\n        return signatures;\n    }\n\n    /**\n     * Gets all the outcomes recipes related to a scoring mode\n     * @param {Object} recipe\n     * @returns {Array}\n     */\n    function getRecipes(recipe) {\n        var descriptors = [];\n\n        // get the recipes that define the outcomes, include sub-recipes if any\n        while(recipe) {\n            if (recipe.outcomes) {\n                descriptors = [].concat(recipe.outcomes, descriptors);\n            }\n            recipe = recipe.include && outcomesRecipes[recipe.include];\n        }\n\n        return descriptors;\n    }\n\n    /**\n     * Checks if an outcome is related to the outcomes recipe,\n     * then returns the recipe descriptor.\n     * @param {Object|String} outcome\n     * @returns {Object}\n     */\n    function getOutcomesRecipe(outcome) {\n        var identifier = outcomeHelper.getOutcomeIdentifier(outcome);\n        var mode = null;\n        _.forEach(outcomesRecipes, function (processingRecipe) {\n            if (belongToRecipe(identifier, processingRecipe)) {\n                mode = processingRecipe;\n                return false;\n            }\n        });\n        return mode;\n    }\n\n    /**\n     * Gets the score processing modes from a list of outcomes\n     * @param {Array} outcomes\n     * @returns {Array}\n     */\n    function listScoringModes(outcomes) {\n        var modes = {};\n        _.forEach(outcomes, function (outcome) {\n            var recipe = getOutcomesRecipe(outcome);\n            if (recipe) {\n                modes[recipe.key] = true;\n            }\n        });\n        return _.keys(modes);\n    }\n\n    /**\n     * Checks whether the categories have to be taken into account\n     * @param {modelOverseer} modelOverseer\n     * @returns {Boolean}\n     */\n    function handleCategories(modelOverseer) {\n        var model = modelOverseer.getModel();\n        return !!(model.scoring && model.scoring.categoryScore);\n    }\n\n    /**\n     * Checks if the test model contains outcomes for categories\n     * @param {Object} model\n     * @returns {Boolean}\n     */\n    function hasCategoryOutcome(model) {\n        var categoryOutcomes = false;\n        _.forEach(outcomeHelper.getOutcomeDeclarations(model), function (outcomeDeclaration) {\n            var identifier = outcomeHelper.getOutcomeIdentifier(outcomeDeclaration);\n            _.forEach(outcomesRecipes, function (processingRecipe) {\n                if (belongToRecipe(identifier, processingRecipe, true)) {\n                    categoryOutcomes = true;\n                    return false;\n                }\n            });\n        });\n        return categoryOutcomes;\n    }\n\n    /**\n     * Gets the defined cut score from the outcome rules\n     * @param {Object} model\n     * @returns {Number}\n     */\n    function getCutScore(model) {\n        var values = _(outcomeHelper.getOutcomeProcessingRules(model)).map(function (outcome) {\n            return outcomeHelper.getProcessingRuleProperty(outcome, 'setOutcomeValue.gte.baseValue.value');\n        }).compact().uniq().value();\n        if (_.isEmpty(values)) {\n            values = [defaultCutScore];\n        }\n        return Math.max(0, _.max(values));\n    }\n\n    /**\n     * Gets the defined weight identifier from the outcome rules\n     * @param {Object} model\n     * @returns {String}\n     */\n    function getWeightIdentifier(model) {\n        var values = [];\n        outcomeHelper.eachOutcomeProcessingRuleExpressions(model, function (processingRule) {\n            if (processingRule['qti-type'] === 'testVariables' && processingRule.weightIdentifier) {\n                values.push(processingRule.weightIdentifier);\n            }\n        });\n        values = _(values).compact().uniq().value();\n\n        return values.length ? values[0] : '';\n    }\n\n    /**\n     * Detects the outcome processing mode for the scoring\n     * @param {modelOverseer} modelOverseer\n     * @returns {String}\n     */\n    function getOutcomeProcessing(modelOverseer) {\n        var model = modelOverseer.getModel();\n        var outcomeDeclarations = outcomeHelper.getOutcomeDeclarations(model);\n        var outcomeRules = outcomeHelper.getOutcomeProcessingRules(model);\n\n        // walk through each outcome declaration, and tries to identify the score processing mode\n        var declarations = listScoringModes(outcomeDeclarations);\n        var processing = listScoringModes(outcomeRules);\n        var diff = _.difference(declarations, processing);\n        var count = _.size(declarations);\n        var included;\n\n        // default fallback, applied when several modes are detected at the same time\n        var outcomeProcessing = 'custom';\n\n        // set the score processing mode with respect to the found outcomes\n        if (count === _.size(processing)) {\n            if (!count) {\n                // no mode detected, set the mode to none\n                outcomeProcessing = 'none';\n            } else if (_.isEmpty(diff)) {\n                if (count > 1) {\n                    // several modes detected, try to reduce the list by detecting includes\n                    included = [];\n                    _.forEach(declarations, function(mode) {\n                        if (outcomesRecipes[mode] && outcomesRecipes[mode].include) {\n                            included.push(outcomesRecipes[mode].include);\n                        }\n                    });\n                    processing = _.difference(processing, included);\n                    count = _.size(processing);\n                }\n\n                if (count === 1) {\n                    // single mode detected, keep the last got key\n                    outcomeProcessing = processing[0];\n\n                    // check if all outcomes are strictly related to the detected mode\n                    if (!matchRecipe(outcomesRecipes[outcomeProcessing], modelOverseer.getOutcomesNames(), modelOverseer.getCategories())) {\n                        outcomeProcessing = 'custom';\n                    }\n                }\n            }\n        }\n\n        return outcomeProcessing;\n    }\n\n    /**\n     * Detects the score processing mode and builds the descriptor used to manage the UI.\n     * @param {modelOverseer} modelOverseer\n     * @returns {Object}\n     */\n    function detectScoring(modelOverseer) {\n        var model = modelOverseer.getModel();\n        return {\n            modes: processingModes,\n            scoreIdentifier: defaultScoreIdentifier,\n            weightIdentifier: getWeightIdentifier(model),\n            cutScore: getCutScore(model),\n            categoryScore: hasCategoryOutcome(model),\n            outcomeProcessing: getOutcomeProcessing(modelOverseer)\n        };\n    }\n\n    /**\n     * Removes all scoring outcomes\n     * @param {Object} model\n     */\n    function removeScoring(model) {\n        var scoringOutcomes = _.indexBy(outcomeHelper.listOutcomes(model, getOutcomesRecipe), function (outcome) {\n            return outcome;\n        });\n\n        outcomeHelper.removeOutcomes(model, function(outcome) {\n            var match = false;\n\n            function browseExpressions(processingRule) {\n                if (_.isArray(processingRule)) {\n                    _.forEach(processingRule, browseExpressions);\n                } else if (processingRule) {\n                    if (scoringOutcomes[outcomeHelper.getOutcomeIdentifier(processingRule)]) {\n                        match = true;\n                    }\n\n                    if (!match && processingRule.expression) {\n                        browseExpressions(processingRule.expression);\n                    }\n                    if (!match && processingRule.expressions) {\n                        browseExpressions(processingRule.expressions);\n                    }\n                    if (!match && processingRule.outcomeRules) {\n                        browseExpressions(processingRule.outcomeRules);\n                    }\n                    if (!match && processingRule.outcomeIf) {\n                        browseExpressions(processingRule.outcomeIf);\n                    }\n                    if (!match && processingRule.outcomeElse) {\n                        browseExpressions(processingRule.outcomeElse);\n                    }\n                }\n            }\n\n            if (outcome['qti-type'] === 'outcomeCondition') {\n                browseExpressions(outcome);\n            } else {\n                match = !!scoringOutcomes[outcomeHelper.getOutcomeIdentifier(outcome)];\n            }\n            return match;\n        });\n    }\n\n    /**\n     * Gets a copy of the list of outcomes, provides the same structure as the model\n     * @param {Object} model\n     * @returns {Object}\n     */\n    function getOutcomes(model) {\n        return {\n            outcomeDeclarations: [].concat(outcomeHelper.getOutcomeDeclarations(model)),\n            outcomeProcessing: {\n                outcomeRules: [].concat(outcomeHelper.getOutcomeProcessingRules(model))\n            }\n        };\n    }\n\n    return scoringHelper;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('taoQtiTest/controller/creator/creator',[\n    'module',\n    'jquery',\n    'lodash',\n    'helpers',\n    'i18n',\n    'ui/feedback',\n    'core/databindcontroller',\n    'taoQtiTest/controller/creator/qtiTestCreator',\n    'taoQtiTest/controller/creator/views/item',\n    'taoQtiTest/controller/creator/views/test',\n    'taoQtiTest/controller/creator/views/testpart',\n    'taoQtiTest/controller/creator/views/section',\n    'taoQtiTest/controller/creator/views/itemref',\n    'taoQtiTest/controller/creator/encoders/dom2qti',\n    'taoQtiTest/controller/creator/templates/index',\n    'taoQtiTest/controller/creator/helpers/qtiTest',\n    'taoQtiTest/controller/creator/helpers/scoring',\n    'taoQtiTest/controller/creator/helpers/categorySelector',\n    'core/validator/validators'\n], function(\n    module,\n    $,\n    _,\n    helpers,\n    __,\n    feedback,\n    DataBindController,\n    qtiTestCreatorFactory,\n    itemView,\n    testView,\n    testPartView,\n    sectionView,\n    itemrefView,\n    Dom2QtiEncoder,\n    templates,\n    qtiTestHelper,\n    scoringHelper,\n    categorySelector,\n    validators\n    ){\n\n    'use strict';\n\n    /**\n     * The test creator controller is the main entry point\n     * and orchestrates data retrieval and view/components loading.\n     * @exports creator/controller\n     */\n    var Controller = {\n\n        routes : {},\n\n        identifiers: [],\n\n         /**\n          * Start the controller, main entry method.\n          * @public\n          * @param {Object} options\n          * @param {Object} options.labels - the list of item's labels to give to the ItemView\n          * @param {Object} options.routes - action's urls\n          * @param {Object} options.categoriesPresets - predefined category that can be set at the item or section level\n          */\n        start : function(options){\n            var self = this;\n            var $container = $('#test-creator');\n            var $saver = $('#saver');\n            var binder, binderOptions, modelOverseer;\n            var creatorContext;\n\n            self.identifiers = [];\n\n            options = _.merge(module.config(), options || {});\n            options.routes = options.routes || {};\n            options.labels = options.labels || {};\n            options.categoriesPresets = options.categoriesPresets || {};\n\n            categorySelector.setPresets(options.categoriesPresets);\n\n            //back button\n            $('#authoringBack').on('click', function(e){\n                e.preventDefault();\n                if (creatorContext) {\n                    creatorContext.trigger('creatorclose');\n                }\n                window.history.back();\n            });\n\n            //set up the ItemView, give it a configured loadItems ref\n            itemView($('.test-creator-items .item-selection', $container));\n\n            // forwards some binder events to the model overseer\n            $container.on('change.binder delete.binder', function (e, model) {\n                if (e.namespace === 'binder' && model && modelOverseer) {\n                    modelOverseer.trigger(e.type, model);\n                }\n            });\n\n            //Data Binding options\n            binderOptions = _.merge(options.routes, {\n                filters : {\n                    'isItemRef' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentItemRef');\n                    },\n                    'isSection' : function(value){\n                        return qtiTestHelper.filterQtiType(value, 'assessmentSection');\n                    }\n                },\n                encoders : {\n                    'dom2qti' : Dom2QtiEncoder\n                },\n                templates : templates,\n                beforeSave : function(model){\n                    //ensure the qti-type is present\n                    qtiTestHelper.addMissingQtiType(model);\n\n                    //apply consolidation rules\n                    qtiTestHelper.consolidateModel(model);\n\n                    //validate the model\n                    try {\n                        qtiTestHelper.validateModel(model);\n                    } catch(err) {\n                        $saver.attr('disabled', false).removeClass('disabled');\n                        feedback().error(__('The test has not been saved.') + ' ' + err);\n                        return false;\n                    }\n                    return true;\n                }\n            });\n\n            //set up the databinder\n            binder = DataBindController\n                .takeControl($container, binderOptions)\n                .get(function(model){\n                    //extract ids\n                    self.identifiers = qtiTestHelper.extractIdentifiers(model);\n\n                    creatorContext = qtiTestCreatorFactory($container, {\n                        uri : options.uri,\n                        identifiers : self.identifiers,\n                        labels : options.labels,\n                        routes : options.routes\n                    });\n                    creatorContext.setTestModel(model);\n                    modelOverseer = creatorContext.getModelOverseer();\n\n                    //detect the scoring mode\n                    scoringHelper.init(modelOverseer);\n\n                    //register validators\n                    validators.register('idFormat', qtiTestHelper.idFormatValidator());\n                    validators.register('testIdFormat', qtiTestHelper.testidFormatValidator());\n                    validators.register('testIdAvailable', qtiTestHelper.idAvailableValidator(self.identifiers), true);\n\n                    //once model is loaded, we set up the test view\n                    testView(creatorContext);\n\n                    //listen for changes to update available actions\n                    testPartView.listenActionState();\n                    sectionView.listenActionState();\n                    itemrefView.listenActionState();\n                    itemrefView.resize();\n\n                    $(window)\n                        .off('resize.qti-test-creator')\n                        .on('resize.qti-test-creator', function(){\n                            itemrefView.resize();\n                        });\n                });\n\n            //the save button triggers binder's save action.\n            $saver.on('click', function(event){\n                event.preventDefault();\n\n                if(!$saver.hasClass('disabled')){\n                    $saver.attr('disabled', true).addClass('disabled');\n                    binder.save(function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n\n                        feedback().success(__('Test Saved'));\n\n                    }, function(){\n\n                        $saver.attr('disabled', false).removeClass('disabled');\n                    });\n                }\n            });\n        }\n    };\n\n    return Controller;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/controller/creator/helpers/ckConfigurator',['ui/ckeditor/ckConfigurator', 'mathJax'], function(ckConfigurator) {\n    'use strict';\n\n    /**\n     * Generate a configuration object for CKEDITOR\n     *\n     * @param editor instance of ckeditor\n     * @param toolbarType block | inline | flow | qtiBlock | qtiInline | qtiFlow | reset to get back to normal\n     * @param {Object} [options] - is based on the CKEDITOR config object with some additional sugar\n     *        Note that it's here you need to add parameters for the resource manager.\n     *        Some options are not covered in http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     * @param [options.dtdOverrides] - @see dtdOverrides which pre-defines them\n     * @param {Object} [options.positionedPlugins] - @see ckConfig.positionedPlugins\n     * @param {Boolean} [options.qtiImage] - enables the qtiImage plugin\n     * @param {Boolean} [options.qtiInclude] - enables the qtiInclude plugin\n     * @param {Boolean} [options.underline] - enables the underline plugin\n     * @param {Boolean} [options.mathJax] - enables the mathJax plugin\n     *\n     * @see http://docs.ckeditor.com/#!/api/CKEDITOR.config\n     */\n    var getConfig = function(editor, toolbarType, options){\n        options = options || {};\n\n        options.underline = true;\n\n        return ckConfigurator.getConfig(editor, toolbarType, options);\n    };\n\n    return {\n        getConfig : getConfig\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n *\n */\n\n/**\n * This module allows adding extra buttons in the action bar of the test runner\n *\n */\ndefine('taoQtiTest/testRunner/actionBarHook',[\n    'jquery',\n    'lodash',\n    'core/errorHandler',\n    'core/promise'\n], function ($, _, errorHandler, Promise) {\n\n    'use strict';\n\n    /**\n     * Events namespace\n     * @type {String}\n     * @private\n     */\n    var _ns = '.actionBarHook';\n\n    /**\n     * We need to access the root document to listen for some events\n     * @type {jQuery}\n     * @private\n     */\n    var $doc = $(document);\n\n    /**\n     * List of loaded and visible hooks\n     * @type {Object}\n     * @private\n     */\n    var tools = {};\n\n    /**\n     * Flag set to true when the item is loaded\n     * @type {Boolean}\n     * @private\n     */\n    var itemIsLoaded = false;\n\n    // catch the item loaded event\n    $doc.off(_ns).on('serviceloaded' + _ns, function() {\n        itemIsLoaded = true;\n        _.forEach(tools, function(tool) {\n            triggerItemLoaded(tool);\n        });\n    });\n\n    /**\n     * Check that the toolConfig is correct\n     *\n     * @param {Object} toolconfig\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Array} [toolconfig.items] - an optional list of menu items\n     * @returns {Boolean}\n     */\n    function isValidConfig(toolconfig) {\n        return !!(_.isObject(toolconfig) && toolconfig.hook);\n    }\n\n    /**\n     * Triggers the itemLoaded event inside the provided actionBar hook\n     * @param {Object} tool\n     */\n    function triggerItemLoaded(tool) {\n        if (tool && tool.itemLoaded) {\n            tool.itemLoaded();\n        }\n    }\n\n    /**\n     * Init a test runner button from its config\n     *\n     * @param {String} id\n     * @param {Object|String} toolconfig\n     * @param {String} toolconfig.hook - the amd module to be loaded to initialize the button\n     * @param {String} [toolconfig.label] - the label to be displayed in the button\n     * @param {String} [toolconfig.icon] - the icon to be displayed in the button\n     * @param {String} [toolconfig.title] - the title to be displayed in the button\n     * @param {Array} [toolconfig.items] - an optional list of menu items\n     * @param {Object} testContext - the complete state of the test\n     * @param {Object} testRunner - the test runner instance\n     * @fires ready.actionBarHook when the hook has been initialized\n     * @returns {Promise}\n     */\n    function initQtiTool($toolsContainer, id, toolconfig, testContext, testRunner) {\n\n        // the tool is always initialized before the item is loaded, so we can safely false the flag\n        itemIsLoaded = false;\n        tools[id] = null;\n\n        if (_.isString(toolconfig)) {\n            toolconfig = {\n                hook: toolconfig\n            };\n        }\n\n        return new Promise(function(resolve) {\n            if (isValidConfig(toolconfig)) {\n\n                require([toolconfig.hook], function (hook) {\n\n                    var $button;\n                    var $existingBtn;\n\n                    if (isValidHook(hook)) {\n                        //init the control\n                        hook.init(id, toolconfig, testContext, testRunner);\n\n                        //if an instance of the tool is already attached, remove it:\n                        $existingBtn = $toolsContainer.children('[data-control=\"' + id + '\"]');\n                        if ($existingBtn.length) {\n                            hook.clear($existingBtn);\n                            $existingBtn.remove();\n                        }\n\n                        //check if the tool is to be available\n                        if (hook.isVisible()) {\n                            //keep access to the tool\n                            tools[id] = hook;\n\n                            // renders the button from the config\n                            $button = hook.render();\n\n                            //only attach the button to the dom when everything is ready\n                            _appendInOrder($toolsContainer, $button);\n\n                            //ready !\n                            $button.trigger('ready' + _ns, [hook]);\n\n                            //fires the itemLoaded event if the item has already been loaded\n                            if (itemIsLoaded) {\n                                triggerItemLoaded(hook);\n                            }\n                        }\n\n                        resolve(hook);\n                    } else {\n                        errorHandler.throw(_ns, 'invalid hook format');\n                        resolve(null);\n                    }\n\n                }, function (e) {\n                    errorHandler.throw(_ns, 'the hook amd module cannot be found');\n                    resolve(null);\n                });\n\n            } else {\n                errorHandler.throw(_ns, 'invalid tool config format');\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Append a dom element $button to a $container in a specific order\n     * The orders are provided by data-order attribute set to the $button\n     *\n     * @param {JQuery} $container\n     * @param {JQuery} $button\n     */\n    function _appendInOrder($container, $button) {\n\n        var $after, $before;\n        var order = $button.data('order');\n\n        if ('last' === order) {\n\n            $container.append($button);\n\n        } else if ('first' === order) {\n\n            $container.prepend($button);\n\n        } else {\n\n            order = _.parseInt(order);\n            if (!_.isNaN(order)) {\n\n                $container.children('.action').each(function () {\n\n                    var $btn = $(this),\n                        _order = $btn.data('order');\n\n                    if ('last' === _order) {\n\n                        $before = $btn;\n                        $after = null;\n\n                    } else if ('first' === _order) {\n\n                        $before = null;\n                        $after = $btn;\n\n                    } else {\n\n                        _order = _.parseInt(_order);\n\n                        if (_.isNaN(_order) || _order > order) {\n                            $before = $btn;\n                            $after = null;\n                            //stops here because $container children returns the dom elements in the dom order\n                            return false;\n                        } else if (_order === order) {\n                            $after = $btn;\n                        } else if (_order < order) {\n                            $after = $btn;\n                            $before = null;\n                        }\n\n                    }\n\n                });\n\n                if ($after) {\n                    $after.after($button);\n                } else if ($before) {\n                    $before.before($button);\n                } else {\n                    $container.append($button);\n                }\n\n            } else {\n                //unordered buttons are append at the end (including when order equals 0)\n                $container.append($button);\n            }\n        }\n    }\n\n    /**\n     * Check if the hook object is valid\n     *\n     * @param {Object} hook\n     * @param {Function} hook.init\n     * @param {Function} hook.clear\n     * @param {Function} hook.isVisible\n     * @returns {Boolean}\n     */\n    function isValidHook(hook) {\n        return (_.isObject(hook) && _(['init', 'render', 'clear', 'isVisible']).reduce(function (result, method) {\n            return result && _.isFunction(hook[method]);\n        }, true));\n    }\n\n    return {\n        isValid: isValidConfig,\n        initQtiTool: initQtiTool\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/actionBarTools',[\n    'jquery',\n    'lodash',\n    'core/eventifier',\n    'core/promise',\n    'taoQtiTest/testRunner/actionBarHook'\n], function ($, _, eventifier, Promise, actionBarHook) {\n    'use strict';\n\n    /**\n     * The list of registered actionBar tools\n     * @type {Object}\n     */\n    var registeredQtiTools;\n\n    /**\n     * The list of actionBar tools instances\n     * @type {Object}\n     */\n    var qtiTools;\n\n    /**\n     * Manages the actionBar tools\n     * @type {Object}\n     */\n    var actionBarTools = {\n        /**\n         * Registers the actionBar tools\n         * @param {Object} tools\n         */\n        register : function register(tools) {\n            var registerTools = tools || {};\n\n            /**\n             * @event actionBarTools#beforeregister\n             * @param {Object} tools\n             * @param {actionBarTools} this\n             */\n            this.trigger('beforeregister', registerTools, this);\n\n            registeredQtiTools = registerTools;\n\n            /**\n             * @event actionBarTools#afterregister\n             * @param {Object} tools\n             * @param {actionBarTools} this\n             */\n            this.trigger('afterregister', registerTools, this);\n        },\n\n        /**\n         * Gets the list of registered tools\n         * @returns {Object}\n         */\n        getRegisteredTools : function getRegisteredTools() {\n            return registeredQtiTools || {};\n        },\n\n        /**\n         * Gets a particular tool config\n         * @param {String} id\n         * @returns {Object}\n         */\n        getRegistered : function getRegistered(id) {\n            return registeredQtiTools && registeredQtiTools[id];\n        },\n\n        /**\n         * Checks if a particular tool is registered\n         * @param {String} id\n         * @returns {Boolean}\n         */\n        isRegistered : function isRegistered(id) {\n            return !!(registeredQtiTools && registeredQtiTools[id]);\n        },\n\n        /**\n         * Gets a particular tool\n         * @param {String} id\n         * @returns {Object}\n         */\n        get : function get(id) {\n            return qtiTools && qtiTools[id];\n        },\n\n        /**\n         * Gets the list of tools instances\n         * @returns {Array}\n         */\n        list : function list() {\n            return _.values(qtiTools || {});\n        },\n\n        /**\n         * Renders the actionBar\n         * @param {String|jQuery|HTMLElement} container - The container in which renders the tools\n         * @param {Object} testContext - The assessment test context\n         * @param {Object} testRunner - The assessment test runner\n         * @param {Function} [callback] - An optional callback fired when all tools have been rendered\n         */\n        render : function render(container, testContext, testRunner, callback) {\n            var self = this;\n            var $container = $(container);\n            var promises = [];\n\n            /**\n             * @event actionBarTools#beforerender\n             * @param {jQuery} $container\n             * @param {Object} testContext\n             * @param {Object} testRunner\n             * @param {actionBarTools} this\n             */\n            this.trigger('beforerender', $container, testContext, testRunner, this);\n\n            _.forIn(this.getRegisteredTools(), function(toolconfig, id){\n                promises.push(actionBarHook.initQtiTool($container, id, toolconfig, testContext, testRunner));\n            });\n\n            Promise.all(promises).then(function(values) {\n                var tools = [];\n                qtiTools = {};\n\n                _.forEach(values, function(tool) {\n                    if (tool) {\n                        tools.push(tool);\n                        qtiTools[tool.getId()] = tool;\n                    }\n                });\n\n                if (_.isFunction(callback)) {\n                    callback.call(self, tools, $container, testContext, testRunner, self);\n                }\n\n                /**\n                 * @event actionBarTools#afterrender\n                 * @param {Array} tools\n                 * @param {jQuery} $container\n                 * @param {Object} testContext\n                 * @param {Object} testRunner\n                 * @param {actionBarTools} this\n                 */\n                self.trigger('afterrender', tools, $container, testContext, testRunner, self);\n            });\n        }\n    };\n\n    return eventifier(actionBarTools);\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigator', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"        <aside class=\\\"test-sidebar test-sidebar-\";\n  if (helper = helpers.region) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.region); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" flex-container-navi qti-navigator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hidden), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\">\\n            <div class=\\\"qti-navigator-collapsible\\\">\\n                <span class=\\\"qti-navigator-collapse icon icon-left\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Collapse the review panel\", options) : helperMissing.call(depth0, \"__\", \"Collapse the review panel\", options)))\n    + \"\\\"></span>\\n                <span class=\\\"qti-navigator-expand icon icon-right\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Expand the review panel\", options) : helperMissing.call(depth0, \"__\", \"Expand the review panel\", options)))\n    + \"\\\"></span>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-info collapsible\\\">\\n                <span class=\\\"qti-navigator-label\\\">\\n                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Test status\", options) : helperMissing.call(depth0, \"__\", \"Test status\", options)))\n    + \"</span>\\n                    <span class=\\\"icon-up\\\"></span>\\n                    <span class=\\\"icon-down\\\"></span>\\n                </span>\\n                <ul class=\\\"collapsible-panel plain\\\">\\n                    <li class=\\\"qti-navigator-viewed\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed items\", options) : helperMissing.call(depth0, \"__\", \"Viewed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-viewed\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Viewed\", options) : helperMissing.call(depth0, \"__\", \"Viewed\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-answered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Completed items\", options) : helperMissing.call(depth0, \"__\", \"Completed items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-answered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Answered\", options) : helperMissing.call(depth0, \"__\", \"Answered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-unanswered\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Unanswered items\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-unanswered\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Unanswered\", options) : helperMissing.call(depth0, \"__\", \"Unanswered\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-flagged\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Items marked for later review\", options) : helperMissing.call(depth0, \"__\", \"Items marked for later review\", options)))\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\">\\n                            <span class=\\\"qti-navigator-icon icon-flagged\\\"></span>\\n                            <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Flagged\", options) : helperMissing.call(depth0, \"__\", \"Flagged\", options)))\n    + \"</span>\\n                            <span class=\\\"qti-navigator-counter\\\">-/-</span>\\n                        </span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"qti-navigator-filters\\\">\\n                <ul class=\\\"plain clearfix\\\">\\n                    <li class=\\\"qti-navigator-filter active\\\" data-mode=\\\"all\\\">\\n                        <span title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Reset filters\", options) : helperMissing.call(depth0, \"__\", \"Reset filters\", options)))\n    + \"\\\" class=\\\"qti-navigator-tab\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"All\", options) : helperMissing.call(depth0, \"__\", \"All\", options)))\n    + \"</span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"unanswered\\\">\\n                        <span class=\\\"icon-unanswered qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the unanswered items\", options) : helperMissing.call(depth0, \"__\", \"Only display the unanswered items\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                    <li class=\\\"qti-navigator-filter\\\" data-mode=\\\"flagged\\\">\\n                        <span class=\\\"icon-flagged qti-navigator-tab\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Only display the items marked for review\", options) : helperMissing.call(depth0, \"__\", \"Only display the items marked for review\", options)))\n    + \"\\\"></span>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <nav class=\\\"qti-navigator-tree\\\">\\n            </nav>\\n\\n            <div id=\\\"qti-navigator-linear\\\" class=\\\"qti-navigator-linear\\\">\\n                <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                <p class=\\\"qti-navigator-message\\\">\\n                    \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                </p>\\n            </div>\\n        </aside>\\n\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoQtiTest/testRunner/tpl/navigatorTree', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, self=this, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"qti-navigator-part collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                            <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                            <span class=\\\"icon-up\\\"></span>\\n                            <span class=\\\"icon-down\\\"></span>\\n                        </span>\\n                        \";\n  stack1 = helpers['if'].call(depth0, ((stack1 = (depth0 && depth0.sections)),stack1 == null || stack1 === false ? stack1 : stack1.length), {hash:{},inverse:self.program(29, program29, data),fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                    </li>\\n                    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"active\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"collapsed\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                        <ul class=\\\"qti-navigator-sections collapsible-panel plain\\\">\\n                            \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                        </ul>\\n                        \";\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                            <li class=\\\"qti-navigator-section collapsible \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                <span class=\\\"qti-navigator-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                                    <span class=\\\"qti-navigator-counter\\\">\";\n  if (helper = helpers.answered) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.answered); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\"\n    + escapeExpression(((stack1 = ((stack1 = (depth0 && depth0.items)),stack1 == null || stack1 === false ? stack1 : stack1.length)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                </span>\\n                                <ul class=\\\"qti-navigator-items collapsible-panel plain\\\">\\n                                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                                </ul>\\n                            </li>\\n                            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                                    <li class=\\\"qti-navigator-item\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-id=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                        <span class=\\\"qti-navigator-label truncate\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                                            <span class=\\\"qti-navigator-icon icon-\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.flagged), {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></span>\\n                                            <span class=\\\"qti-navigator-number\\\">\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"</span>\\n                                            \";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n                                        </span>\\n                                    </li>\\n                                    \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \" flagged\";\n  }\n\nfunction program13(depth0,data) {\n  \n  \n  return \" answered\";\n  }\n\nfunction program15(depth0,data) {\n  \n  \n  return \" viewed\";\n  }\n\nfunction program17(depth0,data) {\n  \n  \n  return \" unseen\";\n  }\n\nfunction program19(depth0,data) {\n  \n  \n  return \"flagged\";\n  }\n\nfunction program21(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.answered), {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program22(depth0,data) {\n  \n  \n  return \"answered\";\n  }\n\nfunction program24(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.viewed), {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program25(depth0,data) {\n  \n  \n  return \"viewed\";\n  }\n\nfunction program27(depth0,data) {\n  \n  \n  return \"unseen\";\n  }\n\nfunction program29(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\n                        <div class=\\\"qti-navigator-linear-part collapsible-panel\\\">\\n                            <span class=\\\"icon icon-info\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\\"></span>\\n                            <p class=\\\"qti-navigator-message\\\">\\n                                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In this part of the test navigation is not allowed.\", options) : helperMissing.call(depth0, \"__\", \"In this part of the test navigation is not allowed.\", options)))\n    + \"\\n                            </p>\\n                            <p class=\\\"qti-navigator-actions\\\">\\n                                <button class=\\\"btn-info small\\\" data-id=\\\"\";\n  if (helper = helpers.itemId) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.itemId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"\\\">\\n                                    <span class=\\\"qti-navigator-text\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Start Test-part\", options) : helperMissing.call(depth0, \"__\", \"Start Test-part\", options)))\n    + \"</span>\\n                                    <span class=\\\"icon-play r\\\"></span>\\n                                </button>\\n                            </p>\\n                        </div>\\n                        \";\n  return buffer;\n  }\n\n  buffer += \"                <ul class=\\\"qti-navigator-parts plain\\\">\\n                    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/testReview',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoQtiTest/testRunner/tpl/navigator',\n    'tpl!taoQtiTest/testRunner/tpl/navigatorTree',\n    'util/capitalize'\n], function ($, _, __, navigatorTpl, navigatorTreeTpl, capitalize) {\n    'use strict';\n\n    /**\n     * List of CSS classes\n     * @type {Object}\n     * @private\n     */\n    var _cssCls = {\n        active : 'active',\n        collapsed : 'collapsed',\n        collapsible : 'collapsible',\n        hidden : 'hidden',\n        disabled : 'disabled',\n        flagged : 'flagged',\n        answered : 'answered',\n        viewed : 'viewed',\n        unseen : 'unseen',\n        icon : 'qti-navigator-icon',\n        scope : {\n            test : 'scope-test',\n            testPart : 'scope-test-part',\n            testSection : 'scope-test-section'\n        }\n    };\n\n    /**\n     * List of common CSS selectors\n     * @type {Object}\n     * @private\n     */\n    var _selectors = {\n        component : '.qti-navigator',\n        filterBar : '.qti-navigator-filters',\n        tree : '.qti-navigator-tree',\n        collapseHandle : '.qti-navigator-collapsible',\n        linearState : '.qti-navigator-linear',\n        infoAnswered : '.qti-navigator-answered .qti-navigator-counter',\n        infoViewed : '.qti-navigator-viewed .qti-navigator-counter',\n        infoUnanswered : '.qti-navigator-unanswered .qti-navigator-counter',\n        infoFlagged : '.qti-navigator-flagged .qti-navigator-counter',\n        infoPanel : '.qti-navigator-info',\n        infoPanelLabels : '.qti-navigator-info > .qti-navigator-label',\n        parts : '.qti-navigator-part',\n        partLabels : '.qti-navigator-part > .qti-navigator-label',\n        sections : '.qti-navigator-section',\n        sectionLabels : '.qti-navigator-section > .qti-navigator-label',\n        items : '.qti-navigator-item',\n        itemLabels : '.qti-navigator-item > .qti-navigator-label',\n        itemIcons : '.qti-navigator-item > .qti-navigator-icon',\n        icons : '.qti-navigator-icon',\n        linearStart : '.qti-navigator-linear-part button',\n        counters : '.qti-navigator-counter',\n        actives : '.active',\n        collapsible : '.collapsible',\n        collapsiblePanels : '.collapsible-panel',\n        unseen : '.unseen',\n        answered : '.answered',\n        flagged : '.flagged',\n        notFlagged : ':not(.flagged)',\n        notAnswered : ':not(.answered)',\n        hidden : '.hidden'\n    };\n\n    /**\n     * Maps the filter mode to filter criteria.\n     * Each filter criteria is a CSS selector used to find and mask the items to be discarded by the filter.\n     * @type {Object}\n     * @private\n     */\n    var _filterMap = {\n        all : \"\",\n        unanswered : _selectors.answered,\n        flagged : _selectors.notFlagged,\n        answered : _selectors.notAnswered,\n        filtered : _selectors.hidden\n    };\n\n    /**\n     * Maps of config options translated from the context object to the local options\n     * @type {Object}\n     * @private\n     */\n    var _optionsMap = {\n        'reviewScope' : 'reviewScope',\n        'reviewPreventsUnseen' : 'preventsUnseen',\n        'canCollapse' : 'canCollapse'\n    };\n\n    /**\n     * Maps the handled review scopes\n     * @type {Object}\n     * @private\n     */\n    var _reviewScopes = {\n        test : 'test',\n        testPart : 'testPart',\n        testSection : 'testSection'\n    };\n\n    /**\n     * Provides a test review manager\n     * @type {Object}\n     */\n    var testReview = {\n        /**\n         * Initializes the component\n         * @param {String|jQuery|HTMLElement} element The element on which install the component\n         * @param {Object} [options] A list of extra options\n         * @param {String} [options.region] The region on which put the component: left or right\n         * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\n         * the whole test, the current test part or the current test section)\n         * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n         * @returns {testReview}\n         */\n        init: function init(element, options) {\n            var initOptions = _.isObject(options) && options || {};\n            var putOnRight = 'right' === initOptions.region;\n            var insertMethod = putOnRight ? 'append' : 'prepend';\n\n            this.options = initOptions;\n            this.disabled = false;\n            this.hidden = !!initOptions.hidden;\n            this.currentFilter = 'all';\n\n            // clean the DOM if the init method is called after initialisation\n            if (this.$component) {\n                this.$component.remove();\n            }\n\n            // build the component structure and inject it into the DOM\n            this.$container = $(element);\n            insertMethod = this.$container[insertMethod];\n            if (insertMethod) {\n                insertMethod.call(this.$container, navigatorTpl({\n                    region: putOnRight ? 'right' : 'left',\n                    hidden: this.hidden\n                }));\n            } else {\n                throw new Error(\"Unable to inject the component structure into the DOM\");\n            }\n\n            // install the component behaviour\n            this._loadDOM();\n            this._initEvents();\n            this._updateDisplayOptions();\n\n            return this;\n        },\n\n        /**\n         * Links the component to the underlying DOM elements\n         * @private\n         */\n        _loadDOM: function() {\n            this.$component = this.$container.find(_selectors.component);\n\n            // access to info panel displaying counters\n            this.$infoAnswered = this.$component.find(_selectors.infoAnswered);\n            this.$infoViewed = this.$component.find(_selectors.infoViewed);\n            this.$infoUnanswered = this.$component.find(_selectors.infoUnanswered);\n            this.$infoFlagged = this.$component.find(_selectors.infoFlagged);\n\n            // access to filter switches\n            this.$filterBar = this.$component.find(_selectors.filterBar);\n            this.$filters = this.$filterBar.find('li');\n\n            // access to the tree of parts/sections/items\n            this.$tree = this.$component.find(_selectors.tree);\n\n            // access to the panel displayed when a linear part is reached\n            this.$linearState = this.$component.find(_selectors.linearState);\n        },\n\n        /**\n         * Installs the event handlers on the underlying DOM elements\n         * @private\n         */\n        _initEvents: function() {\n            var self = this;\n\n            // click on the collapse handle: collapse/expand the review panel\n            this.$component.on('click' + _selectors.component, _selectors.collapseHandle, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                self.$component.toggleClass(_cssCls.collapsed);\n                if (self.$component.hasClass(_cssCls.collapsed)) {\n                    self._openSelected();\n                }\n            });\n\n            // click on the info panel title: toggle the related panel\n            this.$component.on('click' + _selectors.component, _selectors.infoPanelLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.infoPanel);\n                self._togglePanel($panel, _selectors.infoPanel);\n            });\n\n            // click on a part title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.partLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.parts);\n                var open = self._togglePanel($panel, _selectors.parts);\n\n                if (open) {\n                    if ($panel.hasClass(_cssCls.active)) {\n                        self._openSelected();\n                    } else {\n                        self._openOnly($panel.find(_selectors.sections).first(), $panel);\n                    }\n                }\n            });\n\n            // click on a section title: toggle the related panel\n            this.$tree.on('click' + _selectors.component, _selectors.sectionLabels, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $panel = $(this).closest(_selectors.sections);\n\n                self._togglePanel($panel, _selectors.sections);\n            });\n\n            // click on an item: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.itemLabels, function(event) {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $item = $(this).closest(_selectors.items);\n                var $target;\n\n                if (!$item.hasClass(_cssCls.disabled)) {\n                    $target = $(event.target);\n                    if ($target.is(_selectors.icons) && !self.$component.hasClass(_cssCls.collapsed)) {\n                        if (!$item.hasClass(_cssCls.unseen)) {\n                            self._mark($item);\n                        }\n                    } else {\n                        self._select($item);\n                        self._jump($item);\n                    }\n                }\n            });\n\n            // click on the start button inside a linear part: jump to the position\n            this.$tree.on('click' + _selectors.component, _selectors.linearStart, function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n\n                if (!$btn.hasClass(_cssCls.disabled)) {\n                    $btn.addClass(_cssCls.disabled);\n                    self._jump($btn);\n                }\n            });\n\n            // click on a filter button\n            this.$filterBar.on('click' + _selectors.component, 'li', function() {\n                if (self.disabled) {\n                    return;\n                }\n\n                var $btn = $(this);\n                var mode = $btn.data('mode');\n\n                self.$filters.removeClass(_cssCls.active);\n                self.$component.removeClass(_cssCls.collapsed);\n                $btn.addClass(_cssCls.active);\n\n                self._filter(mode);\n            });\n        },\n\n        /**\n         * Filters the items by a criteria\n         * @param {String} criteria\n         * @private\n         */\n        _filter: function(criteria) {\n            var $items = this.$tree.find(_selectors.items).removeClass(_cssCls.hidden);\n            var filter = _filterMap[criteria];\n            if (filter) {\n                $items.filter(filter).addClass(_cssCls.hidden);\n            }\n            this._updateSectionCounters(!!filter);\n            this.currentFilter = criteria;\n        },\n\n        /**\n         * Selects an item\n         * @param {String|jQuery} position The item's position\n         * @param {Boolean} [open] Forces the tree to be opened on the selected item\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _select: function(position, open) {\n            // find the item to select and extract its hierarchy\n            var selected = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            if (open) {\n                this._openOnly(hierarchy);\n            }\n\n            // select the item\n            this.$tree.find(_selectors.actives).removeClass(_cssCls.active);\n            hierarchy.add(selected).addClass(_cssCls.active);\n            return selected;\n        },\n\n        /**\n         * Opens the tree on the selected item only\n         * @returns {jQuery} Returns the selected item\n         * @private\n         */\n        _openSelected: function() {\n            // find the selected item and extract its hierarchy\n            var selected = this.$tree.find(_selectors.items + _selectors.actives);\n            var hierarchy = selected.parentsUntil(this.$tree);\n\n            // collapse the full tree and open only the hierarchy of the selected item\n            this._openOnly(hierarchy);\n\n            return selected;\n        },\n\n        /**\n         * Collapses the full tree and opens only the provided branch\n         * @param {jQuery} opened The element to be opened\n         * @param {jQuery} [root] The root element from which collapse the panels\n         * @private\n         */\n        _openOnly: function(opened, root) {\n            (root || this.$tree).find(_selectors.collapsible).addClass(_cssCls.collapsed);\n            opened.removeClass(_cssCls.collapsed);\n        },\n\n        /**\n         * Toggles a panel\n         * @param {jQuery} panel The panel to toggle\n         * @param {String} [collapseSelector] Selector of panels to collapse\n         * @returns {Boolean} Returns `true` if the panel just expanded now\n         */\n        _togglePanel: function(panel, collapseSelector) {\n            var collapsed = panel.hasClass(_cssCls.collapsed);\n\n            if (collapseSelector) {\n                this.$tree.find(collapseSelector).addClass(_cssCls.collapsed);\n            }\n\n            if (collapsed) {\n                panel.removeClass(_cssCls.collapsed);\n            } else {\n                panel.addClass(_cssCls.collapsed);\n            }\n            return collapsed;\n        },\n\n        /**\n         * Sets the icon of a particular item\n         * @param {jQuery} $item\n         * @param {String} icon\n         * @private\n         */\n        _setItemIcon: function($item, icon) {\n            $item.find(_selectors.icons).attr('class', _cssCls.icon + ' icon-' + icon);\n        },\n\n        /**\n         * Sets the icon of a particular item according to its state\n         * @param {jQuery} $item\n         * @private\n         */\n        _adjustItemIcon: function($item) {\n            var icon = null;\n            var defaultIcon = _cssCls.unseen;\n            var iconCls = [\n                _cssCls.flagged,\n                _cssCls.answered,\n                _cssCls.viewed\n            ];\n\n            _.forEach(iconCls, function(cls) {\n                if ($item.hasClass(cls)) {\n                    icon = cls;\n                    return false;\n                }\n            });\n\n            this._setItemIcon($item, icon || defaultIcon);\n        },\n\n        /**\n         * Toggle the marked state of an item\n         * @param {jQuery} $item\n         * @param {Boolean} [flag]\n         * @private\n         */\n        _toggleFlag: function($item, flag) {\n            $item.toggleClass(_cssCls.flagged, flag);\n            this._adjustItemIcon($item);\n        },\n\n        /**\n         * Marks an item for later review\n         * @param {jQuery} $item\n         * @private\n         */\n        _mark: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n            var flag = !$item.hasClass(_cssCls.flagged);\n\n            this._toggleFlag($item);\n\n            /**\n             * A storage of the flag is required\n             * @event testReview#mark\n             * @param {Boolean} flag - Tells whether the item is marked for review or not\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('mark', [flag, itemPosition, itemId]);\n        },\n\n        /**\n         * Jumps to an item\n         * @param {jQuery} $item\n         * @private\n         */\n        _jump: function($item) {\n            var itemId = $item.data('id');\n            var itemPosition = $item.data('position');\n\n            /**\n             * A jump to a particular item is required\n             * @event testReview#jump\n             * @param {Number} position - The item position on which jump\n             * @param {String} itemId - The identifier of the target item\n             * @param {testReview} testReview - The client testReview component\n             */\n            this.trigger('jump', [itemPosition, itemId]);\n        },\n\n        /**\n         * Updates the sections related items counters\n         * @param {Boolean} filtered\n         */\n        _updateSectionCounters: function(filtered) {\n            var self = this;\n            var filter = _filterMap[filtered ? 'filtered' : 'answered'];\n            this.$tree.find(_selectors.sections).each(function() {\n                var $section = $(this);\n                var $items = $section.find(_selectors.items);\n                var $filtered = $items.filter(filter);\n                var total = $items.length;\n                var nb = total - $filtered.length;\n                self._writeCount($section.find(_selectors.counters), nb, total);\n            });\n        },\n\n        /**\n         * Updates the display according to options\n         * @private\n         */\n        _updateDisplayOptions: function() {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test';\n            var scopeClass = _cssCls.scope[reviewScope];\n            var $root = this.$component;\n            _.forEach(_cssCls.scope, function(cls) {\n                $root.removeClass(cls);\n            });\n            if (scopeClass) {\n                $root.addClass(scopeClass);\n            }\n            $root.toggleClass(_cssCls.collapsible, this.options.canCollapse);\n        },\n\n        /**\n         * Updates the local options from the provided context\n         * @param {Object} testContext The progression context\n         * @private\n         */\n        _updateOptions: function(testContext) {\n            var options = this.options;\n            _.forEach(_optionsMap, function(optionKey, contextKey) {\n                if (undefined !== testContext[contextKey]) {\n                    options[optionKey] = testContext[contextKey];\n                }\n            });\n        },\n\n        /**\n         * Updates the info panel\n         */\n        _updateInfos: function() {\n            var progression = this.progression,\n                unanswered = Number(progression.total) - Number(progression.answered);\n\n            // update the info panel\n            this._writeCount(this.$infoAnswered, progression.answered, progression.total);\n            this._writeCount(this.$infoUnanswered, unanswered, progression.total);\n            this._writeCount(this.$infoViewed, progression.viewed, progression.total);\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\n        },\n\n        /**\n         * Updates a counter\n         * @param {jQuery} $place\n         * @param {Number} count\n         * @param {Number} total\n         * @private\n         */\n        _writeCount: function($place, count, total) {\n            $place.text(count + '/' + total);\n        },\n\n        /**\n         * Gets the progression stats for the whole test\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTest: function(testContext) {\n            return {\n                total : testContext.numberItems || 0,\n                answered : testContext.numberCompleted || 0,\n                viewed : testContext.numberPresented || 0,\n                flagged : testContext.numberFlagged || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test part\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestPart: function(testContext) {\n            return {\n                total : testContext.numberItemsPart || 0,\n                answered : testContext.numberCompletedPart || 0,\n                viewed : testContext.numberPresentedPart || 0,\n                flagged : testContext.numberFlaggedPart || 0\n            };\n        },\n\n        /**\n         * Gets the progression stats for the current test section\n         * @param {Object} testContext The progression context\n         * @returns {{total: (Number), answered: (Number), viewed: (Number), flagged: (Number)}}\n         * @private\n         */\n        _getProgressionOfTestSection: function(testContext) {\n            return {\n                total : testContext.numberItemsSection || 0,\n                answered : testContext.numberCompletedSection || 0,\n                viewed : testContext.numberPresentedSection || 0,\n                flagged : testContext.numberFlaggedSection || 0\n            };\n        },\n\n        /**\n         * Updates the navigation tre\n         * @param {Object} testContext The progression context\n         */\n        _updateTree: function(testContext) {\n            var navigatorMap = testContext.navigatorMap;\n            var reviewScope = this.options.reviewScope;\n            var reviewScopePart = reviewScope === 'testPart';\n            var reviewScopeSection = reviewScope === 'testSection';\n            var _partsFilter = function(part) {\n                if (reviewScopeSection && part.sections) {\n                    part.sections = _.filter(part.sections, _partsFilter);\n                }\n                return part.active;\n            };\n\n            // rebuild the tree\n            if (navigatorMap) {\n                if (reviewScopePart || reviewScopeSection) {\n                    // display only the current section\n                    navigatorMap = _.filter(navigatorMap, _partsFilter);\n                }\n\n                this.$filterBar.show();\n                this.$linearState.hide();\n                this.$tree.html(navigatorTreeTpl({\n                    parts: navigatorMap\n                }));\n\n                if (this.options.preventsUnseen) {\n                    // disables all unseen items to prevent the test taker has access to.\n                    this.$tree.find(_selectors.unseen).addClass(_cssCls.disabled);\n                }\n            } else {\n                this.$filterBar.hide();\n                this.$linearState.show();\n                this.$tree.empty();\n            }\n\n            // apply again the current filter\n            this._filter(this.$filters.filter(_selectors.actives).data('mode'));\n        },\n\n        /**\n         * Set the marked state of an item\n         * @param {Number|String|jQuery} position\n         * @param {Boolean} flag\n         */\n        setItemFlag: function setItemFlag(position, flag) {\n            var $item = position && position.jquery ? position : this.$tree.find('[data-position=' + position + ']');\n            var progression = this.progression;\n\n            // update the item flag\n            this._toggleFlag($item, flag);\n\n            // update the info panel\n            progression.flagged = this.$tree.find(_selectors.flagged).length;\n            this._writeCount(this.$infoFlagged, progression.flagged, progression.total);\n            this._filter(this.currentFilter);\n        },\n\n        /**\n         * Update the number of flagged items in the test context\n         * @param {Object} testContext The test context\n         * @param {Number} position The position of the flagged item\n         * @param {Boolean} flag The flag state\n         */\n        updateNumberFlagged: function(testContext, position, flag) {\n            var fields = ['numberFlagged'];\n            var currentPosition = testContext.itemPosition;\n            var currentFound = false, currentSection = null, currentPart = null;\n            var itemFound = false, itemSection = null, itemPart = null;\n\n            if (testContext.navigatorMap) {\n                // find the current item and the marked item inside the navigator map\n                // check if the marked item is in the current section\n                _.forEach(testContext.navigatorMap, function(part) {\n                    _.forEach(part && part.sections, function(section) {\n                        _.forEach(section && section.items, function(item) {\n                            if (item) {\n                                if (item.position === position) {\n                                    itemPart = part;\n                                    itemSection = section;\n                                    itemFound = true;\n                                }\n                                if (item.position === currentPosition) {\n                                    currentPart = part;\n                                    currentSection = section;\n                                    currentFound = true;\n\n                                }\n                                if (itemFound && currentFound) {\n                                    return false;\n                                }\n                            }\n                        });\n\n                        if (itemFound && currentFound) {\n                            return false;\n                        }\n                    });\n\n                    if (itemFound && currentFound) {\n                        return false;\n                    }\n                });\n\n                // select the context to update\n                if (itemFound && currentPart === itemPart) {\n                    fields.push('numberFlaggedPart');\n                }\n                if (itemFound && currentSection === itemSection) {\n                    fields.push('numberFlaggedSection');\n                }\n            } else {\n                // no navigator map, the current the marked item is in the current section\n                fields.push('numberFlaggedPart');\n                fields.push('numberFlaggedSection');\n            }\n\n            _.forEach(fields, function(field) {\n                if (field in testContext) {\n                    testContext[field] += flag ? 1 : -1;\n                }\n            });\n        },\n\n        /**\n         * Get progression\n         * @param {Object} testContext The progression context\n         * @returns {object} progression\n         */\n        getProgression: function getProgression(testContext) {\n            var reviewScope = _reviewScopes[this.options.reviewScope] || 'test',\n                progressInfoMethod = '_getProgressionOf' + capitalize(reviewScope),\n                getProgression = this[progressInfoMethod] || this._getProgressionOfTest,\n                progression = getProgression && getProgression(testContext) || {};\n\n            return progression;\n        },\n\n        /**\n         * Updates the review screen\n         * @param {Object} testContext The progression context\n         * @returns {testReview}\n         */\n        update: function update(testContext) {\n            this.progression = this.getProgression(testContext);\n            this._updateOptions(testContext);\n            this._updateInfos(testContext);\n            this._updateTree(testContext);\n            this._updateDisplayOptions(testContext);\n            return this;\n        },\n\n        /**\n         * Disables the component\n         * @returns {testReview}\n         */\n        disable: function disable() {\n            this.disabled = true;\n            this.$component.addClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Enables the component\n         * @returns {testReview}\n         */\n        enable: function enable() {\n            this.disabled = false;\n            this.$component.removeClass(_cssCls.disabled);\n            return this;\n        },\n\n        /**\n         * Hides the component\n         * @returns {testReview}\n         */\n        hide: function hide() {\n            this.disabled = true;\n            this.hidden = true;\n            this.$component.addClass(_cssCls.hidden);\n            return this;\n        },\n\n        /**\n         * Shows the component\n         * @returns {testReview}\n         */\n        show: function show() {\n            this.disabled = false;\n            this.hidden = false;\n            this.$component.removeClass(_cssCls.hidden);\n            return this;\n        },\n\n        /**\n         * Toggles the display state of the component\n         * @param {Boolean} [show] External condition that's tells if the component must be shown or hidden\n         * @returns {testReview}\n         */\n        toggle: function toggle(show) {\n            if (undefined === show) {\n                show = this.hidden;\n            }\n\n            if (show) {\n                this.show();\n            } else {\n                this.hide();\n            }\n\n            return this;\n        },\n\n        /**\n         * Install an event handler on the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        on: function on(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.on.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Uninstall an event handler from the underlying DOM element\n         * @param {String} eventName\n         * @returns {testReview}\n         */\n        off: function off(eventName) {\n            var dom = this.$component;\n            if (dom) {\n                dom.off.apply(dom, arguments);\n            }\n\n            return this;\n        },\n\n        /**\n         * Triggers an event on the underlying DOM element\n         * @param {String} eventName\n         * @param {Array|Object} extraParameters\n         * @returns {testReview}\n         */\n        trigger : function trigger(eventName, extraParameters) {\n            var dom = this.$component;\n\n            if (undefined === extraParameters) {\n                extraParameters = [];\n            }\n            if (!_.isArray(extraParameters)) {\n                extraParameters = [extraParameters];\n            }\n\n            extraParameters.push(this);\n\n            if (dom) {\n                dom.trigger(eventName, extraParameters);\n            }\n\n            return this;\n        }\n    };\n\n    /**\n     * Builds an instance of testReview\n     * @param {String|jQuery|HTMLElement} element The element on which install the component\n     * @param {Object} [options] A list of extra options\n     * @param {String} [options.region] The region on which put the component: left or right\n     * @param {String} [options.reviewScope] Limit the review screen to a particular scope:\n     * the whole test, the current test part or the current test section)\n     * @param {Boolean} [options.preventsUnseen] Prevents the test taker to access unseen items\n     * @returns {testReview}\n     */\n    var testReviewFactory = function(element, options) {\n        var component = _.clone(testReview, true);\n        return component.init(element, options);\n    };\n\n    return testReviewFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoQtiTest/testRunner/progressUpdater',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/progressbar'\n], function ($, _, __) {\n    'use strict';\n\n    /**\n     * Provides a versatile progress bar updater\n     * @type {{init: Function, update: Function}}\n     */\n    var progressUpdaters = {\n        /**\n         * Initializes the progress updater\n         *\n         * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n         * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n         * @returns {progressUpdaters}\n         */\n        init: function(progressBar, progressLabel) {\n            this.progressBar = $(progressBar).progressbar();\n            this.progressLabel = $(progressLabel);\n            return this;\n        },\n\n        /**\n         * Writes the progress label and update the progress by ratio\n         * @param {String} label\n         * @param {Number} ratio\n         * @returns {progressUpdaters}\n         */\n        write: function(label, ratio) {\n            this.progressLabel.text(label);\n            this.progressBar.progressbar('value', ratio);\n            return this;\n        },\n\n        /**\n         * Updates the progress bar\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        update: function(testContext) {\n            var progressIndicator = testContext.progressIndicator || 'percentage';\n            var progressIndicatorMethod = progressIndicator + 'Progression';\n            var getProgression = this[progressIndicatorMethod] || this.percentageProgression;\n            var progression = getProgression && getProgression(testContext) || {};\n\n            this.write(progression.label, progression.ratio);\n            return progression;\n        },\n\n        /**\n         * Updates the progress bar displaying the percentage\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        percentageProgression: function(testContext) {\n            var total = Math.max(1, testContext.numberItems);\n            var ratio = Math.floor(testContext.numberCompleted / total * 100);\n            return {\n                ratio : ratio,\n                label : ratio + '%'\n            };\n        },\n\n        /**\n         * Updates the progress bar displaying the position\n         * @param {Object} testContext The progression context\n         * @returns {{ratio: number, label: string}}\n         */\n        positionProgression: function(testContext) {\n            var progressScope = testContext.progressIndicatorScope;\n            var progressScopeCounter = {\n                test : {\n                    total : 'numberItems',\n                    position : 'itemPosition'\n                },\n                testPart : {\n                    total : 'numberItemsPart',\n                    position : 'itemPositionPart'\n                },\n                testSection : {\n                    total : 'numberItemsSection',\n                    position : 'itemPositionSection'\n                }\n            };\n            var counter = progressScopeCounter[progressScope] || progressScopeCounter.test;\n            var total = Math.max(1, testContext[counter.total]);\n            var position = testContext[counter.position] + 1;\n            return {\n                ratio : Math.floor(position / total * 100),\n                label : __('Item %d of %d', position, total)\n            };\n        }\n    };\n\n    /**\n     * Builds an instance of progressUpdaters\n     * @param {String|jQuery|HTMLElement} progressBar The element on which put the progress bar\n     * @param {String|jQuery|HTMLElement} progressLabel The element on which put the progress label\n     * @returns {progressUpdaters}\n     */\n    var progressUpdaterFactory = function(progressBar, progressLabel) {\n        var updater = _.clone(progressUpdaters, true);\n        return updater.init(progressBar, progressLabel);\n    };\n\n    return progressUpdaterFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Metadata to be sent to the server. Will be saved in result storage as a trace variable.\n * Usage example:\n * <pre>\n * var testMetaData = testMetaDataFactory({\n *   testServiceCallId : this.itemServiceApi.serviceCallId\n * });\n *\n * testMetaData.setData({\n *   'TEST' : {\n *      'TEST_EXIT_CODE' : 'T'\n *   },\n *   'SECTION' : {\n *      'SECTION_EXIT_CODE' : 704\n *   }\n * });\n *\n * testMetaData.addData({'ITEM' : {\n *      'ITEM_START_TIME_CLIENT' : 1443596730143,\n *      'ITEM_END_TIME_CLIENT' : 1443596731301\n *    }\n * });\n * </pre>\n *\n * Data for each service call id will be stored in local storage to be able get data\n * after reloading the page or resuming the test session.\n *\n * To clear all data related to current test_call_id used <i>clearData</i> method.\n */\ndefine('taoQtiTest/testRunner/testMetaData',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * @param {Object} options\n     * @param {string} options.testServiceCallId - test call id.\n     */\n     var testMetaDataFactory = function testMetaDataFactory(options) {\n        var _testServiceCallId,\n            _storageKeyPrefix = 'testMetaData_',\n            _data = {};\n\n        if (!options || options.testServiceCallId === undefined) {\n            throw new TypeError(\"testServiceCallId option is required\");\n        }\n\n        var testMetaData = {\n            SECTION_EXIT_CODE : {\n                'COMPLETED_NORMALLY': 700,\n                'QUIT': 701,\n                'COMPLETE_TIMEOUT': 703,\n                'TIMEOUT': 704,\n                'FORCE_QUIT': 705,\n                'IN_PROGRESS': 706,\n                'ERROR': 300\n            },\n            TEST_EXIT_CODE : {\n                'COMPLETE': 'C',\n                'TERMINATED': 'T',\n                'INCOMPLETE': 'IC',\n                'INCOMPLETE_QUIT': 'IQ',\n                'INACTIVE': 'IA',\n                'CANDIDATE_DISAGREED_WITH_NDA': 'DA'\n            },\n            /**\n             * Return test call id.\n             * @returns {string}- Test call id\n             */\n            getTestServiceCallId : function getTestServiceCallId () {\n                return _testServiceCallId;\n            },\n\n            /**\n             * Set test call id.\n             * @param {string} value\n             */\n            setTestServiceCallId : function setTestServiceCallId (value) {\n                _testServiceCallId = value;\n            },\n\n            /**\n             * Set meta data. Current data object will be overwritten.\n             * @param {Object} data - metadata object\n             */\n            setData : function setData(data) {\n                _data = data;\n                setLocalStorageData(JSON.stringify(_data));\n            },\n\n            /**\n             * Add data.\n             * @param {Object} data - metadata object\n             * @param {Boolean} overwrite - whether the same data should be overwritten. Default - <i>false</i>\n             */\n            addData : function addData(data, overwrite) {\n                data = _.clone(data);\n                if (overwrite === undefined) {\n                    overwrite = false;\n                }\n\n                if (overwrite) {\n                    _.merge(_data, data);\n                } else {\n                    _data = _.merge(data, _data);\n                }\n                setLocalStorageData(JSON.stringify(_data));\n            },\n\n            /**\n             * Get the saved data.\n             * The cloned object will be returned to avoid unwanted affecting of the original data.\n             * @returns {Object} - metadata object.\n             */\n            getData : function getData() {\n                return _.clone(_data);\n            },\n\n            /**\n             * Clear all data saved in current object and in local storage related to current test call id.\n             * @returns {Object} - metadata object.\n             */\n            clearData : function clearData() {\n                _data = {};\n                window.localStorage.removeItem(testMetaData.getLocalStorageKey());\n            },\n\n            getLocalStorageKey : function getLocalStorageKey () {\n                return _storageKeyPrefix + _testServiceCallId;\n            }\n        };\n\n        /**\n         * Initialize test meta data manager\n         */\n        function init() {\n            _testServiceCallId = options.testServiceCallId;\n            testMetaData.setData(getLocalStorageData());\n        }\n\n        /**\n         * Set data to local storage\n         * @param {string} val - data to be stored.\n         */\n        function setLocalStorageData(val) {\n            var currentKey = testMetaData.getLocalStorageKey();\n            try {\n                window.localStorage.setItem(currentKey, val);\n            } catch(domException) {\n                if (domException.name === 'QuotaExceededError' ||\n                    domException.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    var removed = 0,\n                        i = window.localStorage.length,\n                        key;\n                    while (i--) {\n                        key  = localStorage.key(i);\n                        if (/^testMetaData_.*/.test(key) && key !== currentKey) {\n                            window.localStorage.removeItem(key);\n                            removed++;\n                        }\n                    }\n                    if (removed) {\n                        setLocalStorageData(val);\n                    } else {\n                        throw domException;\n                    }\n                } else {\n                    throw domException;\n                }\n            }\n        }\n\n        /**\n         * Get data from local storage stored for current call id\n         * @returns {*} saved data or empty object\n         */\n        function getLocalStorageData() {\n            var data = window.localStorage.getItem(testMetaData.getLocalStorageKey()),\n                result = JSON.parse(data) || {};\n\n            return result;\n        }\n\n        init();\n\n        return testMetaData;\n    };\n\n    return testMetaDataFactory;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('serviceApi/ServiceApi',['jquery', 'urlParser'], function($, UrlParser){\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    function ServiceApi(baseUrl, parameters, serviceCallId, stateStorage, userService, paused){\n        this.baseUrl = baseUrl;\n        this.parameters = parameters;\n        this.connected = false;\n\n        this.serviceCallId = serviceCallId;\n        this.state = stateStorage;\n        this.userService = userService;\n        this.hasBeenPaused = paused;\n    }\n\n    ServiceApi.SIG_SUCCESS = 0;\n    ServiceApi.SIG_ERROR = 1;\n\n    ServiceApi.prototype.loadInto = function(frame, connected){\n        var self = this;\n        var $frame = $(frame);\n        var callUrl = this.getCallUrl();\n        var isCORSAllowed = new UrlParser(callUrl).checkCORS();\n\n        $frame.on('load', function(e){\n             //if we are  in the same domain, we add a variable\n             //to the frame window, so the frame knows it can communicate\n             //with the parent\n            $(document).on('serviceready', function(){\n                self.connect(frame, function(){\n                    $(document).off('serviceready');\n                    if(typeof connected === 'function'){\n                        connected();\n                    }\n                });\n            });\n             if(isCORSAllowed === true){\n                 frame.contentWindow.__knownParent__ = true;\n             }\n         });\n\n        $frame.attr('src', callUrl);\n    };\n\n    ServiceApi.prototype.connect = function(frame, connected){\n        if(this.connected === false && frame.contentWindow){\n            //frame.contentWindow.serviceApi = this;\n            if (typeof(frame.contentWindow.onServiceApiReady) === \"function\") {\n                frame.contentWindow.onServiceApiReady(this);\n                this.connected = true;\n                if(typeof connected === 'function'){\n                    connected();\n                }\n            }\n        }\n    };\n\n    /**\n     * Get the service call URL\n     * @returns {String} the URI\n     */\n    ServiceApi.prototype.getCallUrl = function(){\n        var params = this.parameters || {};\n        params.serviceCallId = this.serviceCallId;\n        return this.baseUrl + '?' + $.param(params);\n    };\n\n    ServiceApi.prototype.getUserPropertyValues = function(property, callback){\n    \tthis.userService.get(property, callback);\n    };\n\n    //Context\n    ServiceApi.prototype.getServiceCallId = function(){\n        return this.serviceCallId;\n    };\n\n    //Context\n    ServiceApi.prototype.getState = function(){\n        return this.state.get();\n    };\n\n    ServiceApi.prototype.setState = function(state, callback){\n        return this.state.set(state, callback);\n    };\n\n    //Context\n    ServiceApi.prototype.getHasBeenPaused = function(){\n        return this.hasBeenPaused;\n    };\n\n    ServiceApi.prototype.setHasBeenPaused = function(paused){\n        this.hasBeenPaused = paused;\n    };\n\n    // Variables\n    ServiceApi.prototype.getParameter = function(identifier){\n        if (typeof(this.parameters[identifier]) !== \"undefined\") {\n            return this.parameters[identifier];\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Sets a callback on the finish action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onFinish = function(callback) {\n        this.onFinishCallback = callback;\n        return this;\n    };\n\n    /**\n     * Sets a callback on the kill action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onKill = function(callback) {\n        this.onKillCallback = callback;\n        return this;\n    };\n\n    /**\n     * Sets a callback on the exit action\n     * @param {Function} callback\n     * @returns {ServiceApi}\n     */\n    ServiceApi.prototype.onExit = function(callback) {\n        this.onExitCallback = callback;\n        return this;\n    };\n\n    /**\n     * @param {Function} callback - Function called if no dedicated callback is found\n     */\n    ServiceApi.prototype.kill = function(callback) {\n    \tif (typeof this.onKillCallback === 'function') {\n    \t\tthis.onKillCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n\n    /**\n     * Exits the flow\n     * @param {Function} callback - Function called if no dedicated callback is found\n     */\n    ServiceApi.prototype.exit = function(callback) {\n    \tif (typeof this.onExitCallback === 'function') {\n    \t\tthis.onExitCallback(callback);\n    \t} else {\n    \t\tcallback(0);\n    \t}\n    };\n\n    /**\n     * Finishes the flow\n     * @param valueArray - return parameters of the service.\n     */\n    ServiceApi.prototype.finish = function(valueArray) {\n        //return execution to service caller\n        if (typeof this.onFinishCallback === 'function') {\n                this.onFinishCallback(valueArray);\n        }\n    };\n\n    return ServiceApi;\n\n});\n\n","define('serviceApi/UserInfoService',['jquery'], function($){\n    \n    function UserInfoService(requestUrl, data) {\n        this.data = data;\n        this.requestUrl = requestUrl;\n    }\n\n    UserInfoService.prototype.get = function(property, callback){\n        if (this.data.hasOwnProperty(property)) {\n            if (typeof callback === \"function\") {\n                    callback(this.data[property]);\n            }\n        } else {\n            $.ajax({\n                url : this.requestUrl,\n                data \t\t: {\n                    'property' : property\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : (function(service, callback) {return function(r) {\n            \t\tfor (key in r.data) {\n            \t\t\tservice.data[key] = r.data[key];\n            \t\t}\n                    if (typeof callback === \"function\") {\n                        callback(service.data[property]);\n                    }\n\n                }})(this, callback)\n                /*\t\n            \tfunction(r){\n                    if(r.success){\n                    \tconsole.log(this.data);\n                    \tthis.data[property] = r.values;\n                    \t//console.log(this.data);\n\t                    if (typeof callback === \"function\") {\n\t                        callback(this.data[property]);\n\t                    }\n                    }\n                }\n                */\n                \n                \n            });\n        }\n    };\n\n    return UserInfoService;\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2013 (original work) Open Assessment Technologies SA ;\n */\ndefine('serviceApi/StateStorage',['jquery'], function($){\n    'use strict';\n    \n    function StateStorage(state, submitUrl) {\n        this.state = state;\n        this.submitUrl = submitUrl;\n    }\n\n    StateStorage.prototype.get = function(callback){\n        if (typeof callback === 'function') {\n                callback(this.state);\n        }\n        return this.state;\n    };\n\n    StateStorage.prototype.set = function(state, callback){\n\n        if (state === this.state) {\n            if (typeof callback === \"function\") {\n                    callback();\n            }\n        } else {\n            this.state = state;\n            $.ajax({\n                url : this.submitUrl,\n                data \t\t: {\n                    'state' : state\n                },\n                type        : 'post',\n                dataType\t: 'json',\n                success     : typeof callback === \"function\" ? callback : null\n            });\n        }\n    };\n\n    return StateStorage;\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\ndefine('taoQtiTest/controller/runtime/testRunner',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'taoQtiTest/testRunner/actionBarTools',\n    'taoQtiTest/testRunner/testReview',\n    'taoQtiTest/testRunner/progressUpdater',\n    'taoQtiTest/testRunner/testMetaData',\n    'serviceApi/ServiceApi',\n    'serviceApi/UserInfoService',\n    'serviceApi/StateStorage',\n    'iframeNotifier',\n    'mathJax',\n    'ui/feedback',\n    'ui/deleter',\n    'moment',\n    'ui/modal',\n    'ui/progressbar'\n],\nfunction (\n    $,\n    _,\n    __,\n    module,\n    actionBarTools,\n    testReview,\n    progressUpdater,\n    testMetaDataFactory,\n    ServiceApi,\n    UserInfoService,\n    StateStorage,\n    iframeNotifier,\n    MathJax,\n    feedback,\n    deleter,\n    moment,\n    modal\n) {\n\n    'use strict';\n\n    var timerIds = [],\n        currentTimes = [],\n        lastDates = [],\n        timeDiffs = [],\n        waitingTime = 0,\n        $timers,\n        $controls,\n        timerIndex,\n        testMetaData,\n        sessionStateService,\n        $doc = $(document),\n        optionNextSection = 'x-tao-option-nextSection',\n        optionNextSectionWarning = 'x-tao-option-nextSectionWarning',\n        optionReviewScreen = 'x-tao-option-reviewScreen',\n        optionEndTestWarning = 'x-tao-option-endTestWarning',\n        optionNoExitTimedSectionWarning = 'x-tao-option-noExitTimedSectionWarning',\n        TestRunner = {\n            // Constants\n            'TEST_STATE_INITIAL': 0,\n            'TEST_STATE_INTERACTING': 1,\n            'TEST_STATE_MODAL_FEEDBACK': 2,\n            'TEST_STATE_SUSPENDED': 3,\n            'TEST_STATE_CLOSED': 4,\n            'TEST_NAVIGATION_LINEAR': 0,\n            'TEST_NAVIGATION_NONLINEAR': 1,\n            'TEST_ITEM_STATE_INTERACTING': 1,\n\n            /**\n             * Prepare a transition to another item\n             * @param {Function} [callback]\n             */\n            beforeTransition: function (callback) {\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $controls.$itemFrame.hide();\n                $controls.$rubricBlocks.hide();\n                $controls.$timerWrapper.hide();\n\n                // Wait at least waitingTime ms for a better user experience.\n                if (typeof callback === 'function') {\n                    setTimeout(callback, waitingTime);\n                }\n            },\n\n            /**\n             * Complete a transition to another item\n             */\n            afterTransition: function () {\n                this.enableGui();\n\n                //ask the top window to stop the loader\n                iframeNotifier.parent('unloading');\n                testMetaData.addData({\n                    'ITEM' : {'ITEM_START_TIME_CLIENT' : Date.now() / 1000}\n                });\n            },\n\n            /**\n             * Jumps to a particular item in the test\n             * @param {Number} position The position of the item within the test\n             */\n            jump: function(position) {\n                var self = this,\n                    action = 'jump',\n                    params = {position: position};\n                this.disableGui();\n\n                if( this.isJumpOutOfSection(position)  && this.isCurrentItemActive() && this.isTimedSection() ){\n                    this.exitTimedSection(action, params);\n                } else {\n                    this.killItemSession(function() {\n                        self.actionCall(action, params);\n                    });\n                }\n            },\n\n            /**\n             * Push to server how long user seen that item before to track duration\n             * @param {Number} duration\n             */\n            keepItemTimed: function(duration){\n                if (duration) {\n                    var self = this,\n                        action = 'keepItemTimed',\n                        params = {duration: duration};\n                    self.actionCall(action, params);\n                }\n            },\n\n            /**\n             * Marks an item for later review\n             * @param {Boolean} flag The state of the flag\n             * @param {Number} position The position of the item within the test\n             */\n            markForReview: function(flag, position) {\n                var self = this;\n\n                // Ask the top window to start the loader.\n                iframeNotifier.parent('loading');\n\n                // Disable buttons.\n                this.disableGui();\n\n                $.ajax({\n                    url: self.testContext.markForReviewUrl,\n                    cache: false,\n                    async: true,\n                    type: 'POST',\n                    dataType: 'json',\n                    data: {\n                        flag: flag,\n                        position: position\n                    },\n                    success: function(data) {\n                        // update the item flagged state\n                        if (self.testReview) {\n                            self.testReview.setItemFlag(position, flag);\n                            self.testReview.updateNumberFlagged(self.testContext, position, flag);\n                            if (self.testContext.itemPosition === position) {\n                                self.testContext.itemFlagged = flag;\n                            }\n                            self.updateTools(self.testContext);\n                        }\n\n                        // Enable buttons.\n                        self.enableGui();\n\n                        //ask the top window to stop the loader\n                        iframeNotifier.parent('unloading');\n                    }\n                });\n            },\n\n            /**\n             * Move to the next available item\n             */\n            moveForward: function () {\n                var self = this,\n                    action = 'moveForward';\n\n                function doExitSection() {\n                    if( self.isTimedSection() && !self.testContext.isTimeout){\n                        self.exitTimedSection(action);\n                    } else {\n                        self.exitSection(action);\n                    }\n                }\n\n                this.disableGui();\n\n                if( (( this.testContext.numberItemsSection - this.testContext.itemPositionSection - 1) == 0) && this.isCurrentItemActive()){\n                    if (this.shouldDisplayEndTestWarning()) {\n                        this.displayEndTestWarning(doExitSection);\n                        this.enableGui();\n                    } else {\n                        doExitSection();\n                    }\n\n                } else {\n                    this.killItemSession(function () {\n                        self.actionCall(action);\n                    });\n                }\n            },\n\n            /**\n             * Check if necessary to display an end test warning\n             */\n            shouldDisplayEndTestWarning: function(){\n                return (this.testContext.isLast === true && this.hasOption(optionEndTestWarning));\n            },\n\n            /**\n             * Warns upon exiting test\n             */\n            displayEndTestWarning: function(nextAction){\n                var options = {\n                    confirmLabel: __('OK'),\n                    cancelLabel: __('Cancel'),\n                    showItemCount: false\n                };\n\n                this.displayExitMessage(\n                    __('You are about to submit the test. You will not be able to access this test once submitted. Click OK to continue and submit the test.'),\n                    nextAction,\n                    options\n                );\n            },\n\n            /**\n             * Move to the previous available item\n             */\n            moveBackward: function () {\n                var self = this,\n                    action = 'moveBackward';\n\n                this.disableGui();\n\n                if( (this.testContext.itemPositionSection == 0) && this.isCurrentItemActive() && this.isTimedSection() ){\n                    this.exitTimedSection(action);\n                } else {\n                this.killItemSession(function () {\n                        self.actionCall(action);\n                    });\n                }\n            },\n\n            /**\n             * Checks if a position is out of the current section\n             * @param {Number} jumpPosition\n             * @returns {Boolean}\n             */\n            isJumpOutOfSection: function(jumpPosition){\n                var items = this.getCurrentSectionItems(),\n                    isJumpToOtherSection = true,\n                    isValidPosition = (jumpPosition >= 0) && ( jumpPosition < this.testContext.numberItems );\n\n                if( isValidPosition){\n                    for(var i in items ) {\n                        if (!items.hasOwnProperty(i)) {\n                            continue;\n                        }\n                        if( items[i].position == jumpPosition ){\n                            isJumpToOtherSection = false;\n                            break;\n                        }\n                    }\n                } else {\n                    isJumpToOtherSection = false;\n                }\n\n                return isJumpToOtherSection;\n            },\n\n            /**\n             * Exit from the current section. Set the exit code.de\n             * @param {String} action\n             * @param {Object} params\n             * @param {Number} [exitCode]\n             */\n            exitSection: function(action, params, exitCode){\n                var self = this;\n\n                testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : exitCode || testMetaData.SECTION_EXIT_CODE.COMPLETED_NORMALLY}});\n                self.killItemSession(function () {\n                    self.actionCall(action, params);\n                });\n            },\n\n            /**\n             * Tries to exit a timed section. Display a confirm message.\n             * @param {String} action\n             * @param {Object} params\n             */\n            exitTimedSection: function(action, params){\n                var self = this,\n                    qtiRunner = this.getQtiRunner(),\n                    doExitTimedSection = function() {\n                        if (qtiRunner) {\n                            qtiRunner.updateItemApi();\n                        }\n                        self.exitSection(action, params);\n                    };\n\n                if ((action === 'moveForward' && this.shouldDisplayEndTestWarning())    // prevent duplicate warning\n                    || this.hasOption(optionNoExitTimedSectionWarning)                  // check if warning is disabled\n                    || this.testContext.keepTimerUpToTimeout                            // no need to display the message as we may be able to go back\n                ) {\n                    doExitTimedSection();\n                } else {\n                    this.displayExitMessage(\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\n                        doExitTimedSection,\n                        { scope: 'testSection' }\n                    );\n                }\n\n                this.enableGui();\n            },\n\n            /**\n             * Tries to leave the current section and go to the next\n             */\n            nextSection: function(){\n                var self = this;\n                var qtiRunner = this.getQtiRunner();\n                var doNextSection = function() {\n                    self.exitSection('nextSection', null, testMetaData.SECTION_EXIT_CODE.QUIT);\n                };\n\n                if (qtiRunner) {\n                    qtiRunner.updateItemApi();\n                }\n\n                if (this.hasOption(optionNextSectionWarning)) {\n                    this.displayExitMessage(\n                        __('After you complete the section it would be impossible to return to this section to make changes. Are you sure you want to end the section?'),\n                        doNextSection,\n                        { scope: 'testSection' }\n                    );\n                } else {\n                    doNextSection();\n                }\n\n                this.enableGui();\n            },\n\n            /**\n             * Gets the current progression within a particular scope\n             * @param {String} [scope]\n             * @returns {Object}\n             */\n            getProgression: function(scope) {\n                var scopeSuffixMap = {\n                    test : '',\n                    testPart : 'Part',\n                    testSection : 'Section'\n                };\n                var scopeSuffix = scope && scopeSuffixMap[scope] || '';\n\n                return {\n                    total : this.testContext['numberItems' + scopeSuffix] || 0,\n                    answered : this.testContext['numberCompleted' + scopeSuffix] || 0,\n                    viewed : this.testContext['numberPresented' + scopeSuffix] || 0,\n                    flagged : this.testContext['numberFlagged' + scopeSuffix] || 0\n                };\n            },\n\n            /**\n             * Displays an exit message for a particular scope\n             * @param {String} message\n             * @param {Function} [action]\n             * @param {Object} [options]\n             * @param {String} [options.scope]\n             * @param {String} [options.confirmLabel] - label of confirm button\n             * @param {String} [options.cancelLabel] - label of cancel button\n             * @param {Boolean} [options.showItemCount] - display the number of unanswered / flagged items in modal\n             * @returns {jQuery} Returns the message box\n             */\n            displayExitMessage: function(message, action, options) {\n                var self = this,\n                    options = options || {},\n                    scope = options.scope,\n                    confirmLabel = options.confirmLabel || __('Yes'),\n                    cancelLabel = options.cancelLabel || __('No'),\n                    showItemCount = typeof options.showItemCount !== 'undefined' ? options.showItemCount : true;\n\n                var $confirmBox = $('.exit-modal-feedback');\n                var progression = this.getProgression(scope);\n                var unansweredCount = (progression.total - progression.answered);\n                var flaggedCount = progression.flagged;\n\n                if (showItemCount) {\n                    if (unansweredCount && this.isCurrentItemAnswered()) {\n                        unansweredCount--;\n                    }\n\n                    if (flaggedCount && unansweredCount) {\n                        message = __('You have %s unanswered question(s) and have %s item(s) marked for review.',\n                                unansweredCount.toString(),\n                                flaggedCount.toString()\n                            ) + ' ' + message;\n                    } else {\n                        if (flaggedCount) {\n                            message = __('You have %s item(s) marked for review.', flaggedCount.toString()) + ' ' + message;\n                        }\n\n                        if (unansweredCount) {\n                            message = __('You have %s unanswered question(s).', unansweredCount.toString()) + ' ' + message;\n                        }\n                    }\n                }\n\n                $confirmBox.find('.message').html(message);\n                $confirmBox.find('.js-exit-confirm').html(confirmLabel);\n                $confirmBox.find('.js-exit-cancel').html(cancelLabel);\n                $confirmBox.modal({ width: 500 });\n\n                $confirmBox.find('.js-exit-cancel, .modal-close').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                });\n\n                $confirmBox.find('.js-exit-confirm').off('click').on('click', function () {\n                    $confirmBox.modal('close');\n                    if (_.isFunction(action)) {\n                        action.call(self);\n                    }\n                });\n\n                return $confirmBox;\n            },\n\n            /**\n             * Kill current item section and execute callback function given as first parameter.\n             * Item end execution time will be stored in metadata object to be sent to the server.\n             * @param {function} callback\n             */\n            killItemSession : function (callback) {\n                testMetaData.addData({\n                    'ITEM' : {\n                        'ITEM_END_TIME_CLIENT' : Date.now() / 1000,\n                        'ITEM_TIMEZONE' : moment().utcOffset(moment().utcOffset()).format('Z')\n                    }\n                });\n                if (typeof callback !== 'function') {\n                    callback = _.noop;\n                }\n                this.itemServiceApi.kill(callback);\n            },\n\n            /**\n             * Checks if the current item is active\n             * @returns {Boolean}\n             */\n            isCurrentItemActive: function(){\n                return (this.testContext.itemSessionState !=4);\n            },\n\n            /**\n             * Tells is the current item has been answered or not\n             * The item is considered answered when at least one response has been set to not empty {base : null}\n             *\n             * @returns {Boolean}\n             */\n            isCurrentItemAnswered: function(){\n                var answered = false;\n                _.each(this.getCurrentItemState(), function(state){\n                    if(state && _.isObject(state.response) && state.response.base !== null){\n                        answered = true;//at least one response is not null so consider the item answered\n                        return false;\n                    }\n                });\n                return answered;\n            },\n\n            /**\n             * Checks if a particular option is enabled for the current item\n             * @param {String} option\n             * @returns {Boolean}\n             */\n            hasOption: function(option) {\n                return _.indexOf(this.testContext.categories, option) >= 0;\n            },\n\n            /**\n             * Gets access to the qtiRunner instance\n             * @returns {Object}\n             */\n            getQtiRunner: function(){\n                var itemFrame = document.getElementById('qti-item');\n                var itemWindow = itemFrame && itemFrame.contentWindow;\n                var itemContainerFrame = itemWindow && itemWindow.document.getElementById('item-container');\n                var itemContainerWindow = itemContainerFrame && itemContainerFrame.contentWindow;\n                return itemContainerWindow && itemContainerWindow.qtiRunner;\n            },\n\n            /**\n             * Checks if the current section is timed\n             * @returns {Boolean}\n             */\n            isTimedSection: function(){\n                var timeConstraints = this.testContext.timeConstraints,\n                    isTimedSection = false;\n                for( var index in timeConstraints ){\n                    if(timeConstraints.hasOwnProperty(index) &&\n                        timeConstraints[index].qtiClassName === 'assessmentSection' ){\n                        isTimedSection = true;\n                    }\n                }\n\n                return isTimedSection;\n            },\n\n            /**\n             * Gets the list of items owned by the current section\n             * @returns {Array}\n             */\n            getCurrentSectionItems: function(){\n                var partId  = this.testContext.testPartId,\n                    navMap  = this.testContext.navigatorMap,\n                    sectionItems;\n\n                for( var partIndex in navMap ){\n                    if( !navMap.hasOwnProperty(partIndex)){\n                        continue;\n                    }\n                    if( navMap[partIndex].id !== partId ){\n                        continue;\n                    }\n\n                    for(var sectionIndex in navMap[partIndex].sections){\n                        if( !navMap[partIndex].sections.hasOwnProperty(sectionIndex)){\n                            continue;\n                        }\n                        if( navMap[partIndex].sections[sectionIndex].active === true ){\n                            sectionItems = navMap[partIndex].sections[sectionIndex].items;\n                            break;\n                        }\n                    }\n                }\n\n                return sectionItems;\n            },\n\n            /**\n             * Skips the current item\n             */\n            skip: function () {\n                var self = this,\n                    doSkip = function() {\n                        self.disableGui();\n                        self.actionCall('skip');\n                    };\n\n                if (this.shouldDisplayEndTestWarning()) {\n                    this.displayEndTestWarning(doSkip);\n                } else {\n                    doSkip();\n                }\n            },\n\n            /**\n             * Handles the timeout state\n             */\n            timeout: function () {\n                var self = this;\n                this.disableGui();\n                this.testContext.isTimeout = true;\n                this.updateTimer();\n\n                this.killItemSession(function () {\n                    var confirmBox = $('.timeout-modal-feedback'),\n                        testContext = self.testContext,\n                        confirmBtn = confirmBox.find('.js-timeout-confirm, .modal-close');\n\n                    if (testContext.numberCompletedSection === testContext.numberItemsSection) {\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.COMPLETE_TIMEOUT}});\n                    } else {\n                        testMetaData.addData({\"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.TIMEOUT}});\n                    }\n\n                    self.enableGui();\n                    confirmBox.modal({width: 500});\n                    confirmBtn.off('click').on('click', function () {\n                        confirmBox.modal('close');\n                        self.actionCall('timeout');\n                    });\n                });\n            },\n\n            /**\n             * Sets the assessment test context object\n             * @param {Object} testContext\n             */\n            setTestContext: function(testContext) {\n                this.testContext = testContext;\n                this.itemServiceApi = eval(testContext.itemServiceApiCall);\n                this.itemServiceApi.setHasBeenPaused(testContext.hasBeenPaused);\n            },\n\n\n            /**\n             * Handles Metadata initialization\n             */\n            initMetadata: function (){\n                testMetaData = testMetaDataFactory({\n                    testServiceCallId: this.itemServiceApi.serviceCallId\n                });\n            },\n\n            /**\n             * Retrieve service responsible for broken session tracking\n             * @returns {*}\n             */\n            getSessionStateService: function () {\n                if (!sessionStateService) {\n                    sessionStateService = this.testContext.sessionStateService({accuracy: 1000});\n                }\n                return sessionStateService;\n            },\n\n            /**\n             * Updates the GUI\n             * @param {Object} testContext\n             */\n            update: function (testContext) {\n                var self = this;\n                $controls.$itemFrame.remove();\n\n                var $runner = $('#runner');\n                $runner.css('height', 'auto');\n\n                this.getSessionStateService().restart();\n\n                this.setTestContext(testContext);\n                this.updateContext();\n                this.updateProgress();\n                this.updateNavigation();\n                this.updateTestReview();\n                this.updateInformation();\n                this.updateRubrics();\n                this.updateTools(testContext);\n                this.updateTimer();\n                this.updateExitButton();\n                this.resetCurrentItemState();\n                this.initMetadata();\n\n                $controls.$itemFrame = $('<iframe id=\"qti-item\" frameborder=\"0\" scrollbars=\"no\"/>');\n                $controls.$itemFrame.appendTo($controls.$contentBox);\n\n                if (this.testContext.itemSessionState === this.TEST_ITEM_STATE_INTERACTING && self.testContext.isTimeout === false) {\n                    $doc.off('.testRunner').on('serviceloaded.testRunner', function () {\n                        self.afterTransition();\n                        self.adjustFrame();\n                        $controls.$itemFrame.css({visibility: 'visible'});\n                    });\n\n                    // Inject API into the frame.\n                    this.itemServiceApi.loadInto($controls.$itemFrame[0], function () {\n                        // We now rely on the 'serviceloaded' event.\n                    });\n                }\n                else {\n                    // e.g. no more attempts or timeout! Simply consider the transition is finished,\n                    // but do not load the item.\n                    self.afterTransition();\n                }\n            },\n\n            /**\n             * Displays feedback on the current state of the test\n             */\n            updateInformation: function () {\n\n                if (this.testContext.isTimeout === true) {\n                    feedback().error(__('Time limit reached for item \"%s\".', this.testContext.itemIdentifier));\n                }\n                else if (this.testContext.itemSessionState !== this.TEST_ITEM_STATE_INTERACTING) {\n                    feedback().error(__('No more attempts allowed for item \"%s\".', this.testContext.itemIdentifier));\n                }\n            },\n\n            /**\n             * Updates the displayed tools\n             * @param {Object} testContext\n             */\n            updateTools: function updateTools(testContext) {\n                var showSkip = false;\n                var showSkipEnd = false;\n                var showNextSection = !!testContext.nextSection && (this.hasOption(optionNextSection) || this.hasOption(optionNextSectionWarning));\n\n                if (this.testContext.allowSkipping === true) {\n                    if (this.testContext.isLast === false) {\n                        showSkip = true;\n                    } else {\n                        showSkipEnd = true;\n                    }\n                }\n\n                $controls.$skip.toggle(showSkip);\n                $controls.$skipEnd.toggle(showSkipEnd);\n                $controls.$nextSection.toggle(showNextSection);\n\n                actionBarTools.render('.tools-box-list', testContext, TestRunner);\n            },\n\n            /**\n             * Displays a timer\n             * @param {Object} cst\n             * @returns {*|jQuery|HTMLElement}\n             */\n            createTimer: function(cst) {\n                var $timer = $('<div>', {'class': 'qti-timer qti-timer__type-' + cst.qtiClassName }),\n                    $label = $('<div>', {'class': 'qti-timer_label truncate', text: cst.label }),\n                    $time  = $('<div>', {'class': 'qti-timer_time', text: this.formatTime(cst.seconds) });\n\n                $timer.append($label);\n                $timer.append($time);\n                return $timer;\n            },\n\n            /**\n             * Updates the timers\n             */\n            updateTimer: function () {\n                var self = this;\n                var hasTimers;\n                $controls.$timerWrapper.empty();\n\n                for (var i = 0; i < timerIds.length; i++) {\n                    clearTimeout(timerIds[i]);\n                }\n\n                timerIds = [];\n                currentTimes = [];\n                lastDates = [];\n                timeDiffs = [];\n\n                if (self.testContext.isTimeout === false &&\n                    self.testContext.itemSessionState === self.TEST_ITEM_STATE_INTERACTING) {\n\n                    hasTimers = !!this.testContext.timeConstraints.length;\n                    $controls.$topActionBar.toggleClass('has-timers', hasTimers);\n\n                    if (hasTimers) {\n\n                        // Insert QTI Timers container.\n                        // self.formatTime(cst.seconds)\n                        for (i = 0; i < this.testContext.timeConstraints.length; i++) {\n\n                            var cst = this.testContext.timeConstraints[i];\n\n                            if (cst.allowLateSubmission === false) {\n\n                                // Set up a timer for this constraint\n                                $controls.$timerWrapper.append(self.createTimer(cst));\n\n                                // Set up a timer and update it with setInterval.\n                                currentTimes[i] = cst.seconds;\n                                lastDates[i] = new Date();\n                                timeDiffs[i] = 0;\n                                timerIndex = i;\n\n                                if (self.testContext.timerWarning && self.testContext.timerWarning[cst.qtiClassName]) {\n                                    cst.warnings = {};\n                                    _(self.testContext.timerWarning[cst.qtiClassName]).forEach(function (value, key) {\n                                        if (_.contains(['info', 'warning', 'danger'], value)) {\n                                            cst.warnings[key] = {\n                                                type: value,\n                                                showed: cst.seconds <= key,\n                                                point: parseInt(key, 10)\n                                            };\n                                        }\n                                    });\n                                    var closestPreviousWarning = _.find(cst.warnings, { showed: true });\n                                    if (!_.isEmpty(closestPreviousWarning) && closestPreviousWarning.point) {\n                                        cst.warnings[closestPreviousWarning.point].showed = false;\n                                    }\n                                }\n\n                                (function (timerIndex, cst) {\n                                    timerIds[timerIndex] = setInterval(function () {\n\n                                        timeDiffs[timerIndex] += (new Date()).getTime() - lastDates[timerIndex].getTime();\n\n                                        if (timeDiffs[timerIndex] >= 1000) {\n                                            var seconds = timeDiffs[timerIndex] / 1000;\n                                            currentTimes[timerIndex] -= seconds;\n                                            timeDiffs[timerIndex] = 0;\n                                        }\n\n                                        $timers.eq(timerIndex)\n                                            .html(self.formatTime(Math.round(currentTimes[timerIndex])));\n\n                                        if (currentTimes[timerIndex] <= 0) {\n                                            // The timer expired...\n                                            currentTimes[timerIndex] = 0;\n                                            clearInterval(timerIds[timerIndex]);\n\n                                            // Hide item to prevent any further interaction with the candidate.\n                                            $controls.$itemFrame.hide();\n                                            self.timeout();\n                                        } else {\n                                            lastDates[timerIndex] = new Date();\n                                        }\n\n                                        var warning = _.findLast(cst.warnings, { showed: false });\n\n                                        if (!_.isEmpty(warning) && _.isFinite(warning.point) && currentTimes[timerIndex] <= warning.point) {\n                                            self.timeWarning(cst, warning);\n                                        }\n\n                                    }, 1000);\n                                }(timerIndex, cst));\n                            }\n                        }\n\n                        $timers = $controls.$timerWrapper.find('.qti-timer .qti-timer_time');\n                        $controls.$timerWrapper.show();\n                    }\n                }\n            },\n\n            /**\n             * Mark appropriate timer by warning colors and show feedback message\n             *\n             * @param {object} cst - Time constraint\n             * @param {integer} cst.warningTime - Warning time in seconds.\n             * @param {integer} cst.qtiClassName - Class name of qti instance for which the timer is set (assessmentItemRef | assessmentSection | testPart | assessmentTest).\n             * @param {integer} cst.seconds - Initial timer value.\n             * @param {object} warning - Current actual warning\n             * @param {integer} warning.point - Warning time point in seconds, when show message\n             * @param {boolean} warning.showed - boolean flag for mark already showed warnings\n             * @param {string} warning.type - type of warning (from config), can be info, warning or error\n             *\n             * @returns {undefined}\n             */\n            timeWarning: function (cst, warning) {\n                var message = '',\n                    remaining,\n                    $timer = $controls.$timerWrapper.find('.qti-timer__type-' + cst.qtiClassName),\n                    $time = $timer.find('.qti-timer_time');\n\n                $time.removeClass('txt-info txt-warning txt-danger').addClass('txt-' + warning.type);\n\n                remaining = moment.duration(warning.point, \"seconds\").humanize();\n\n                switch (cst.qtiClassName) {\n                    case 'assessmentItemRef':\n                        message = __(\"Warning – You have %s remaining to complete this item.\", remaining);\n                        break;\n                    case 'assessmentSection':\n                        message = __(\"Warning – You have %s remaining to complete this section.\", remaining);\n                        break;\n                    case 'testPart':\n                        message = __(\"Warning – You have %s remaining to complete this test part.\", remaining);\n                        break;\n                    case 'assessmentTest':\n                        message = __(\"Warning – You have %s remaining to complete the test.\", remaining);\n                        break;\n                }\n\n                feedback()[warning.type](message);\n\n                cst.warnings[warning.point].showed = true;\n            },\n\n            /**\n             * Displays or hides the rubric block\n             */\n            updateRubrics: function () {\n                $controls.$rubricBlocks.remove();\n\n                if (this.testContext.rubrics.length > 0) {\n\n                    $controls.$rubricBlocks = $('<div id=\"qti-rubrics\"/>');\n\n                    for (var i = 0; i < this.testContext.rubrics.length; i++) {\n                        $controls.$rubricBlocks.append(this.testContext.rubrics[i]);\n                    }\n\n                    // modify the <a> tags in order to be sure it\n                    // opens in another window.\n                    $controls.$rubricBlocks.find('a').bind('click keypress', function () {\n                        window.open(this.href);\n                        return false;\n                    });\n\n                    $controls.$rubricBlocks.prependTo($controls.$contentBox);\n\n                    if (MathJax) {\n                        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub], $controls.$rubricBlocks[0]);\n                    }\n\n                }\n            },\n\n            /**\n             * Updates the list of navigation buttons (previous, next, skip, etc.)\n             */\n            updateNavigation: function () {\n                $controls.$exit.show();\n\n                if(this.testContext.isLast === true) {\n                    $controls.$moveForward.hide();\n                    $controls.$moveEnd.show();\n                }\n                else {\n                    $controls.$moveForward.show();\n                    $controls.$moveEnd.hide();\n                }\n                if (this.testContext.navigationMode === this.TEST_NAVIGATION_LINEAR) {\n                    // LINEAR\n                    $controls.$moveBackward.hide();\n                }\n                else {\n                    // NONLINEAR\n                    $controls.$controls.show();\n                    if(this.testContext.canMoveBackward === true) {\n                        $controls.$moveBackward.show();\n                    }\n                    else {\n                        $controls.$moveBackward.hide();\n                    }\n                }\n            },\n\n            /**\n             * Updates the test taker review screen\n             */\n            updateTestReview: function() {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                if (this.testReview) {\n                    this.testReview.toggle(considerProgress && this.hasOption(optionReviewScreen));\n                    this.testReview.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the progress bar\n             */\n            updateProgress: function () {\n                var considerProgress = this.testContext.considerProgress === true;\n\n                $controls.$progressBox.css('visibility', considerProgress ? 'visible' : 'hidden');\n\n                if (considerProgress) {\n                    this.progressUpdater.update(this.testContext);\n                }\n            },\n\n            /**\n             * Updates the test informations\n             */\n            updateContext: function () {\n\n                $controls.$title.text(this.testContext.testTitle);\n\n                // Visibility of section?\n                var sectionText = (this.testContext.isDeepestSectionVisible === true) ? (' - ' + this.testContext.sectionTitle) : '';\n\n                $controls.$position.text(sectionText);\n                $controls.$titleGroup.show();\n            },\n\n            /**\n             * Displays the right exit button\n             */\n            updateExitButton : function(){\n\n                $controls.$logout.toggleClass('hidden', !this.testContext.logoutButton);\n                $controls.$exit.toggleClass('hidden', !this.testContext.exitButton);\n            },\n\n            /**\n             * Ensures the frame has the right size\n             */\n            adjustFrame: function () {\n                var rubricHeight = $controls.$rubricBlocks.outerHeight(true) || 0;\n                var frameContentHeight;\n                var finalHeight = $(window).innerHeight() - $controls.$topActionBar.outerHeight() - $controls.$bottomActionBar.outerHeight();\n                var itemFrame = $controls.$itemFrame.get(0);\n                $controls.$contentBox.height(finalHeight);\n                if($controls.$sideBars.length){\n                    $controls.$sideBars.each(function() {\n                        var $sideBar = $(this);\n                        $sideBar.height(finalHeight - $sideBar.outerHeight() + $sideBar.height());\n                    });\n                }\n\n                if(itemFrame && itemFrame.contentWindow){\n                    frameContentHeight = $controls.$itemFrame.contents().outerHeight(true);\n\n                    if (frameContentHeight < finalHeight) {\n                        if (rubricHeight) {\n                            frameContentHeight = Math.max(frameContentHeight, finalHeight - rubricHeight);\n                        } else {\n                            frameContentHeight = finalHeight;\n                        }\n                    }\n                    if (itemFrame.contentWindow.$) {\n                        itemFrame.contentWindow.$('body').trigger('setheight', [frameContentHeight]);\n                    }\n                    $controls.$itemFrame.height(frameContentHeight);\n                }\n            },\n\n            /**\n             * Locks the GUI\n             */\n            disableGui: function () {\n                $controls.$naviButtons.addClass('disabled');\n                if (this.testReview) {\n                    this.testReview.disable();\n                }\n            },\n\n            /**\n             * Unlocks the GUI\n             */\n            enableGui: function () {\n                $controls.$naviButtons.removeClass('disabled');\n                if (this.testReview) {\n                    this.testReview.enable();\n                }\n            },\n\n            /**\n             * Hides the GUI\n             */\n            hideGui: function () {\n                $controls.$naviButtons.addClass('hidden');\n                if (this.testReview) {\n                    this.testReview.hide();\n                }\n            },\n\n            /**\n             * Shows the GUI\n             */\n            showGui: function () {\n                $controls.$naviButtons.removeClass('hidden');\n                if (this.testReview) {\n                    this.testReview.show();\n                }\n            },\n\n            /**\n             * Formats a timer\n             * @param {Number} totalSeconds\n             * @returns {String}\n             */\n            formatTime: function (totalSeconds) {\n                var sec_num = totalSeconds;\n                var hours = Math.floor(sec_num / 3600);\n                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n                var seconds = Math.floor(sec_num - (hours * 3600) - (minutes * 60));\n\n                if (hours < 10) {\n                    hours = \"0\" + hours;\n                }\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n\n                var time = hours + ':' + minutes + ':' + seconds;\n\n                return time;\n            },\n\n            /**\n             * Processes an error\n             * @param {Object} error\n             */\n            processError : function processError(error) {\n                var self = this;\n\n                // keep disabled\n                this.hideGui();\n                this.beforeTransition();\n\n                // ask the parent to display a message\n                iframeNotifier.parent('messagealert', {\n                    message : error.message,\n                    action : function() {\n                        if (testMetaData) {\n                            testMetaData.clearData();\n                        }\n                        if (error.state === self.TEST_STATE_CLOSED) {\n                            // test is closed, finish it\n                            self.serviceApi.finish();\n                        } else {\n                            // test is still open, just exit to the index\n                            self.serviceApi.exit();\n                        }\n                    }\n                });\n            },\n\n            /**\n             * Call action specified in testContext. A postfix <i>Url</i> will be added to the action name.\n             * To specify actions see {@link https://github.com/oat-sa/extension-tao-testqti/blob/master/helpers/class.TestRunnerUtils.php}\n             * @param {String} action - Action name\n             * @param {Object} [extraParams] - Additional parameters to be sent to the server\n             * @returns {undefined}\n             */\n            actionCall: function (action, extraParams) {\n                var self = this,\n                    params = {metaData: testMetaData ? testMetaData.getData() : {}};\n\n                if (extraParams) {\n                    params = _.assign(params, extraParams);\n                }\n                this.beforeTransition(function () {\n                    $.ajax({\n                        url: self.testContext[action + 'Url'],\n                        cache: false,\n                        data: params,\n                        async: true,\n                        dataType: 'json',\n                        success: function (testContext) {\n                            testMetaData.clearData();\n\n                            if (!testContext.success) {\n                                self.processError(testContext);\n                            }\n                            else if (testContext.state === self.TEST_STATE_CLOSED) {\n                                self.serviceApi.finish();\n                            }\n                            else {\n                                self.update(testContext);\n                            }\n                        }\n                    });\n                });\n            },\n\n            /**\n             * Exit from test (after confirmation). All answered questions will be submitted.\n             *\n             * @returns {undefined}\n             */\n            exit: function () {\n                var self = this;\n                testMetaData.addData({\n                    \"TEST\" : {\"TEST_EXIT_CODE\" : testMetaData.TEST_EXIT_CODE.INCOMPLETE},\n                    \"SECTION\" : {\"SECTION_EXIT_CODE\" : testMetaData.SECTION_EXIT_CODE.QUIT}\n                });\n                this.displayExitMessage(\n                    __('Are you sure you want to end the test?'),\n                    function() {\n                    self.killItemSession(function () {\n                        self.actionCall('endTestSession');\n                        testMetaData.clearData();\n                    });\n                    },\n                    { scope: this.testReview ? this.testContext.reviewScope : null }\n                );\n            },\n\n            /**\n             * Set the state of the current item in the test runner\n             *\n             * @param {string} id\n             * @param {object} state\n             */\n            setCurrentItemState : function(id, state){\n                if(id){\n                    this.currentItemState[id] = state;\n                }\n            },\n\n            /**\n             * Reset the state of the current item in the test runner\n             */\n            resetCurrentItemState : function(){\n                this.currentItemState = {};\n            },\n\n            /**\n             * Get the state of the current item as stored in the test runner\n             * @returns {Object}\n             */\n            getCurrentItemState : function(){\n                return this.currentItemState;\n            }\n        };\n\n        var config = module.config();\n        if (config) {\n            actionBarTools.register(config.qtiTools);\n        }\n\n        return {\n            start: function (testContext) {\n\n                $controls = {\n                    // navigation\n                    $moveForward: $('[data-control=\"move-forward\"]'),\n                    $moveEnd: $('[data-control=\"move-end\"]'),\n                    $moveBackward: $('[data-control=\"move-backward\"]'),\n                    $nextSection: $('[data-control=\"next-section\"]'),\n                    $skip: $('[data-control=\"skip\"]'),\n                    $skipEnd: $('[data-control=\"skip-end\"]'),\n                    $exit: $(window.parent.document).find('[data-control=\"exit\"]'),\n                    $logout: $(window.parent.document).find('[data-control=\"logout\"]'),\n                    $naviButtons: $('.bottom-action-bar .action'),\n                    $skipButtons: $('.navi-box .skip'),\n                    $forwardButtons: $('.navi-box .forward'),\n\n                    // progress bar\n                    $progressBar: $('[data-control=\"progress-bar\"]'),\n                    $progressLabel: $('[data-control=\"progress-label\"]'),\n                    $progressBox: $('.progress-box'),\n\n                    // title\n                    $title:  $('[data-control=\"qti-test-title\"]'),\n                    $position:  $('[data-control=\"qti-test-position\"]'),\n\n                    // timers\n                    $timerWrapper:  $('[data-control=\"qti-timers\"]'),\n\n                    // other zones\n                    $contentPanel: $('.content-panel'),\n                    $controls: $('.qti-controls'),\n                    $itemFrame: $('#qti-item'),\n                    $rubricBlocks: $('#qti-rubrics'),\n                    $contentBox: $('#qti-content'),\n                    $sideBars: $('.test-sidebar'),\n                    $topActionBar: $('.horizontal-action-bar.top-action-bar'),\n                    $bottomActionBar: $('.horizontal-action-bar.bottom-action-bar')\n                };\n\n                // title\n                $controls.$titleGroup = $controls.$title.add($controls.$position);\n\n                $doc.ajaxError(function (event, jqxhr) {\n                    if (jqxhr.status === 403) {\n                        iframeNotifier.parent('serviceforbidden');\n                    }\n                });\n\n                window.onServiceApiReady = function onServiceApiReady(serviceApi) {\n                    TestRunner.serviceApi = serviceApi;\n\n                    if (!testContext.success) {\n                        TestRunner.processError(testContext);\n                    }\n\n                    // If the assessment test session is in CLOSED state,\n                    // we give the control to the delivery engine by calling finish.\n                    else if (testContext.state === TestRunner.TEST_STATE_CLOSED) {\n                        serviceApi.finish();\n                        testMetaData.clearData();\n                    }\n                    else {\n\n                        if (TestRunner.getSessionStateService().getDuration()) {\n                            TestRunner.setTestContext(testContext);\n                            TestRunner.initMetadata();\n\n                            TestRunner.keepItemTimed(TestRunner.getSessionStateService().getDuration());\n                            TestRunner.getSessionStateService().restart();\n                        } else {\n                            TestRunner.update(testContext);\n                        }\n                    }\n                };\n\n                TestRunner.beforeTransition();\n                TestRunner.testContext = testContext;\n\n                $controls.$skipButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.skip();\n                    }\n                });\n\n                $controls.$forwardButtons.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveForward();\n                    }\n                });\n\n                $controls.$moveBackward.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.moveBackward();\n                    }\n                });\n\n                $controls.$nextSection.click(function () {\n                    if (!$(this).hasClass('disabled')) {\n                        TestRunner.nextSection();\n                    }\n                });\n\n                $controls.$exit.click(function (e) {\n                    e.preventDefault();\n                    TestRunner.exit();\n                });\n\n                $(window).on('resize', _.throttle(function () {\n                    TestRunner.adjustFrame();\n                    $controls.$titleGroup.show();\n                }, 250));\n\n                $doc.on('loading', function () {\n                    iframeNotifier.parent('loading');\n                });\n\n\n                $doc.on('unloading', function () {\n                    iframeNotifier.parent('unloading');\n                });\n\n                TestRunner.progressUpdater = progressUpdater($controls.$progressBar, $controls.$progressLabel);\n\n                if (testContext.reviewScreen) {\n                    TestRunner.testReview = testReview($controls.$contentPanel, {\n                        region: testContext.reviewRegion || 'left',\n                        hidden: !TestRunner.hasOption(optionReviewScreen),\n                        reviewScope: testContext.reviewScope,\n                        preventsUnseen: !!testContext.reviewPreventsUnseen,\n                        canCollapse: !!testContext.reviewCanCollapse\n                    }).on('jump', function(event, position) {\n                        TestRunner.jump(position);\n                    }).on('mark', function(event, flag, position) {\n                        TestRunner.markForReview(flag, position);\n                    });\n                    $controls.$sideBars = $('.test-sidebar');\n                }\n\n                TestRunner.updateProgress();\n                TestRunner.updateTestReview();\n\n                iframeNotifier.parent('serviceready');\n\n\n                TestRunner.adjustFrame();\n\n                $controls.$topActionBar.add($controls.$bottomActionBar).animate({ opacity: 1 }, 600);\n\n                deleter($('#feedback-box'));\n                modal($('body'));\n\n                //listen to state change in the current item\n                $(document).on('responsechange', function(e, responseId, response){\n                    if(responseId && response){\n                        TestRunner.setCurrentItemState(responseId, {response:response});\n                    }\n                }).on('stateready', function(e, id, state){\n                    if(id && state){\n                        TestRunner.setCurrentItemState(id, state);\n                    }\n                }).on('heightchange', function(e, height) {\n                    $controls.$itemFrame.height(height);\n                });\n\n            }\n        };\n    });\n\n"]}